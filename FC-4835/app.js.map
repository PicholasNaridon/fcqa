{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/process/browser.js","node_modules/util/node_modules/inherits/inherits_browser.js","node_modules/util/support/isBufferBrowser.js","node_modules/util/util.js","src/apis/empReportsApi.js","src/apis/exportTemplateApi.js","src/app.js","src/components/cmp-form-field-date/form-field-date.js","src/components/cmp-form-field/form-field.js","src/components/cmp-phone-group/phone-group.js","src/components/cmp-phone-item/phone-item.js","src/components/cmp-report-export-settings/report-export-settings.js","src/components/cmp-report-filter-bar/report-filter-bar.js","src/config/base-component.js","src/config/base-segment.js","src/config/base-state.js","src/config/load-config.js","src/config/router.js","src/helpers/credentialFactoryHlp/credential-factory.js","src/helpers/employeeAssignmentHlp/employee-assignment.js","src/helpers/employeeModelChangerHlp/employee-model-changer.js","src/helpers/endorsementFactoryHlp/endorsement-factory.js","src/helpers/filenameHlp/filename.js","src/helpers/reportHlp/report.js","src/helpers/sleepHlp/sleep.js","src/helpers/sortFilterHlp/sort-filter.js","src/includes.js","src/module.js","src/partials.compiled.js","src/routes/employee-record/credentials/credentials.state.js","src/routes/employee-record/credentials/segment-credentials-content/credentials-content.js","src/routes/employee-record/credentials/segment-credentials-content/credentials-content.logic.js","src/routes/employee-record/emergency/emergency.state.js","src/routes/employee-record/emergency/segment-emergency-content/emergency-content.js","src/routes/employee-record/emergency/segment-emergency-content/emergency-content.logic.js","src/routes/employee-record/employee-record.state.js","src/routes/employee-record/employment/employment.state.js","src/routes/employee-record/employment/segment-employment-content/employment-content.js","src/routes/employee-record/employment/segment-employment-content/employment-content.logic.js","src/routes/employee-record/medical/medical.state.js","src/routes/employee-record/medical/segment-medical-content/medical-content.js","src/routes/employee-record/medical/segment-medical-content/medical-content.logic.js","src/routes/employee-record/personal/personal.state.js","src/routes/employee-record/personal/segment-personal-content/personal-content.js","src/routes/employee-record/personal/segment-personal-content/personal-content.logic.js","src/routes/employee-record/personnel/personnel.state.js","src/routes/employee-record/personnel/segment-personnel-content/personnel-content.js","src/routes/employee-record/personnel/segment-personnel-content/personnel-content.logic.js","src/routes/employee-record/segment-content/content.js","src/routes/employee-record/segment-content/content.logic.js","src/routes/employee-record/segment-header/header.js","src/routes/employee-record/segment-header/header.logic.js","src/routes/employee-record/segment-sidebar/sidebar.js","src/routes/employee-record/segment-sidebar/sidebar.logic.js","src/routes/index/index.state.js","src/routes/index/segment-filter/filter.js","src/routes/index/segment-filter/filter.logic.js","src/routes/index/segment-results/results.js","src/routes/index/segment-results/results.logic.js","src/routes/my-profile/my-profile.state.js","src/routes/my-profile/segment-header/header.js","src/routes/my-profile/segment-header/header.logic.js","src/routes/reports/assignments/assignments.state.js","src/routes/reports/assignments/report/report.state.js","src/routes/reports/assignments/report/segment-content/content.js","src/routes/reports/assignments/report/segment-content/content.logic.js","src/routes/reports/assignments/segment-content/content.js","src/routes/reports/assignments/segment-content/content.logic.js","src/routes/reports/assignments/settings/segment-content/content.js","src/routes/reports/assignments/settings/segment-content/content.logic.js","src/routes/reports/assignments/settings/settings.state.js","src/routes/reports/credentials/credentials.state.js","src/routes/reports/credentials/segment-content/content.js","src/routes/reports/credentials/segment-content/content.logic.js","src/routes/reports/demographic/demographic.state.js","src/routes/reports/demographic/report/report.state.js","src/routes/reports/demographic/report/segment-content/content.js","src/routes/reports/demographic/report/segment-content/content.logic.js","src/routes/reports/demographic/segment-content/content.js","src/routes/reports/demographic/segment-content/content.logic.js","src/routes/reports/demographic/settings/segment-content/content.js","src/routes/reports/demographic/settings/segment-content/content.logic.js","src/routes/reports/demographic/settings/settings.state.js","src/routes/reports/reports.state.js","src/routes/reports/segment-content/content.js","src/routes/reports/segment-content/content.logic.js"],"names":[],"mappingsxLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AC1kBA;AACA,SAAS,aAAT,CAAuB,KAAvB,EAA8B,QAA9B,EAAwC,WAAxC,EAAqD;AACpD;AACA;;AAEA;AACA,KAAM,UAAU,YAAY,QAAZ,CAAqB,SAArC;AACA,KAAM,iBAAoB,OAApB,yBAAN;AACA,KAAM,iBAAoB,OAApB,wBAAN;AACA,KAAM,kBAAqB,OAArB,iCAAN;;AAEA;AACA,KAAM,MAAM,EAAZ;;AAEA;AACA,KAAM,iBAAiB,SAAS,QAAT,CAAkB,EAAE,KAAK,cAAP,EAAuB,QAAQ,KAA/B,EAAlB,EAA0D,YAA1D,EAAwE,GAAxE,CAAvB;AACA,KAAM,qBAAqB,SAAS,QAAT,CAAkB,EAAE,KAAK,cAAP,EAAuB,QAAQ,MAA/B,EAAlB,EAA0D,YAA1D,EAAwE,GAAxE,CAA3B;AACA,KAAM,iBAAiB,SAAS,QAAT,CAAkB,EAAE,KAAK,cAAP,EAAuB,QAAQ,K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","file":"app.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n","/*@ngInject*/\r\nfunction empReportsApi($http, ssApiSvc, buildConfig) {\r\n\t// #--------------------------------------# //\r\n\t// #---- API Endpoint (empReportsApi) ----# //\r\n\r\n\t// base endpoint url\r\n\tconst baseUrl = buildConfig.endpoint.employees;\r\n\tconst credentialsUrl = `${baseUrl}/employeeCredentials`;\r\n\tconst assignmentsUrl = `${baseUrl}/export/assignments`;\r\n\tconst demographicsUrl = `${baseUrl}/export/employeedemographics`;\r\n\r\n\t// possible relationships\r\n\tconst rel = [];\r\n\r\n\t// generate endpoints\r\n\tconst getCredentials = ssApiSvc.endpoint({ url: credentialsUrl, method: 'GET' }, 'credential', rel);\r\n\tconst getCredentialsPost = ssApiSvc.endpoint({ url: credentialsUrl, method: 'POST'}, 'credential', rel);\r\n\tconst getAssignments = ssApiSvc.endpoint({ url: assignmentsUrl, method: 'GET' }, 'assignments', rel);\r\n\tconst getAssignmentsPost = ssApiSvc.endpoint({ url: assignmentsUrl, method: 'POST' }, 'assignments', rel);\r\n\tconst getDemographics = ssApiSvc.endpoint({ url: demographicsUrl, method: 'GET' }, 'demographics', rel);\r\n\tconst getDemographicsPost = ssApiSvc.endpoint({ url: demographicsUrl, method: 'POST' }, 'demographics', rel);\r\n\r\n\t/**\r\n\t * Makes a call to the Employee Credentials Report endpoint, and returns the data as a CSV\r\n\t * @param {*} id Ignored\r\n\t * @param {string} filter The filter (pre-encoded) that will be applied to the report endpoint to get a result set as CSV\r\n\t */\r\n\tconst exportCredentialsCsv = (id, filter) => {\r\n\t\tlet url = `${credentialsUrl}/csv`;\r\n\t\treturn exportCsv(url, filter);\r\n\t};\r\n\r\n\t/**\r\n\t * Makes a call to the Employee Export endpoint, and returns the data as a CSV\r\n\t * @param {*} id\r\n\t * @param {string} filter The filter (pre-encoded) that will be applied to the report endpoint to get a result set as CSV\r\n\t */\r\n\tconst exportAssignmentsCsv = (id, filter) => {\r\n\t\tlet url = `${assignmentsUrl}/csv${id == null ? '' : '/' + id}`;\r\n\t\treturn exportCsv(url, filter);\r\n\t};\r\n\r\n\t/**\r\n\t * Makes a call to the Employee Export endpoint, and returns the data as a CSV\r\n\t * @param {*} id\r\n\t * @param {string} filter The filter (pre-encoded) that will be applied to the report endpoint to get a result set as CSV\r\n\t */\r\n\tconst exportDemographicsCsv = (id, filter) => {\r\n\t\tlet url = `${demographicsUrl}/csv${id == null ? '' : '/' + id}`;\r\n\t\treturn exportCsv(url, filter);\r\n\t};\r\n\r\n\t/**\r\n\t * Makes a call to an endpoint, and returns the data as a CSV\r\n\t * @param {*} url\r\n\t * @param {string} filter The filter (pre-encoded) that will be applied to the report endpoint to get a result set as CSV\r\n\t */\r\n\tconst exportCsv = (url, filter) => {\r\n\t\tlet urlConfig = {\r\n\t\t\tmethod: 'GET',\r\n\t\t\turl: `${url}?${filter}`\r\n\t\t};\r\n\t\treturn $http(urlConfig);\r\n\t};\r\n\r\n\t// API endpoint methods\r\n\treturn {\r\n\t\tgetCredentials,\r\n\t\tgetCredentialsPost,\r\n\t\tgetAssignments,\r\n\t\tgetAssignmentsPost,\r\n\t\tgetDemographics,\r\n\t\tgetDemographicsPost,\r\n\t\texportCredentialsCsv,\r\n\t\texportAssignmentsCsv,\r\n\t\texportDemographicsCsv\r\n\t};\r\n\r\n\t// #-- END API Endpoint (empReportsApi) --# //\r\n\t// #--------------------------------------# //\r\n}\r\n\r\nangular.module('ec-employee-apis').factory('empReportsApi', empReportsApi);\r\n","/*@ngInject*/\r\nfunction exportTemplateApi($http, $q, ssActiveUserSvc, ssApiResponseHlp, ssAuthSvc, buildConfig) {\r\n\t// #------------------------------------------# //\r\n\t// #---- API Endpoint (exportTemplateApi) ----# //\r\n\r\n\t// base endpoint url\r\n\tconst baseUrl = buildConfig.endpoint.exportTemplates;\r\n\r\n\t// export settings urls\r\n\tconst typeUrl = `${baseUrl}/ExportType`;\r\n\tconst baseTemplateUrl = `${baseUrl}/Organizations/:ORGID:/ExportTemplate`;\r\n\tconst templateUrl = id => `${baseTemplateUrl}/${id}`;\r\n\r\n\tconst templateUpdateFields = ['name', 'delimiter', 'exportSetting', 'includeColumnHeaders', 'exportFields'];\r\n\r\n\t// API endpoint methods\r\n\treturn {\r\n\t\tdeleteTemplate,\r\n\t\tgetTemplate,\r\n\t\tgetTemplates,\r\n\t\tgetTypes,\r\n\t\tsaveTemplate,\r\n\t};\r\n\r\n\t/**\r\n\t * Gets the report templates\r\n\t * @param {*} params\r\n\t */\r\n\tfunction getTypes(params) {\r\n\t\treturn api({ method: 'GET', url: typeUrl, params });\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new template\r\n\t * @param {*} template\r\n\t */\r\n\tfunction createTemplate(template) {\r\n\t\tif (!template) { return $q.reject('template data is empty'); }\r\n\r\n\t\treturn api({ method: 'POST', url: baseTemplateUrl, data: template });\r\n\t}\r\n\r\n\t/**\r\n\t * Deletes a template based on the id\r\n\t * @param {string} id\r\n\t */\r\n\tfunction deleteTemplate(id) {\r\n\t\tif (!id) { return $q.reject('template id is empty'); }\r\n\r\n\t\treturn api({ method: 'DELETE', url: templateUrl(id) });\r\n\t}\r\n\r\n\t/**\r\n\t * Gets a template based on the id\r\n\t * @param {string} id\r\n\t * @param {*} params\r\n\t */\r\n\tfunction getTemplate(id, params) {\r\n\t\tif (!id) { return $q.reject('template id is empty'); }\r\n\t\treturn api({ method: 'GET', url: templateUrl(id), params });\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the templates\r\n\t * @param {*} params\r\n\t */\r\n\tfunction getTemplates(params) {\r\n\t\treturn api({ method: 'GET', url: baseTemplateUrl, params });\r\n\t}\r\n\r\n\t/**\r\n\t * Saves the template. Calls update or create based on whether the template is new or not.\r\n\t * @param {*} template\r\n\t */\r\n\tfunction saveTemplate(template) {\r\n\t\tif (!template) { return $q.reject('template data is empty'); }\r\n\t\tif (template.id == null) {\r\n\t\t\treturn createTemplate(template);\r\n\t\t}\r\n\t\treturn updateTemplate(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the template\r\n\t */\r\n\tfunction updateTemplate(template) {\r\n\t\tconst patchData = templateUpdateFields.map(key => {\r\n\t\t\treturn {\r\n\t\t\t\top: 'replace',\r\n\t\t\t\tpath: `/${key}`,\r\n\t\t\t\tvalue: template[key]\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\treturn api({\r\n\t\t\tmethod: 'PATCH',\r\n\t\t\turl: templateUrl(template.id),\r\n\t\t\tdata: patchData\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Base method all calls go through.\r\n\t * @param {*} config\r\n\t */\r\n\tfunction api(config) {\r\n\t\tvar returnPromise = $q.when(ssAuthSvc.ready);\r\n\r\n\t\t// if the url uses the orgId, wait for it to be ready\r\n\t\tif (usesOrgId(config.url)) {\r\n\t\t\treturnPromise = returnPromise.then(() => ssActiveUserSvc.ready);\r\n\t\t}\r\n\r\n\t\treturnPromise = returnPromise.then(function () {\r\n\t\t\tconst orgId = ssActiveUserSvc.getOrgIdSync();\r\n\t\t\tconst urlNeedsOrgId = config.url.includes(':ORGID:');\r\n\r\n\t\t\t// if this url needs an orgId replacement, and we don't have an org context... abort!\r\n\t\t\tif (urlNeedsOrgId && orgId == null) { return; }\r\n\t\t\t// if this url needs an orgId, replace it\r\n\t\t\tif (urlNeedsOrgId) {\r\n\t\t\t\tconfig.url = config.url.replace(/:ORGID:/ig, orgId);\r\n\t\t\t}\r\n\r\n\t\t\treturn $http(config)\r\n\t\t\t\t.then(res => (res.status >= 400 && res.status < 500 ? $q.reject(res) : res))\r\n\t\t\t\t.catch(res => {\r\n\t\t\t\t\tif (res.status === -1) { return; } // timeout or cancelled\r\n\t\t\t\t\tssApiResponseHlp.handle4XX(res);\r\n\t\t\t\t});\r\n\t\t});\r\n\r\n\t\treturn returnPromise;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param {*} url\r\n\t */\r\n\tfunction usesOrgId(url) {\r\n\t\tconst str = (typeof url === 'function' ? url({}, {}) : url);\r\n\t\tif (typeof str === 'string') {\r\n\t\t\treturn str.toLowerCase().includes(':orgid:');\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// #-- END API Endpoint (exportTemplateApi) --# //\r\n\t// #------------------------------------------# //\r\n}\r\n\r\nangular.module('ec-employee-apis').factory('exportTemplateApi', exportTemplateApi);\r\n","import './partials.compiled';\r\nimport './module';\r\nimport './includes';\r\n\r\nvar _win = (0,eval)('this');\r\nif (_win.registerUiModule) { _win.registerUiModule('ec-employee'); }\r\n","import {\r\n\tComponent\r\n}\r\nfrom 'base-component';\r\n// #-----------------------------------------# //\r\n// #---- Component (cmp-form-field-date) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tlabel: '@',\r\n\tname: '@?',\r\n\tmodel: '=?',\r\n\trequired: '@',\r\n\tformat: '@?'\r\n};\r\n\r\nconst config = {\r\n\ttransclude: true\r\n};\r\n\r\nclass FormFieldDate extends Component {\r\n\r\n\tlink(scope, elem, attrs) {\r\n\t\t//moved this from the template to here so that we can apply custom directives that\r\n\t\t// modify the markup.  Angular does not let you modify the class when there is a\r\n\t\t//\tng-class or an expression in the class attribute.\r\n\t\telem.addClass(scope.vm.fieldClass);\r\n\t}\r\n\r\n\t/*@ngInject*/\r\n\tcontroller($scope, ssStringHlp) {\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\tformat: $scope.format || 'MM/dd/yyyy'\r\n\t\t};\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { //jshint ignore:line\r\n\t\t};\r\n\r\n\t\tif ($scope.label) {\r\n\t\t\tlet attr = null;\r\n\r\n\t\t\tif ($scope.name) {\r\n\t\t\t\tattr = $scope.name;\r\n\t\t\t} else {\r\n\t\t\t\tattr = $scope.label;\r\n\t\t\t}\r\n\r\n\t\t\tlet fieldClass = attr.replace(/\\W/g, ' ');\r\n\t\t\tfieldClass = ssStringHlp.toDashCase(fieldClass);\r\n\t\t\tvm.fieldClass = fieldClass !== null ? 'field-' + fieldClass : '';\r\n\r\n\t\t} else {\r\n\t\t\tconsole.warn('Please provide at least a label attribute.');\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// #-- END Component (cmp-form-field-date) --# //\r\n// #-----------------------------------------# //\r\n\r\nangular.module('ec-employee-components').directive('cmpFormFieldDate', () => new FormFieldDate(props,\r\n\t'form-field-date', config));\r\n","import {\r\n\tComponent\r\n}\r\nfrom 'base-component';\r\n// #------------------------------------# //\r\n// #---- Component (cmp-form-field) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tlabel: '@',\r\n\tname: '@?',\r\n\tvalue: '=?',\r\n\trequired: '@'\r\n};\r\n\r\nconst config = {\r\n\ttransclude: true\r\n};\r\n\r\nclass FormField extends Component {\r\n\r\n\tlink(scope, elem, attrs) {\r\n\t\t//moved this from the template to here so that we can apply custom directives that\r\n\t\t// modify the markup.  Angular does not let you modify the class when there is a\r\n\t\t//\tng-class or an expression {{}} in the class attribute.\r\n\t\telem.addClass(scope.vm.fieldClass);\r\n\t}\r\n\r\n\t/*@ngInject*/\r\n\tcontroller($scope, ssStringHlp) {\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = {};\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { //jshint ignore:line\r\n\t\t};\r\n\r\n\t\tif ($scope.label) {\r\n\t\t\tlet attr = null;\r\n\r\n\t\t\tif ($scope.name) {\r\n\t\t\t\tattr = $scope.name;\r\n\t\t\t} else {\r\n\t\t\t\tattr = $scope.label;\r\n\t\t\t}\r\n\r\n\t\t\tlet fieldClass = attr.replace(/\\W/g, ' ');\r\n\t\t\tfieldClass = ssStringHlp.toDashCase(fieldClass);\r\n\t\t\tvm.fieldClass = fieldClass !== null ? 'field-' + fieldClass : '';\r\n\t\t} else {\r\n\t\t\tconsole.warn('Please provide at least a label attribute.');\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// #-- END Component (cmp-form-field) --# //\r\n// #------------------------------------# //\r\n\r\nangular.module('ec-employee-components').directive('cmpFormField', () => new FormField(props, 'form-field',\r\n\tconfig));\r\n","import { Component } from 'base-component';\r\n// #-------------------------------------# //\r\n// #---- Component (cmp-phone-group) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\temp: '=',\r\n\teditMode: '=?',\r\n\tpermissions: '=',\r\n};\r\n\r\nclass PhoneGroup extends Component {\r\n\t/*@ngInject*/\r\n\tcontroller($scope) {\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = {}; // jshint ignore:line\r\n\r\n\t\tif ($scope.emp._phoneNumbers != null) {\r\n\t\t\t$scope.emp._phoneNumbers.forEach(p => p.editable = false);\r\n\t\t}\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { // jshint ignore:line\r\n\t\t\tadd() {\r\n\t\t\t\t$scope.emp._phoneNumbers.push({\r\n\t\t\t\t\t_isPrimary: false,\r\n\t\t\t\t\t_extension: null,\r\n\t\t\t\t\t_number: null,\r\n\t\t\t\t\t_phoneType: null,\r\n\t\t\t\t\t_usageType: null,\r\n\t\t\t\t\teditable: true,\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tonRemove(index) {\r\n\t\t\t\t$scope.emp._phoneNumbers.splice(index, 1);\r\n\t\t\t},\r\n\t\t\tonCheck(index) {\r\n\t\t\t\t$scope.emp._phoneNumbers.forEach((phone, idx) => {\r\n\t\t\t\t\tif (index === idx) { return; }\r\n\t\t\t\t\tphone._isPrimary = false;\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t};\r\n\t}\r\n}\r\n\r\n// #-- END Component (cmp-phone-group) --# //\r\n// #-------------------------------------# //\r\n\r\nangular.module('ec-employee-components').directive('cmpPhoneGroup', () => new PhoneGroup(props, 'phone-group'));\r\n","import { Component } from 'base-component';\r\n// #------------------------------------# //\r\n// #---- Component (cmp-phone-item) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tlabel: '@',\r\n\tphone: '=',\r\n\teditMode: '=?',\r\n\tonRemove: '&',\r\n\tonCheck: '&',\r\n\teditable: '=?',\r\n};\r\n\r\nclass PhoneItem extends Component {\r\n\t/*@ngInject*/\r\n\tcontroller($scope, ssModalSvc, ssEnum, ssValidationHlp) {\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\toptions: {\r\n\t\t\t\tphoneTypes: ssEnum.phoneTypes.getEnums(),\r\n\t\t\t\tusageType: ssEnum.usageType.getEnums(),\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\t$scope.validator = {\r\n\t\t\trequired: ssValidationHlp.required(),\r\n\t\t\tphoneNumber(val, field) {\r\n\t\t\t\tif (val == null || !val.length) { return true; }\r\n\t\t\t\tlet checkPhone = ssValidationHlp.phone();\r\n\t\t\t\treturn checkPhone(val, field);\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst phone = $scope.phone;\r\n\r\n\t\t$scope.$watch('phone._isPrimary', (nv, ov) => {\r\n\t\t\tif (nv === ov) { return; }\r\n\t\t\tif (nv === true) { $scope.onCheck(); }\r\n\t\t});\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = {\r\n\t\t\tcancel() {\r\n\t\t\t\tif (typeof phone.$revert === 'function') {\r\n\t\t\t\t\tphone.$revert();\r\n\t\t\t\t}\r\n\t\t\t\tif (phone.id == null) {\r\n\t\t\t\t\t$scope.onRemove();\r\n\t\t\t\t}\r\n\t\t\t\tphone.editable = false;\r\n\t\t\t},\r\n\t\t\tedit() { phone.editable = true; },\r\n\t\t\tremove() {\r\n\t\t\t\tlet confirmation = {\r\n\t\t\t\t\ttitle: 'Are you sure?',\r\n\t\t\t\t\tcontent: 'Are you sure you want to delete this phone number?',\r\n\t\t\t\t\tprimaryText: 'Delete Phone Number',\r\n\t\t\t\t\tsecondaryText: 'Cancel',\r\n\t\t\t\t\talwaysOnTop: true\r\n\t\t\t\t};\r\n\t\t\t\tssModalSvc.showDestructive(confirmation).then(() => {\r\n\t\t\t\t\t$scope.onRemove();\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t};\r\n\t}\r\n}\r\n\r\n// #-- END Component (cmp-phone-item) --# //\r\n// #------------------------------------# //\r\n\r\nangular.module('ec-employee-components').directive('cmpPhoneItem', () => new PhoneItem(props, 'phone-item'));\r\n","import { Component } from 'base-component';\r\n// #------------------------------------------------# //\r\n// #---- Component (cmp-report-export-settings) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\ttemplateId: '=',\r\n\ttype: '=',\r\n\treportRoute: '@',\r\n};\r\n\r\nclass ReportExportSettings extends Component {\r\n\t/*@ngInject*/\r\n\tcontroller($rootScope, $scope, $state, ssAsync, ssModalSvc, ssValidationHlp, ssToastHlp, exportTemplateApi) {\r\n\t\tconst regex = /^[\\w\\- ]+$/gi; // allow alphanumeric/underscores (\\w), dashes (\\-), spaces ( )\r\n\r\n\t\tconst customerSupport = {\r\n\t\t\tsubject: 'Request for Nightly Exports',\r\n\t\t\tdescription: 'I would like to receive nightly exports of my district\\'s data from Frontline Central',\r\n\t\t};\r\n\r\n\t\tlet moveTarget = null;\r\n\r\n\t\t$scope.validator = {\r\n\t\t\tname: ssValidationHlp.string({ required: true, maxLength: 100, re: regex }),\r\n\t\t\talias: ssValidationHlp.string({ maxLength: 100, re: regex }),\r\n\t\t\tselected: () => {\r\n\t\t\t\treturn vm.template.exportFields.some(f => f.visible) ? true : 'Your export does not contain any records. Select at least one field to be able to save the template.';\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\tisNew: $scope.templateId == null || $scope.templateId.length === 0 || $scope.templateId === 'create',\r\n\r\n\t\t\tcanCreate: $rootScope.isPermitted.exportTemplates.create,\r\n\r\n\t\t\tcsSupportUrl: `https://central-help.frontlineeducation.com/hc/en-us/requests/new?subject=${customerSupport.subject}&description=${customerSupport.description}`,\r\n\r\n\t\t\teditMode: false,\r\n\r\n\t\t\tloading: true,\r\n\r\n\t\t\ttempDisableDragAndDrop: true, // a temporary variable to disable the drag and drop until the performance issues can be looked into\r\n\r\n\t\t\toptions: {\r\n\t\t\t\tdelimiters: [\r\n\t\t\t\t\t{ name: 'Tab', value: '\\t' },\r\n\t\t\t\t\t{ name: 'Slash [ / ]', value: '/' },\r\n\t\t\t\t\t{ name: 'Pipe [ | ]', value: '|' },\r\n\t\t\t\t\t{ name: 'Comma [ , ]', value: ',' },\r\n\t\t\t\t\t{ name: 'Semicolon [ ; ]', value: ';' },\r\n\t\t\t\t],\r\n\t\t\t\texportSettings: [\r\n\t\t\t\t\t{ name: 'All current records', value: 'all' },\r\n\t\t\t\t\t{ name: 'Only new/edited records in the past 24 hours', value: 'delta' },\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tload();\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = {\r\n\t\t\t/**\r\n\t\t\t * Cancel edits\r\n\t\t\t */\r\n\t\t\tcancel() {\r\n\t\t\t\tif (vm.isNew) {\r\n\t\t\t\t\t$state.go($scope.reportRoute);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tssAsync(function*() {\r\n\t\t\t\t\tyield load();\r\n\t\t\t\t\tvm.editMode = false;\r\n\t\t\t\t})();\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Edit template\r\n\t\t\t */\r\n\t\t\tedit() { vm.editMode = true; },\r\n\r\n\t\t\t/**\r\n\t\t\t * Remove template\r\n\t\t\t */\r\n\t\t\tremove() {\r\n\t\t\t\tconst modalConfig = {\r\n\t\t\t\t\ttitle: '',\r\n\t\t\t\t\tcontent: `Are you sure you want to delete export template ${vm.template.name}?`,\r\n\t\t\t\t\tprimaryText: 'Delete',\r\n\t\t\t\t\tsecondaryText: 'Cancel',\r\n\t\t\t\t\tsize: 'medium'\r\n\t\t\t\t};\r\n\t\t\t\tssModalSvc.showDestructive(modalConfig).then(() => {\r\n\t\t\t\t\texportTemplateApi.deleteTemplate(vm.template.id).then(() => {\r\n\t\t\t\t\t\tssToastHlp.success('Your template has been removed and will no longer be used in the nightly exports.', 'Template Removed Successfully');\r\n\t\t\t\t\t\tvm.editMode = false;\r\n\t\t\t\t\t\t$state.go($scope.reportRoute, {}, { reload: true }); // reload to refresh the objects\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Save template\r\n\t\t\t */\r\n\t\t\tsave() {\r\n\t\t\t\tvm.saving = true;\r\n\r\n\t\t\t\texportTemplateApi.saveTemplate(vm.template).then(res => {\r\n\t\t\t\t\tif (res == null) { vm.saving = false; return; }\r\n\r\n\t\t\t\t\tssToastHlp.success('Your changes will be applied to the next nightly export.', 'Template Saved Successfully');\r\n\r\n\t\t\t\t\tif (vm.isNew) {\r\n\t\t\t\t\t\t$state.go($state.current, { templateId: res.data.data.id }, { reload: true }); // reload to refresh the objects\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvm.isNew = false;\r\n\t\t\t\t\tvm.editMode = false;\r\n\t\t\t\t\tvm.saving = false;\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Field moved\r\n\t\t\t */\r\n\t\t\tmovedField(index, field) {\r\n\t\t\t\tvm.template.exportFields[moveTarget] = field;\r\n\t\t\t\tvm.template.exportFields.splice(index, 1);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Field was dropped\r\n\t\t\t */\r\n\t\t\tdropField(event, index, item) {\r\n\t\t\t\tmoveTarget = index;\r\n\t\t\t\treturn {};\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Get the selected export setting or 'all'\r\n\t\t\t */\r\n\t\t\tgetSelectExportSetting(val) {\r\n\t\t\t\treturn vm.options.exportSettings.find(s => s.value === val).name;\r\n\t\t\t},\r\n\r\n\t\t\tgetSelectedText() {\r\n\t\t\t\tif (vm.template == null || vm.template.exportFields == null || vm.template.exportFields.length === 0) { return 'none'; }\r\n\t\t\t\tlet count = vm.template.exportFields.filter(f => f.visible).length;\r\n\t\t\t\tif (count === 0) {\r\n\t\t\t\t\tvm.selectAll = false;\r\n\t\t\t\t\treturn 'none';\r\n\t\t\t\t} else if (count === vm.template.exportFields.length) {\r\n\t\t\t\t\tvm.selectAll = true;\r\n\t\t\t\t\treturn 'all';\r\n\t\t\t\t}\r\n\t\t\t\tvm.selectAll = true;\r\n\t\t\t\treturn 'some';\r\n\t\t\t},\r\n\r\n\t\t\tselectAll() {\r\n\t\t\t\tconst isAll = go.getSelectedText() === 'all';\r\n\t\t\t\tvm.template.exportFields.forEach(f => f.visible = !isAll);\r\n\t\t\t\tvm.selectAll = !isAll;\r\n\t\t\t},\r\n\r\n\t\t\tmoveUp(field, currentIndex) {\r\n\t\t\t\tvm.template.exportFields.splice(currentIndex, 1);\r\n\t\t\t\tvm.template.exportFields.splice(currentIndex - 1, 0, field);\r\n\t\t\t},\r\n\r\n\t\t\tmoveDown(field, currentIndex) {\r\n\t\t\t\tvm.template.exportFields.splice(currentIndex, 1);\r\n\t\t\t\tvm.template.exportFields.splice(currentIndex + 1, 0, field);\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t *\r\n\t\t */\r\n\t\tfunction load() {\r\n\t\t\treturn ssAsync(function*() {\r\n\t\t\t\tvm.loading = true;\r\n\r\n\t\t\t\tif (vm.isNew) {\r\n\t\t\t\t\tvm.selectAll = true;\r\n\t\t\t\t\tvm.template = {\r\n\t\t\t\t\t\tname: '',\r\n\t\t\t\t\t\tdelimiter: ',',\r\n\t\t\t\t\t\texportSetting: 'all',\r\n\t\t\t\t\t\tincludeColumnHeaders: true,\r\n\t\t\t\t\t\texportFields: $scope.type.systemFields.map(f => {\r\n\t\t\t\t\t\t\treturn { systemFieldId: f.id, systemName: f.name, visible: true, alias: null };\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t\texportTypeId: $scope.type.id,\r\n\t\t\t\t\t};\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet t = yield exportTemplateApi.getTemplate($scope.templateId);\r\n\r\n\t\t\t\t\tvm.template = t.data.data;\r\n\r\n\t\t\t\t\tif (vm.template != null) {\r\n\t\t\t\t\t\t// fill the template fields with the system fields' names\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tvm.template.exportFields.forEach(f => f.systemName = $scope.type.systemFields.find(sf => sf.id === f.systemFieldId).name);\r\n\t\t\t\t\t\t} catch (err) {}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvm.isNew = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvm.selectAll = vm.template.exportFields.filter(f => f.visible).length === vm.template.exportFields.length;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvm.loading = false;\r\n\t\t\t})();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// #-- END Component (cmp-report-export-settings) --# //\r\n// #------------------------------------------------# //\r\n\r\nangular.module('ec-employee-components').directive('cmpReportExportSettings', () => new ReportExportSettings(props, 'report-export-settings'));\r\n","import { Component } from 'base-component';\r\n// #-------------------------------------------# //\r\n// #---- Component (cmp-report-filter-bar) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tconfig: '=',\r\n\tfilters: '=',\r\n\torg: '=',\r\n\texportType: '@',\r\n};\r\n/*\r\nprops.config = {\r\n\texport:Function - API for the export endpoint; if null export button is hidden\r\n\ttotalResults:Number\r\n\tcountLabel:String\r\n\tsearchLabel:String\r\n\tsortOptions:Array\r\n\tdefaultSortIndex:Number\r\n\tuseFilter:Array\r\n\t\tadminVerified\r\n\t\tasOf\r\n\t\tcredentials\r\n\t\tdepartments\r\n\t\teffectiveDate\r\n\t\tempGroups\r\n\t\tempStatus\r\n\t\tempStatusReasons\r\n\t\texpiration\r\n\t\tjobTypes\r\n\t\tlastUpdated\r\n\t\tlocations\r\n}\r\n*/\r\nclass ReportFilterBar extends Component {\r\n\t/*@ngInject*/\r\n\tcontroller($scope, $location, $rootScope, ssAsync, ssObjectHlp, ssDepartmentSvc, ssJobTypeSvc, ssLocationSvc, ssListSvc, ssToastHlp,\r\n\t\tssCredentialBusinessEngineSvc, ssCredentialDataAccessSvc, ssDateByOrgHlp, ssModalSvc, reportHlp, sortFilterHlp) {\r\n\r\n\t\tconst credentialConstants = ssCredentialBusinessEngineSvc.credentialConstants;\r\n\r\n\t\t// default to expiration date\r\n\t\tconst orgFilter = sortFilterHlp.searchFilter($scope.org.id, reportHlp.filtersKeys.ORGANIZATION_ID);\r\n\r\n\t\tconst config = $scope.config || {};\r\n\r\n\t\tlet selectedSortKey;\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\tfilters: {},\r\n\t\t\tinvalidLastUpdated: false,\r\n\t\t\texportTemplates: null\r\n\t\t};\r\n\r\n\t\tconst exportTemplates = $rootScope.utils.findInParentScope('exportTemplates', $scope);\r\n\r\n\t\tif (exportTemplates && exportTemplates.length) {\r\n\t\t\tvm.exportTemplates = exportTemplates.map(t => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname: t.name,\r\n\t\t\t\t\tvalue: t.id\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t\tvm.exportTemplates.unshift({ name: 'Default CSV', value: null });\r\n\t\t}\r\n\r\n\t\t// fill data\r\n\t\tif (useFilter('empStatus')) {\r\n\t\t\tvm.statuses = reportHlp.statusOptions;\r\n\t\t}\r\n\t\tif (useFilter('adminVerified')) {\r\n\t\t\tvm.adminVerified = reportHlp.adminVerifiedOptions;\r\n\t\t}\r\n\r\n\t\t// then set defaults as some of the defaults may use the data\r\n\t\tsetDefaults();\r\n\r\n\t\t// add org filter\r\n\t\t$scope.filters = Object.assign({}, $scope.filters, orgFilter);\r\n\r\n\t\twatchers();\r\n\r\n\t\t// Prepare the data for the dropdowns\r\n\t\tssAsync(function*() {\r\n\t\t\ttry {\r\n\t\t\t\tif (useFilter('departments')) {\r\n\t\t\t\t\tvm.departments = yield ssDepartmentSvc.getAll();\r\n\t\t\t\t}\r\n\t\t\t\tif (useFilter('jobTypes')) {\r\n\t\t\t\t\tvm.jobTypes = yield ssJobTypeSvc.getAll();\r\n\t\t\t\t}\r\n\t\t\t\tif (useFilter('locations')) {\r\n\t\t\t\t\tvm.locations = yield ssLocationSvc.getAll();\r\n\t\t\t\t}\r\n\t\t\t\tif (useFilter('empGroups')) {\r\n\t\t\t\t\tvm.empGroups = yield ssListSvc.getByExternalId('jobtype.employmentgroups');\r\n\t\t\t\t\t// set _name; the super-multi-filter-list expects it\r\n\t\t\t\t\tvm.empGroups.forEach(g => g._name = g.name);\r\n\t\t\t\t}\r\n\t\t\t\tif (useFilter('empStatusReasons')) {\r\n\t\t\t\t\tvm.empStatusReasons = yield ssListSvc.getByExternalId('employee.statuschangereasons');\r\n\t\t\t\t\t// set _name; the super-multi-filter-list expects it\r\n\t\t\t\t\tvm.empStatusReasons.forEach(g => g._name = g.name);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvm.sortOptions = config.sortOptions;\r\n\r\n\t\t\t\t// passing in vm as 'data'\r\n\t\t\t\tlet selected = reportHlp.getSelectedFromUrl($location.search(), vm);\r\n\r\n\t\t\t\t// set the values on the\r\n\t\t\t\tObject.keys(selected).forEach(k => vm.filters[k] = selected[k]);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole && console.error && console.error('Error getting data', e);\r\n\t\t\t}\r\n\t\t})();\r\n\r\n\t\tif (useFilter('credentials')) {\r\n\t\t\t// Prepare the credential data for the dropdowns\r\n\t\t\tssAsync(function*() {\r\n\t\t\t\tvm.loadingCreds = true;\r\n\t\t\t\ttry {\r\n\t\t\t\t\tlet subtypes = [credentialConstants.CREDENTIAL_NEW, credentialConstants.CREDENTIAL_RENEWED, credentialConstants.CREDENTIAL_IN_PROGRESS];\r\n\t\t\t\t\tlet subtypesName = {};\r\n\t\t\t\t\tsubtypesName[credentialConstants.CREDENTIAL_NEW] = 'Initial';\r\n\t\t\t\t\tsubtypesName[credentialConstants.CREDENTIAL_RENEWED] = 'Renewal';\r\n\t\t\t\t\tsubtypesName[credentialConstants.CREDENTIAL_IN_PROGRESS] = 'In Progress';\r\n\r\n\t\t\t\t\tvm.credTypes = yield ssCredentialDataAccessSvc.getCredentialTypes();\r\n\r\n\t\t\t\t\tvm.credTypes.forEach(t => {\r\n\t\t\t\t\t\tt.subTypes = subtypes.map(st => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t_name: subtypesName[st],\r\n\t\t\t\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\t\t\t\ttypeId: t.id,\r\n\t\t\t\t\t\t\t\t\tsubtypeId: st,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tpillText: `${subtypesName[st]} - ${t._name}`,\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tlet certIssuers = yield ssCredentialDataAccessSvc.getIssuersByCredentialType(credentialConstants.CERTIFICATE_LICENSE, credentialConstants.STATE_NATIONAL);\r\n\t\t\t\t\tlet clearIssuers = yield ssCredentialDataAccessSvc.getIssuersByCredentialType(credentialConstants.CLEARANCES, credentialConstants.STATE_NATIONAL);\r\n\t\t\t\t\tlet stateDmvIssuers = yield ssCredentialDataAccessSvc.getIssuersByCredentialType(credentialConstants.DRIVER_LICENSE, credentialConstants.STATE_NATIONAL);\r\n\r\n\t\t\t\t\tlet stateIssuers = [...certIssuers, ...clearIssuers, ...stateDmvIssuers];\r\n\t\t\t\t\tlet customIssuers = yield ssCredentialDataAccessSvc.getIssuers(credentialConstants.DISTRICT_CUSTOM);\r\n\r\n\t\t\t\t\tlet stateCreds = yield ssCredentialDataAccessSvc.getMany();\r\n\r\n\t\t\t\t\tlet orgCreds = yield ssCredentialDataAccessSvc.getMany(sortFilterHlp.searchFilter($scope.org.id, 'organizationId'));\r\n\t\t\t\t\tvm.credentials = [...stateCreds, ...orgCreds];\r\n\r\n\t\t\t\t\t// get state\r\n\t\t\t\t\tvm.credentials.forEach(c => {\r\n\t\t\t\t\t\t// try state/national issuer\r\n\t\t\t\t\t\tlet issuer = stateIssuers.find(i => i.id === c._issuerId);\r\n\t\t\t\t\t\tif (issuer != null) {\r\n\t\t\t\t\t\t\t// it's state/national\r\n\t\t\t\t\t\t\tif (issuer._stateId != null) {\r\n\t\t\t\t\t\t\t\tc._name = `${issuer._stateId} - ${c._name}`;\r\n\t\t\t\t\t\t\t\tc.pillText = c._name;\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// it's custom. Try to use the org's state\r\n\t\t\t\t\t\t\tissuer = customIssuers.find(i => i.id === c._issuerId);\r\n\t\t\t\t\t\t\tif (issuer != null && ssObjectHlp.glean($scope.org, _ => _._address.state) != null) {\r\n\t\t\t\t\t\t\t\tc._name = `${$scope.org._address.state} - ${c._name}`;\r\n\t\t\t\t\t\t\t\tc.pillText = c._name;\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// we were not able to get the state; do nothing; should not get to this point\r\n\t\t\t\t\t\t// console && console.info && console.info('Cannot prefix Credential with state', c);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tvm.loadingCreds = false;\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tconsole && console.error && console.error('Error getting data', e);\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t}\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = {\r\n\t\t\tclear() {\r\n\t\t\t\t// clear the filters object; keep the org filter\r\n\t\t\t\t$scope.filters = Object.assign({}, $scope.filters, orgFilter);\r\n\r\n\t\t\t\tsetDefaults();\r\n\r\n\t\t\t\t// uncheck everything\r\n\t\t\t\t// ****************************************************************\r\n\t\t\t\tif (useFilter('departments')) {\r\n\t\t\t\t\tvm.departments.forEach(item => item.checked = false);\r\n\t\t\t\t}\r\n\t\t\t\tif (useFilter('jobTypes')) {\r\n\t\t\t\t\tvm.jobTypes.forEach(item => item.checked = false);\r\n\t\t\t\t}\r\n\t\t\t\tif (useFilter('locations')) {\r\n\t\t\t\t\tvm.locations.forEach(item => item.checked = false);\r\n\t\t\t\t}\r\n\t\t\t\tif (useFilter('empGroups')) {\r\n\t\t\t\t\tvm.empGroups.forEach(item => item.checked = false);\r\n\t\t\t\t}\r\n\t\t\t\tif (useFilter('credentials')) {\r\n\t\t\t\t\tvm.credTypes.forEach(item => item.checked = false);\r\n\t\t\t\t\tvm.credentials.forEach(item => item.checked = false);\r\n\t\t\t\t}\r\n\t\t\t\tif (useFilter('empStatus')) {\r\n\t\t\t\t\tvm.statuses.forEach(item => item.checked = false);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\texport (templateId) {\r\n\t\t\t\tlet content = `Generate and download report for ${config.totalResults} ${config.countLabel}${config.totalResults === 1 ? '' : 's'}?`;\r\n\t\t\t\tvar modalConfig = {\r\n\t\t\t\t\ttitle: '',\r\n\t\t\t\t\tcontent: content,\r\n\t\t\t\t\tprimaryText: 'Download',\r\n\t\t\t\t\tsecondaryText: 'Cancel',\r\n\t\t\t\t\tsize: 'medium'\r\n\t\t\t\t};\r\n\r\n\t\t\t\tssModalSvc.showStandard(modalConfig).then(() => exportFile(templateId));\r\n\t\t\t},\r\n\r\n\t\t\tshowClear() {\r\n\t\t\t\t// show clear if there are any keys in the filters other than org and sorts\r\n\t\t\t\tlet keys = Object.keys($scope.filters).filter(k => !k.startsWith('sort') && k !== `filter[${reportHlp.filtersKeys.ORGANIZATION_ID}]`);\r\n\t\t\t\treturn keys.length > 0;\r\n\t\t\t},\r\n\r\n\t\t\tuseFilter,\r\n\t\t};\r\n\r\n\t\tfunction setDefaults() {\r\n\t\t\tsetDefaultSort();\r\n\r\n\t\t\tvm.filters.search = '';\r\n\r\n\t\t\tif (useFilter('departments')) {\r\n\t\t\t\tvm.filters.departments = [];\r\n\t\t\t}\r\n\r\n\t\t\tif (useFilter('jobTypes')) {\r\n\t\t\t\tvm.filters.jobTypes = [];\r\n\t\t\t}\r\n\r\n\t\t\tif (useFilter('locations')) {\r\n\t\t\t\tvm.filters.locations = [];\r\n\t\t\t}\r\n\r\n\t\t\tif (useFilter('empGroups')) {\r\n\t\t\t\tvm.filters.empGroups = [];\r\n\t\t\t}\r\n\r\n\t\t\tif (useFilter('credentials')) {\r\n\t\t\t\tvm.filters.credTypes = [];\r\n\t\t\t\tvm.filters.credentials = [];\r\n\t\t\t}\r\n\r\n\t\t\tif (useFilter('empStatus')) {\r\n\t\t\t\tvm.filters.statuses = [];\r\n\t\t\t}\r\n\r\n\t\t\tif (useFilter('empStatusReasons')) {\r\n\t\t\t\tvm.filters.empStatusReasons = [];\r\n\t\t\t}\r\n\r\n\t\t\tif (useFilter('adminVerified')) {\r\n\t\t\t\t// default to 'All'\r\n\t\t\t\tvm.filters.adminVerified = vm.adminVerified[0].value;\r\n\t\t\t}\r\n\r\n\t\t\tif (useFilter('expiration')) {\r\n\t\t\t\tvm.filters.expiresAfter = '';\r\n\t\t\t\tvm.filters.expiresBefore = '';\r\n\t\t\t}\r\n\r\n\t\t\tif (useFilter('effectiveDate')) {\r\n\t\t\t\tvm.filters.effectiveDate = '';\r\n\t\t\t}\r\n\r\n\t\t\tif (useFilter('lastUpdated')) {\r\n\t\t\t\tvm.filters.lastUpdatedStart = '';\r\n\t\t\t\tvm.filters.lastUpdatedEnd = '';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction setDefaultSort() {\r\n\t\t\tif (config.sortOptions == null || !config.sortOptions.length) { return; }\r\n\r\n\t\t\tif (typeof config.defaultSortIndex !== 'number') {\r\n\t\t\t\tconfig.defaultSortIndex = 0;\r\n\t\t\t}\r\n\t\t\tlet defaultSortType = config.sortOptions[config.defaultSortIndex];\r\n\t\t\tvm.filters.sortBy = defaultSortType.value;\r\n\t\t\tselectedSortKey = defaultSortType.value.field;\r\n\t\t}\r\n\r\n\t\tfunction useFilter(filter) {\r\n\t\t\tif (ssObjectHlp.glean(config, _ => _.useFilter) != null && config.useFilter.length) {\r\n\t\t\t\treturn config.useFilter.includes(filter);\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tfunction watchers() {\r\n\t\t\t$scope.$watch('vm.exportOptionValue', nv => {\r\n\t\t\t\tif (nv === 'defaultCSV') {\r\n\t\t\t\t\tgo.export();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t$scope.$watch('vm.filters.search', nv => {\r\n\t\t\t\tif (typeof nv === 'string' && nv.trim().length) {\r\n\t\t\t\t\t$scope.filters = Object.assign({}, $scope.filters, sortFilterHlp.searchFilter(nv.trim(), reportHlp.filtersKeys.FULL_NAME));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdelete $scope.filters[`filter[${reportHlp.filtersKeys.FULL_NAME}]`];\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif (useFilter('departments')) {\r\n\t\t\t\t$scope.$watch('vm.filters.departments.length', nv => {\r\n\t\t\t\t\tif (nv == 0) {\r\n\t\t\t\t\t\tdelete $scope.filters[`filter[${reportHlp.filtersKeys.DEPARTMENT}]`];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$scope.filters = Object.assign({}, $scope.filters, sortFilterHlp.filterOrNull(vm.filters.departments, reportHlp.filtersKeys.DEPARTMENT));\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (useFilter('jobTypes')) {\r\n\t\t\t\t$scope.$watch('vm.filters.jobTypes.length', nv => {\r\n\t\t\t\t\tif (nv == 0) {\r\n\t\t\t\t\t\tdelete $scope.filters[`filter[${reportHlp.filtersKeys.JOB_TYPE}]`];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$scope.filters = Object.assign({}, $scope.filters, sortFilterHlp.filterOrNull(vm.filters.jobTypes, reportHlp.filtersKeys.JOB_TYPE));\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (useFilter('locations')) {\r\n\t\t\t\t$scope.$watch('vm.filters.locations.length', nv => {\r\n\t\t\t\t\tif (nv == 0) {\r\n\t\t\t\t\t\tdelete $scope.filters[`filter[${reportHlp.filtersKeys.LOCATION}]`];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$scope.filters = Object.assign({}, $scope.filters, sortFilterHlp.filterOrNull(vm.filters.locations, reportHlp.filtersKeys.LOCATION));\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (useFilter('empGroups')) {\r\n\t\t\t\t$scope.$watch('vm.filters.empGroups.length', nv => {\r\n\t\t\t\t\tif (nv == 0) {\r\n\t\t\t\t\t\tdelete $scope.filters[`filter[${reportHlp.filtersKeys.EMPLOYMENT_GROUP}]`];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlet empGroupById = vm.filters.empGroups.map(item => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: item.value\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t$scope.filters = Object.assign({}, $scope.filters, sortFilterHlp.filterOrNull(empGroupById, reportHlp.filtersKeys.EMPLOYMENT_GROUP));\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (useFilter('credentials')) {\r\n\t\t\t\t$scope.$watch('vm.filters.credTypes.length', nv => {\r\n\t\t\t\t\tif (nv == 0) {\r\n\t\t\t\t\t\tdelete $scope.filters[`filter[${reportHlp.filtersKeys.CRED_TYPES}]`];\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tlet selectedTypes = {};\r\n\t\t\t\t\t\tvm.filters.credTypes.forEach(t => {\r\n\t\t\t\t\t\t\tlet typeId = t.value.typeId;\r\n\t\t\t\t\t\t\tif (selectedTypes[`${typeId}`] == null) {\r\n\t\t\t\t\t\t\t\tselectedTypes[`${typeId}`] = [];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tselectedTypes[`${typeId}`].push(t.value.subtypeId);\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t$scope.filters = Object.assign({}, $scope.filters, sortFilterHlp.searchFilter(selectedTypes, reportHlp.filtersKeys.CRED_TYPES));\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t$scope.$watch('vm.filters.credentials.length', nv => {\r\n\t\t\t\t\tif (nv == 0) {\r\n\t\t\t\t\t\tdelete $scope.filters[`filter[${reportHlp.filtersKeys.CREDENTIAL_IDS}]`];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$scope.filters = Object.assign({}, $scope.filters, sortFilterHlp.filterOrNull(vm.filters.credentials, reportHlp.filtersKeys.CREDENTIAL_IDS));\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (useFilter('empStatus')) {\r\n\t\t\t\t$scope.$watch('vm.filters.statuses.length', nv => {\r\n\t\t\t\t\tif (nv == 0) {\r\n\t\t\t\t\t\tdelete $scope.filters[`filter[${reportHlp.filtersKeys.STATUS}]`];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$scope.filters = Object.assign({}, $scope.filters, sortFilterHlp.filterOrNull(vm.filters.statuses, reportHlp.filtersKeys.STATUS));\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (useFilter('empStatusReasons')) {\r\n\t\t\t\t$scope.$watch('vm.filters.empStatusReasons.length', nv => {\r\n\t\t\t\t\tif (nv == 0) {\r\n\t\t\t\t\t\tdelete $scope.filters[`filter[${reportHlp.filtersKeys.STATUS_REASON}]`];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlet empStatusReasonsById = vm.filters.empStatusReasons.map(item => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: item.value\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t$scope.filters = Object.assign({}, $scope.filters, sortFilterHlp.filterOrNull(empStatusReasonsById, reportHlp.filtersKeys.STATUS_REASON));\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (useFilter('adminVerified')) {\r\n\t\t\t\t$scope.$watch('vm.filters.adminVerified', nv => {\r\n\t\t\t\t\tif (nv == null) {\r\n\t\t\t\t\t\tdelete $scope.filters[`filter[${reportHlp.filtersKeys.ADMIN_VERIFIED}]`];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$scope.filters = Object.assign({}, $scope.filters, sortFilterHlp.searchFilter(nv, reportHlp.filtersKeys.ADMIN_VERIFIED));\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (useFilter('expiration')) {\r\n\t\t\t\t$scope.$watch('vm.filters.expiresAfter', nv => {\r\n\t\t\t\t\tif (nv == null || nv === '') {\r\n\t\t\t\t\t\tdelete $scope.filters[`filter[${reportHlp.filtersKeys.EXPIRES_AFTER}]`];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$scope.filters = Object.assign({}, $scope.filters, sortFilterHlp.searchFilter(moment(nv).format('YYYY-MM-DD'), reportHlp.filtersKeys.EXPIRES_AFTER));\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t$scope.$watch('vm.filters.expiresBefore', nv => {\r\n\t\t\t\t\tif (nv == null || nv === '') {\r\n\t\t\t\t\t\tdelete $scope.filters[`filter[${reportHlp.filtersKeys.EXPIRES_BEFORE}]`];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$scope.filters = Object.assign({}, $scope.filters, sortFilterHlp.searchFilter(moment(nv).format('YYYY-MM-DD'), reportHlp.filtersKeys.EXPIRES_BEFORE));\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (useFilter('effectiveDate')) {\r\n\t\t\t\t$scope.$watch('vm.filters.effectiveDate', nv => {\r\n\t\t\t\t\tif (nv == null || nv === '') {\r\n\t\t\t\t\t\tnv = moment().toISOString();\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet lastUpdatedStart = ssDateByOrgHlp.startOfDayRelativeTo(moment(nv).startOf('day'), $scope.org);\r\n\r\n\t\t\t\t\t$scope.filters = Object.assign({}, $scope.filters, sortFilterHlp.searchFilter(lastUpdatedStart, reportHlp.filtersKeys.EFFECTIVE_DATE));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (useFilter('lastUpdated')) {\r\n\t\t\t\t$scope.$watch('vm.filters.lastUpdatedStart', nv => {\r\n\t\t\t\t\tif (nv == null || nv === '') {\r\n\t\t\t\t\t\tdelete $scope.filters[`filter[${reportHlp.filtersKeys.LAST_UPDATED_START}]`];\r\n\t\t\t\t\t\tvm.filters.lastUpdatedEnd = '';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlet lastUpdatedStart = ssDateByOrgHlp.startOfDayRelativeTo(moment(nv), $scope.org);\r\n\t\t\t\t\t\t$scope.filters = Object.assign({}, $scope.filters, sortFilterHlp.searchFilter(lastUpdatedStart, reportHlp.filtersKeys.LAST_UPDATED_START));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvalidateRange();\r\n\t\t\t\t});\r\n\t\t\t\t$scope.$watch('vm.filters.lastUpdatedEnd', nv => {\r\n\t\t\t\t\tif (nv == null || nv === '') {\r\n\t\t\t\t\t\tdelete $scope.filters[`filter[${reportHlp.filtersKeys.LAST_UPDATED_END}]`];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlet lastUpdatedEnd = ssDateByOrgHlp.endOfDayRelativeTo(moment(nv), $scope.org);\r\n\t\t\t\t\t\t$scope.filters = Object.assign({}, $scope.filters, sortFilterHlp.searchFilter(lastUpdatedEnd, reportHlp.filtersKeys.LAST_UPDATED_END));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvalidateRange();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (config.sortOptions) {\r\n\t\t\t\t$scope.$watch('vm.filters.sortBy', nv => {\r\n\t\t\t\t\t// set the default sort if nothing came in\r\n\t\t\t\t\tif (nv == null) { setDefaultSort(); }\r\n\r\n\t\t\t\t\t// delete the existing sort\r\n\t\t\t\t\tdelete $scope.filters[`sort[${selectedSortKey}]`];\r\n\r\n\t\t\t\t\t$scope.filters = Object.assign({}, $scope.filters, sortFilterHlp.sortOrNull(vm.filters.sortBy));\r\n\r\n\t\t\t\t\t// set the selected key\r\n\t\t\t\t\tselectedSortKey = vm.filters.sortBy.field;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction exportFile(templateId) {\r\n\t\t\tlet exportFileName = 'report.csv';\r\n\t\t\tif (config.exportFileName == null) {\r\n\t\t\t\texportFileName = config.exportFileName;\r\n\t\t\t}\r\n\t\t\t// Export Credentials to CSV\r\n\t\t\tvar f = new FileReader();\r\n\t\t\tf.addEventListener('load', () => {\r\n\t\t\t\tf.removeEventListener('load', this, true);\r\n\t\t\t\tsaveLocalExport(f.result, exportFileName);\r\n\t\t\t}, false);\r\n\r\n\t\t\t// Get the CSV as post data and push it into a FileReader\r\n\t\t\tlet filters = Object.assign({}, {\r\n\t\t\t\toffset: 0,\r\n\t\t\t\tlimit: 9999999,\r\n\t\t\t\torganizationId: $scope.org.id\r\n\t\t\t}, $scope.filters);\r\n\r\n\t\t\tvm.isExporting = true;\r\n\t\t\treturn ssAsync(function*() {\r\n\t\t\t\tlet response = yield config.export(templateId, reportHlp.toQuerystring(filters));\r\n\r\n\t\t\t\tif (response && response.data) {\r\n\t\t\t\t\t// Create the dummy anchor and click it to start the download.\r\n\t\t\t\t\tvar a = document.createElement(\"a\");\r\n\t\t\t\t\ta.style.display = 'none';\r\n\t\t\t\t\ta.href = response.data.data.attributes.string;\r\n\r\n\t\t\t\t\tdocument.body.appendChild(a);\r\n\t\t\t\t\ta.click();\r\n\t\t\t\t\tdocument.body.removeChild(a);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole && console.error && console.error('Invalid response from employee credential endpoint. Unable to save to csv.');\r\n\t\t\t\t\tssToastHlp.error('Unable to save export', 'Error', false);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvm.isExporting = false;\r\n\t\t\t})();\r\n\t\t}\r\n\r\n\t\tfunction validateRange() {\r\n\t\t\tif (vm.filters.lastUpdatedStart == null || vm.filters.lastUpdatedStart === '') {\r\n\t\t\t\tvm.invalidLastUpdated = false;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (vm.filters.lastUpdatedEnd == null || vm.filters.lastUpdatedEnd === '') {\r\n\t\t\t\tvm.invalidLastUpdated = false;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (vm.filters.lastUpdatedStart > vm.filters.lastUpdatedEnd) {\r\n\t\t\t\tvm.invalidLastUpdated = true;\r\n\t\t\t} else {\r\n\t\t\t\tvm.invalidLastUpdated = false;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// #-- END Component (cmp-report-filter-bar) --# //\r\n// #-------------------------------------------# //\r\n\r\nangular.module('ec-employee-components').directive('cmpReportFilterBar', () => new ReportFilterBar(props, 'report-filter-bar'));\r\n","export class Component {\r\n\tconstructor(props, componentName, config = {}) {\r\n\t\tthis.restrict = 'E';\r\n\t\tthis.replace = true;\r\n\t\tthis.scope = props;\r\n\t\tthis.templateUrl = `components/cmp-${componentName}/${componentName}.html`;\r\n\r\n\t\tObject.assign(this, config);\r\n\t}\r\n}\r\n","export class Segment {\r\n\tconstructor(segmentName) {\r\n\t\tthis.restrict = 'E';\r\n\t\tthis.scope = true;\r\n\t\tthis.replace = true;\r\n\t\tthis.templateUrl = (elem, attrs) => {\r\n\t\t\treturn `routes${attrs.folder}/segment-${segmentName}/${segmentName}.html`;\r\n\t\t};\r\n\t}\r\n}\r\n\r\nfunction properToDashCase(txt) {\r\n\treturn txt\r\n\t\t.replace(/([A-Z])/g, '-$1')\r\n\t\t.substr(1)\r\n\t\t.toLowerCase();\r\n}\r\n","export class State {\r\n\tconstructor(stateConfig, routeVm) {\r\n\t\tObject.assign(this, stateConfig);\r\n\t\tthis.resolve = this.resolve || {};\r\n\t\tthis.resolve.routeVm = () => {\r\n\t\t\treturn routeVm;\r\n\t\t};\r\n\t\t/*@ngInject*/\r\n\t\tthis.controller = ($scope, $window, routeVm) => {\r\n\t\t\t$scope.routeVm = routeVm;\r\n\t\t};\r\n\t}\r\n}\r\n","/*@ngInject*/\r\nfunction configLoader(ssAppConfigSvc) {\r\n    ssAppConfigSvc.load('employee-center');\r\n}\r\n\r\nangular.module('ec-employee').run(configLoader);\r\n","/*@ngInject*/\r\nfunction routerConfig($locationProvider) {\r\n    $locationProvider.html5Mode(true);\r\n}\r\n\r\nangular.module('ec-employee').config(routerConfig);\r\n","function credentialFactoryHlp() {\r\n\tfunction Credential() {\r\n\t\tthis._code = 100;\r\n\t\tthis._endorsements = [];\r\n\t\tthis._externalId = null;\r\n\t\tthis._from = new Date();\r\n\t\tthis._credentialId = '';\r\n\t\tthis._to = null;\r\n\t\tthis.expired = false;\r\n\t\tthis.id = null;\r\n\t\tthis.$isDirty = function() {\r\n\t\t\treturn !(this._code === 100 &&\r\n\t\t\t\tthis._endorsements.length === 0 &&\r\n\t\t\t\tthis._externalId == null &&\r\n\t\t\t\tthis._credentialId.length === 0 &&\r\n\t\t\t\tthis._to == null);\r\n\t\t};\r\n\t}\r\n\r\n\tvar factory = {};\r\n\r\n\tfactory.create = function() {\r\n\t\treturn angular.extend({}, new Credential());\r\n\t};\r\n\r\n\tfactory.createDummy = function() {\r\n\t\tvar c = factory.create();\r\n\t\tc.isNew = true;\r\n\t\tc.name = null;\r\n\t\tc.state = null;\r\n\t\tc.filteredQualifications = [];\r\n\t\treturn c;\r\n\t};\r\n\r\n\treturn factory;\r\n}\r\nangular.module('ec-employee-helpers').factory('credentialFactoryHlp', credentialFactoryHlp);\r\n","const _hlp = {\r\n// #----------------------------------------# //\r\n// #---- Helper (employeeAssignmentHlp) ----# //\r\n\r\n\t// demo function, please remove\r\n\tjobTypeDetailFields,\r\n\tgetPayRateFrequencyString\r\n\r\n// #-- END Helper (employeeAssignmentHlp) --# //\r\n// #----------------------------------------# //\r\n};\r\n\r\nfunction getPayRateFrequencyString(payRateFrequency, payRateOptions){\r\n\tif(payRateFrequency == null) { return 'N/A'; }\r\n\treturn payRateOptions.find(x => x.value === payRateFrequency).name;\r\n}\r\n\r\nfunction jobTypeDetailFields(){\r\n\treturn [\r\n\t\t[{\r\n\t\t\tprop: '_fTE',\r\n\t\t\tdisplayText: 'FTE'\r\n\t\t},{\r\n\t\t\tprop: '_hoursPerDay',\r\n\t\t\tdisplayText: 'Hours/Day'\r\n\t\t},{\r\n\t\t\tprop: '_workDaysPerYear',\r\n\t\t\tdisplayText: 'Work Days/Year'\r\n\t\t}],[{\r\n\t\t\tprop: '_sickDaysPerSchoolYear',\r\n\t\t\tdisplayText: 'Sick Days/Year'\r\n\t\t},{\r\n\t\t\tprop: '_personalDaysPerSchoolYear',\r\n\t\t\tdisplayText: 'Personal Days/Year'\r\n\t\t},{\r\n\t\t\tprop: '_vacationDaysPerSchoolYear',\r\n\t\t\tdisplayText: 'Vacation Days/Year'\r\n\t\t}]\r\n\t];\r\n}\r\n\r\n\r\nfunction employeeAssignmentHlp() { return _hlp; }\r\nangular.module('ec-employee-helpers').factory('employeeAssignmentHlp', employeeAssignmentHlp);\r\n","// #------------------------------------------# //\r\n// #---- Helper (employeeModelChangerHlp) ----# //\r\n/*@ngInject*/\r\nfunction employeeModelChangerHlp(ssEmployeeModelHlp) {\r\n\treturn ssEmployeeModelHlp;\r\n}\r\n// #-- END Helper (employeeModelChangerHlp) --# //\r\n// #------------------------------------------# //\r\n\r\nangular.module('ec-employee-helpers').factory('employeeModelChangerHlp', employeeModelChangerHlp);\r\n","function endorsementFactoryHlp() {\r\n\tvar baseEndorsement = {\r\n\t\t_code: 200,\r\n\t\t_externalId: null,\r\n\t\t_from: new Date(),\r\n\t\t_endorsementId: '',\r\n\t\t_to: null\r\n\t};\r\n\r\n\tvar factory = {};\r\n\r\n\tfactory.create = function () {\r\n\t\treturn angular.extend({}, baseEndorsement);\r\n\t};\r\n\r\n\treturn factory;\r\n}\r\n\r\nangular.module('ec-employee-helpers').factory('endorsementFactoryHlp', endorsementFactoryHlp);\r\n","// #------------------------------# //\r\n// #---- Helper (filenameHlp) ----# //\r\n\r\n/*@ngInject*/\r\nfunction filenameHlp(ssFilenameHlp) {\r\n\treturn ssFilenameHlp;\r\n}\r\n\r\n// #-- END Helper (filenameHlp) --# //\r\n// #------------------------------# //\r\n\r\nangular.module('ec-employee-helpers').factory('filenameHlp', filenameHlp);\r\n","// #----------------------------# //\r\n// #---- Helper (reportHlp) ----# //\r\n\r\nlet _hlp = null;\r\n\r\n/*@ngInject*/\r\nfunction reportHlp(moment, ssStringHlp, enumEmployeeStatus) {\r\n\t// if the object has been created already return it\r\n\tif (_hlp != null) { return _hlp; }\r\n\r\n\tconst filtersKeys = {\r\n\t\tADMIN_VERIFIED: 'isAdminVerified',\r\n\t\tCRED_TYPES: 'credentialType|IssuedReasons',\r\n\t\tCREDENTIAL_IDS: 'credentialIds',\r\n\t\tDEPARTMENT: 'department',\r\n\t\tEFFECTIVE_DATE: 'asOfTimeUtc',\r\n\t\tEMPLOYMENT_GROUP: 'employmentGroup',\r\n\t\tEXPIRES_AFTER: 'expiresAfter',\r\n\t\tEXPIRES_BEFORE: 'expiresBefore',\r\n\t\tFULL_NAME: 'fullname',\r\n\t\tJOB_TYPE: 'jobType',\r\n\t\tLAST_UPDATED_START: 'lastUpdatedStart',\r\n\t\tLAST_UPDATED_END: 'lastUpdatedEnd',\r\n\t\tLOCATION: 'location',\r\n\t\tORGANIZATION_ID: 'organizationId',\r\n\t\tSTATUS: 'status',\r\n\t\tSTATUS_REASON: 'statusReason',\r\n\t};\r\n\r\n\tconst sortKeys = {\r\n\t\tASSIGNMENT_START_DATE: 'assignmentStartDateUtc',\r\n\t\tEMP_STATUS: 'employeeStatus',\r\n\t\tEMP_LAST_UPDATED: 'lastUpdatedUtc',\r\n\t\tEXPIRATION_DAY: 'expirationDay',\r\n\t\tHIRE_DATE: 'hireDate',\r\n\t\tJOB_TYPE: 'jobTypeName',\r\n\t\tLAST_NAME: 'lastname',\r\n\t\tPOSITION_NAME: 'positionName',\r\n\t\tLOCATION_NAME: 'locationName',\r\n\t};\r\n\r\n\tconst statusOptions = enumEmployeeStatus.getEnums().map(o => {\r\n\t\treturn {\r\n\t\t\t_name: ssStringHlp.toProperCase(o.name.toLowerCase()),\r\n\t\t\tid: o.value\r\n\t\t};\r\n\t});\r\n\r\n\tconst adminVerifiedOptions = [{\r\n\t\tname: 'All',\r\n\t\tvalue: null\r\n\t}, {\r\n\t\tname: 'Verified',\r\n\t\tvalue: true\r\n\t}, {\r\n\t\tname: 'Not Verified',\r\n\t\tvalue: false\r\n\t}];\r\n\r\n\t// create the object and return it immediately\r\n\t_hlp = {\r\n\t\tadminVerifiedOptions,\r\n\t\tfiltersKeys,\r\n\t\tgetDateString,\r\n\t\tgetSelectedFromUrl,\r\n\t\tgroupByEmployee,\r\n\t\tsetUrl,\r\n\t\tsortKeys,\r\n\t\tstatusOptions,\r\n\t\ttoQuerystring,\r\n\t};\r\n\treturn _hlp;\r\n\r\n\t/**\r\n\t * @param {Array} results\r\n\t */\r\n\tfunction groupByEmployee(results) {\r\n\t\tconst map = {};\r\n\t\tresults.forEach(item => {\r\n\t\t\tconst emp = item._employee;\r\n\t\t\tconst key = `${emp.lastName},${emp.firstName},${emp.id}`;\r\n\t\t\tconst collection = map[key];\r\n\t\t\tif (!collection) {\r\n\t\t\t\tmap[key] = [item];\r\n\t\t\t} else {\r\n\t\t\t\tcollection.push(item);\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn map;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the url based on the filter array\r\n\t */\r\n\tfunction setUrl(location, filter) {\r\n\t\t// clear keys that are not filters\r\n\t\tlet keys = Object.keys(location.search()).filter(key => !key.startsWith('filter'));\r\n\t\tkeys.forEach(key => location.search(key, null));\r\n\r\n\t\tlet skips = [`filter[${filtersKeys.ORGANIZATION_ID}]`,\r\n\t\t\t`filter[${filtersKeys.CREDENTIAL_IDS}]`,\r\n\t\t\t`filter[${filtersKeys.CRED_TYPES}]`\r\n\t\t];\r\n\t\t// sets the querystring params\r\n\t\tObject.keys(filter).forEach(key => {\r\n\t\t\t// skip non filters and sorts and organizationId\r\n\t\t\tif ((!key.startsWith('filter') && !key.startsWith('sort')) || skips.includes(key)) { return; }\r\n\t\t\tlocation.search(key, filter[key]);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param {*} params\r\n\t * @param {*} data\r\n\t * @param {*} data.sortOptions\r\n\t * @param {*} data.departments\r\n\t * @param {*} data.jobTypes\r\n\t * @param {*} data.locations\r\n\t * @param {*} data.empGroups\r\n\t * @param {*} data.statusReasons\r\n\t */\r\n\tfunction getSelectedFromUrl(params, data) {\r\n\t\tlet result = {};\r\n\r\n\t\tresult.sortBy = getSelectedSortFromUrl(params, data.sortOptions);\r\n\r\n\t\tlet f = `filter[${filtersKeys.STATUS}]`;\r\n\t\tif (params[f]) {\r\n\t\t\tlet val = params[f].split(',');\r\n\t\t\tresult.statuses = statusOptions.filter(s => val.includes(`${s.id}`));\r\n\t\t}\r\n\r\n\t\tf = `filter[${filtersKeys.STATUS_REASON}]`;\r\n\t\tif (params[f]) {\r\n\t\t\tlet val = params[f].split(',');\r\n\t\t\tresult.statusReasons = data.statusReasons.filter(s => val.includes(`${s.id}`));\r\n\t\t}\r\n\r\n\t\tf = `filter[${filtersKeys.JOB_TYPE}]`;\r\n\t\tif (params[f]) {\r\n\t\t\tlet val = params[f].split(',');\r\n\t\t\tresult.jobTypes = data.jobTypes.filter(s => val.includes(`${s.id}`));\r\n\t\t}\r\n\r\n\t\tf = `filter[${filtersKeys.DEPARTMENT}]`;\r\n\t\tif (params[f]) {\r\n\t\t\tlet val = params[f].split(',');\r\n\t\t\tresult.departments = data.departments.filter(s => val.includes(`${s.id}`));\r\n\t\t}\r\n\r\n\t\tf = `filter[${filtersKeys.LOCATION}]`;\r\n\t\tif (params[f]) {\r\n\t\t\tlet val = params[f].split(',');\r\n\t\t\tresult.locations = data.locations.filter(s => val.includes(`${s.id}`));\r\n\t\t}\r\n\r\n\t\tf = `filter[${filtersKeys.EMPLOYMENT_GROUP}]`;\r\n\t\tif (params[f]) {\r\n\t\t\tlet val = params[f].split(',');\r\n\t\t\tresult.empGroups = data.empGroups.filter(s => val.includes(`${s.id}`));\r\n\t\t}\r\n\r\n\t\tf = `filter[${filtersKeys.ADMIN_VERIFIED}]`;\r\n\t\tif (params[f] != null) {\r\n\t\t\tresult.adminVerified = params[f] === 'true' || params[f] === true;\r\n\t\t}\r\n\r\n\t\tf = `filter[${filtersKeys.FULL_NAME}]`;\r\n\t\tif (params[f]) {\r\n\t\t\tresult.search = params[f];\r\n\t\t}\r\n\r\n\t\tf = `filter[${filtersKeys.EXPIRES_AFTER}]`;\r\n\t\tif (params[f]) {\r\n\t\t\tresult.expiresAfter = moment(params[f]);\r\n\t\t}\r\n\r\n\t\tf = `filter[${filtersKeys.EXPIRES_BEFORE}]`;\r\n\t\tif (params[f]) {\r\n\t\t\tresult.expiresBefore = moment(params[f]);\r\n\t\t}\r\n\r\n\t\tf = `filter[${filtersKeys.EFFECTIVE_DATE}]`;\r\n\r\n\t\tif (params[f]) {\r\n\t\t\tif (params[f] === 'today') {\r\n\t\t\t\tresult.effectiveDate = moment();\r\n\t\t\t} else {\r\n\t\t\t\tresult.effectiveDate = moment(params[f]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tf = `filter[${filtersKeys.LAST_UPDATED_START}]`;\r\n\t\tif (params[f]) {\r\n\t\t\tresult.lastUpdatedStart = moment(params[f]);\r\n\t\t}\r\n\r\n\t\tf = `filter[${filtersKeys.LAST_UPDATED_END}]`;\r\n\t\tif (params[f]) {\r\n\t\t\tresult.lastUpdatedEnd = moment(params[f]);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tfunction getSelectedSortFromUrl(params, sortOptions) {\r\n\t\tif (sortOptions == null || !sortOptions.length) { return null; }\r\n\r\n\t\tfor (let i = 0; i < Object.keys(sortKeys).length; i++) {\r\n\t\t\tconst key = Object.keys(sortKeys)[i];\r\n\r\n\t\t\tlet sort = findSort(params, sortOptions, sortKeys[key]);\r\n\t\t\tif (sort == null) { continue; }\r\n\t\t\treturn sort;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t\t/*\r\n\t\tLooks like:\r\n\t\t\tname: '',\r\n\t\t\tariaLabel: '',\r\n\t\t\tvalue: {\r\n\t\t\t\tfield: sortKeys.SOMETHING,\r\n\t\t\t\tdir: 'asc' // asc|desc\r\n\t\t\t},\r\n\t\t*/\r\n\t\tfunction findSort(params, sortOptions, key) {\r\n\t\t\t// do we have lastname sort?\r\n\t\t\tif (params[`sort[${key}]`]) {\r\n\t\t\t\tlet val = params[`sort[${key}]`];\r\n\t\t\t\treturn sortOptions.find(x => x.value.field === key && x.value.dir === val).value;\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Used in export\r\n\t * @param {*} filter\r\n\t */\r\n\tfunction toQuerystring(filter) {\r\n\t\tlet ret = [];\r\n\t\tfor (var key in filter) {\r\n\t\t\tif (filter.hasOwnProperty(key)) {\r\n\t\t\t\tif (typeof {} === typeof filter[key]) {\r\n\t\t\t\t\tret.push(`${encodeURIComponent(key)}=${JSON.stringify(filter[key])}`);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tret.push(`${encodeURIComponent(key)}=${filter[key]}`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn ret.join('&');\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tfunction getDateString(start = '', end = '') {\r\n\t\tif (start === '' && end === '') { return ''; }\r\n\t\tlet foreverPast = start.endsWith('0001');\r\n\t\tlet foreverFuture = end.endsWith('9999');\r\n\r\n\t\tif (foreverPast && foreverFuture) { return 'Current'; }\r\n\r\n\t\tlet res = '';\r\n\r\n\t\tif (foreverPast) {\r\n\t\t\tres = 'Current';\r\n\t\t} else {\r\n\t\t\tres = start.replace(/-/gi,'/');\r\n\t\t}\r\n\r\n\t\tif (res.length && end.length) { res += ' - '; }\r\n\r\n\t\tif (foreverFuture) {\r\n\t\t\tres += 'Current';\r\n\t\t} else {\r\n\t\t\tres += end.replace(/-/gi, '/');\r\n\t\t}\r\n\r\n\t\treturn res;\r\n\t}\r\n}\r\n// #-- END Helper (reportHlp) --# //\r\n// #----------------------------# //\r\nangular.module('ec-employee-helpers').factory('reportHlp', reportHlp);\r\n","// #---------------------------# //\r\n// #---- Helper (sleepHlp) ----# //\r\n\r\n/*@ngInject*/\r\nfunction sleepHlp(ssSleepHlp) {\r\n\treturn ssSleepHlp;\r\n}\r\n\r\n// #-- END Helper (sleepHlp) --# //\r\n// #---------------------------# //\r\n\r\nangular.module('ec-employee-helpers').factory('sleepHlp', sleepHlp);\r\n","const _hlp = {\r\n\t// #--------------------------------# //\r\n\t// #---- Helper (sortFilterHlp) ----# //\r\n\r\n\t/**\r\n\t *\r\n\t * @param {Date} date - a date object\r\n\t * @param {string} type - the filter parameter name that the server will use to build it's search\r\n \t * @returns {string?} returns the filter object for the specified date object / field type (OR NULL)\r\n\t */\r\n\tfilterDateOrNull(date, type) {\r\n\t\tif (date && date != '') {\r\n\t\t\tvar o = {};\r\n\r\n\t\t\to['filter[' + type + ']'] = date;\r\n\r\n\t\t\treturn o;\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * filterOrNull : pulls a super-multi-filter-list's options into a filter object\r\n\t * \t\t\t\t\t\t\t\tthat can be used by the data call\r\n\t * @param {array} filtersList - the list of options to go through\r\n\t * @param {string} type - the filter parameter name that the server will use to build it's search\r\n\t * @returns {object?} - the filter object representing the super-multi-filter-list's selected options (OR NULL)\r\n\t */\r\n\tfilterOrNull(filtersList, type) {\r\n\t\tif (filtersList.length > 0) {\r\n\t\t\tvar o = {};\r\n\r\n\t\t\to['filter[' + type + ']'] = filtersList.map((item) => {\r\n\t\t\t\treturn item.id;\r\n\t\t\t}).join(',');\r\n\r\n\t\t\treturn o;\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * sortOrNull - Sets the sort object for a filter request\r\n\t * @param {object} sort - object describing a sort field and direction\r\n\t * @returns {object} - the sort object for a filter request\r\n\t */\r\n\tsortOrNull(sort) {\r\n\t\tvar o = {};\r\n\t\to['sort[' + sort.field + ']'] = sort.dir;\r\n\t\treturn o;\r\n\t},\r\n\r\n\t/**\r\n\t *\r\n\t * @param {string} val - the value so search for\r\n\t * @param {string} type - the field name that the val is mapped to\r\n\t * @returns {object?} - the search object that will be sent to the filter request (OR NULL)\r\n\t */\r\n\tsearchFilter(val, type) {\r\n\t\tvar o = {};\r\n\r\n\t\tif (val != null) {\r\n\t\t\to['filter[' + type + ']'] = val;\r\n\t\t\treturn o;\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t},\r\n\t\r\n\t/**\r\n\t * filterOrNullForPost : pulls a super-multi-filter-list's options into a string for filtering\r\n\t * \t\t\t\t\t\t\t\tthat can be used by the data call\r\n\t * @param {array} filtersList - the list of options to go through\r\n\t * @returns {string} - Comma separated list of items to filter for.\r\n\t */\r\n\tfilterOrNullForPost(filtersList) {\r\n\t\tif (filtersList.length > 0) {\r\n\t\t\tvar o = []\r\n\r\n\t\t\tfiltersList.map((item) => {\r\n\t\t\t\to.push(item.id)\r\n\t\t\t})\r\n\r\n\t\t\treturn o.join(',');\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t},\r\n\r\n\t// #-- END Helper (sortFilterHlp) --# //\r\n\t// #--------------------------------# //\r\n};\r\n\r\nfunction sortFilterHlp() { return _hlp; }\r\nangular.module('ec-employee-helpers').factory('sortFilterHlp', sortFilterHlp);\r\n","import './components/cmp-form-field-date/form-field-date.js';\nimport './components/cmp-form-field/form-field.js';\nimport './components/cmp-phone-group/phone-group.js';\nimport './components/cmp-phone-item/phone-item.js';\nimport './components/cmp-report-export-settings/report-export-settings.js';\nimport './components/cmp-report-filter-bar/report-filter-bar.js';\nimport './helpers/credentialFactoryHlp/credential-factory.js';\nimport './helpers/employeeAssignmentHlp/employee-assignment.js';\nimport './helpers/employeeModelChangerHlp/employee-model-changer.js';\nimport './helpers/endorsementFactoryHlp/endorsement-factory.js';\nimport './helpers/filenameHlp/filename.js';\nimport './helpers/reportHlp/report.js';\nimport './helpers/sleepHlp/sleep.js';\nimport './helpers/sortFilterHlp/sort-filter.js';\nimport './apis/empReportsApi.js';\nimport './apis/exportTemplateApi.js';\nimport './routes/employee-record/credentials/credentials.state.js';\nimport './routes/employee-record/credentials/segment-credentials-content/credentials-content.js';\nimport './routes/employee-record/credentials/segment-credentials-content/credentials-content.logic.js';\nimport './routes/employee-record/emergency/emergency.state.js';\nimport './routes/employee-record/emergency/segment-emergency-content/emergency-content.js';\nimport './routes/employee-record/emergency/segment-emergency-content/emergency-content.logic.js';\nimport './routes/employee-record/employee-record.state.js';\nimport './routes/employee-record/employment/employment.state.js';\nimport './routes/employee-record/employment/segment-employment-content/employment-content.js';\nimport './routes/employee-record/employment/segment-employment-content/employment-content.logic.js';\nimport './routes/employee-record/medical/medical.state.js';\nimport './routes/employee-record/medical/segment-medical-content/medical-content.js';\nimport './routes/employee-record/medical/segment-medical-content/medical-content.logic.js';\nimport './routes/employee-record/personal/personal.state.js';\nimport './routes/employee-record/personal/segment-personal-content/personal-content.js';\nimport './routes/employee-record/personal/segment-personal-content/personal-content.logic.js';\nimport './routes/employee-record/personnel/personnel.state.js';\nimport './routes/employee-record/personnel/segment-personnel-content/personnel-content.js';\nimport './routes/employee-record/personnel/segment-personnel-content/personnel-content.logic.js';\nimport './routes/employee-record/segment-content/content.js';\nimport './routes/employee-record/segment-content/content.logic.js';\nimport './routes/employee-record/segment-header/header.js';\nimport './routes/employee-record/segment-header/header.logic.js';\nimport './routes/employee-record/segment-sidebar/sidebar.js';\nimport './routes/employee-record/segment-sidebar/sidebar.logic.js';\nimport './routes/index/index.state.js';\nimport './routes/index/segment-filter/filter.js';\nimport './routes/index/segment-filter/filter.logic.js';\nimport './routes/index/segment-results/results.js';\nimport './routes/index/segment-results/results.logic.js';\nimport './routes/my-profile/my-profile.state.js';\nimport './routes/my-profile/segment-header/header.js';\nimport './routes/my-profile/segment-header/header.logic.js';\nimport './routes/reports/assignments/assignments.state.js';\nimport './routes/reports/assignments/report/report.state.js';\nimport './routes/reports/assignments/report/segment-content/content.js';\nimport './routes/reports/assignments/report/segment-content/content.logic.js';\nimport './routes/reports/assignments/segment-content/content.js';\nimport './routes/reports/assignments/segment-content/content.logic.js';\nimport './routes/reports/assignments/settings/segment-content/content.js';\nimport './routes/reports/assignments/settings/segment-content/content.logic.js';\nimport './routes/reports/assignments/settings/settings.state.js';\nimport './routes/reports/credentials/credentials.state.js';\nimport './routes/reports/credentials/segment-content/content.js';\nimport './routes/reports/credentials/segment-content/content.logic.js';\nimport './routes/reports/demographic/demographic.state.js';\nimport './routes/reports/demographic/report/report.state.js';\nimport './routes/reports/demographic/report/segment-content/content.js';\nimport './routes/reports/demographic/report/segment-content/content.logic.js';\nimport './routes/reports/demographic/segment-content/content.js';\nimport './routes/reports/demographic/segment-content/content.logic.js';\nimport './routes/reports/demographic/settings/segment-content/content.js';\nimport './routes/reports/demographic/settings/segment-content/content.logic.js';\nimport './routes/reports/demographic/settings/settings.state.js';\nimport './routes/reports/reports.state.js';\nimport './routes/reports/segment-content/content.js';\nimport './routes/reports/segment-content/content.logic.js';\nimport './config/load-config.js';\nimport './config/router.js';\n","angular.module('ec-employee', [\r\n\t'super-suit',\r\n\t'dndLists',\r\n\t'ec-employee-apis',\r\n\t'ec-employee-components',\r\n\t'ec-employee-segments',\r\n\t'ec-employee-segment-logic',\r\n\t'ec-employee-filters',\r\n\t'ec-employee-templates',\r\n\t'ec-employee-helpers',\r\n\t'ec-employee-components',\r\n\t'ec-employee-decorators',\r\n\t'ec-employee-services'\r\n]);\r\n\r\nangular.module('ec-employee-apis', []);\r\nangular.module('ec-employee-components', []);\r\nangular.module('ec-employee-segments', []);\r\nangular.module('ec-employee-segment-logic', []);\r\nangular.module('ec-employee-helpers', []);\r\nangular.module('ec-employee-components', []);\r\nangular.module('ec-employee-decorators', []);\r\nangular.module('ec-employee-services', []);\r\nangular.module('ec-employee-filters', []);\r\n","!function(e){try{e=angular.module(\"ec-employee-templates\")}catch(t){e=angular.module(\"ec-employee-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-form-field/form-field.html\",'<div class=\"cmp-form-field ss-form-field\"> <label class=\"main-label\" ng-class=\"{\\'required\\': required}\" ng-bind=\"label\"></label> <div ng-if=\"value != null\" ng-bind=\"value\"></div> <div ng-if=\"value == null\" class=\"empty\"><ng-transclude></ng-transclude></div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-employee-templates\")}catch(t){e=angular.module(\"ec-employee-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-form-field-date/form-field-date.html\",'<div class=\"ss-form-field\"> <label class=\"main-label\" ng-class=\"{\\'required\\': required}\" ng-bind=\"label\"></label> <div ng-if=\"model\" ng-bind=\"model | date:vm.format\"></div> <div ng-if=\"!model\"><ng-transclude></ng-transclude></div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-employee-templates\")}catch(t){e=angular.module(\"ec-employee-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-phone-group/phone-group.html\",'<div class=\"cmp-phone-group\"> <div> <h3>Phones</h3> <super-button smp ng-if=\"editMode\" label=\"Add New Phone\" ng-click=\"go.add()\" ss-icon=\"plus-circle\"></super-button> </div> <super-grid ss-pending=\"vm.loading\"> <grid-header> <super-grid-column>Usage Type</super-grid-column> <super-grid-column width=\"35%\">Phone Number</super-grid-column> <super-grid-column width=\"80px\">Extension</super-grid-column> <super-grid-column width=\"80px\">Primary</super-grid-column> <super-grid-column>Phone Type</super-grid-column> <super-grid-column width=\"80px\" ng-if=\"editMode\">Actions</super-grid-column> </grid-header> <grid-rows> <super-grid-row ng-repeat=\"phone in emp._phoneNumbers\"> <cmp-phone-item phone=\"phone\" on-remove=\"go.onRemove($index)\" on-check=\"go.onCheck($index)\" edit-mode=\"editMode\"></cmp-phone-item> </super-grid-row> <super-grid-row ng-if=\"!emp._phoneNumbers.length\"> <super-grid-cell> <super-input-text model=\"\\'No phones were found.\\'\" edit-mode=\"false\"></super-input-text> </super-grid-cell> </super-grid-row> </grid-rows> </super-grid> </div> ')}])}(),function(e){try{e=angular.module(\"ec-employee-templates\")}catch(t){e=angular.module(\"ec-employee-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-phone-item/phone-item.html\",'<div class=\"cmp-phone-item\"> <div ng-if=\"!phone.editable\"> <super-grid-cell>{{phone._usageType | enumByValue: \\'usageType\\'}}</super-grid-cell> <super-grid-cell>{{phone.formatted}}</super-grid-cell> <super-grid-cell>{{phone._extension}}</super-grid-cell> <super-grid-cell><span ng-if=\"phone._isPrimary\" ss-icon-before=\"check\"></span></super-grid-cell> <super-grid-cell>{{phone._phoneType | enumByValue: \\'phoneTypes\\'}}</super-grid-cell> <super-grid-cell ng-if=\"editMode\"><button type=\"button\" class=\"edit\" ng-click=\"go.edit()\" data-cy=\"edit\">Edit</button></super-grid-cell> </div> <div ng-if=\"phone.editable\"> <super-grid-cell> <super-select-list model=\"phone._usageType\" enum-type=\"usageType\" ss-validate=\"validator.required(phone._usageType, \\'Usage Type\\')\"> <super-select-list-item ng-repeat=\"option in vm.options.usageType\" value=\"option.value\" label=\"option.name\"></super-select-list-item> </super-select-list> </super-grid-cell> <super-grid-cell> <super-input-text data-cy=\"edit-number\" placeholder=\"Phone Number\" model=\"phone._number\" ss-validate=\"validator.phoneNumber(phone._number, \\'Phone Number\\')\"></super-input-text> </super-grid-cell> <super-grid-cell> <super-input-text data-cy=\"edit-ext\" placeholder=\"Extension\" model=\"phone._extension\"></super-input-text> </super-grid-cell> <super-grid-cell> <super-input-checkbox data-cy=\"edit-primary\" placeholder=\"Primary\" model=\"phone._isPrimary\"></super-input-checkbox> </super-grid-cell> <super-grid-cell> <super-select-list model=\"phone._phoneType\" enum-type=\"phoneTypes\"> <super-select-list-item ng-repeat=\"option in vm.options.phoneTypes\" value=\"option.value\" label=\"option.name\"></super-select-list-item> </super-select-list> </super-grid-cell> <super-grid-cell class=\"actions\"> <button type=\"button\" class=\"cancel\" ss-icon=\"times\" title=\"Cancel\" ng-click=\"go.cancel()\" data-cy=\"cancel\"></button> <button type=\"button\" class=\"delete\" ss-icon=\"trash-o\" title=\"Delete\" ng-click=\"go.remove()\" data-cy=\"delete\" ng-if=\"phone.id\"></button> </super-grid-cell> </div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-employee-templates\")}catch(t){e=angular.module(\"ec-employee-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-report-export-settings/report-export-settings.html\",'<div class=\"cmp-report-export-settings\" ng-class=\"{\\'edit-mode\\': vm.editMode, \\'is-new\\': vm.isNew}\" ss-pending=\"vm.loading\"> <div class=\"no-template\" data-test=\"no-template\" ng-if=\"vm.isNew && !vm.editMode\"> <div>You currently have no templates configured for export.</div> <div ng-if=\"!vm.canCreate\">You can <a href=\"{{vm.csSupportUrl}}\">contact support</a> to schedule nightly export.</div> <div ss-permitted=\"exportTemplates.create\">You can <a href=\"{{vm.csSupportUrl}}\">contact support</a> to schedule nightly export or create a customized export template by clicking the button below.</div> <super-button pri ng-click=\"go.edit()\" label=\"Create New Template\" ss-permitted=\"exportTemplates.create\" data-test=\"create-new-template\"></super-button> </div> <form ss-validate-form ng-submit=\"go.save()\" autocomplete=\"off\" ng-if=\"!vm.loading && ((vm.isNew && vm.editMode) || !vm.isNew)\"> <h2>Export Template Settings</h2> <div class=\"actions\" ss-permitted=\"exportTemplates.edit\"> <super-button label=\"Edit Template\" pri ng-click=\"go.edit()\" ng-if=\"!vm.editMode\" data-test=\"edit\"></super-button> <super-button label=\"Delete\" class=\"remove\" smp ss-icon=\"trash-o\" ng-click=\"go.remove()\" ng-if=\"vm.editMode && vm.template.id != null\" ng-disabled=\"vm.saving\" data-test=\"remove\" ss-permitted=\"exportTemplates.delete\"></super-button> <super-button label=\"Cancel\" ng-click=\"go.cancel()\" ng-if=\"vm.editMode\" ng-disabled=\"vm.saving\" data-test=\"cancel\"></super-button> <super-button label=\"Save\" class=\"save\" pri type=\"submit\" ng-if=\"vm.editMode\" ng-class=\"{\\'saving\\': vm.saving}\" ng-disabled=\"vm.saving\" ss-icon=\"spinner\" data-test=\"save\"></super-button> </div> <div class=\"editing-template\" ng-if=\"vm.template.id != null && vm.editMode\">You are modifying the export template. This will also affect your nightly export runs.</div> <div class=\"gd-row\"> <div class=\"gd-35p\"> <super-input-text label=\"Template Name\" label-weight=\"heavy\" model=\"vm.template.name\" edit-mode=\"vm.editMode\" data-test=\"name\" ss-validate=\"validator.name(vm.template.name, \\'Template Name\\')\" placeholder=\"Pick a name for your template\"> </super-input-text> </div> </div> <div> <super-select-list label=\"Column Separator\" label-weight=\"heavy\" model=\"vm.template.delimiter\" edit-mode=\"vm.editMode\" data-test=\"delimiter\"> <super-select-list-item ng-repeat=\"option in vm.options.delimiters\" value=\"option.value\" label=\"option.name\"></super-select-list-item> </super-select-list> </div> <fieldset class=\"export-settings\" aria-label=\"Select export setting\" data-test=\"export-settings\"> <label>Nightly Scheduled Export Settings</label> <div ng-if=\"!vm.editMode\" ng-bind=\"go.getSelectExportSetting(vm.template.exportSetting)\" data-test=\"export-settings-{{vm.template.exportSetting}}\"></div> <ul ng-if=\"vm.editMode\"> <li ng-repeat=\"option in vm.options.exportSettings\"> <super-input-radio name=\"export-setting\" label=\"{{option.name}}\" model=\"vm.template.exportSetting\" value=\"{{option.value}}\" edit-mode=\"vm.editMode\" data-test=\"export-settings-{{option.value}}\"></super-input-radio> </li> </ul> </fieldset> <div ss-validate=\"validator.selected()\" class=\"header-col-mapping\"> <label>Column Mapping</label> <super-popover>Please note that custom header names will apply to the export only and will not apply anywhere else.</super-popover> </div> <div class=\"gd-row search\"> <div class=\"gd-35p\"> <super-input-text model=\"vm.search\" placeholder=\"Search\"></super-input-text> </div> <div class=\"gd-65p column-headers\" ng-if=\"vm.editMode\"> <super-input-checkbox label=\"Include column headers\" model=\"vm.template.includeColumnHeaders\"></super-input-checkbox> </div> </div> <super-grid> <grid-header> <super-grid-column width=\"5%\"></super-grid-column> <super-grid-column width=\"40%\" no-left-separator=\"true\" class=\"select-all\"> <super-input-checkbox model=\"vm.selectAll\" edit-mode=\"vm.editMode\" ng-if=\"vm.editMode && go.getSelectedText() !== \\'some\\'\" ng-click=\"go.selectAll()\"></super-input-checkbox> <span ss-icon=\"minus-square\" ng-if=\"vm.editMode && go.getSelectedText() === \\'some\\'\" ng-click=\"go.selectAll()\"></span> System Fields </super-grid-column> <super-grid-column width=\"5%\" no-left-separator=\"true\"></super-grid-column> <super-grid-column width=\"40%\" no-left-separator=\"true\">Export As</super-grid-column> <super-grid-column width=\"10%\" no-left-separator=\"true\"></super-grid-column> </grid-header> <grid-rows dnd-list=\"vm.template.exportFields\" dnd-allowed-types=\"[\\'field\\']\" dnd-drop=\"go.dropField(event, index, item)\"> <super-grid-row ng-repeat=\"field in vm.template.exportFields | filter: vm.search\" ng-if=\"vm.editMode || field.visible\" ng-class=\"{\\'disabled\\': !field.visible}\"> <super-grid-cell><span ss-icon=\"ellipsis-v\" dnd-draggable=\"field\" dnd-type=\"\\'field\\'\" dnd-moved=\"go.movedField($index, field)\" dnd-effect-allowed=\"move\" ng-if=\"!vm.tempDisableDragAndDrop && vm.editMode\" ng-show=\"vm.search == null || vm.search.length === 0\"></span></super-grid-cell> <super-grid-cell> <super-input-checkbox ng-if=\"vm.editMode\" edit-mode=\"vm.editMode\" model=\"field.visible\" label=\"{{field.systemName}}\"></super-input-checkbox> <span ng-if=\"!vm.editMode\">{{field.systemName}}</span> </super-grid-cell> <super-grid-cell><span ss-icon=\"arrow-right\" ng-if=\"!vm.editMode\"></span></super-grid-cell> <super-grid-cell> <super-input-text ng-if=\"vm.editMode\" model=\"field.alias\" edit-mode=\"vm.editMode\" placeholder=\"{{field.systemName}}\" is-disabled=\"vm.editMode && !field.visible\" ss-validate=\"validator.alias(field.alias, \\'Export As\\')\" data-test=\"{{field.systemName}}-textbox\"></super-input-text> <super-input-text ng-if=\"!vm.editMode\" model=\"field.alias || field.systemName\" edit-mode=\"vm.editMode\" placeholder=\"{{field.systemName}}\"></super-input-text> </super-grid-cell> <super-grid-cell class=\"move-arrows\"> <super-button ng-if=\"vm.editMode && !$first\" smp ss-icon=\"arrow-up\" ng-click=\"go.moveUp(field, $index)\" aria-label=\"move {{field.alias || field.systemName}} up\"></super-button> <super-button ng-if=\"vm.editMode && !$last\" smp ss-icon=\"arrow-down\" ng-click=\"go.moveDown(field, $index)\" aria-label=\"move {{field.alias || field.systemName}} down\"></super-button> </super-grid-cell> </super-grid-row> </grid-rows> </super-grid> </form> </div> ')}])}(),function(e){try{e=angular.module(\"ec-employee-templates\")}catch(t){e=angular.module(\"ec-employee-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-report-filter-bar/report-filter-bar.html\",'<div class=\"cmp-report-filter-bar gd-row\"> <button ss-icon-after=\"times\" class=\"clear-filters\" ng-click=\"go.clear()\" ng-if=\"go.showClear()\">Clear All Filters</button> <div class=\"filters gd-row\"> <div class=\"effective-date\" ng-if=\"go.useFilter(\\'effectiveDate\\')\"> <super-input-datepicker edit-mode=\"true\" label=\"Effective Date\" model=\"vm.filters.effectiveDate\" label-weight=\"heavy\"></super-input-datepicker> </div> <div class=\"last-updated\" ng-if=\"go.useFilter(\\'lastUpdated\\')\" ng-class=\"{\\'ss-validate-failing\\': vm.invalidLastUpdated}\"> <super-input-datepicker edit-mode=\"true\" label=\"Last Updated\" placeholder=\"From\" model=\"vm.filters.lastUpdatedStart\" label-weight=\"heavy\"></super-input-datepicker> <span ng-if=\"vm.filters.lastUpdatedStart\">&ndash;&nbsp;<super-input-datepicker edit-mode=\"true\" placeholder=\"To\" model=\"vm.filters.lastUpdatedEnd\" label-weight=\"heavy\"></super-input-datepicker></span> <ul class=\"ss-validate-messages show-messages\" ng-if=\"vm.invalidLastUpdated\" aria-live=\"polite\"><li>Start Date cannot occur after End Date</li></ul> </div> </div> <div class=\"filters gd-row\"> <div class=\"job-types\" ng-if=\"vm.jobTypes.length\"> <super-multi-filter-list label=\"Job Type\" label-weight=\"heavy\" display=\"tags\" selected=\"vm.filters.jobTypes\"> <super-multi-filter-list-item ng-repeat=\"option in vm.jobTypes | orderBy:\\'_name\\'\" option=\"option\"></super-multi-filter-list-item> </super-multi-filter-list> </div> <div class=\"departments\" ng-if=\"vm.departments.length\"> <super-multi-filter-list label=\"Department\" label-weight=\"heavy\" display=\"tags\" selected=\"vm.filters.departments\"> <super-multi-filter-list-item ng-repeat=\"option in vm.departments | orderBy:\\'_name\\'\" option=\"option\"></super-multi-filter-list-item> </super-multi-filter-list> </div> <div class=\"locations\" ng-if=\"vm.locations.length\"> <super-multi-filter-list label=\"Location\" label-weight=\"heavy\" display=\"tags\" selected=\"vm.filters.locations\"> <super-multi-filter-list-item ng-repeat=\"option in vm.locations | orderBy:\\'_name\\'\" option=\"option\"></super-multi-filter-list-item> </super-multi-filter-list> </div> <div class=\"employment-groups\" ng-if=\"vm.empGroups.length\"> <super-multi-filter-list label=\"Employment Group\" label-weight=\"heavy\" display=\"tags\" selected=\"vm.filters.empGroups\"> <super-multi-filter-list-item ng-repeat=\"option in vm.empGroups | orderBy:\\'_name\\'\" option=\"option\"></super-multi-filter-list-item> </super-multi-filter-list> </div> <div class=\"cred-types\" ng-if=\"vm.credTypes.length || vm.loadingCreds\" ng-class=\"{\\'loading-creds\\': vm.loadingCreds}\" ss-icon-after=\"spinner\"> <super-multi-filter-list label=\"Credential Types\" label-weight=\"heavy\" display=\"tags\" selected=\"vm.filters.credTypes\" is-disabled=\"vm.loadingCreds\"> <super-multi-filter-list-group ng-repeat=\"type in vm.credTypes | orderBy: \\'_name\\'\" label=\"{{type._name}}\"> <super-multi-filter-list-item ng-repeat=\"subType in type.subTypes\" option=\"subType\"></super-multi-filter-list-item> </super-multi-filter-list-group> </super-multi-filter-list> </div> <div class=\"credentials\" ng-if=\"vm.credentials.length || vm.loadingCreds\" ng-class=\"{\\'loading-creds\\': vm.loadingCreds}\" ss-icon-after=\"spinner\"> <super-multi-filter-list label=\"Credential\" label-weight=\"heavy\" display=\"tags\" selected=\"vm.filters.credentials\" is-disabled=\"vm.loadingCreds\"> <super-multi-filter-list-item ng-repeat=\"option in vm.credentials | orderBy: \\'_name\\' track by $index\" option=\"option\"></super-multi-filter-list-item> </super-multi-filter-list> </div> <div class=\"status\" ng-if=\"go.useFilter(\\'empStatus\\')\"> <super-multi-filter-list label=\"Status\" label-weight=\"heavy\" display=\"tags\" selected=\"vm.filters.statuses\"> <super-multi-filter-list-item ng-repeat=\"option in vm.statuses | orderBy: \\'_name\\'\" option=\"option\"></super-multi-filter-list-item> </super-multi-filter-list> </div> <div class=\"status-reasons\" ng-if=\"vm.empStatusReasons.length\"> <super-multi-filter-list label=\"Status Reason\" label-weight=\"heavy\" display=\"tags\" selected=\"vm.filters.empStatusReasons\"> <super-multi-filter-list-item ng-repeat=\"option in vm.empStatusReasons | orderBy:\\'_name\\'\" option=\"option\"></super-multi-filter-list-item> </super-multi-filter-list> </div> <div class=\"verified\" ng-if=\"go.useFilter(\\'adminVerified\\')\"> <super-select-list label=\"Admin-Verified\" model=\"vm.filters.adminVerified\" label-weight=\"heavy\"> <super-select-list-item ng-repeat=\"option in vm.adminVerified\" value=\"option.value\" label=\"option.name\"></super-select-list-item> </super-select-list> </div> <div class=\"expiring\" ng-if=\"go.useFilter(\\'expiration\\')\"> <super-input-datepicker edit-mode=\"true\" label=\"Expires\" placeholder=\"After\" model=\"vm.filters.expiresAfter\" label-weight=\"heavy\"></super-input-datepicker> <super-input-datepicker edit-mode=\"true\" placeholder=\"Before\" model=\"vm.filters.expiresBefore\"></super-input-datepicker> </div> </div> <super-filter-bar search=\"vm.filters.search\" type-label=\"{{config.countLabel}}\" total-count=\"config.totalResults\" selected-count=\"0\" search-label=\"{{config.searchLabel}}\"> <actions ng-if=\"config.export != null\"> <super-button ng-if=\"vm.exportTemplates == null\" ng-click=\"go.export()\" label=\"Export\" is-disabled=\"vm.loading || vm.isExporting || config.totalResults < 1\" ss-pending=\"vm.isExporting\"></super-button> <super-button ng-if=\"vm.exportTemplates != null\" ss-icon-after=\"angle-down\" label=\"Export\" is-disabled=\"vm.loading || vm.isExporting || config.totalResults < 1\" ss-pending=\"vm.isExporting\"> <item ng-repeat=\"template in vm.exportTemplates\" ng-click=\"go.export(template.value)\" ng-bind=\"template.name\"></item> </super-button> </actions> <filters ng-if=\"config.sortOptions\"> <super-select-list type=\"filter\" label=\"Sort by\" aria-label=\"Change directory sort\" model=\"vm.filters.sortBy\"> <super-select-list-item ng-repeat=\"filter in config.sortOptions\" value=\"filter.value\" label=\"filter.name\" aria-label=\"{{filter.ariaLabel}}\"></super-select-list-item> </super-select-list> </filters> </super-filter-bar> </div> ')}])}(),function(e){try{e=angular.module(\"ec-employee-templates\")}catch(t){e=angular.module(\"ec-employee-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/employee-record/employee-record.html\",'<route folder=\"/employee-record\"> <div class=\"route-wrapper\" ss-pending=\"routeVm.refreshing\"> <segment name=\"header\"></segment> <segment name=\"sidebar\"></segment> <segment name=\"content\"></segment> </div> </route> ')}])}(),function(e){try{e=angular.module(\"ec-employee-templates\")}catch(t){e=angular.module(\"ec-employee-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/index/index.html\",'<route folder=\"/index\"> <div class=\"route-wrapper\"> <h1 ng-if=\"routeVm.isGlobalDirectory\">Employee Data Report</h1> <h1 ng-if=\"!routeVm.isGlobalDirectory\">Employee Directory</h1> <segment name=\"filter\"></segment> <segment name=\"results\"></segment> </div> </route> ')}])}(),function(e){try{e=angular.module(\"ec-employee-templates\")}catch(t){e=angular.module(\"ec-employee-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/my-profile/my-profile.html\",'<route folder=\"/my-profile\"> <div class=\"route-wrapper\"> <segment name=\"header\"></segment> </div> </route>')}])}(),function(e){try{e=angular.module(\"ec-employee-templates\")}catch(t){e=angular.module(\"ec-employee-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/reports/reports.html\",'<route folder=\"/reports\"> <div class=\"route-wrapper\"> <segment name=\"content\"></segment> </div> </route> ')}])}(),function(e){try{e=angular.module(\"ec-employee-templates\")}catch(t){e=angular.module(\"ec-employee-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/employee-record/credentials/credentials.html\",'<route folder=\"/employee-record/credentials\"> <segment name=\"credentials-content\"></segment> </route> ')}])}(),function(e){try{e=angular.module(\"ec-employee-templates\")}catch(t){e=angular.module(\"ec-employee-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/employee-record/emergency/emergency.html\",'<route folder=\"/employee-record/emergency\"> <segment name=\"emergency-content\"></segment> </route> ')}])}(),function(e){try{e=angular.module(\"ec-employee-templates\")}catch(t){e=angular.module(\"ec-employee-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/employee-record/employment/employment.html\",'<route folder=\"/employee-record/employment\"> <segment name=\"employment-content\"></segment> </route> ')}])}(),function(e){try{e=angular.module(\"ec-employee-templates\")}catch(t){e=angular.module(\"ec-employee-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/employee-record/medical/medical.html\",'<route folder=\"/employee-record/medical\"> <segment name=\"medical-content\"></segment> </route> ')}])}(),function(e){try{e=angular.module(\"ec-employee-templates\")}catch(t){e=angular.module(\"ec-employee-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/employee-record/personal/personal.html\",'<route folder=\"/employee-record/personal\"> <segment name=\"personal-content\"></segment> </route>')}])}(),function(e){try{e=angular.module(\"ec-employee-templates\")}catch(t){e=angular.module(\"ec-employee-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/employee-record/personnel/personnel.html\",'<route folder=\"/employee-record/personnel\"> <segment name=\"personnel-content\"></segment> </route> ')}])}(),function(e){try{e=angular.module(\"ec-employee-templates\")}catch(t){e=angular.module(\"ec-employee-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/employee-record/segment-content/content.html\",'<div class=\"segment-employee-record-content content-block\"> <super-tab-list> <super-tab-list-item label=\"personal\" state=\"base.employeeRecord.personal\" params=\"{action:\\'\\'}\" params-ignored-for-active=\"[\\'action\\']\" data-test=\"personal-tab\"></super-tab-list-item> <super-tab-list-item label=\"employment\" state=\"base.employeeRecord.employment\" params=\"{action:\\'\\'}\" params-ignored-for-active=\"[\\'action\\']\" ng-if=\"vm.canViewEmploymentTab\" data-test=\"employment-tab\"></super-tab-list-item> <super-tab-list-item label=\"credentials\" state=\"base.employeeRecord.credentials\" params=\"{action:\\'\\'}\" params-ignored-for-active=\"[\\'action\\']\" ng-if=\"vm.canViewCredentialTab\" data-test=\"credentials-tab\"></super-tab-list-item> <super-tab-list-item label=\"medical documents\" state=\"base.employeeRecord.medical\" params=\"{action:\\'\\'}\" params-ignored-for-active=\"[\\'action\\']\" ng-if=\"vm.canViewMedicalFiles\" data-test=\"medical-tab\"></super-tab-list-item> <super-tab-list-item label=\"personnel documents\" state=\"base.employeeRecord.personnel\" params=\"{action:\\'\\'}\" params-ignored-for-active=\"[\\'action\\']\" ng-if=\"vm.canViewPersonnelTab\" data-test=\"personnel-tab\"></super-tab-list-item> <super-tab-list-item label=\"emergency\" class=\"tab-emergency\" state=\"base.employeeRecord.emergency\" params=\"{action:\\'\\'}\" params-ignored-for-active=\"[\\'action\\']\" ng-if=\"vm.canViewEmergencyTab\" data-test=\"emergency-tab\"></super-tab-list-item> </super-tab-list> <div class=\"content-wrapper\" data-test=\"employee-tab-content\"> <ui-view></ui-view> </div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-employee-templates\")}catch(t){e=angular.module(\"ec-employee-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/employee-record/segment-header/header.html\",'<header class=\"segment-employee-record-header\"> <h1 class=\"emp-name\" ng-bind=\"vm.fullName\" data-test=\"full-name\"></h1> <div class=\"emp-actions-group\"> <super-button ng-if=\"vm.canDeleteEmployee && !vm.canManageEmployee\" label=\"Delete Employee\" ng-click=\"go.delete()\" data-test=\"delete-employee\"></super-button> <a ng-if=\"vm.canManageEmployee && !vm.canDeleteEmployee\" ng-href=\"/ec-useraccess/user/employee/{{routeVm.emp.id}}\" data-test=\"manage-app-access\">Manage Application Access</a> <super-button ng-if=\"vm.canManageEmployee && vm.canDeleteEmployee\" label=\"Manage User\" ss-icon-after=\"angle-down\" data-test=\"manage-user\"> <item ng-click=\"go.manageAccess()\" data-test=\"manage-app-access\">Manage Application Access</item> <item ng-click=\"go.delete()\" data-test=\"delete-employee\">Delete Employee</item> </super-button> </div> </header> ')}])}(),function(e){try{e=angular.module(\"ec-employee-templates\")}catch(t){e=angular.module(\"ec-employee-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/employee-record/segment-sidebar/sidebar.html\",'<div class=\"segment-employee-record-sidebar\"> <h4>At A Glance</h4> <hr class=\"divider\"> <dl ss-pending=\"vm.loading\" data-test=\"sidebar\"> <dt>Contact</dt> <dd ng-if=\"vm.emp.bestContactNumber.formattedFull.length > 0 && vm.permitted.phoneNumbers.view\" ss-icon-before=\"phone\"> <super-input-text data-test=\"phone-number\" model=\"vm.emp.bestContactNumber._number\" edit-mode=\"false\" mask=\"phone\" class=\"sidebar-phone\"></super-input-text> </dd> <dd class=\"email\" ng-if=\"vm.emp.bestContactEmail.length > 0 && vm.permitted.emails\"><a class=\"flat\" href=\"mailto:{{vm.emp.bestContactEmail}}\" ss-icon-before=\"envelope\" data-test=\"email\">Email {{vm.emp.bestContactEmail}}</a></dd> <dt ng-if=\"vm.permitted.statusHistory.view && vm.currentStatus\">Status</dt> <dd ng-if=\"vm.permitted.statusHistory.view && vm.currentStatus\" ng-bind=\"vm.currentStatus.name\" data-test=\"status\"></dd> <dt ng-if=\"vm.permitted.assignments.view\">Primary Assignment</dt> <dd ng-if=\"vm.permitted.assignments.view\" ng-bind=\"vm.emp.primaryAssignment.name\" data-test=\"assignment\"></dd> <dd ng-if=\"vm.permitted.positions.view\" ng-bind=\"vm.emp.primaryPosition.location._name\" data-test=\"location\"></dd> <dt ng-if=\"vm.permitted.supervisor.view && vm.emp.currentSupervisor\">Supervisor</dt> <dd ng-if=\"vm.permitted.supervisor.view && vm.emp.currentSupervisor\" ng-bind=\"vm.emp.currentSupervisor._firstName + \\' \\' + vm.emp.currentSupervisor._lastName\" data-test=\"supervisor\"></dd> <dt ng-if=\"vm.permitted.jobTypes.view\">Job Type</dt> <dd ng-if=\"vm.permitted.jobTypes.view\" ng-bind=\"vm.emp.primaryPosition.jobType._name\" data-test=\"job-type\"></dd> <dt ng-if=\"vm.permitted.hireDate.view\">Hire Date</dt> <dd ng-if=\"vm.permitted.hireDate.view\" ng-bind=\"vm.hireDateTxt\" data-test=\"hire-date\"></dd> </dl> </div> ')}])}(),function(e){try{e=angular.module(\"ec-employee-templates\")}catch(t){e=angular.module(\"ec-employee-templates\",[])}e.run([\"$templateCache\",function(e){\ne.put(\"routes/index/segment-filter/filter.html\",'<div class=\"segment-index-filter\"> <div class=\"effective-date-title\"> <label class=\"non-super-label\" for=\"effective-date\">as of:&nbsp; <super-input-datepicker input-id=\"effective-date\" title=\"Show the directory with details effective as of this date.\" class=\"effective-date-picker\" name=\"effective-date\" model=\"routeVm.effectiveDate\" data-test=\"as-of\"></super-input-datepicker> </label> </div> <div class=\"gd-row actions-group\"> <div class=\"gd-row\"> <div class=\"gd-100p\"> <button ss-icon-after=\"times\" class=\"clear-all-btn clear-filters\" ng-click=\"go.clear()\" ng-if=\"vm.showClear\" data-test=\"clear-filters\">Clear All Filters</button> <div class=\"add-employee-menu-group\" ss-permitted=\"employees.create\" ng-show=\"vm.canCreateEmployee\"> <super-button pri class=\"add-employee-btn\" ng-click=\"vm.formOpened=true;\" ss-menu=\"add-employee-menu\" label=\"Add Employee\" data-test=\"add-employee\"></super-button> <div class=\"add-employee-menu\" role=\"dialog\" aria-label=\"Add Employee\"> <form ng-submit=\"go.add()\" ss-validate-form ng-if=\"vm.formOpened\"> <div class=\"form-content\"> <super-input-text input-id=\"add-first-name\" model=\"vm.emp._firstName\" label=\"First Name\" name=\"first\" required=\"true\" ss-validate=\"validator.required(vm.emp._firstName, \\'First Name\\')\" data-test=\"add-first-name\"></super-input-text> <super-input-text model=\"vm.emp._lastName\" label=\"Last Name\" name=\"last\" required=\"true\" ss-validate=\"validator.required(vm.emp._lastName, \\'Last Name\\')\" data-test=\"add-last-name\"></super-input-text> <div> <ul class=\"gd-row record-list\"> <li class=\"gd-50p\"> <super-input-text input-id=\"add-work-email\" model=\"vm.emp._workEmail\" label=\"Work Email\" name=\"workEmail\" ss-validate=\"validator.email(vm.emp._workEmail, \\'Work email\\')\" data-test=\"add-work-email\"></super-input-text> </li> <li class=\"gd-50p\"> <super-input-text input-id=\"add-personal-email\" model=\"vm.emp._personalEmail\" label=\"Personal Email\" name=\"personalEmail\" ss-validate=\"validator.email(vm.emp._personalEmail, \\'Personal email\\')\" data-test=\"add-personal-email\"></super-input-text> </li> </ul> </div> <div class=\"validate-or\" ss-validate=\"go.validateOr(vm.emp._sSN, vm.emp._externalId)\"> <label for=\"ssn externalId\" class=\"required\">Include a Social Security # or External ID</label> <ul class=\"gd-row record-list\"> <li class=\"gd-45p\"> <super-input-text input-id=\"add-ssn\" model=\"vm.emp._sSN\" label=\"Social Security #\" name=\"ssn\" ss-validate=\"validator.ssn(vm.emp._sSN)\" data-test=\"add-ssn\"></super-input-text> </li> <li class=\"gd-10p\"> <div class=\"or\">or</div> </li> <li class=\"gd-45p\"> <super-input-text input-id=\"add-external-id\" model=\"vm.emp._externalId\" label=\"External ID\" ss-validate=\"go.validateExternalId()\" name=\"externalId\" data-test=\"add-external-id\"></super-input-text> </li> </ul> </div> <div> <div class=\"form-error\" ng-if=\"vm.errors\" ng-bind=\"vm.errors\"></div> <div class=\"form-footer\"> <super-button label=\"Cancel\" ng-click=\"go.close()\" class=\"close-button\" ng-disabled=\"vm.saving\" data-test=\"add-cancel\"></super-button> <super-button pri class=\"save-button\" ng-class=\"{\\'saving\\': vm.saving}\" ng-disabled=\"vm.saving || !(vm.emp._firstName.length && vm.emp._lastName.length)\" ss-icon=\"spinner\" type=\"submit\" label=\"Add Employee\" data-test=\"add-save\"></super-button> </div> </div> </div> </form> </div> </div> </div> </div> </div> <div class=\"gd-row filters\"> <div class=\"gd-15p select-filter-jobtype\" ng-if=\"vm.jobType.length\"> <super-multi-filter-list label=\"Job Type\" aria-controls=\"employee-count\" label-weight=\"heavy\" display=\"tags\" selected=\"routeVm.jobType\" is-disabled=\"vm.disableJobType\" data-test=\"filter-job-type\"> <super-multi-filter-list-item ng-repeat=\"jobType in vm.jobType | orderBy:\\'_name\\'\" option=\"jobType\"></super-multi-filter-list-item> </super-multi-filter-list> </div> <div class=\"gd-15p select-filter-department\" ng-if=\"vm.department.length\"> <super-multi-filter-list label=\"Department\" aria-controls=\"employee-count\" label-weight=\"heavy\" display=\"tags\" selected=\"routeVm.department\" data-test=\"filter-department\"> <super-multi-filter-list-item ng-repeat=\"department in vm.department | orderBy:\\'_name\\'\" option=\"department\"></super-multi-filter-list-item> </super-multi-filter-list> </div> <div class=\"gd-15p select-filter-location\" ng-if=\"vm.location.length\"> <super-multi-filter-list label=\"Location\" aria-controls=\"employee-count\" label-weight=\"heavy\" display=\"tags\" selected=\"routeVm.location\" data-test=\"filter-location\"> <super-multi-filter-list-item ng-repeat=\"location in vm.location | orderBy:\\'_name\\'\" option=\"location\"></super-multi-filter-list-item> </super-multi-filter-list> </div> <div class=\"gd-15p select-filter-employment-group\" ng-if=\"vm.showEmploymentGroups\"> <super-multi-filter-list label=\"Employment Group\" aria-controls=\"employee-count\" label-weight=\"heavy\" display=\"tags\" selected=\"routeVm.employmentGroup\" is-disabled=\"vm.disableEmploymentGroup\" data-test=\"filter-employment-group\"> <super-multi-filter-list-item ng-repeat=\"group in vm.employmentGroups | orderBy:\\'name\\'\" option=\"group\"></super-multi-filter-list-item> </super-multi-filter-list> </div> <div class=\"gd-25p select-filter-hiredate\"> <div class=\"gd-row hire-date\"> <div class=\"gd-45p\"> <super-input-datepicker input-id=\"filter-hire-date-from\" aria-label=\"From Hire date\" label=\"Hire Date\" aria-controls=\"employee-count\" model=\"routeVm.fromHireDate\" label-weight=\"heavy\" data-test=\"filter-hire-date-from\"></super-input-datepicker> </div> <div class=\"gd-5p fixed\"> <div class=\"non-label-space\"></div> <div class=\"hire-date-separator\">&ndash;</div> </div> <div class=\"gd-45p\"> <div class=\"non-label-space\"></div> <super-input-datepicker input-id=\"filter-hire-date-to\" aria-controls=\"employee-count\" aria-label=\"To Hire date\" model=\"routeVm.toHireDate\" data-test=\"filter-hire-date-to\"></super-input-datepicker> </div> </div> </div> <div class=\"gd-15p select-filter-status\"> <super-multi-filter-list label=\"Status\" aria-controls=\"employee-count\" label-weight=\"heavy\" display=\"tags\" selected=\"routeVm.status\" data-test=\"filter-status\"> <super-multi-filter-list-item ng-repeat=\"status in vm.status | orderBy:\\'_name\\'\" option=\"status\"></super-multi-filter-list-item> </super-multi-filter-list> </div> </div> <div class=\"gd-row results-header\"> <div class=\"gd-30p find-employee\"> <super-input-text aria-controls=\"employee-count\" class=\"find-employee\" ss-icon=\"search\" model=\"routeVm.search\" is-disabled=\"vm.disableSearch\" placeholder=\"Find Employee by Name\" data-test=\"filter-employee-name\"></super-input-text> </div> <div role=\"region\" input-id=\"employee-count\" aria-live=\"assertive\" class=\"gd-45p employee-count\"> <span aria-hidden=\"true\" ng-bind=\"routeVm.totalEmployees\" data-test=\"employee-count\"></span> <ng-pluralize aria-hidden=\"true\" count=\"routeVm.totalEmployees\" when=\"{\\'1\\': \\'Employee\\', \\'other\\': \\'Employees\\'}\"></ng-pluralize> <div style=\"position: absolute;top:-100vh;\">{{ vm.totalEmployeesAriaLabel }}</div> </div> <div class=\"gd-25p content-right\"> <super-select-list type=\"filter\" label=\"Sort by\" aria-label=\"Change directory sort\" model=\"routeVm.sortBy\" data-test=\"sort\"> <super-select-list-item ng-repeat=\"filter in vm.sortByOptions\" value=\"filter.value\" label=\"filter.name\" aria-label=\"{{filter.ariaLabel}}\"></super-select-list-item> </super-select-list> <super-button class=\"export\" ng-click=\"go.export()\" ng-disabled=\"vm.loading\" label=\"Export\" aria-label=\"Export directory with current filter\" ss-permitted=\"employees.export\" data-test=\"export\"></super-button> </div> </div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-employee-templates\")}catch(t){e=angular.module(\"ec-employee-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/index/segment-results/results.html\",'<div class=\"segment-index-results\"> <ul role=\"grid\" class=\"employees\" data-test=\"employees\"> <li role=\"row\" data-test-id=\"{{ employee.id }}\" data-test=\"employee\" class=\"gd-row employee\" ng-repeat=\"employee in vm.employees track by employee.id\"> <div class=\"gd-30p\" role=\"gridcell\"> <p ng-if=\"employee.$permitted.props.firstName.view || employee.$permitted.props.lastName.view\"> <span ng-if=\"!go.showNameLinks(employee)\" ng-bind=\"go.getEmployeeName(employee)\" data-test=\"name\"></span> <a class=\"employee-name\" ng-if=\"go.showNameLinks(employee)\" ng-href=\"{{go.getHref(employee)}}\" ng-bind=\"go.getEmployeeName(employee)\" data-test=\"name\"></a> <span class=\"employee-status {{employee.currentStatus.name}}\" data-test=\"status\" ng-if=\"employee.currentStatus._statusId != enumEmployeeStatus.active\" ng-bind=\"employee.currentStatus.name\" aria-label=\"employee status\"> </span> </p> <p ng-if=\"employee.$permitted.props.positions.view\" data-test=\"assignment\" class=\"employee-assg\" ng-class=\"{\\'no-data\\':!employee.position._name}\" ng-bind=\"employee.position.name || \\'no primary assignment\\'\" aria-label=\"position\"> </p> </div> <div class=\"gd-30p location-department\" role=\"cell\"> <p data-test=\"location\" ng-bind=\"employee.position.location._name\" ng-if=\"employee.position.location\" aria-label=\"location\"></p> <p data-test=\"department\" ng-bind=\"employee.position.department._name\" ng-if=\"employee.position.department\" aria-label=\"department\"></p> </div> <div class=\"gd-25p phone-email\" role=\"cell\"> <p ng-if=\"employee.$permitted.props.phoneNumbers.view\" ng-class=\"{\\'no-data\\':!employee.bestContactNumber.formattedFull}\" ng-bind=\"employee.bestContactNumber.formattedFull || \\'no phone number\\'\" data-test=\"phone-number\" aria-label=\"Phone Number\"> </p> <p ng-if=\"employee.$permitted.props.emails.view\" class=\"employee-email\" ng-class=\"{\\'no-data\\':!employee.bestContactEmail}\" ng-bind=\"employee.bestContactEmail || \\'no email address\\'\" data-test=\"email\" aria-label=\"e-mail address\"> </p> </div> <div class=\"gd-15p\" role=\"cell\"> <div ng-if=\"employee.$permitted.props.hireDate.view\" data-test=\"hire-date\"> <p data-test-hire-date=\"{{employee.hireDateTxt}}\" ng-if=\"employee.hireDateTxt\">Hired <span ng-bind=\"employee.hireDateTxt\"></span></p> <p class=\"no-data\" ng-if=\"!employee.hireDateTxt\">no hire date</p> </div> </div> </li> <li ng-if=\"vm.showInfScroll\" infinite-scroll=\"refreshResults()\" infinite-scroll-distance=\"1\" ss-pending=\"vm.loading\" ss-pending-status=\"\\'loading employees… this could take a few moments\\'\"></li> <li ng-if=\"vm.showEmptyMessage && !vm.loading\" class=\"no-results\" data-test=\"no-employees\"> <p>No employees found</p> </li> </ul> </div> ')}])}(),function(e){try{e=angular.module(\"ec-employee-templates\")}catch(t){e=angular.module(\"ec-employee-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/my-profile/segment-header/header.html\",'<div class=\"segment-my-profile-header\"> <h1 class=\"emp-name\" ng-bind=\"vm.fullName\"></h1> <div class=\"container\" ss-pending=\"true\"></div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-employee-templates\")}catch(t){e=angular.module(\"ec-employee-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/reports/assignments/assignments.html\",'<route folder=\"/reports/assignments\"> <segment name=\"content\"></segment> </route> ')}])}(),function(e){try{e=angular.module(\"ec-employee-templates\")}catch(t){e=angular.module(\"ec-employee-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/reports/credentials/credentials.html\",'<route folder=\"/reports/credentials\"> <h1>Credentials Report</h1> <segment name=\"content\"></segment> </route> ')}])}(),function(e){try{e=angular.module(\"ec-employee-templates\")}catch(t){e=angular.module(\"ec-employee-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/reports/demographic/demographic.html\",'<route folder=\"/reports/demographic\"> <segment name=\"content\"></segment> </route> ')}])}(),function(e){try{e=angular.module(\"ec-employee-templates\")}catch(t){e=angular.module(\"ec-employee-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/reports/segment-content/content.html\",'<div class=\"segment-reports-content\"> <ui-view></ui-view> </div> ')}])}(),function(e){try{e=angular.module(\"ec-employee-templates\")}catch(t){e=angular.module(\"ec-employee-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/employee-record/credentials/segment-credentials-content/credentials-content.html\",'<div class=\"segment-employee-record-credentials-credentials-content\"> <super-credentials-cntr ng-if=\"vm.useNewCredentials\" employee-id=\"vm.employeeId\"></super-credentials-cntr> </div> ')}])}(),function(e){try{e=angular.module(\"ec-employee-templates\")}catch(t){e=angular.module(\"ec-employee-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/employee-record/emergency/segment-emergency-content/emergency-content.html\",'<div class=\"segment-employee-record-emergency-emergency-content\" ss-pending=\"vm.loading\"> <super-emergency-contact employee-id=\"vm.employeeId\" on-after-save=\"go.onAfterSave()\"></super-emergency-contact> </div> ')}])}(),function(e){try{e=angular.module(\"ec-employee-templates\")}catch(t){e=angular.module(\"ec-employee-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/employee-record/employment/segment-employment-content/employment-content.html\",'<div class=\"segment-employee-record-employment-employment-content\"> <super-employment-info employee-id=\"vm.employeeId\" on-after-save=\"go.onAfterSave()\"></super-employment-info> </div> ')}])}(),function(e){try{e=angular.module(\"ec-employee-templates\")}catch(t){e=angular.module(\"ec-employee-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/employee-record/medical/segment-medical-content/medical-content.html\",'<div class=\"segment-employee-record-medical-medical-content\"> <super-medical-documents employee-id=\"vm.employeeId\"></super-medical-documents> </div> ')}])}(),function(e){try{e=angular.module(\"ec-employee-templates\")}catch(t){e=angular.module(\"ec-employee-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/employee-record/personal/segment-personal-content/personal-content.html\",'<div class=\"segment-employee-record-personal-personal-content\"> <super-personal-info employee-id=\"vm.employeeId\" on-after-save=\"go.onAfterSave()\"></super-personal-info> </div> ')}])}(),function(e){try{e=angular.module(\"ec-employee-templates\")}catch(t){e=angular.module(\"ec-employee-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/employee-record/personnel/segment-personnel-content/personnel-content.html\",'<div class=\"segment-employee-record-personnel-personnel-content\"> <super-personnel-documents employee-id=\"vm.employeeId\"></super-personnel-documents> </div> ')}])}(),function(e){try{e=angular.module(\"ec-employee-templates\")}catch(t){e=angular.module(\"ec-employee-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/reports/assignments/report/report.html\",'<route folder=\"/reports/assignments/report\"> <segment name=\"content\"></segment> </route> ')}])}(),function(e){try{e=angular.module(\"ec-employee-templates\")}catch(t){e=angular.module(\"ec-employee-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/reports/assignments/segment-content/content.html\",'<div class=\"segment-reports-assignments-content\"> <h1>Assignments Report</h1> <super-tab-list ss-permitted=\"exportTemplates.view\" ng-if=\"vm.showTabs\"> <super-tab-list-item label=\"Report Data\" url=\"/ec-employee/reports/assignments/report?filter[asOfTimeUtc]=today&filter[status]=1\" data-qa=\"report\"></super-tab-list-item> <super-tab-list-item ng-if=\"vm.templateId != null\" id=\"ui-tour-step1\" label=\"Export Template Settings\" state=\"base.reports.assignments.settings\" params=\"{templateId: vm.templateId}\" data-qa=\"settings\"></super-tab-list-item> </super-tab-list> <ui-view></ui-view> </div> ')}])}(),function(e){try{e=angular.module(\"ec-employee-templates\")}catch(t){e=angular.module(\"ec-employee-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/reports/assignments/settings/settings.html\",'<route folder=\"/reports/assignments/settings\"> <segment name=\"content\"></segment> </route> ')}])}(),function(e){try{e=angular.module(\"ec-employee-templates\")}catch(t){e=angular.module(\"ec-employee-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/reports/credentials/segment-content/content.html\",'<div class=\"segment-reports-credentials-content\" ng-class=\"{\\'group-by-name\\': vm.useGroupByEmployee}\"> <cmp-report-filter-bar filters=\"vm.filters\" org=\"routeVm.org\" config=\"vm.filterConfig\"></cmp-report-filter-bar> <super-grid ss-pending=\"vm.loading\" ng-if=\"vm.useGroupByEmployee\"> <grid-header> <super-grid-column width=\"30%\" no-left-separator=\"true\">Name, Job Type, &amp; Educator ID</super-grid-column> <super-grid-column width=\"20%\">Certification / License</super-grid-column> <super-grid-column width=\"20%\">Subject Area / Endorsement</super-grid-column> <super-grid-column>Issued</super-grid-column> <super-grid-column>Expiration</super-grid-column> <super-grid-column>Admin-Verified</super-grid-column> </grid-header> <grid-rows ng-repeat=\"(emp, creds) in vm.empCredentials\"> <super-grid-row ng-repeat=\"cred in creds\"> <super-grid-cell ng-if=\"$first\"> <div ng-if=\"vm.isGlobalDirectory\" ng-click=\"go.toProfile(employee._employeeId)\" class=\"global-directory\"><span class=\"employee-name\">{{cred._employee.lastName}}, {{cred._employee.firstName}}</span></div> <div ng-if=\"!vm.isGlobalDirectory\"><a class=\"employee-name\" ng-href=\"/ec-employee/record/{{employee._employeeId}}/credentials\">{{cred._employee.lastName}}, {{cred._employee.firstName}}</a></div> <div ng-bind=\"cred._employee.positionNameTxt\"></div> </super-grid-cell> <super-grid-cell ng-if=\"!$first\">&nbsp;</super-grid-cell> <super-grid-cell ng-bind=\"cred._credential.name\"></super-grid-cell> <super-grid-cell ng-bind=\"cred.subjects\"></super-grid-cell> <super-grid-cell ng-if=\"go.hasInProgressDates(cred)\">In Progress</super-grid-cell> <super-grid-cell ng-if=\"go.hasActiveDates(cred)\"> <div>{{cred.issuedTxt | date:\\'MM/dd/yyyy\\'}}</div> <div ng-if=\"go.isRenewed(cred)\">Renewal</div> </super-grid-cell> <super-grid-cell ng-if=\"cred._isGrantedForLife\">Does not expire</super-grid-cell> <super-grid-cell ng-if=\"!cred._isGrantedForLife\" ng-bind=\"cred.expirationTxt | date:\\'MM/dd/yyyy\\'\"></super-grid-cell> <super-grid-cell ng-if=\"cred._verifier == null\">Not Verified</super-grid-cell> <super-grid-cell ng-if=\"cred._verifier != null\"> <div ng-bind=\"cred._verifier.verifiedDay | date:\\'MM/dd/yyyy\\'\"></div> <div ng-bind=\"cred._verifier.verifiedBy\"></div> </super-grid-cell> </super-grid-row> </grid-rows> <grid-rows ng-if=\"vm.pages == 0 && !vm.loading\"> <super-grid-row> <super-grid-cell>No employee credentials were found with the filters you selected.</super-grid-cell> </super-grid-row> </grid-rows> </super-grid> <super-grid ss-pending=\"vm.loading\" ng-if=\"!vm.useGroupByEmployee\"> <grid-header> <super-grid-column width=\"30%\">Name, Job Type, &amp; Educator ID</super-grid-column> <super-grid-column width=\"20%\">Certification / License</super-grid-column> <super-grid-column width=\"20%\">Subject Area / Endorsement</super-grid-column> <super-grid-column>Issued</super-grid-column> <super-grid-column>Expiration</super-grid-column> <super-grid-column>Admin-Verified</super-grid-column> </grid-header> <grid-rows> <super-grid-row ng-repeat=\"cred in vm.empCredentials\"> <super-grid-cell> <div ng-if=\"vm.isGlobalDirectory\" ng-click=\"go.toProfile(cred._employee.id)\" class=\"global-directory\"><span class=\"employee-name\">{{cred._employee.lastName}}, {{cred._employee.firstName}}</span></div> <div ng-if=\"!vm.isGlobalDirectory\"><a class=\"employee-name\" ng-href=\"/ec-employee/record/{{cred._employee.id}}/credentials\">{{cred._employee.lastName}}, {{cred._employee.firstName}}</a></div> <div ng-bind=\"cred._employee.positionNameTxt\"></div> </super-grid-cell> <super-grid-cell ng-bind=\"cred._credential.name\"></super-grid-cell> <super-grid-cell ng-bind=\"cred.subjects\"></super-grid-cell> <super-grid-cell ng-if=\"go.hasInProgressDates(cred)\">In Progress</super-grid-cell> <super-grid-cell ng-if=\"go.hasActiveDates(cred)\"> <div>{{cred.issuedTxt | date:\\'MM/dd/yyyy\\'}}</div> <div ng-if=\"go.isRenewed(cred)\">Renewal</div> </super-grid-cell> <super-grid-cell ng-if=\"cred._isGrantedForLife\">Does not expire</super-grid-cell> <super-grid-cell ng-if=\"!cred._isGrantedForLife\" ng-bind=\"cred.expirationTxt | date:\\'MM/dd/yyyy\\'\"></super-grid-cell> <super-grid-cell ng-if=\"cred._verifier == null\">Not Verified</super-grid-cell> <super-grid-cell ng-if=\"cred._verifier != null\"> <div ng-bind=\"cred._verifier.verifiedDay | date:\\'MM/dd/yyyy\\'\"></div> <div ng-bind=\"cred._verifier.name\"></div> </super-grid-cell> </super-grid-row> </grid-rows> <grid-rows ng-if=\"vm.pages == 0 && !vm.loading\"> <super-grid-row> <super-grid-cell>No employee credentials were found with the filters you selected.</super-grid-cell> </super-grid-row> </grid-rows> </super-grid> <fluid-paginator ng-if=\"vm.pages > 0\" total-pages=\"vm.pages\" current-page=\"vm.currentPage\" on:current-page-change=\"go.filterResults($event)\"></fluid-paginator> </div> ')}])}(),function(e){try{e=angular.module(\"ec-employee-templates\")}catch(t){e=angular.module(\"ec-employee-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/reports/demographic/report/report.html\",'<route folder=\"/reports/demographic/report\"> <segment name=\"content\"></segment> </route> ')}])}(),function(e){try{e=angular.module(\"ec-employee-templates\")}catch(t){e=angular.module(\"ec-employee-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/reports/demographic/settings/settings.html\",'<route folder=\"/reports/demographic/settings\"> <segment name=\"content\"></segment> </route> ')}])}(),function(e){try{e=angular.module(\"ec-employee-templates\")}catch(t){e=angular.module(\"ec-employee-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/reports/demographic/segment-content/content.html\",'<div class=\"segment-reports-demographic-content\"> <h1>Employee Data Report</h1> <super-tab-list ss-permitted=\"exportTemplates.view\" ng-if=\"vm.showTabs\"> <super-tab-list-item label=\"Report Data\" url=\"/ec-employee/reports/demographic/report?filter[asOfTimeUtc]=today&filter[status]=1\" data-qa=\"report\"></super-tab-list-item> <super-tab-list-item ng-if=\"vm.templateId != null\" id=\"ui-tour-step1\" label=\"Export Template Settings\" state=\"base.reports.demographic.settings\" params=\"{templateId: vm.templateId}\" data-qa=\"settings\"></super-tab-list-item> </super-tab-list> <ui-view></ui-view> </div> ')}])}(),function(e){try{e=angular.module(\"ec-employee-templates\")}catch(t){e=angular.module(\"ec-employee-templates\",[])}e.run([\"$templateCache\",function(e){\ne.put(\"routes/reports/assignments/report/segment-content/content.html\",'<div class=\"segment-reports-assignments-report-content\" ng-class=\"{\\'group-by-name\\': vm.useGroupByEmployee}\"> <cmp-report-filter-bar filters=\"vm.filters\" org=\"routeVm.org\" config=\"vm.filterConfig\"></cmp-report-filter-bar> <super-grid ss-pending=\"vm.loading\" ng-if=\"vm.useGroupByEmployee\"> <grid-header> <super-grid-column width=\"20%\">Name &amp; External ID</super-grid-column> <super-grid-column width=\"25%\">Assignment</super-grid-column> <super-grid-column>Pay Schedule</super-grid-column> <super-grid-column>Assignment Details</super-grid-column> </grid-header> <grid-rows ng-repeat=\"(emp, assignments) in vm.empAssignments\"> <super-grid-row ng-repeat=\"assignment in assignments track by $index\"> <super-grid-cell ng-if=\"$first\"> <div ng-if=\"vm.isGlobalDirectory\" ng-click=\"go.toProfile(assignment._employeeId)\" class=\"global-directory\"><span data-test=\"employee-name-{{assignment._assignmentId}}\" class=\"employee-name\">{{assignment._employeeLastName}}, {{assignment._employeeFirstName}}</span></div> <div ng-if=\"!vm.isGlobalDirectory\"><a class=\"employee-name\" data-test=\"employee-name-{{assignment._assignmentId}}\" ng-href=\"/ec-employee/record/{{assignment._employeeId}}/employment\">{{assignment._employeeLastName}}, {{assignment._employeeFirstName}}</a></div> <div ng-bind=\"assignment._employeeExternalId\" data-test=\"employee-external-id-{{assignment._assignmentId}}\"></div> </super-grid-cell> <super-grid-cell ng-if=\"!$first\">&nbsp;</super-grid-cell> <super-grid-cell> <div ng-if=\"assignment._assignmentEndDate !== \\'12-31-9999\\'\" class=\"date-range\"><span data-test=\"assignment-date-{{assignment._assignmentId}}\">{{assignment._assignmentStartDate | date:\\'MM/dd/yyyy\\'}} - {{assignment._assignmentEndDate | date:\\'MM/dd/yyyy\\'}}</span></div> <div ng-if=\"assignment._assignmentEndDate === \\'\\'\" class=\"date-range\"><span data-test=\"assignment-date-{{assignment._assignmentId}}\">{{assignment._assignmentStartDate | date:\\'MM/dd/yyyy\\'}} - Current</span></div> <div class=\"position\"><span data-test=\"position-name\" ng-bind=\"assignment._positionName\"></span><span data-test=\"position-external-id-{{assignment._assignmentId}}\" ng-if=\"assignment._positionExternalId\">, {{assignment._positionExternalId}}</span></div> <div ng-if=\"assignment._assignmentIsPrimary === true\" class=\"assignment-type\">Primary</div> <div ng-if=\"assignment._assignmentIsPrimary !== true\" class=\"assignment-type\">Secondary</div> <div ng-bind=\"assignment._employmentGroup\"></div> <div><span ng-bind=\"assignment._departmentName\" data-test=\"department-name-{{assignment._assignmentId}}\"></span><span ng-if=\"assignment._departmentExternalId\" data-test=\"assignment-external-id-{{assignment._assignmentId}}\">, {{assignment._departmentExternalId}}</span></div> <div><span ng-bind=\"assignment._jobTypeName\" data-test=\"job-type-name-{{assignment._assignmentId}}\"></span><span ng-if=\"assignment._jobTypeExternalId\" data-test=\"job-type-external-id-{{assignment._assignmentId}}\">, {{assignment._jobTypeExternalId}}</span></div> <div><span ng-bind=\"assignment._locationName\" data-test=\"location-name-{{assignment._assignmentId}}\"></span><span ng-if=\"assignment._locationName\" data-test=\"location-external-id-{{assignment._assignmentId}}\">, {{assignment._locationExternalId}}</span></div> <div ng-if=\"assignment._assignmentLastUpdated\" class=\"assignment-last-updated\"><span>Last Updated:</span> {{assignment._assignmentLastUpdated | date:\\'M/d/yy h:mm a\\'}}</div> <div ng-if=\"assignment._assignmentId\" class=\"guid\"><span data-test=\"assignment-id-{{assignment._assignmentId}}\">Id: {{assignment._assignmentId}}</span></div> <div ng-if=\"assignment._assignmentExternalId\" class=\"guid\" data-test=\"assignment-externalId-{{assignment._assignmentId}}\"><span>Ext. Id: {{assignment._assignmentExternalId}}</span></div> </super-grid-cell> <super-grid-cell> <div ng-if=\"assignment._payScheduleName\" data-test=\"assignment-pay-schedule-{{assignment._assignmentId}}\">{{assignment._payScheduleName}}</div> <div ng-if=\"assignment._payRate\" data-test=\"assignment-pay-rate-{{assignment._assignmentId}}\"><span>Pay Rate:</span> ${{assignment._payRate}}</div> <div ng-if=\"assignment._payLane\" data-test=\"assignment-pay-lane-{{assignment._assignmentId}}\"><span>Pay Lane:</span> {{assignment._payLane}}</div> <div ng-if=\"assignment._payStep\" data-test=\"assignment-pay-step-{{assignment._assignmentId}}\"><span>Pay Step:</span> {{assignment._payStep}}</div> <div ng-if=\"assignment._payRateFrequency\" data-test=\"assignment-pay-frequency-{{assignment._assignmentId}}\"><span>Pay Rate Freq:</span> {{assignment._payRateFrequency}}</div> </super-grid-cell> <super-grid-cell> <div ng-if=\"assignment._assignmentDetailStartDate && assignment._assignmentDetailEndDate === \\'\\'\" data-test=\"assignment-date-{{assignment._assignmentId}}\" class=\"date-range\">{{assignment._assignmentDetailStartDate | date:\\'MM/dd/yyyy\\'}} - Current</div> <div ng-if=\"assignment._assignmentDetailStartDate && assignment._assignmentDetailEndDate !== \\'12-31-9999\\'\" data-test=\"assignment-date-{{assignment._assignmentId}}\" class=\"date-range\">{{assignment._assignmentDetailStartDate | date:\\'MM/dd/yyyy\\'}} - {{assignment._assignmentDetailEndDate | date:\\'MM/dd/yyyy\\'}}</div> <div ng-if=\"assignment._workDaysPerYear\" data-test=\"work-days-per-year-{{assignment._assignmentId}}\"><span>Work Days/Year:</span> {{assignment._workDaysPerYear}}</div> <div ng-if=\"assignment._payPeriodsPerYear\" data-test=\"pay-periods-per-year-{{assignment._assignmentId}}\"><span>Pay Periods/Year:</span> {{assignment._payPeriodsPerYear}}</div> <div ng-if=\"assignment._hoursPerDay\" data-test=\"hours-per-day-{{assignment._assignmentId}}\"><span>Hours Per Day:</span> {{assignment._hoursPerDay}}</div> <div ng-if=\"assignment._fTE\" data-test=\"fte-{{assignment._assignmentId}}\"><span>FTE:</span> {{assignment._fTE}}</div> <div ng-if=\"assignment._vacationDaysPerSchoolYear\" data-test=\"vacation-days-per-year-{{assignment._assignmentId}}\"><span>Vacation:</span> {{assignment._vacationDaysPerSchoolYear}}</div> <div ng-if=\"assignment._sickDaysPerSchoolYear\" data-test=\"sick-days-per-year-{{assignment._assignmentId}}\"><span>Sick:</span> {{assignment._sickDaysPerSchoolYear}}</div> <div ng-if=\"assignment._personalDaysPerSchoolYear\" data-test=\"personal-days-per-year-{{assignment._assignmentId}}\"><span>Personal:</span> {{assignment._personalDaysPerSchoolYear}}</div> <div ng-if=\"assignment._assignmentDetailId\" class=\"guid\" data-test=\"assignment-details-id-{{assignment._assignmentId}}\"><span>Id:</span> {{assignment._assignmentDetailId}}</div> </super-grid-cell> </super-grid-row> </grid-rows> <grid-rows ng-if=\"vm.pages == 0 && !vm.loading\"> <super-grid-row> <super-grid-cell>No employee assignments were found with the filters you selected.</super-grid-cell> </super-grid-row> </grid-rows> </super-grid> <super-grid ss-pending=\"vm.loading\" ng-if=\"!vm.useGroupByEmployee\"> <grid-header> <super-grid-column width=\"20%\">Name &amp; External ID</super-grid-column> <super-grid-column width=\"25%\">Assignment</super-grid-column> <super-grid-column>Pay Schedule</super-grid-column> <super-grid-column>Assignment Details</super-grid-column> </grid-header> <grid-rows> <super-grid-row ng-repeat=\"assignment in vm.empAssignments track by $index\"> <super-grid-cell> <div ng-if=\"vm.isGlobalDirectory\" ng-click=\"go.toProfile(assignment._employeeId)\" class=\"global-directory\"><span data-test=\"employee-name-{{assignment._assignmentId}}\" class=\"employee-name\">{{assignment._employeeLastName}}, {{assignment._employeeFirstName}}</span></div> <div ng-if=\"!vm.isGlobalDirectory\"><a class=\"employee-name\" ng-href=\"/ec-employee/record/{{assignment._employeeId}}/employment\" data-test=\"employee-name-{{assignment._assignmentId}}\">{{assignment._employeeLastName}}, {{assignment._employeeFirstName}}</a></div> <div ng-bind=\"assignment._employeeExternalId\" data-test=\"employee-external-id-{{assignment._assignmentId}}\"></div> </super-grid-cell> <super-grid-cell> <div ng-if=\"assignment._assignmentEndDate !== \\'12-31-9999\\'\" class=\"date-range\"><span data-test=\"assignment-date-{{assignment._assignmentId}}\">{{assignment._assignmentStartDate | date:\\'MM/dd/yyyy\\'}} - {{assignment._assignmentEndDate | date:\\'MM/dd/yyyy\\'}}</span></div> <div ng-if=\"assignment._assignmentEndDate === \\'\\'\" class=\"date-range\"><span data-test=\"assignment-date-{{assignment._assignmentId}}\">{{assignment._assignmentStartDate | date:\\'MM/dd/yyyy\\'}} - Current</span></div> <div class=\"position\"><span ng-bind=\"assignment._positionName\" data-test=\"position-name-{{assignment._assignmentId}}\"></span><span ng-if=\"assignment._positionExternalId\" data-test=\"position-external-id\">, {{assignment._positionExternalId}}</span></div> <div ng-if=\"assignment._assignmentIsPrimary === true\" class=\"assignment-type\">Primary</div> <div ng-if=\"assignment._assignmentIsPrimary !== true\" class=\"assignment-type\">Secondary</div> <div ng-bind=\"assignment._employmentGroup\"></div> <div><span ng-bind=\"assignment._departmentName\" data-test=\"department-name-{{assignment._assignmentId}}\"></span><span ng-if=\"assignment._departmentExternalId\" data-test=\"assignment-external-id-{{assignment._assignmentId}}\">, {{assignment._departmentExternalId}}</span></div> <div><span ng-bind=\"assignment._jobTypeName\" data-test=\"job-type-name-{{assignment._assignmentId}}\"></span><span ng-if=\"assignment._jobTypeExternalId\" data-test=\"job-type-external-id-{{assignment._assignmentId}}\">, {{assignment._jobTypeExternalId}}</span></div> <div><span ng-bind=\"assignment._locationName\" data-test=\"location-name-{{assignment._assignmentId}}\"></span><span ng-if=\"assignment._locationName\" data-test=\"location-external-id-{{assignment._assignmentId}}\">, {{assignment._locationExternalId}}</span></div> <div ng-if=\"assignment._assignmentLastUpdated\" class=\"assignment-last-updated\"><span>Last Updated:</span> {{assignment._assignmentLastUpdated | date:\\'M/d/yy h:mm a\\'}}</div> <div ng-if=\"assignment._assignmentId\" class=\"guid\" data-test=\"assignment-id-{{assignment._assignmentId}}\"><span>Id: {{assignment._assignmentId}}</span></div> <div ng-if=\"assignment._assignmentExternalId\" class=\"guid\" data-test=\"assignment-externalId-{{assignment._assignmentId}}\"><span>Ext. Id: {{assignment._assignmentExternalId}}</span></div> </super-grid-cell> <super-grid-cell> <div ng-if=\"assignment._payScheduleName\" data-test=\"assignment-pay-schedule-{{assignment._assignmentId}}\">{{assignment._payScheduleName}}</div> <div ng-if=\"assignment._payRate\" data-test=\"assignment-pay-rate-{{assignment._assignmentId}}\"><span>Pay Rate:</span> ${{assignment._payRate}}</div> <div ng-if=\"assignment._payLane\" data-test=\"assignment-pay-lane-{{assignment._assignmentId}}\"><span>Pay Lane:</span> {{assignment._payLane}}</div> <div ng-if=\"assignment._payStep\" data-test=\"assignment-pay-step-{{assignment._assignmentId}}\"><span>Pay Step:</span> {{assignment._payStep}}</div> <div ng-if=\"assignment._payRateFrequency\" data-test=\"assignment-pay-frequency-{{assignment._assignmentId}}\"><span>Pay Rate Freq:</span> {{assignment._payRateFrequency}}</div> </super-grid-cell> <super-grid-cell> <div ng-if=\"assignment._assignmentDetailStartDate && assignment._assignmentDetailEndDate === \\'\\'\" class=\"date-range\" data-test=\"assignment-date-{{assignment._assignmentId}}\">{{assignment._assignmentDetailStartDate | date:\\'MM/dd/yyyy\\'}} - Current</div> <div ng-if=\"assignment._assignmentDetailStartDate && assignment._assignmentDetailEndDate !== \\'12-31-9999\\'\" class=\"date-range\" data-test=\"assignment-date-{{assignment._assignmentId}}\">{{assignment._assignmentDetailStartDate | date:\\'MM/dd/yyyy\\'}} - {{assignment._assignmentDetailEndDate | date:\\'MM/dd/yyyy\\'}}</div> <div ng-if=\"assignment._workDaysPerYear\" data-test=\"work-days-per-year-{{assignment._assignmentId}}\"><span>Work Days/Year:</span> {{assignment._workDaysPerYear}}</div> <div ng-if=\"assignment._payPeriodsPerYear\" data-test=\"pay-periods-per-year-{{assignment._assignmentId}}\"><span>Pay Periods/Year:</span> {{assignment._payPeriodsPerYear}}</div> <div ng-if=\"assignment._hoursPerDay\" data-test=\"hours-per-day-{{assignment._assignmentId}}\"><span>Hours Per Day:</span> {{assignment._hoursPerDay}}</div> <div ng-if=\"assignment._fTE\" data-test=\"fte\"><span>FTE:</span> {{assignment._fTE}}</div> <div ng-if=\"assignment._vacationDaysPerSchoolYear\" data-test=\"vacation-days-per-year-{{assignment._assignmentId}}\"><span>Vacation:</span> {{assignment._vacationDaysPerSchoolYear}}</div> <div ng-if=\"assignment._sickDaysPerSchoolYear\" data-test=\"sick-days-per-year-{{assignment._assignmentId}}\"><span>Sick:</span> {{assignment._sickDaysPerSchoolYear}}</div> <div ng-if=\"assignment._personalDaysPerSchoolYear\" data-test=\"personal-days-per-year-{{assignment._assignmentId}}\"><span>Personal:</span> {{assignment._personalDaysPerSchoolYear}}</div> <div ng-if=\"assignment._assignmentDetailId\" class=\"guid\" data-test=\"assignment-details-id-{{assignment._assignmentId}}\"><span>Id:</span> {{assignment._assignmentDetailId}}</div> </super-grid-cell> </super-grid-row> </grid-rows> <grid-rows ng-if=\"vm.pages == 0 && !vm.loading\"> <super-grid-row> <super-grid-cell class=\"no-results\">No employee assignments were found with the filters you selected.</super-grid-cell> </super-grid-row> </grid-rows> </super-grid> <fluid-paginator ng-if=\"vm.pages > 0\" total-pages=\"vm.pages\" current-page=\"vm.currentPage\" on:current-page-change=\"go.filterResults($event)\"></fluid-paginator> </div> ')}])}(),function(e){try{e=angular.module(\"ec-employee-templates\")}catch(t){e=angular.module(\"ec-employee-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/reports/assignments/settings/segment-content/content.html\",'<div class=\"segment-reports-assignments-settings-content\"> <cmp-report-export-settings type=\"vm.type\" template-id=\"vm.templateId\" report-route=\"base.reports.assignments.report\"></cmp-report-export-settings> </div> ')}])}(),function(e){try{e=angular.module(\"ec-employee-templates\")}catch(t){e=angular.module(\"ec-employee-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/reports/demographic/report/segment-content/content.html\",'<div class=\"segment-reports-demographic-report-content\"> <cmp-report-filter-bar filters=\"vm.filters\" org=\"routeVm.org\" config=\"vm.filterConfig\"></cmp-report-filter-bar> <super-grid ss-pending=\"vm.loading\"> <grid-header> <super-grid-column width=\"20%\">Name, External ID &amp; Status</super-grid-column> <super-grid-column width=\"20%\">Demographics - Indicative Data</super-grid-column> <super-grid-column>Employment Data</super-grid-column> <super-grid-column>Supervisor Name &amp; Status</super-grid-column> <super-grid-column width=\"25%\">Address &amp; Contact Data</super-grid-column> <super-grid-column>Emergency Contact</super-grid-column> </grid-header> <grid-rows ng-if=\"!vm.loading\"> <super-grid-row ng-repeat=\"employee in vm.employees track by $index\"> <super-grid-cell> <div ng-if=\"vm.isGlobalDirectory\" ng-click=\"go.toProfile(employee._employeeId)\" class=\"global-directory\"><span class=\"employee-name\">{{employee._lastName}}, {{employee._firstName}} {{employee._middleName}} <span ng-if=\"employee._suffix\">{{employee._suffix}},</span> {{employee._title}}</span></div> <div ng-if=\"!vm.isGlobalDirectory\"><a class=\"employee-name\" ng-href=\"/ec-employee/record/{{employee._employeeId}}/personal\">{{employee._lastName}}, {{employee._firstName}} {{employee._middleName}} <span ng-if=\"employee._suffix\">{{employee._suffix}},</span> {{employee._title}}</a></div> <div ng-bind=\"employee._externalId\"></div> <div ng-if=\"employee._aliasLastName\">Other: {{employee._aliasLastName}}, {{employee._aliasFirstName}} <span ng-if=\"employee._aliasMiddleName\">{{employee._aliasMiddleName}}</span></div> <div ng-if=\"employee._stateEducatorId\">State Educator ID: {{employee._stateEducatorId}}</div> <div ng-if=\"employee._status !== \\'\\'\" class=\"status\">Status: {{employee._status}}</div> <div ng-if=\"employee._statusFrom && employee._statusTo\" class=\"date-range\" ng-bind=\"go.getDateString(employee._statusFrom, employee._statusTo)\"></div> <div ng-if=\"employee.securityGroup\" class=\"security-group\">Security Group: {{employee.securityGroup}}</div> <div ng-if=\"employee._lastUpdatedUtc\" class=\"last-updated\"><span>Last Updated:</span> {{go.formatDate(employee._lastUpdatedUtc)}}</div> </super-grid-cell> <super-grid-cell class=\"demographics\"> <div ng-if=\"employee._sSN\">SSN: <super-input-ssn model=\"employee._sSN\" employee-id=\"{{employee.id}}\" has-value=\"employee._hasSsn\" edit-mode=\"false\"></super-input-ssn></div> <div ng-if=\"employee._gender !== \\'\\'\">Gender: {{employee._gender}}</div> <div ng-if=\"employee._birthDateUtc\">DOB: {{employee._birthDateUtc | date:\\'MM/dd/yyyy\\'}}</div> <div ng-if=\"employee._ethnicity !== \\'\\'\">Ethnicity: {{employee._ethnicity}}</div> <div ng-if=\"employee._race !== \\'\\'\">Race: {{employee._race}}</div> <div ng-if=\"employee._maritalStatus !== \\'\\'\">Marital Status: {{employee._maritalStatus}}</div> </super-grid-cell> <super-grid-cell class=\"employment-data\"> <div ng-if=\"employee._hireDate\">Hired: {{employee._hireDate | date:\\'MM/dd/yyyy\\'}}</div> <div ng-if=\"employee._seniorityDate\">Seniority: {{employee._seniorityDate | date:\\'MM/dd/yyyy\\'}}</div> <div ng-if=\"employee._tenureDate\">Tenure: {{employee._tenureDate | date:\\'MM/dd/yyyy\\'}}</div> <div ng-if=\"employee._retirementSystemName\">Retirement: {{employee._retirementSystemName}}</div> </super-grid-cell> <super-grid-cell> <div ng-if=\"employee._supervisorLastName\" class=\"supervisor-name\">{{employee._supervisorLastName}}, {{employee._supervisorFirstName}}</div> <div ng-if=\"employee._supervisorExternalId\">{{employee._supervisorExternalId}}</div> <div ng-if=\"employee._supervisorStartDate && employee._supervisorEndDate\" class=\"date-range\" ng-bind=\"go.getDateString(employee._supervisorStartDate, employee._supervisorEndDate)\"></div> </super-grid-cell> <super-grid-cell class=\"address-contact\"> <address ng-if=\"employee._addressStreet1\"> <div ng-if=\"employee._addressStreet1\">{{employee._addressStreet1}}</div> <div ng-if=\"employee._addressStreet2\">{{employee._addressStreet2}}</div> <div ng-if=\"employee._addressCity\">{{employee._addressCity}}, {{employee._addressState}} {{employee._addressZip}}</div> </address> <div ng-if=\"employee._addressStreet1 && employee._addressStartDate && employee._addressEndDate\" class=\"date-range\" ng-bind=\"go.getDateString(employee._addressStartDate, employee._addressEndDate)\"></div> <label ng-if=\"employee._workPhoneNumber\">Work Phone</label> <div ng-if=\"employee._workPhoneNumber\">{{go.formatPhone(employee._workPhoneNumber)}}<span ng-if=\"employee._workPhoneExtension\">x{{employee._workPhoneExtension}}</span></div> <label ng-if=\"employee._personalPhoneNumber\">Personal Phone</label> <div ng-if=\"employee._personalPhoneNumber\">{{go.formatPhone(employee._personalPhoneNumber)}}<span ng-if=\"employee._personalPhoneExtension\">x{{employee._personalPhoneExtension}}</span></div> <label ng-if=\"employee._homePhoneNumber\">Home Phone</label> <div ng-if=\"employee._homePhoneNumber\">{{go.formatPhone(employee._homePhoneNumber)}}<span ng-if=\"employee._homePhoneExtension\">x{{employee._homePhoneExtension}}</span></div> <label ng-if=\"employee._workEmailEmailAddress\">Work Email:</label> <div ng-if=\"employee._workEmailEmailAddress\">{{employee._workEmailEmailAddress}}</div> <div ng-if=\"employee._workEmailIsPrimary\">(Primary)</div> <label ng-if=\"employee._personalEmailEmailAddress\">Personal Email:</label> <div ng-if=\"employee._personalEmailEmailAddress\">{{employee._personalEmailEmailAddress}}</div> <div ng-if=\"employee._personalEmailIsPrimary\">(Primary)</div> </super-grid-cell> <super-grid-cell ng-if=\"employee._primaryEmergencyContactContactName || employee._secondaryEmergencyContactContactName\"> <div ng-if=\"employee._primaryEmergencyContactContactName\" class=\"emergency-contact\">{{employee._primaryEmergencyContactContactName}}<span ng-if=\"employee._primaryEmergencyContactRelationshipType !== \\'\\'\">, {{employee._primaryEmergencyContactRelationshipType}}</span></div> <label ng-if=\"employee._primaryEmergencyContactPrimaryPhone\">Primary Phone:</label> <div class=\"contact\" ng-if=\"employee._primaryEmergencyContactPrimaryPhone\">{{go.formatPhone(employee._primaryEmergencyContactPrimaryPhone)}}</div> <label ng-if=\"employee._primaryEmergencyContactAlternatePhone\">Alternate Phone:</label> <div class=\"contact\" ng-if=\"employee._primaryEmergencyContactAlternatePhone\">{{go.formatPhone(employee._primaryEmergencyContactAlternatePhone)}}</div> <div ng-if=\"employee._secondaryEmergencyContactContactName\" class=\"emergency-contact\">{{employee._secondaryEmergencyContactContactName}}<span ng-if=\"employee._secondaryEmergencyContactRelationshipType !== \\'\\'\">, {{employee._secondaryEmergencyContactRelationshipType}}</span></div> <label ng-if=\"employee._secondaryEmergencyContactPrimaryPhone\">Primary Phone:</label> <div ng-if=\"employee._secondaryEmergencyContactPrimaryPhone\">{{go.formatPhone(employee._secondaryEmergencyContactPrimaryPhone)}}</div> <label ng-if=\"employee._secondaryEmergencyContactAlternatePhone\">Alternate Phone:</label> <div ng-if=\"employee._secondaryEmergencyContactAlternatePhone\">{{go.formatPhone(employee._secondaryEmergencyContactAlternatePhone)}}</div> </super-grid-cell> </super-grid-row> </grid-rows> <grid-rows ng-if=\"vm.pages == 0 && !vm.loading\"> <super-grid-row> <super-grid-cell>No employees were found with the filters you selected.</super-grid-cell> </super-grid-row> </grid-rows> </super-grid> <fluid-paginator ng-if=\"vm.pages > 0\" total-pages=\"vm.pages\" current-page=\"vm.currentPage\" on:current-page-change=\"go.filterResults($event)\"></fluid-paginator> </div> ')}])}(),function(e){try{e=angular.module(\"ec-employee-templates\")}catch(t){e=angular.module(\"ec-employee-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/reports/demographic/settings/segment-content/content.html\",'<div class=\"segment-reports-demographic-settings-content\"> <cmp-report-export-settings type=\"vm.type\" template-id=\"vm.templateId\" report-route=\"base.reports.demographic.report\"></cmp-report-export-settings> </div> ')}])}();","import { State } from 'base-state';\r\n// #----------------------------------------------# //\r\n// #---- State (/employee-record/credentials) ----# //\r\n\r\n// view model that is shared by all segments on this route,\r\n// used for segment coordination. Define initial state here.\r\nconst routeVm = {};\r\n\r\nconst stateName = 'employeeRecord.credentials';\r\n\r\n// config object for ui-router\r\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\r\nconst stateConfig = {\r\n\turl: '/credentials',\r\n\ttemplateUrl: 'routes/employee-record/credentials/credentials.html',\r\n\t$permissions: (permissionSvc) => permissionSvc.isPermittedAction('employees', 'view')\r\n};\r\n\r\n// #-- END State (/employee-record/credentials) --# //\r\n// #----------------------------------------------# //\r\n\r\nangular.module('ec-employee').config( /*@ngInject*/ ($stateProvider) => {\r\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\r\n});\r\n","import { Segment } from 'base-segment';\r\n// #----------------------------------------------------------------------------# //\r\n// #---- Segment (/employee-record/credentials/segment-credentials-content) ----# //\r\n\r\nclass CredentialsContent extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $scope, $stateParams, ssFlagSvc) {\r\n\t\t// view model that is shared by all segments on this route,\r\n\t\t// used for segment coordination\r\n\t\tconst routeVm = $scope.routeVm; // jshint ignore:line\r\n\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentEmployeeRecordCredentialsCredentialsContentLogic'); // jshint ignore:line\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = { // jshint ignore:line\r\n\t\t\temployeeId: $stateParams.employeeId,\r\n\t\t\t// feature flag for the new credentials\r\n\t\t\tuseNewCredentials: ssFlagSvc.checkState('fc-new-credentials-enabled'),\r\n\t\t};\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = {}; // jshint ignore:line\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/employee-record/credentials/segment-credentials-content) --# //\r\n// #----------------------------------------------------------------------------# //\r\n\r\nangular.module('ec-employee-segments').directive('segmentEmployeeRecordCredentialsCredentialsContent', () =>\r\n\tnew CredentialsContent('credentials-content'));\r\n","/*@ngInject*/\r\nfunction logic() {\r\n\t// logic api\r\n\treturn {};\r\n}\r\nangular.module('ec-employee-segment-logic').factory('segmentEmployeeRecordCredentialsCredentialsContentLogic', logic);\r\n","import {State} from 'base-state';\r\n// #--------------------------------------------# //\r\n// #---- State (/employee-record/emergency) ----# //\r\n\r\n// view model that is shared by all segments on this route,\r\n// used for segment coordination. Define initial state here.\r\nconst routeVm = {};\r\n\r\nconst stateName = 'employeeRecord.emergency';\r\n\r\n// config object for ui-router\r\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\r\nconst stateConfig = {\r\n\turl: '/emergency{action:.*}',\r\n\ttemplateUrl: 'routes/employee-record/emergency/emergency.html',\r\n\t$permissions: (permissionSvc) => permissionSvc.isPermittedAction('employees', 'edit') ||\r\n\t\tpermissionSvc.isPermittedAction('employees', 'view')\r\n};\r\n\r\n// #-- END State (/employee-record/emergency) --# //\r\n// #--------------------------------------------# //\r\n\r\nangular.module('ec-employee').config( /*@ngInject*/ ($stateProvider) => {\r\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\r\n});\r\n","import {Segment} from 'base-segment';\r\nimport { log } from 'util';\r\n// #------------------------------------------------------------------------# //\r\n// #---- Segment (/employee-record/emergency/segment-emergency-content) ----# //\r\n\r\nclass EmergencyContent extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $scope, $stateParams, ssEventSvc) {\r\n\t\t// view model that is shared by all segments on this route, used for segment coordination\r\n\t\tconst routeVm = $scope.routeVm; // jshint ignore:line\r\n\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentEmployeeRecordEmergencyEmergencyContentLogic');\r\n\r\n\t\t$scope.validator = logic.validator;\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\temployeeId: $stateParams.employeeId,\r\n\t\t};\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { // jshint ignore:line\r\n\t\t\tonAfterSave() {\r\n\t\t\t\t// emit here for sidebar changes to get picked up\r\n\t\t\t\tssEventSvc.emit('module.employee.saved');\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n}\r\n\r\n\r\n// #-- END Segment (/employee-record/emergency/segment-emergency-content) --# //\r\n// #------------------------------------------------------------------------# //\r\n\r\nangular.module('ec-employee-segments').directive('segmentEmployeeRecordEmergencyEmergencyContent', () => new EmergencyContent(\r\n\t'emergency-content'));\r\n","/*@ngInject*/\r\nfunction logic() {\r\n\t// logic api\r\n\treturn {};\r\n\r\n}\r\nangular.module('ec-employee-segment-logic').factory('segmentEmployeeRecordEmergencyEmergencyContentLogic', logic);\r\n","import { State } from 'base-state';\r\n// #----------------------------------# //\r\n// #---- State (/employee-record) ----# //\r\n\r\n// view model that is shared by all segments on this route,\r\n// used for segment coordination. Define initial state here.\r\nconst routeVm = {\r\n\temp: null,\r\n\trefreshing: false\r\n};\r\n\r\nconst stateName = 'employeeRecord';\r\n\r\n// config object for ui-router\r\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\r\nconst stateConfig = {\r\n\turl: '/record/{employeeId:[0-9A-Za-z-]+}',\r\n\ttemplateUrl: 'routes/employee-record/employee-record.html',\r\n\tresolve: {\r\n\t\temp: /*@ngInject*/ function($stateParams, $location, ssAsync, ssEmployeeApi, ssActiveUserSvc, ssEventSvc, ssOrganizationSvc, ssMultiInitiativeFeatureDetectorSvc) {\r\n\t\t\treturn (ssAsync(function*() {\r\n\t\t\t\ttry {\r\n\t\t\t\t\trouteVm.emp = yield ssEmployeeApi.get({\r\n\t\t\t\t\t\tid: $stateParams.employeeId,\r\n\t\t\t\t\t\tfields: 'orgPersonId,firstName,lastName'\r\n\t\t\t\t\t}, null, false);\r\n\r\n\t\t\t\t\tif (ssMultiInitiativeFeatureDetectorSvc.isDataIntegrationsEnabled()) {\r\n\t\t\t\t\t\tlet path = $location.path();\r\n\t\t\t\t\t\tconst url = `/ec-directory/person-detail/${routeVm.emp._orgPersonId}`;\r\n\r\n\t\t\t\t\t\tif (path.endsWith('personal')) {\r\n\t\t\t\t\t\t\t$location.url(`${url}/personal`);\r\n\t\t\t\t\t\t} else if (path.endsWith('employment')) {\r\n\t\t\t\t\t\t\t$location.url(`${url}/employment`);\r\n\t\t\t\t\t\t} else if (path.endsWith('credentials')) {\r\n\t\t\t\t\t\t\t$location.url(`${url}/credentials`);\r\n\t\t\t\t\t\t} else if (path.endsWith('medical')) {\r\n\t\t\t\t\t\t\t$location.url(`${url}/documents-medical`);\r\n\t\t\t\t\t\t} else if (path.endsWith('personnel')) {\r\n\t\t\t\t\t\t\t$location.url(`${url}/documents-personal`); // yes, personal and not personnel here\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\trouteVm.loggedInUserKey = yield ssActiveUserSvc.getIdentityByType('employee');\r\n\t\t\t\t\trouteVm.org = yield ssOrganizationSvc.getActiveOrg();\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tssEventSvc.emit('error-404');\r\n\t\t\t\t\tconsole && console.error && console.error('Error retrieving employee', e);\r\n\t\t\t\t}\r\n\t\t\t})());\r\n\t\t},\r\n\t\tisHRMSEnabled: /*@ngInject*/ function(ssMultiInitiativeFeatureDetectorSvc) {\r\n\t\t\trouteVm.isHRMSEnabled = ssMultiInitiativeFeatureDetectorSvc.isHRMSEnabled();\r\n\t\t},\r\n\t\t$title: /*@ngInject*/ (emp) => {\r\n\t\t\tif (emp == null) {\r\n\t\t\t\treturn 'Frontline Central - Employee Directory';\r\n\t\t\t}\r\n\t\t\treturn `Frontline Central - ${emp._firstName} ${emp._lastName}`;\r\n\t\t}\r\n\t},\r\n\t$permissions: (permissionSvc) => permissionSvc.isPermittedAction('employees', 'view'),\r\n\tredirectToState: 'base.employeeRecord.personal'\r\n};\r\n\r\n// #-- END State (/employee-record) --# //\r\n// #----------------------------------# //\r\n\r\nangular.module('ec-employee').config( /*@ngInject*/ ($stateProvider, $urlRouterProvider) => {\r\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\r\n});\r\n","import { State } from 'base-state';\r\n// #---------------------------------------------# //\r\n// #---- State (/employee-record/employment) ----# //\r\n\r\n// view model that is shared by all segments on this route,\r\n// used for segment coordination. Define initial state here.\r\nconst routeVm = {};\r\n\r\nconst stateName = 'employeeRecord.employment';\r\n\r\n// config object for ui-router\r\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\r\nconst stateConfig = {\r\n\turl: '/employment',\r\n\ttemplateUrl: 'routes/employee-record/employment/employment.html',\r\n\t$permissions: (permissionSvc) => permissionSvc.isPermittedAction('employees', 'edit') ||\r\n\t\tpermissionSvc.isPermittedAction('employees', 'view')\r\n};\r\n\r\n// #-- END State (/employee-record/employment) --# //\r\n// #---------------------------------------------# //\r\n\r\nangular.module('ec-employee').config( /*@ngInject*/ ($stateProvider) => {\r\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\r\n});\r\n","import { Segment } from 'base-segment';\r\n// #--------------------------------------------------------------------------# //\r\n// #---- Segment (/employee-record/employment/segment-employment-content) ----# //\r\n\r\nclass EmploymentContent extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $scope, $stateParams, ssFlagSvc, ssEventSvc, ssSaveInterrupterSvc) {\r\n\t\t// view model that is shared by all segments on this route,\r\n\t\t// used for segment coordination\r\n\t\tconst routeVm = $scope.routeVm; // jshint ignore:line\r\n\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentEmployeeRecordEmploymentEmploymentContentLogic'); // jshint ignore:line\r\n\r\n\t\tconst vm = $scope.vm = { // jshint ignore:line\r\n\t\t\temployeeId: $stateParams.employeeId,\r\n\t\t};\r\n\r\n\t\tssFlagSvc.ready.then(() => {\r\n\t\t\tif (ssFlagSvc.checkState('fc-enable-save-interrupter')) {\r\n\t\t\t\tssSaveInterrupterSvc.clear();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { // jshint ignore:line\r\n\t\t\tonAfterSave() {\r\n\t\t\t\t// emit here for sidebar changes to get picked up\r\n\t\t\t\tssEventSvc.emit('module.employee.saved');\r\n\t\t\t},\r\n\t\t};\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/employee-record/employment/segment-employment-content) --# //\r\n// #--------------------------------------------------------------------------# //\r\nangular.module('ec-employee-segments').directive('segmentEmployeeRecordEmploymentEmploymentContent', () => new EmploymentContent('employment-content'));\r\n","/*@ngInject*/\r\nfunction logic() {\r\n\t// logic api\r\n\treturn {};\r\n\r\n}\r\nangular.module('ec-employee-segment-logic').factory('segmentEmployeeRecordEmploymentEmploymentContentLogic', logic);\r\n","import { State } from 'base-state';\r\n// #------------------------------------------# //\r\n// #---- State (/employee-record/medical) ----# //\r\n\r\n// view model that is shared by all segments on this route,\r\n// used for segment coordination. Define initial state here.\r\nconst routeVm = {};\r\n\r\nconst stateName = 'employeeRecord.medical';\r\n\r\n// config object for ui-router\r\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\r\nconst stateConfig = {\r\n\turl: '/medical',\r\n\ttemplateUrl: 'routes/employee-record/medical/medical.html',\r\n\t$permissions: (permissionSvc) => permissionSvc.isPermittedAction('employees', 'edit') ||\r\n\t\tpermissionSvc.isPermittedAction('employees', 'view')\r\n};\r\n\r\n// #-- END State (/employee-record/medical) --# //\r\n// #------------------------------------------# //\r\n\r\nangular.module('ec-employee').config( /*@ngInject*/ ($stateProvider) => {\r\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\r\n});\r\n","import { Segment } from 'base-segment';\r\n// #--------------------------------------------------------------------# //\r\n// #---- Segment (/employee-record/medical/segment-medical-content) ----# //\r\n\r\nclass MedicalContent extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $scope, $stateParams) {\r\n\t\t// view model that is shared by all segments on this route,\r\n\t\t// used for segment coordination\r\n\t\tconst routeVm = $scope.routeVm; // jshint ignore:line\r\n\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentEmployeeRecordMedicalMedicalContentLogic'); // jshint ignore:line\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = { // jshint ignore:line\r\n\t\t\temployeeId: $stateParams.employeeId,\r\n\t\t};\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = {}; // jshint ignore:line\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/employee-record/medical/segment-medical-content) --# //\r\n// #--------------------------------------------------------------------# //\r\n\r\nangular.module('ec-employee-segments').directive('segmentEmployeeRecordMedicalMedicalContent', () => new MedicalContent('medical-content'));\r\n","/*@ngInject*/\r\nfunction logic(ssValidationHlp) {\r\n\t// logic api\r\n\treturn {\r\n\t\tvalidator: {\r\n\t\t\trequired: ssValidationHlp.required()\r\n\t\t}\r\n\t};\r\n}\r\nangular.module('ec-employee-segment-logic').factory('segmentEmployeeRecordMedicalMedicalContentLogic', logic);\r\n","import { State } from 'base-state';\r\n// #-------------------------------------------# //\r\n// #---- State (/employee-record/personal) ----# //\r\n\r\n// view model that is shared by all segments on this route,\r\n// used for segment coordination. Define initial state here.\r\nconst routeVm = {};\r\n\r\nconst stateName = 'employeeRecord.personal';\r\n\r\n// config object for ui-router\r\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\r\nconst stateConfig = {\r\n\turl: '/personal{action:.*}',\r\n\ttemplateUrl: 'routes/employee-record/personal/personal.html',\r\n\t$permissions: (permissionSvc) => permissionSvc.isPermittedAction('employees', 'edit') ||\r\n\t\tpermissionSvc.isPermittedAction('employees', 'view'),\r\n};\r\n\r\n// #-- END State (/employee-record/personal) --# //\r\n// #-------------------------------------------# //\r\n\r\nangular.module('ec-employee').config( /*@ngInject*/ ($stateProvider) => {\r\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\r\n});\r\n","import { Segment } from 'base-segment';\r\n// #----------------------------------------------------------------------# //\r\n// #---- Segment (/employee-record/personal/segment-personal-content) ----# //\r\n\r\nclass PersonalContent extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $scope, $stateParams, ssEventSvc) {\r\n\r\n\t\t// view model that is shared by all segments on this route,\r\n\t\t// used for segment coordination\r\n\t\tconst routeVm = $scope.routeVm; // jshint ignore:line\r\n\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentEmployeeRecordPersonalPersonalContentLogic'); // jshint ignore:line\r\n\r\n\t\tconst vm = $scope.vm = { // jshint ignore:line\r\n\t\t\temployeeId: $stateParams.employeeId,\r\n\t\t};\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { // jshint ignore:line\r\n\t\t\tonAfterSave() {\r\n\t\t\t\t// emit here for sidebar changes to get picked up\r\n\t\t\t\tssEventSvc.emit('module.employee.saved');\r\n\t\t\t},\r\n\t\t};\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/employee-record/personal/segment-personal-content) --# //\r\n// #----------------------------------------------------------------------# //\r\n\r\nangular.module('ec-employee-segments').directive('segmentEmployeeRecordPersonalPersonalContent', () => new PersonalContent('personal-content'));\r\n","/*@ngInject*/\r\nfunction logic() {\r\n\t// logic api\r\n\treturn {};\r\n}\r\nangular.module('ec-employee-segment-logic').factory('segmentEmployeeRecordPersonalPersonalContentLogic', logic);\r\n","import { State } from 'base-state';\r\n// #--------------------------------------------# //\r\n// #---- State (/employee-record/personnel) ----# //\r\n\r\n// view model that is shared by all segments on this route,\r\n// used for segment coordination. Define initial state here.\r\nconst routeVm = {};\r\n\r\nconst stateName = 'employeeRecord.personnel';\r\n\r\n// config object for ui-router\r\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\r\nconst stateConfig = {\r\n\turl: '/personnel',\r\n\ttemplateUrl: 'routes/employee-record/personnel/personnel.html',\r\n\t$permissions: (permissionSvc) => permissionSvc.isPermittedAction('employees', 'edit') ||\r\n\t\tpermissionSvc.isPermittedAction('employees', 'view')\r\n};\r\n\r\n// #-- END State (/employee-record/personnel) --# //\r\n// #--------------------------------------------# //\r\n\r\nangular.module('ec-employee').config( /*@ngInject*/ ($stateProvider) => {\r\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\r\n});\r\n","import { Segment } from 'base-segment';\r\n// #------------------------------------------------------------------------# //\r\n// #---- Segment (/employee-record/personnel/segment-personnel-content) ----# //\r\n\r\nclass PersonnelContent extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $scope, $stateParams) {\r\n\t\t// view model that is shared by all segments on this route,\r\n\t\t// used for segment coordination\r\n\t\tconst routeVm = $scope.routeVm; // jshint ignore:line\r\n\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentEmployeeRecordPersonnelPersonnelContentLogic'); // jshint ignore:line\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = { // jshint ignore:line\r\n\t\t\temployeeId: $stateParams.employeeId,\r\n\t\t};\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = {}; // jshint ignore:line\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/employee-record/personnel/segment-personnel-content) --# //\r\n// #------------------------------------------------------------------------# //\r\n\r\nangular.module('ec-employee-segments').directive('segmentEmployeeRecordPersonnelPersonnelContent', () => new PersonnelContent('personnel-content'));\r\n","/*@ngInject*/\r\nfunction logic(ssValidationHlp) {\r\n\t// logic api\r\n\treturn {\r\n\t\tvalidator: {\r\n\t\t\trequired: ssValidationHlp.required()\r\n\t\t}\r\n\t};\r\n}\r\nangular.module('ec-employee-segment-logic').factory('segmentEmployeeRecordPersonnelPersonnelContentLogic', logic);\r\n","import { Segment } from 'base-segment';\r\n// #----------------------------------------------------# //\r\n// #---- Segment (/employee-record/segment-content) ----# //\r\n\r\nclass Content extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $state, $scope) {\r\n\t\t// view model that is shared by all segments on this route,\r\n\t\t// used for segment coordination\r\n\t\tconst routeVm = $scope.routeVm;\r\n\r\n\t\t// put these objects on the scope so children can access them\r\n\t\t$scope.employeeVm = routeVm;\r\n\t\tconst employee = $scope.employee = $scope.employeeVm.emp;\r\n\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentEmployeeRecordContentLogic');\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\tcanViewEmploymentTab: logic.canViewEmploymentTab(employee.$permitted.props),\r\n\t\t\tcanViewMedicalFiles: logic.canViewMedicalFiles(employee.$permitted.props),\r\n\t\t\tcanViewPersonnelTab: logic.canViewPersonnelTab(employee.$permitted.props),\r\n\t\t\tcanViewCredentialTab: logic.canViewCredentialTab(employee.$permitted.props),\r\n\t\t\tcanViewEmergencyTab: logic.canViewEmergencyTab(employee.$permitted.props)\r\n\t\t};\r\n\r\n\t\tif ($state.is('base.employeeRecord.employment') && !vm.canViewEmploymentTab) { $state.go('base.employeeRecord.personal'); }\r\n\t\tif ($state.is('base.employeeRecord.medical') && !vm.canViewMedicalFiles) { $state.go('base.employeeRecord.personal'); }\r\n\t\tif ($state.is('base.employeeRecord.personnel') && !vm.canViewPersonnelTab) { $state.go('base.employeeRecord.personal'); }\r\n\t\tif ($state.is('base.employeeRecord.credentials') && !vm.canViewCredentialTab) { $state.go('base.employeeRecord.personal'); }\r\n\t\tif ($state.is('base.employeeRecord.emergency') && !vm.canViewEmergencyTab) { $state.go('base.employeeRecord.personal'); }\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = {} // jshint ignore:line\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/employee-record/segment-content) --# //\r\n// #----------------------------------------------------# //\r\n\r\nangular.module('ec-employee-segments').directive('segmentEmployeeRecordContent', () => new Content('content'));\r\n","/*@ngInject*/\r\nfunction logic(ssMultiInitiativeFeatureDetectorSvc, ssFlagSvc) {\r\n\r\n\t// logic api\r\n\treturn { canViewEmploymentTab, canViewEmergencyTab, canViewCredentialTab, canViewMedicalFiles, canViewPersonnelTab };\r\n\r\n\tfunction canViewMedicalFiles(permissions) {\r\n\t\tif (permissions.filesMedicalBenefits.view) { return true; }\r\n\t\tif (permissions.filesMedicalGeneralHealth.view) { return true; }\r\n\t\tif (permissions.filesMedicalLeave.view) { return true; }\r\n\t\tif (permissions.filesMedicalOther.view) { return true; }\r\n\t\tif (permissions.filesMedicalWorkersComp.view) { return true; }\r\n\t}\r\n\r\n\tfunction canViewPersonnelTab(permissions) {\r\n\t\tif (permissions.filesPersonnelContracts.view) { return true; }\r\n\t\tif (permissions.filesPersonnelDiscipline.view) { return true; }\r\n\t\tif (permissions.filesPersonnelEmploymentAuth.view) { return true; }\r\n\t\tif (permissions.filesPersonnelEmploymentStatus.view) { return true; }\r\n\t\tif (permissions.filesPersonnelOther.view) { return true; }\r\n\t\tif (permissions.filesPersonnelPayroll.view) { return true; }\r\n\t\tif (permissions.filesPersonnelPolicy.view) { return true; }\r\n\t\tif (permissions.filesPersonnelPreEmployment.view) { return true; }\r\n\t\tif (permissions.filesPersonnelTranscripts.view) { return true; }\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfunction canViewEmploymentTab(permissions) {\r\n\t\tif (permissions.hireDate.view) { return true; }\r\n\t\tif (permissions.seniorityDate.view) { return true; }\r\n\t\tif (permissions.tenureDate.view) { return true; }\r\n\t\tif (permissions.retirementSystem.view) { return true; }\r\n\t\tif (permissions.statusHistory.view) { return true; }\r\n\t\tif (permissions.assignments.view) { return true; }\r\n\t\tif (permissions.supervisor.view) { return true; }\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfunction canViewCredentialTab(permissions) {\r\n\t\treturn permissions.employeeCredentials.view && !ssFlagSvc.checkState('hrms-with-erp');\r\n\t}\r\n\r\n\tfunction canViewEmergencyTab(permissions) {\r\n\t\treturn permissions.emergencyContacts.view && ssMultiInitiativeFeatureDetectorSvc.isEmergencyContactsTabEnabled();\r\n\t}\r\n}\r\nangular.module('ec-employee-segment-logic').factory('segmentEmployeeRecordContentLogic', logic);\r\n","import {Segment} from 'base-segment';\r\n// #---------------------------------------------------# //\r\n// #---- Segment (/employee-record/segment-header) ----# //\r\n\r\nclass Header extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $scope, $state, $location, ssAsync, ssEventSvc, ssModalSvc, ssToastHlp, ssObjectHlp, ssMultiInitiativeFeatureDetectorSvc) {\r\n\r\n\t\t// view model that is shared by all segments on this route, used for segment coordination\r\n\t\tconst routeVm = $scope.routeVm;\r\n\r\n\t\tconst permissions = $scope.permissions = routeVm.emp.$permitted;\r\n\t\tconst viewingOwnProfile = routeVm.loggedInUserKey === routeVm.emp.id;\r\n\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentEmployeeRecordHeaderLogic');\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\tfullName: logic.getName(routeVm.emp),\r\n\t\t\tcanManageEmployee: ssObjectHlp.glean($scope, _ => _.$root.isPermitted.users.view, false),\r\n\t\t\tcanDeleteEmployee: permissions.actions.delete && !viewingOwnProfile && ssMultiInitiativeFeatureDetectorSvc.canDeleteEmployee()\r\n\t\t};\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { // eslint-disable-line\r\n\t\t\tmanageAccess() {\r\n\t\t\t\t$location.path(`/ec-useraccess/user/employee/${routeVm.emp.id}`);\r\n\t\t\t},\r\n\t\t\tdelete() {\r\n\t\t\t\tlet confirmation = {\r\n\t\t\t\t\ttitle: 'Delete this Employee',\r\n\t\t\t\t\tcontent: 'You are deleting this employee from Frontline Central. Once they are deleted, all information associated with this employee will be removed from Frontline Central and cannot be retrieved.',\r\n\t\t\t\t\tprimaryText: 'Delete',\r\n\t\t\t\t\tsecondaryText: 'Cancel'\r\n\t\t\t\t};\r\n\t\t\t\tssModalSvc.showDestructive(confirmation).then(() => {\r\n\t\t\t\t\trouteVm.refreshing = true;\r\n\t\t\t\t\tssAsync(function* () {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tyield routeVm.emp.$remove();\r\n\t\t\t\t\t\t\tssToastHlp.success('Employee has been deleted successfully.');\r\n\t\t\t\t\t\t\t$state.go('base.index');\r\n\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t\tssToastHlp.error('There was an error deleting the employee. Please try again later.');\r\n\t\t\t\t\t\t} finally {\r\n\t\t\t\t\t\t\trouteVm.refreshing = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// the employee is refreshed, update the name we show\r\n\t\tssEventSvc.on('ss-json-api.postSave.employees', emp => {\r\n\t\t\tvm.fullName = logic.getName(emp);\r\n\t\t}, $scope);\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/employee-record/segment-header) --# //\r\n// #---------------------------------------------------# //\r\n\r\nangular.module('ec-employee-segments').directive('segmentEmployeeRecordHeader', () => new Header('header'));\r\n","/*@ngInject*/\r\nfunction logic() {\r\n\t// logic api\r\n\treturn {\r\n\t\tgetName\r\n\t};\r\n\r\n\tfunction getName(emp) {\r\n\t\tvar name = emp._firstName;\r\n\t\tif (emp._lastName) {\r\n\t\t\tname += ' ' + emp._lastName;\r\n\t\t}\r\n\t\treturn name;\r\n\t}\r\n}\r\nangular.module('ec-employee-segment-logic').factory('segmentEmployeeRecordHeaderLogic', logic);\r\n","import { Segment } from 'base-segment';\r\n// #----------------------------------------------------# //\r\n// #---- Segment (/employee-record/segment-sidebar) ----# //\r\n\r\nclass Sidebar extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $scope, $stateParams, ssEmployeeApi, ssOrganizationSvc, ssAsync, ssEventSvc,\r\n\t\t\tssListSvc, ssAssignmentApi, ssJobTypeSvc, ssPositionsApi, ssDateByOrgHlp, enumEmployeeStatus) {\r\n\r\n\t\t// view model that is shared by all segments on this route, used for segment coordination\r\n\t\tconst routeVm = $scope.routeVm; // jshint ignore:line\r\n\t\tlet org = null;\r\n\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentEmployeeRecordSidebarLogic'); // jshint ignore:line\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\tloading: true\r\n\t\t};\r\n\r\n\t\tload();\r\n\r\n\t\t// employee is updated, update the view\r\n\t\tssEventSvc.on('module.employee.saved', load, $scope);\r\n\r\n\t\tfunction load() {\r\n\t\t\tssAsync(function*() {\r\n\t\t\t\tvm.loading = true;\r\n\t\t\t\tif (org == null) {\r\n\t\t\t\t\torg = yield ssOrganizationSvc.getActiveOrg();\r\n\t\t\t\t}\r\n\t\t\t\tif (vm.emp == null) {\r\n\t\t\t\t\tvm.emp = yield ssEmployeeApi.get({\r\n\t\t\t\t\t\tid: $stateParams.employeeId,\r\n\t\t\t\t\t\tfields: 'hireDate',\r\n\t\t\t\t\t\tinclude: 'phoneNumbers,emails,positions,jobTypes,statusHistory,assignments,supervisors'\r\n\t\t\t\t\t}, null, false);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tyield vm.emp.$refresh();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvm.permitted = vm.emp.$permitted.props;\r\n\r\n\t\t\t\tvm.hireDateTxt = vm.emp._hireDate != null ? ssDateByOrgHlp.utcIsoToRelativeMoment(vm.emp._hireDate, org).format('MM/DD/YYYY') : null;\r\n\t\t\t\tvm.emp.currentSupervisor = vm.emp._supervisors.find(x => ssDateByOrgHlp.isCurrent({ obj: x, fromProp: '_from', toProp: '_to', org }));\r\n\r\n\t\t\t\tvm.currentStatus = vm.emp._statusHistory.find(x => ssDateByOrgHlp.isCurrent({ obj: x, fromProp: '_from', toProp: '_to', org }));\r\n\t\t\t\tif (vm.currentStatus != null) {\r\n\t\t\t\t\tvm.currentStatus.name = enumEmployeeStatus.byValue(vm.currentStatus._statusId);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (vm.emp.$permitted.props.assignments.view) {\r\n\t\t\t\t\tgetAssignment();\r\n\t\t\t\t}\r\n\t\t\t\tvm.loading = false;\r\n\t\t\t})();\r\n\t\t}\r\n\r\n\t\tfunction getAssignment() {\r\n\t\t\tssAsync(function*() {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tlet positions = yield ssPositionsApi.getForEmployee({\r\n\t\t\t\t\t\tid: vm.emp.id,\r\n\t\t\t\t\t\tinclude: 'assignments'\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tpositions.sort((a, b) => {\r\n\t\t\t\t\t\treturn new Date(b._startDate) - new Date(a._startDate);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tlet assignments = yield positions.map((position) => {\r\n\t\t\t\t\t\treturn getAssignmentWithDetails(position, position._assignments[0].id);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif (assignments) {\r\n\t\t\t\t\t\tpositions.forEach((p, i) => {\r\n\t\t\t\t\t\t\tp.assignment = assignments[i];\r\n\t\t\t\t\t\t\t// ** We must remove positions from here as this creates a circular reference during JSON serialization **\r\n\t\t\t\t\t\t\t//\tthis is an artifact of mutators...\r\n\t\t\t\t\t\t\tdelete p.assignment.position;\r\n\t\t\t\t\t\t\t// ** We must remove positions from here as this creates a circular reference during JSON serialization **\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvm.emp.primaryPosition = positions.find(p => p.assignment._isPrimary && ssDateByOrgHlp.isCurrent({\r\n\t\t\t\t\t\tobj: p.assignment,\r\n\t\t\t\t\t\tfromProp: '_startDateUtc',\r\n\t\t\t\t\t\ttoProp: '_endDateUtc',\r\n\t\t\t\t\t\torg\r\n\t\t\t\t\t}));\r\n\r\n\t\t\t\t\tif (vm.emp.primaryPosition == null) { return; }\r\n\r\n\t\t\t\t\tvm.emp.primaryAssignment = vm.emp.primaryPosition.assignment;\r\n\r\n\t\t\t\t\tssListSvc.getByExternalId('position.types').then(types => {\r\n\t\t\t\t\t\tvm.emp.primaryAssignment.name = ssListSvc.mapName(vm.emp.primaryPosition._name, types);\r\n\t\t\t\t\t});\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tconsole && console.error && console.error('Error getting assignments', error);\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t}\r\n\r\n\t\tfunction getAssignmentWithDetails(position, assignId) {\r\n\t\t\treturn ssAsync(function*() {\r\n\r\n\t\t\t\tlet assignment = yield ssAssignmentApi.getAssignment({\r\n\t\t\t\t\tid: position.id,\r\n\t\t\t\t\tassignmentId: assignId,\r\n\t\t\t\t\tinclude: 'details'\r\n\t\t\t\t});\r\n\t\t\t\tif (!assignment) { return null; }\r\n\t\t\t\tassignment.initialDetails = assignment._details.find(d => d.id === assignment._currentDetailsId);\r\n\r\n\t\t\t\t// TODO REMOVE THIS CODE FOLLOWING.\r\n\t\t\t\t// -----------------------------------------------\r\n\t\t\t\t//assignment.initialDetails._payRate = null;\r\n\t\t\t\t//assignment.initialDetails._payRateFrequency = null;\r\n\t\t\t\t// -----------------------------------------------\r\n\r\n\t\t\t\tif (assignment.initialDetails != null) {\r\n\t\t\t\t\tassignment.currentDetails = [\r\n\t\t\t\t\t\t'_assignmentId',\r\n\t\t\t\t\t\t'_fTE',\r\n\t\t\t\t\t\t'_hoursPerDay',\r\n\t\t\t\t\t\t'_paidHolidaysPerSchoolYear',\r\n\t\t\t\t\t\t'_payLane',\r\n\t\t\t\t\t\t'_payPeriodsPerYear',\r\n\t\t\t\t\t\t'_payStep',\r\n\t\t\t\t\t\t'_personalDaysPerSchoolYear',\r\n\t\t\t\t\t\t'_sickDaysPerSchoolYear',\r\n\t\t\t\t\t\t'_fromDateUtc',\r\n\t\t\t\t\t\t'_toDateUtc',\r\n\t\t\t\t\t\t'_vacationDaysPerSchoolYear',\r\n\t\t\t\t\t\t'_workDaysPerYear',\r\n\t\t\t\t\t\t'_payRate',\r\n\t\t\t\t\t\t'_payRateFrequency'\r\n\t\t\t\t\t].reduce(function(prev, key) {\r\n\t\t\t\t\t\tprev[key] = assignment.initialDetails[key];\r\n\t\t\t\t\t\treturn prev;\r\n\t\t\t\t\t}, {});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tassignment.currentDetails = {};\r\n\t\t\t\t}\r\n\r\n\t\t\t\tassignment.position = position;\r\n\r\n\t\t\t\tlet jobTypeId = assignment.position._jobType.id;\r\n\t\t\t\tassignment.jobType = yield ssJobTypeSvc.getJobTypeById(jobTypeId);\r\n\r\n\t\t\t\tassignment.currentJobTypeDetails = assignment.jobType._currentJobTypeDetail;\r\n\r\n\t\t\t\treturn assignment;\r\n\t\t\t})();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/employee-record/segment-sidebar) --# //\r\n// #----------------------------------------------------# //\r\n\r\nangular.module('ec-employee-segments').directive('segmentEmployeeRecordSidebar', () => new Sidebar('sidebar'));\r\n","/*@ngInject*/\r\nfunction logic() {\r\n\t// logic api\r\n\treturn {\r\n\t\t\r\n\t};\r\n}\r\nangular.module('ec-employee-segment-logic').factory('segmentEmployeeRecordSidebarLogic', logic);\r\n","/* globals moment */\r\nimport { State } from 'base-state';\r\n// #------------------------# //\r\n// #---- State (/index) ----# //\r\n\r\n// view model that is shared by all segments on this route,\r\n// used for segment coordination. Define initial state here.\r\nconst routeVm = {\r\n\tlocation: [],\r\n\tjobType: [],\r\n\tdepartment: [],\r\n\temploymentGroup: [],\r\n\tstatus: [],\r\n\tfromHireDate: null,\r\n\ttoHireDate: null,\r\n\teffectiveDate: moment().endOf('day').toISOString()\r\n};\r\n\r\nconst stateName = 'index';\r\n\r\n// config object for ui-router\r\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\r\nconst stateConfig = {\r\n\turl: '/',\r\n\ttemplateUrl: 'routes/index/index.html',\r\n\tresolve: {\r\n\t\torg: /*@ngInject*/ (ssOrganizationSvc, ssAsync, ssMultiInitiativeFeatureDetectorSvc) => {\r\n\t\t\treturn (ssAsync(function*() {\r\n\t\t\t\trouteVm.org = yield ssOrganizationSvc.getActiveOrg();\r\n\t\t\t\trouteVm.isGlobalDirectory = ssMultiInitiativeFeatureDetectorSvc.isGlobalDirectoryEnabled();\r\n\t\t\t})());\r\n\t\t},\r\n\t\t$title: /*@ngInject*/ () => {\r\n\t\t\treturn 'Frontline Central - Employees';\r\n\t\t}\r\n\t},\r\n\t$permissions: (permissionSvc) => permissionSvc.isPermittedAction('bundle', 'viewothers'),\r\n};\r\n\r\n// #-- END State (/index) --# //\r\n// #------------------------# //\r\n\r\nangular.module('ec-employee').config( /*@ngInject*/ ($stateProvider) => {\r\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\r\n});\r\n","import {\r\n\tSegment\r\n} from 'base-segment';\r\n// #-----------------------------------------# //\r\n// #---- Segment (/index/segment-filter) ----# //\r\n\r\nclass Filter extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $scope, $state, sleepHlp, $timeout, $window, ssAsync, enumEmployeeStatus, ssStringHlp, ssValidationHlp,\r\n\t\tssLocationSvc, ssJobTypeSvc, ssDepartmentSvc, ssEmployeeApi, ssToastHlp,\r\n\t\tssOptionalFieldGroupHlp, ssModalSvc, moment, sortFilterHlp, ssEnum, ssListSvc,\r\n\t\tssDateByOrgHlp, ssOrganizationSvc, ssMultiInitiativeFeatureDetectorSvc) {\r\n\t\tvar addEmployee;\r\n\t\tvar org;\r\n\r\n\t\tconst ssnDashRegex = /^\\d{3}-\\d{2}-\\d{4}$/;\r\n\t\tconst ssnNoDashRegex = /^\\d{9}$/;\r\n\t\tconst routeVm = $scope.routeVm;\r\n\t\tconst emailType = ssEnum.emailType;\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentIndexFilterLogic'); // jshint ignore:line\r\n\r\n\t\tconst validator = $scope.validator = {\r\n\t\t\tssn: ssValidationHlp.ssn(),\r\n\t\t\temail: ssValidationHlp.email(),\r\n\t\t\trequired: ssValidationHlp.required(),\r\n\t\t\texternalId: ssValidationHlp.string({\r\n\t\t\t\tmaxLength: 100\r\n\t\t\t})\r\n\t\t};\r\n\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\tcanCreateEmployee: ssMultiInitiativeFeatureDetectorSvc.canCreateEmployee(),\r\n\t\t\tshowEmploymentGroups: ssMultiInitiativeFeatureDetectorSvc.showEmploymentGroups(),\r\n\t\t\ttotalEmployeesAriaLabel: '',\r\n\t\t\tdisableEmploymentGroup: false,\r\n\t\t\tdisableJobType: false,\r\n\t\t\tloading: true,\r\n\t\t\tformOpened: true,\r\n\t\t\terrors: '',\r\n\t\t\tstatus: enumEmployeeStatus.getEnums().map(o => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t_name: ssStringHlp.toProperCase(o.name.toLowerCase()),\r\n\t\t\t\t\tid: o.value\r\n\t\t\t\t};\r\n\t\t\t}),\r\n\t\t\tsaving: false,\r\n\t\t\tsearch: '',\r\n\t\t\tshowClear: false,\r\n\t\t\tdisableSearch: true, // disable search until the first time results loads; enable after\r\n\t\t\temp: {},\r\n\t\t\tsortBy: 0,\r\n\t\t\tsortByOptions: [{\r\n\t\t\t\tname: 'Last Name A-Z',\r\n\t\t\t\tariaLabel: 'Sort directory by Last name ascending',\r\n\t\t\t\tvalue: {\r\n\t\t\t\t\tfield: 'lastname',\r\n\t\t\t\t\tdir: 'asc'\r\n\t\t\t\t}\r\n\t\t\t}, {\r\n\t\t\t\tname: 'Last Name Z-A',\r\n\t\t\t\tariaLabel: 'Sort directory by Last name descending',\r\n\t\t\t\tvalue: {\r\n\t\t\t\t\tfield: 'lastname',\r\n\t\t\t\t\tdir: 'desc'\r\n\t\t\t\t}\r\n\t\t\t}, {\r\n\t\t\t\tname: 'Hire Date',\r\n\t\t\t\tariaLabel: 'Sort directory by hire date',\r\n\t\t\t\tvalue: {\r\n\t\t\t\t\tfield: 'hiredate',\r\n\t\t\t\t\tdir: 'desc'\r\n\t\t\t\t}\r\n\t\t\t}],\r\n\r\n\t\t\tshowStatusFilter: $scope.$root.isPermitted.employees.edit && $scope.$root.isPermitted.employees.view\r\n\t\t};\r\n\r\n\t\tif (!$scope.$root.isPermitted.employees.edit) {\r\n\t\t\t// remove hire date\r\n\t\t\tvm.sortByOptions.splice(2, 1);\r\n\t\t}\r\n\r\n\t\t// default to active employees\r\n\t\tif (routeVm.status == null || routeVm.status.length === 0) {\r\n\t\t\trouteVm.status = [vm.status.find(s => s.id === enumEmployeeStatus.active)];\r\n\t\t}\r\n\t\trouteVm.status.forEach(option => {\r\n\t\t\toption.checked = true;\r\n\t\t});\r\n\r\n\t\t// default to name\r\n\t\trouteVm.sortBy = vm.sortByOptions[0].value;\r\n\r\n\t\t// Prepare the data for the dropdowns\r\n\t\tssAsync(function* () {\r\n\t\t\ttry {\r\n\t\t\t\tvm.location = yield ssLocationSvc.getAll();\r\n\t\t\t\tvm.jobType = yield ssJobTypeSvc.getAll();\r\n\t\t\t\tvm.department = yield ssDepartmentSvc.getAll();\r\n\t\t\t\tssListSvc.getByExternalId('jobtype.employmentgroups').then(data => {\r\n\t\t\t\t\tvm.employmentGroups = data.map((v) => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t'_name': v.name,\r\n\t\t\t\t\t\t\t'id': v.value\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t\torg = yield ssOrganizationSvc.getActiveOrg();\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.error('ERROR', e);\r\n\t\t\t}\r\n\t\t})();\r\n\r\n\t\tconst go = $scope.go = { // jshint ignore:line\r\n\t\t\texport () {\r\n\t\t\t\tlet content = 'Generate and download report for {0} employee{1}?';\r\n\t\t\t\tcontent = content.replace('{0}', routeVm.totalEmployees)\r\n\t\t\t\t\t.replace('{1}', routeVm.totalEmployees === 1 ? '' : 's');\r\n\t\t\t\tvar modalConfig = {\r\n\t\t\t\t\ttitle: '',\r\n\t\t\t\t\tcontent: content,\r\n\t\t\t\t\tprimaryText: 'Download',\r\n\t\t\t\t\tsecondaryText: 'Cancel',\r\n\t\t\t\t\tsize: 'medium'\r\n\t\t\t\t};\r\n\r\n\t\t\t\tvar searchString = '';\r\n\t\t\t\tif (typeof routeVm.search === 'string') {\r\n\t\t\t\t\tsearchString = routeVm.search.trim();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Get the hire dates setup correctly for use in the filter.\r\n\t\t\t\t//\t* ensure that they are either NULL (not passed in filter) or\r\n\t\t\t\t//\t* Noon Org time in UTC\r\n\t\t\t\tconst fromHireDate = routeVm.fromHireDate ? ssDateByOrgHlp.startOfDayRelativeTo(moment(routeVm.fromHireDate), org) : null;\r\n\t\t\t\tconst toHireDate = routeVm.toHireDate ? ssDateByOrgHlp.endOfDayRelativeTo(moment(routeVm.toHireDate), org) : null;\r\n\r\n\t\t\t\tvar filter = Object.assign({}, {\r\n\t\t\t\t\t\tinclude: 'StatusHistory,EmploymentHistory,Addresses,PhoneNumbers,Emails,EmergencyContacts,Credentials,positions,assignments,locations,jobtypes,payschedules,supervisors',\r\n\t\t\t\t\t\tlimit: 999999999\r\n\t\t\t\t\t},\r\n\t\t\t\t\tsortFilterHlp.sortOrNull(routeVm.sortBy),\r\n\t\t\t\t\tsortFilterHlp.filterOrNull(routeVm.location, 'location'),\r\n\t\t\t\t\tsortFilterHlp.filterOrNull(routeVm.jobType, 'jobType'),\r\n\t\t\t\t\tsortFilterHlp.filterOrNull(routeVm.department, 'department'),\r\n\t\t\t\t\tsortFilterHlp.filterOrNull(routeVm.status, 'status'),\r\n\t\t\t\t\tsortFilterHlp.filterOrNull(routeVm.employmentGroup, 'employmentGroup'),\r\n\t\t\t\t\tsortFilterHlp.searchFilter(searchString, 'firstname'),\r\n\t\t\t\t\tsortFilterHlp.searchFilter(searchString, 'lastname'),\r\n\t\t\t\t\tsortFilterHlp.filterDateOrNull(fromHireDate, 'hiredatestart'),\r\n\t\t\t\t\tsortFilterHlp.filterDateOrNull(toHireDate, 'hiredateend')\r\n\t\t\t\t);\r\n\r\n\t\t\t\tvar asOfTimeUtc = routeVm.effectiveDate ? ssDateByOrgHlp.safeAsOfDateRelativeTo(moment(routeVm.effectiveDate).startOf('day'), org) : '';\r\n\r\n\t\t\t\t// if the as of date is the same as today then we don't need the as of date\r\n\t\t\t\tif (moment(asOfTimeUtc).format('MM/DD/YYYY') !== ssDateByOrgHlp.safeNowRelativeTo(org).format(\"MM/DD/YYY\")) {\r\n\t\t\t\t\t// add the asOfTimeUtc\r\n\t\t\t\t\tfilter = Object.assign(filter, {\r\n\t\t\t\t\t\t'asOfTimeUtc': asOfTimeUtc\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tssModalSvc.showStandard(modalConfig).then(() => {\r\n\t\t\t\t\t\t$scope.$emit('please-wait', filter);\r\n\t\t\t\t\t},\r\n\t\t\t\t\t(err) => {\r\n\t\t\t\t\t\tconsole.error(err);\r\n\t\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tvalidateOptional(field) {\r\n\t\t\t\tvar ret = true;\r\n\t\t\t\tif (field == null) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn ret;\r\n\t\t\t},\r\n\t\t\tvalidateOr() {\r\n\t\t\t\treturn ssOptionalFieldGroupHlp.validate([vm.emp._sSN, vm.emp._externalId], 'Please enter a SSN or an External ID.');\r\n\t\t\t},\r\n\t\t\tclear() {\r\n\t\t\t\trouteVm.location = [];\r\n\t\t\t\trouteVm.jobType = [];\r\n\t\t\t\trouteVm.department = [];\r\n\t\t\t\trouteVm.employmentGroup = [];\r\n\t\t\t\trouteVm.fromHireDate = '';\r\n\t\t\t\trouteVm.toHireDate = '';\r\n\t\t\t\trouteVm.effectiveDate = ''\r\n\t\t\t\trouteVm.search = '';\r\n\r\n\t\t\t\tvm.location.forEach(uncheck);\r\n\t\t\t\tvm.jobType.forEach(uncheck);\r\n\t\t\t\tvm.department.forEach(uncheck);\r\n\t\t\t\tvm.status.forEach(uncheck);\r\n\r\n\t\t\t\t// on clear, if we are showing the status filter, then do a real clear on status\r\n\t\t\t\tif (vm.showStatusFilter) {\r\n\t\t\t\t\trouteVm.status = [];\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// otherwise default to active search\r\n\t\t\t\t\trouteVm.status = [vm.status.find(s => s.id === enumEmployeeStatus.active)];\r\n\t\t\t\t\trouteVm.status.forEach(option => {\r\n\t\t\t\t\t\toption.checked = true;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// default to name\r\n\t\t\t\trouteVm.sortBy = vm.sortByOptions[0].value;\r\n\t\t\t},\r\n\r\n\t\t\tasyncCheck(val) {\r\n\t\t\t\tvar err = [];\r\n\r\n\t\t\t\tif (val.length > 10) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\tif (val.length < 10) {\r\n\t\t\t\t\terr.push('needs to be at least 10');\r\n\t\t\t\t}\r\n\t\t\t\tif (val.length < 5) {\r\n\t\t\t\t\terr.push('keep going');\r\n\t\t\t\t}\r\n\t\t\t\treturn err;\r\n\t\t\t},\r\n\t\t\tclose() {\r\n\t\t\t\tvm.formOpened = false;\r\n\t\t\t\tvm.errors = '';\r\n\t\t\t\tvm.emp = {};\r\n\t\t\t\t$scope.$emit('ss-menu-close');\r\n\t\t\t},\r\n\t\t\tvalidateExternalId() {\r\n\t\t\t\tif (vm.emp._externalId == null) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn validator.externalId(vm.emp._externalId);\r\n\t\t\t},\r\n\t\t\tadd() {\r\n\t\t\t\tif (addEmployee == null) {\r\n\r\n\t\t\t\t\tif ((vm.emp._sSN != null && vm.emp._sSN === '') && (vm.emp._externalId != null && vm.emp._externalId === '')) {\r\n\t\t\t\t\t\tif (vm.emp._sSN != null && !ssnDashRegex.test(vm.emp._sSN) && !ssnNoDashRegex.test(vm.emp._sSN)) {\r\n\t\t\t\t\t\t\tvm.errors = 'SSN is not formatted correctly. ###-##-####';\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// final check for valid form\r\n\t\t\t\t\tif (!go.validateOr(vm.emp._sSN, vm.emp._externalId)) {\r\n\t\t\t\t\t\tvm.errors = 'Please enter a SSN or an External ID.';\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvm.saving = true;\r\n\t\t\t\t\tif (ssnNoDashRegex.test(vm.emp._sSN)) {\r\n\t\t\t\t\t\t// add dashes\r\n\t\t\t\t\t\tvm.emp._sSN = vm.emp._sSN.substring(0, 3) + '-' + vm.emp._sSN.substring(3, 5) + '-' + vm.emp._sSN.substring(5);\r\n\t\t\t\t\t}\r\n\t\t\t\t\taddEmployee = ssAsync(function* () {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tlet employee = yield ssEmployeeApi.add({\r\n\t\t\t\t\t\t\t\tinclude: 'emails'\r\n\t\t\t\t\t\t\t}, vm.emp);\r\n\t\t\t\t\t\t\tif (vm.emp._workEmail) {\r\n\t\t\t\t\t\t\t\temployee._emails.push({\r\n\t\t\t\t\t\t\t\t\t_emailAddress: vm.emp._workEmail,\r\n\t\t\t\t\t\t\t\t\t_emailType: emailType.work,\r\n\t\t\t\t\t\t\t\t\t_isPrimary: false\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (vm.emp._personalEmail) {\r\n\t\t\t\t\t\t\t\temployee._emails.push({\r\n\t\t\t\t\t\t\t\t\t_emailAddress: vm.emp._personalEmail,\r\n\t\t\t\t\t\t\t\t\t_emailType: emailType.personal,\r\n\t\t\t\t\t\t\t\t\t_isPrimary: false\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tyield employee._emails.$save();\r\n\t\t\t\t\t\t\tyield sleepHlp.sleep();\r\n\t\t\t\t\t\t\tif (employee.id != null) {\r\n\t\t\t\t\t\t\t\t$state.go('base.employeeRecord.personal', {\r\n\t\t\t\t\t\t\t\t\temployeeId: employee.id,\r\n\t\t\t\t\t\t\t\t\taction: '-edit'\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\taddEmployee = null;\r\n\t\t\t\t\t\t\t\tvm.saving = false;\r\n\t\t\t\t\t\t\t\tssToastHlp.error('There was an error adding the employee. Please try again later.');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\t\taddEmployee = null;\r\n\t\t\t\t\t\t\tvm.saving = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t$scope.$watch('routeVm.totalEmployees', (nv, ov) => {\r\n\t\t\tif (!nv) {\r\n\t\t\t\tnv = 0;\r\n\t\t\t}\r\n\t\t\tvm.totalEmployeesAriaLabel = nv + ' Employees found'\r\n\t\t\tif (nv === 1) {\r\n\t\t\t\tvm.totalEmployeesAriaLabel = nv + ' Employee found'\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t$scope.$on('please-wait', (event, val) => {\r\n\t\t\tvar tempUrl;\r\n\r\n\t\t\tvar modalConfig = {\r\n\t\t\t\ttitle: 'Please wait...',\r\n\t\t\t\tcontent: '',\r\n\t\t\t\tsize: 'small'\r\n\t\t\t};\r\n\r\n\t\t\t$timeout(() => {\r\n\t\t\t\tssModalSvc.showWait(modalConfig);\r\n\r\n\t\t\t\tssAsync(function* () {\r\n\t\t\t\t\ttempUrl = yield ssEmployeeApi.exportEmployee(val);\r\n\t\t\t\t})().then(() => {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\t$window.open(tempUrl._string, '_blank', '');\r\n\t\t\t\t\t} catch(e) {}\r\n\t\t\t\t\tssModalSvc.clearDialog();\r\n\t\t\t\t});\r\n\t\t\t}, 100);\r\n\t\t});\r\n\r\n\t\t$scope.$watch('vm.emp._sSN', (nv, ov) => {\r\n\t\t\tif (nv == null) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar regex = /^(\\d{3})\\s?\\-?\\s?(\\d{2})\\s?\\-?\\s?(\\d{4})$/;\r\n\t\t\tvar formatter = '$1-$2-$3';\r\n\t\t\tif (nv.length > 11) {\r\n\t\t\t\tnv = nv.substring(0, 11);\r\n\t\t\t}\r\n\t\t\tvm.emp._sSN = nv.replace(regex, formatter);\r\n\r\n\t\t});\r\n\r\n\t\t$scope.$on('ss-menu-closed', (event, elem, ddElem) => {\r\n\t\t\tif (!vm.formOpened) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (ddElem.hasClass('create-form')) {\r\n\t\t\t\tvm.formOpened = false;\r\n\t\t\t\t$scope.$root.safeDigest($scope);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t$scope.$on('employee-directory-loading', (event, val) => {\r\n\t\t\tvm.loading = val.loading;\r\n\t\t});\r\n\r\n\t\t$scope.$watchGroup(['routeVm.location.length', 'routeVm.jobType.length', 'routeVm.department.length',\r\n\t\t\t'routeVm.status.length', 'routeVm.search', 'routeVm.sortBy', 'routeVm.employmentGroup.length', 'routeVm.fromHireDate',\r\n\t\t\t'routeVm.toHireDate', 'routeVm.effectiveDate'\r\n\t\t], (nv, ov) => {\r\n\t\t\tvm.showClear = routeVm.location.length > 0 ||\r\n\t\t\t\trouteVm.jobType.length > 0 ||\r\n\t\t\t\trouteVm.department.length > 0 ||\r\n\t\t\t\t(routeVm.search != null && routeVm.search.length > 0) ||\r\n\t\t\t\trouteVm.sortBy !== vm.sortByOptions[0].value ||\r\n\t\t\t\trouteVm.fromHireDate ||\r\n\t\t\t\trouteVm.toHireDate ||\r\n\t\t\t\trouteVm.employmentGroup.length > 0 ||\r\n\t\t\t\trouteVm.effectiveDate;\r\n\r\n\t\t\t// We can only search by job type or employment group.  not both.  Deselect the other ones\r\n\t\t\tif (routeVm.jobType.length > 0) {\r\n\t\t\t\tvm.disableEmploymentGroup = true;\r\n\t\t\t\tvm.disableJobType = false;\r\n\t\t\t\tif (routeVm.employmentGroup.length > 0) {\r\n\t\t\t\t\trouteVm.employmentGroup = [];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (routeVm.jobType.length === 0) {\r\n\t\t\t\tvm.disableEmploymentGroup = false;\r\n\t\t\t}\r\n\t\t\tif (routeVm.employmentGroup.length > 0) {\r\n\t\t\t\tvm.disableEmploymentGroup = false;\r\n\t\t\t\tvm.disableJobType = true;\r\n\t\t\t\tif (routeVm.jobType.length > 0) {\r\n\t\t\t\t\trouteVm.jobType = [];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (routeVm.employmentGroup.length === 0) {\r\n\t\t\t\tvm.disableJobType = false;\r\n\t\t\t}\r\n\r\n\t\t\tif (vm.showClear) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (vm.showStatusFilter) {\r\n\t\t\t\tvm.showClear = routeVm.status.length > 0;\r\n\t\t\t} else {\r\n\t\t\t\t// show clear if not default status\r\n\t\t\t\tvm.showClear = !(routeVm.status.length === 1 && routeVm.status[0].id === enumEmployeeStatus.active);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// broadcast from segment-results\r\n\t\t$scope.$on('employee-directory-loading', (event, args) => {\r\n\t\t\tif (args != null && args.loading === false) {\r\n\t\t\t\tvm.disableSearch = false;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tfunction uncheck(item) {\r\n\t\t\titem.checked = false;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n// #-- END Segment (/index/segment-filter) --# //\r\n// #-----------------------------------------# //\r\n\r\nangular.module('ec-employee-segments').directive('segmentIndexFilter', () => new Filter('filter'));\r\n","/*@ngInject*/\r\nfunction logic() {\r\n\t// logic api\r\n\treturn {\r\n\t\t/**\r\n\t\t * Filter out all of the distinct Employment Groups from the list of job types\r\n\t\t *\r\n\t\t * @param {array} jobTypes - The array of job type objects to distill distinct employment groups from\r\n\t\t * @return {array} unique employment groups for the given job types\r\n\t\t */\r\n\t\tfilterBarganingUnits: (jobTypes) => {\r\n\t\t\tlet result = [];\r\n\r\n\t\t\tjobTypes.forEach(element => {\r\n\t\t\t\tif (element.employmentGroup && element.employmentGroup.id.length) {\r\n\r\n\t\t\t\t\tif (!result.find((item) => {\r\n\t\t\t\t\t\treturn item._name === element.employmentGroup.name\r\n\t\t\t\t\t})) {\r\n\t\t\t\t\t\tresult.push({\r\n\t\t\t\t\t\t\t_name: element.employmentGroup.name,\r\n\t\t\t\t\t\t\tid: element.employmentGroup.id\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn result\r\n\t\t}\r\n\t};\r\n}\r\nangular.module('ec-employee-segment-logic').factory('segmentIndexFilterLogic', logic);\r\n","import { Segment } from 'base-segment';\r\n// #------------------------------------------# //\r\n// #---- Segment (/index/segment-results) ----# //\r\n\r\nclass Results extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $scope, $rootScope, moment, ssAsync, ssDebounce, ssEmployeeApi, enumEmployeeStatus, ssListSvc, sortFilterHlp, ssEmployeeAssignmentHlp, ssDateByOrgHlp, ssToastHlp) {\r\n\r\n\t\t// view model that is shared by all segments on this route,\r\n\t\t// used for segment coordination\r\n\t\tconst routeVm = $scope.routeVm;\r\n\t\tconst org = routeVm.org;\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentIndexResultsLogic'); // jshint ignore:line\r\n\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\temployees: [],\r\n\t\t\tshowInfScroll: true,\r\n\t\t\tloading: false,\r\n\t\t\tshowNameLinks: true\r\n\t\t};\r\n\t\t\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { // jshint ignore:line\r\n\t\t\t/**\r\n\t\t\t* Generates an href for the directory/report name hyperlink based upon feature flags and the state of the employee data\r\n\t\t\t* @param {Object} emp - the Employee object representing a row in the directory/report data set\r\n\t\t\t*/\r\n\t\t\tgetHref(emp) {\r\n\t\t\t\tvar ret = `/ec-employee/record/${emp.id}`;\r\n\r\n\t\t\t\tif (routeVm.isGlobalDirectory) {\r\n\t\t\t\t\t// If we don't have an orgPersonId for some reason set the url to an empty string\r\n\t\t\t\t\tret = emp._orgPersonId ? `/ec-directory/person-detail/${emp._orgPersonId}/personal` : '';\r\n\t\t\t\t}\r\n\t\t\t\treturn ret;\r\n\t\t\t},\r\n\r\n\t\t//\tGets the employee name\r\n\t\t\tgetEmployeeName(e) {\r\n\t\t\t\tlet ret = e._lastName == null ? '' : e._lastName;\r\n\t\t\t\tif (ret.length && e._firstName != null && e._firstName.length) { ret += ', '; }\r\n\t\t\t\tret += e._firstName == null ? '' : e._firstName;\r\n\t\t\t\treturn ret;\r\n\t\t\t},\r\n\t\t\t/**\r\n\t\t\t* Should we render the employee name as a link on the employee directory / employee data report\r\n\t\t\t* @param emnployee {object} the employee object representing a row in the grid\r\n\t\t\t* @remarks - if a DIP org has null orgIds don't show broken links, just show text.\r\n\t\t\t**/\r\n\t\t\tshowNameLinks(employee) {\r\n\t\t\t\treturn routeVm.isGlobalDirectory && employee._orgPersonId == null ? false : true;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst pageSize = 50;\r\n\t\tvar firstRun = true;\r\n\t\tvar currentPage = 0;\r\n\t\tvar currentRequest = null;\r\n\t\tvar positionTypes = [];\r\n\r\n\t\tssListSvc.getByExternalId('position.types').then(function(types) {\r\n\t\t\tpositionTypes = types;\r\n\t\t});\r\n\r\n\t\tconst debounce = ssDebounce(() => {\r\n\t\t\tfilterResults();\r\n\t\t}, 350);\r\n\r\n\t\t$scope.enumEmployeeStatus = enumEmployeeStatus; // jshint ignore:line\r\n\r\n\t\t$scope.$watch('routeVm.location.length', debounce);\r\n\t\t$scope.$watch('routeVm.jobType.length', debounce);\r\n\t\t$scope.$watch('routeVm.department.length', debounce);\r\n\t\t$scope.$watch('routeVm.status.length', debounce);\r\n\t\t$scope.$watch('routeVm.employmentGroup.length', debounce);\r\n\t\t$scope.$watch('routeVm.fromHireDate', debounce);\r\n\t\t$scope.$watch('routeVm.toHireDate', debounce);\r\n\t\t$scope.$watch('routeVm.effectiveDate', debounce);\r\n\t\t$scope.$watch('routeVm.search', debounce);\r\n\t\t$scope.$watch('routeVm.sortBy', debounce);\r\n\r\n\t\tlet employeeInclude = 'phoneNumbers,emails,positions,jobtypes,locations,assignments';\r\n\r\n\t\tif ($scope.$root.isPermitted.employees.edit) {\r\n\t\t\temployeeInclude += ',statusHistory';\r\n\t\t}\r\n\r\n\t\t$scope.refreshResults = refreshResults;\r\n\r\n\t\tfunction refreshResults() {\r\n\t\t\tif (!vm.showInfScroll || vm.loading) { return; }\r\n\t\t\tif (currentRequest != null) {\r\n\t\t\t\tcurrentRequest.$abort();\r\n\t\t\t\tcurrentRequest = null;\r\n\t\t\t}\r\n\t\t\t// set to prevent multiple calls from firing at the same time on scroll\r\n\t\t\tvm.loading = true;\r\n\r\n\t\t\t// Tell listeners (the filter segment) that the page is loading data\r\n\t\t\t$rootScope.$broadcast('employee-directory-loading', { loading: true });\r\n\t\t\tcurrentRequest = ssAsync(function*() {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tvar searchString = '';\r\n\t\t\t\t\tif (typeof routeVm.search === 'string') {\r\n\t\t\t\t\t\tsearchString = routeVm.search.trim();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcurrentPage++;\r\n\r\n\t\t\t\t\t// Get the hire dates setup correctly for use in the filter.\r\n\t\t\t\t\t//\t* ensure that they are either NULL (not passed in filter) or\r\n\t\t\t\t\t//\t* Noon Org time in UTC\r\n\t\t\t\t\tconst fromHireDate = routeVm.fromHireDate ? ssDateByOrgHlp.startOfDayRelativeTo(new moment(routeVm.fromHireDate), org) : null;\r\n\t\t\t\t\tconst toHireDate = routeVm.toHireDate ? ssDateByOrgHlp.endOfDayRelativeTo(new moment(routeVm.toHireDate), org) : null;\r\n\r\n\t\t\t\t\tvar searchFilter = Object.assign({}, {\r\n\t\t\t\t\t\tlocation: sortFilterHlp.filterOrNullForPost(routeVm.location),\r\n\t\t\t\t\t\tjobtype: sortFilterHlp.filterOrNullForPost(routeVm.jobType),\r\n\t\t\t\t\t\tdepartment: sortFilterHlp.filterOrNullForPost(routeVm.department),\r\n\t\t\t\t\t\tstatus: sortFilterHlp.filterOrNullForPost(routeVm.status),\r\n\t\t\t\t\t\temploymentgroup: sortFilterHlp.filterOrNullForPost(routeVm.employmentGroup),\r\n\t\t\t\t\t\tfullname: searchString,\r\n\t\t\t\t\t\thiredatestart: fromHireDate,\r\n\t\t\t\t\t\thiredateend: toHireDate\r\n\t\t\t\t\t})\r\n\t\t\t\t\tObject.keys(searchFilter).forEach((key) => (searchFilter[key] == null) && delete searchFilter[key]);\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar sortFilter = Object.assign({}, {\r\n\t\t\t\t\t\t[routeVm.sortBy.field]: routeVm.sortBy.dir\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t\tvar filter = Object.assign({}, {\r\n\t\t\t\t\t\t\tfields: 'firstName,lastName,hireDate',\r\n\t\t\t\t\t\t\tinclude: employeeInclude,\r\n\t\t\t\t\t\t\toffset: (currentPage - 1) * pageSize,\r\n\t\t\t\t\t\t\tlimit: pageSize,\r\n\t\t\t\t\t\t\tfilter: searchFilter,\r\n\t\t\t\t\t\t\tsort: sortFilter\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tvar asOfTimeUtc = routeVm.effectiveDate ? ssDateByOrgHlp.safeAsOfDateRelativeTo(new moment(routeVm.effectiveDate).startOf('day'), org) : '';\r\n\r\n\t\t\t\t\t// if the as of date is the same as today then we don't need the as of date\r\n\t\t\t\t\tif (moment(asOfTimeUtc).format('MM/DD/YYYY') !== ssDateByOrgHlp.safeNowRelativeTo(org).format(\"MM/DD/YYY\")) {\r\n\t\t\t\t\t\t// add the asOfTimeUtc\r\n\t\t\t\t\t\tfilter = Object.assign(filter, { 'asOfTimeUtc': asOfTimeUtc });\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet newEmps = yield ssEmployeeApi.search({}, filter);\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\trouteVm.totalEmployees = parseInt(newEmps.$headers['total-results'], 10);\r\n\t\t\t\t\t} catch (e) { routeVm.totalEmployees = 0; }\r\n\r\n\t\t\t\t\t// In order to effective date the directory, we need to mess with the effective date filters below with this guy\r\n\t\t\t\t\t// If we don't have an effective date set make it null, if we do set it to the end of the day\r\n\t\t\t\t\tlet filterEffectiveDate = (!routeVm.effectiveDate) ? null : ssDateByOrgHlp.safeAsOfDateRelativeTo(new moment(routeVm.effectiveDate).startOf('day'), org); // nullable\r\n\r\n\t\t\t\t\tnewEmps.forEach(employee => {\r\n\t\t\t\t\t\temployee.hireDateTxt = employee._hireDate != null ? ssDateByOrgHlp.utcIsoToRelativeMoment(employee._hireDate, org).format('MM/DD/YYYY') : null;\r\n\r\n\t\t\t\t\t\tif (employee._statusHistory != null && employee._statusHistory.length) {\r\n\t\t\t\t\t\t\temployee.currentStatus = employee._statusHistory.find(x => ssDateByOrgHlp.isCurrent({ obj: x, asOf: filterEffectiveDate, fromProp: '_from', toProp: '_to', org }));\r\n\t\t\t\t\t\t\tif (employee.currentStatus != null) {\r\n\t\t\t\t\t\t\t\temployee.currentStatus.name = enumEmployeeStatus.byValue(employee.currentStatus._statusId);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\temployee.primaryAssignment = ssEmployeeAssignmentHlp.getPrimaryAssignment(employee, { _asOf: filterEffectiveDate }, org);\r\n\t\t\t\t\t\tif (employee.primaryAssignment != null) {\r\n\t\t\t\t\t\t\tlet positionId = employee.primaryAssignment._positionId;\r\n\t\t\t\t\t\t\temployee.position = employee._positions.find(p => p.id === positionId);\r\n\t\t\t\t\t\t\tif (employee.position) {\r\n\t\t\t\t\t\t\t\temployee.position.name = ssListSvc.mapName(employee.position._name, positionTypes);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t//\tconcact retrieved employees into the existing collection\r\n\t\t\t\t\tvm.employees = vm.employees.concat(newEmps);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tconsole && console.error && console.error('Error getting employees', e);\r\n\t\t\t\t\tssToastHlp.error('There was an error retrieving employees', '')\r\n\t\t\t\t\tvm.showInfScroll = false;\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tvm.loading = false;\r\n\t\t\t\t//\tshow the 'no employees found' message based on the length of results\r\n\t\t\t\t\tvm.showEmptyMessage = !vm.employees.length;\r\n\t\t\t\t//\tfigure out when we've reached the end of the list\r\n\t\t\t\t\tvm.showInfScroll = vm.employees.length < routeVm.totalEmployees;\r\n\t\t\t\t\tfirstRun = false;\r\n\t\t\t\t\tcurrentRequest = null;\r\n\t\t\t\t//\tTell listeners (the filter segment) that the page is done loading data\r\n\t\t\t\t\t$rootScope.$broadcast('employee-directory-loading', { loading: false });\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t}\r\n\r\n\t\tfunction filterResults() {\r\n\t\t\treset();\r\n\t\t\trefreshResults();\r\n\t\t}\r\n\r\n\t\tfunction reset() {\r\n\t\t\tif (firstRun) { return; }\r\n\t\t\tcurrentPage = 0;\r\n\t\t\tvm.employees = [];\r\n\t\t\tvm.showInfScroll = true;\r\n\t\t\tvm.loading = false;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/index/segment-results) --# //\r\n// #------------------------------------------# //\r\n\r\nangular.module('ec-employee-segments').directive('segmentIndexResults', () => new Results('results'));\r\n","/*@ngInject*/\r\nfunction logic() {\r\n\t// logic api\r\n\treturn {\r\n\t\t\r\n\t};\r\n}\r\nangular.module('ec-employee-segment-logic').factory('segmentIndexResultsLogic', logic);\r\n","import { State } from 'base-state';\r\n// #------------------------------# //\r\n// #---- State (//my-profile) ----# //\r\n\r\n\r\n// view model that is shared by all segments on this route,\r\n// used for segment coordination. Define initial state here.\r\nconst routeVm = {};\r\n\r\nconst stateName = 'myProfile';\r\n\r\n// config object for ui-router\r\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\r\nconst stateConfig = {\r\n\turl: '/my-profile',\r\n\ttemplateUrl: 'routes/my-profile/my-profile.html',\r\n\t$permissions: (permissionSvc) => !permissionSvc.isPermittedAction('bundle', 'viewothers'),\r\n};\r\n\r\n\r\n\r\n// #-- END State (//my-profile) --# //\r\n// #------------------------------# //\r\n\r\nangular.module('ec-employee').config( /*@ngInject*/ ($stateProvider) => {\r\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\r\n});\r\n","import {Segment} from 'base-segment';\r\n// #----------------------------------------------# //\r\n// #---- Segment (/my-profile/segment-header) ----# //\r\n\r\nclass Header extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $state, $scope, ssActiveUserSvc) {\r\n\t\t// view model that is shared by all segments on this route,\r\n\t\t// used for segment coordination\r\n\t\tconst routeVm = $scope.routeVm; // jshint ignore:line\r\n\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentMyProfileHeaderLogic'); // jshint ignore:line\r\n\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = { // jshint ignore:line\r\n\t\t\ttest: 'test'\r\n\t\t};\r\n\r\n\t\tssActiveUserSvc.getEmployee().then(user => {\r\n\t\t\tvm.fullName = user.fullName;\r\n\t\t\t$state.go('base.employeeRecord',{ module: 'ec-employee', employeeId: user.id })\r\n\t\t});\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { // jshint ignore:line\r\n\t\t\tclick() {\r\n\t\t\t\tvm.test = 'works!';\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/my-profile/segment-header) --# //\r\n// #----------------------------------------------# //\r\n\r\nangular.module('ec-employee-segments').directive('segmentMyProfileHeader', () => new Header('header') );\r\n","/*@ngInject*/\r\nfunction logic() {\r\n\t// logic api\r\n\treturn {\r\n\r\n\t};\r\n}\r\nangular.module('ec-employee-segment-logic').factory('segmentMyProfileHeaderLogic', logic);\r\n","import { State } from 'base-state';\r\n// #--------------------------------------# //\r\n// #---- State (/reports/assignments) ----# //\r\n\r\n// view model that is shared by all segments on this route,\r\n// used for segment coordination. Define initial state here.\r\nconst routeVm = {};\r\n\r\nconst stateName = 'reports.assignments';\r\n\r\n// config object for ui-router\r\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\r\nconst stateConfig = {\r\n\turl: '/assignments',\r\n\ttemplateUrl: 'routes/reports/assignments/assignments.html',\r\n\tresolve: {\r\n\t\texportType: /*@ngInject*/ (ssAsync, ssPermissionsSvc, ssFlagSvc, exportTemplateApi, sortFilterHlp) => {\r\n\t\t\tconst exportTypeName = 'EmployeeAssignments';\r\n\r\n\t\t\treturn ssPermissionsSvc.ready.then(() => {\r\n\t\t\t\tif (ssPermissionsSvc.isNotPermittedAction('exportTemplates', 'view')\r\n\t\t\t\t\t|| !ssFlagSvc.checkState('fc-emp-ui-custom-exports')) { return; }\r\n\r\n\t\t\t\treturn ssAsync(function*() {\r\n\t\t\t\t\t// get the type and put it on the scope so children scopes can read this\r\n\t\t\t\t\tconst types = yield exportTemplateApi.getTypes(Object.assign({}, sortFilterHlp.filterOrNull([{ id: exportTypeName }], 'exportSource')));\r\n\t\t\t\t\trouteVm.exportType = types.data.data[0];\r\n\r\n\t\t\t\t\t// get the templates based on the type and put it on the scope so report scope can use it to build the export button\r\n\t\t\t\t\t// dynamically create the link for the settings tab; we currently only have 1 template so use the first we find otherwise use 'create'\r\n\t\t\t\t\tconst templates = yield exportTemplateApi.getTemplates(Object.assign({}, sortFilterHlp.filterOrNull([{ id: routeVm.exportType.id }], 'exportTypeId')));\r\n\t\t\t\t\trouteVm.exportTemplates = templates.data.data;\r\n\t\t\t\t})();\r\n\t\t\t});\r\n\t\t},\r\n\t\t$title: /*@ngInject*/ () => {\r\n\t\t\treturn 'Employee Records - Assignments Report';\r\n\t\t}\r\n\t},\r\n\t$permissions: (permissionSvc) => {\r\n\t\treturn permissionSvc.isPermittedAction('assignmentReports', 'view');\r\n\t},\r\n};\r\n\r\n// #-- END State (/reports/assignments) --# //\r\n// #--------------------------------------# //\r\n\r\nangular.module('ec-employee').config( /*@ngInject*/ ($stateProvider) => {\r\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\r\n});\r\n","import { State } from 'base-state';\r\n// #---------------------------------------------# //\r\n// #---- State (/reports/assignments/report) ----# //\r\n\r\n// view model that is shared by all segments on this route,\r\n// used for segment coordination. Define initial state here.\r\nconst routeVm = {};\r\n\r\nconst stateName = 'reports.assignments.report';\r\n\r\n// config object for ui-router\r\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\r\nconst stateConfig = {\r\n\turl: '/report',\r\n\ttemplateUrl: 'routes/reports/assignments/report/report.html',\r\n\tresolve: {\r\n\t\torg: /*@ngInject*/ function(ssOrganizationSvc, ssAsync) {\r\n\t\t\treturn (ssAsync(function*() {\r\n\t\t\t\trouteVm.org = yield ssOrganizationSvc.getActiveOrg();\r\n\t\t\t})());\r\n\t\t},\r\n\t\t$title: /*@ngInject*/ () => {\r\n\t\t\treturn 'Employee Assignment Report';\r\n\t\t}\r\n\t}\r\n};\r\n\r\n// #-- END State (/reports/assignments/report) --# //\r\n// #---------------------------------------------# //\r\n\r\nangular.module('ec-employee').config( /*@ngInject*/ ($stateProvider) => {\r\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\r\n});\r\n","import { Segment } from 'base-segment';\r\n// #---------------------------------------------------------------# //\r\n// #---- Segment (/reports/assignments/report/segment-content) ----# //\r\n\r\nclass Content extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($rootScope, $injector, $scope, $location, $window, ssEmployeeApi, ssDebounce, ssAsync, ssEventSvc, ssMultiInitiativeFeatureDetectorSvc, empReportsApi, reportHlp) {\r\n\t\t// view model that is shared by all segments on this route,\r\n\t\t// used for segment coordination\r\n\t\tconst routeVm = $scope.routeVm;\r\n\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentReportsAssignmentsContentLogic'); // jshint ignore:line\r\n\r\n\t\tconst pageSize = 50;\r\n\r\n\t\tlet currentRequest = null;\r\n\t\t\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\tloading: true,\r\n\t\t\tempAssignments: [],\r\n\t\t\tuseGroupByEmployee: false, // true to use different display style in grid\r\n\r\n\t\t\t// changes to this object will result in data change\r\n\t\t\tfilters: {},\r\n\r\n\t\t\tpages: 0,\r\n\r\n\t\t\tisGlobalDirectory: ssMultiInitiativeFeatureDetectorSvc.isDataIntegrationsEnabled(),\r\n\r\n\t\t\tfilterConfig: {\r\n\t\t\t\tcountLabel: 'Assignments of Employee',\r\n\t\t\t\tsearchLabel: 'Employee',\r\n\t\t\t\tuseFilter: ['jobTypes', 'departments', 'locations', 'empGroups', 'empStatus', 'empStatusReasons', 'effectiveDate', 'lastUpdated'],\r\n\t\t\t\tsortOptions: [{\r\n\t\t\t\t\tname: 'Last Name A-Z',\r\n\t\t\t\t\tariaLabel: 'Sort report by last name ascending',\r\n\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\tfield: reportHlp.sortKeys.LAST_NAME,\r\n\t\t\t\t\t\tdir: 'asc'\r\n\t\t\t\t\t},\r\n\t\t\t\t}, {\r\n\t\t\t\t\tname: 'Last Name Z-A',\r\n\t\t\t\t\tariaLabel: 'Sort report by last name descending',\r\n\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\tfield: reportHlp.sortKeys.LAST_NAME,\r\n\t\t\t\t\t\tdir: 'desc'\r\n\t\t\t\t\t},\r\n\t\t\t\t}, {\r\n\t\t\t\t\tname: 'Assignment Start Date',\r\n\t\t\t\t\tariaLabel: 'Sort report by the assignment start date',\r\n\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\tfield: reportHlp.sortKeys.ASSIGNMENT_START_DATE,\r\n\t\t\t\t\t\tdir: 'asc'\r\n\t\t\t\t\t},\r\n\t\t\t\t}, {\r\n\t\t\t\t\tname: 'Location A-Z',\r\n\t\t\t\t\tariaLabel: 'Sort report by location ascending',\r\n\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\tfield: reportHlp.sortKeys.LOCATION_NAME,\r\n\t\t\t\t\t\tdir: 'asc'\r\n\t\t\t\t\t},\r\n\t\t\t\t}, {\r\n\t\t\t\t\tname: 'Location Z-A',\r\n\t\t\t\t\tariaLabel: 'Sort report by location descending',\r\n\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\tfield: reportHlp.sortKeys.LOCATION_NAME,\r\n\t\t\t\t\t\tdir: 'desc'\r\n\t\t\t\t\t},\r\n\t\t\t\t}, {\r\n\t\t\t\t\tname: 'Position Name',\r\n\t\t\t\t\tariaLabel: 'Sort report by position name',\r\n\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\tfield: reportHlp.sortKeys.POSITION_NAME,\r\n\t\t\t\t\t\tdir: 'asc'\r\n\t\t\t\t\t},\r\n\t\t\t\t}, {\r\n\t\t\t\t\tname: 'Job Type A-Z',\r\n\t\t\t\t\tariaLabel: 'Sort report by job type ascending',\r\n\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\tfield: reportHlp.sortKeys.JOB_TYPE,\r\n\t\t\t\t\t\tdir: 'asc'\r\n\t\t\t\t\t},\r\n\t\t\t\t}, {\r\n\t\t\t\t\tname: 'Job Type Z-A',\r\n\t\t\t\t\tariaLabel: 'Sort report by job type descending',\r\n\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\tfield: reportHlp.sortKeys.JOB_TYPE,\r\n\t\t\t\t\t\tdir: 'desc'\r\n\t\t\t\t\t},\r\n\t\t\t\t}],\r\n\t\t\t\tdefaultSortIndex: 0,\r\n\r\n\t\t\t\texportFileName: 'employeeAssignmentExport.csv',\r\n\t\t\t\texport: empReportsApi.exportAssignmentsCsv,\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst debounce = ssDebounce((nv, ov) => {\r\n\t\t\tif (nv === ov) { return; }\r\n\t\t\tgo.filterResults({ currentPage: 1 });\r\n\t\t}, 350);\r\n\r\n\t\t$scope.$watch('vm.filters', debounce, true);\r\n\r\n\t\tssEventSvc.on('location-change-start', (event, toUrl) => {\r\n\t\t\tif (toUrl.indexOf('today') > -1) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\t$window.location = toUrl;\r\n\t\t\t}\r\n\t\t}, $rootScope);\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = {\r\n\t\t\tfilterResults,\r\n\r\n\t\t\t/**\r\n\t\t\t * For DIP enabled orgs get the employee org person id and then go to the global directory\r\n\t\t\t * @param {String} empId\r\n\t\t\t */\r\n\t\t\ttoProfile(empId) {\r\n\t\t\t\tif (!vm.isGlobalDirectory) { return; }\r\n\t\t\t\tssEmployeeApi.get({ id: empId, fields: 'orgPersonId' }, null, false).then(emp => $location.url(`/ec-directory/person-detail/${emp._orgPersonId}/employment`));\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tfunction filterResults(event) {\r\n\t\t\tvm.currentPage = event.currentPage;\r\n\t\t\tif (currentRequest != null) {\r\n\t\t\t\tcurrentRequest.$abort();\r\n\t\t\t\tcurrentRequest = null;\r\n\t\t\t}\r\n\t\t\tcurrentRequest = ssAsync(function*() {\r\n\t\t\t\tvm.loading = true;\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tlet queryString = Object.assign({}, {\r\n\t\t\t\t\t\torganizationId: routeVm.org.id\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tlet body = Object.assign({},{\r\n\t\t\t\t\t\toffset: (event.currentPage - 1) * pageSize,\r\n\t\t\t\t\t\tlimit: pageSize,\r\n\t\t\t\t\t\tfilter:{\r\n\t\t\t\t\t\t\tlastupdatedstart: vm.filters[\"filter[lastUpdatedStart]\"],\r\n\t\t\t\t\t\t\tlastupdatedend: vm.filters[\"filter[lastUpdatedEnd]\"],\r\n\t\t\t\t\t\t\tstatusreason: vm.filters[\"filter[statusReason]\"],\r\n\t\t\t\t\t\t\tasoftimeutc: vm.filters[\"filter[asOfTimeUtc]\"],\r\n\t\t\t\t\t\t\tdepartment: vm.filters[\"filter[department]\"],\r\n\t\t\t\t\t\t\temploymentgroup: vm.filters[\"filter[employmentGroup]\"],\r\n\t\t\t\t\t\t\tjobtype: vm.filters[\"filter[jobType]\"],\r\n\t\t\t\t\t\t\tlocation: vm.filters[\"filter[location]\"],\r\n\t\t\t\t\t\t\tstatus: vm.filters[\"filter[status]\"],\r\n\t\t\t\t\t\t\tfullname: vm.filters[\"filter[fullname]\"]\r\n\r\n\t\t\t\t\t\t},\t\r\n\t\t\t\t\t\tsort:{\r\n\t\t\t\t\t\t\tpositionname: vm.filters[\"sort[positionName]\"],\r\n\t\t\t\t\t\t\tlastname: vm.filters[\"sort[lastname]\"],\r\n\t\t\t\t\t\t\tlocationname: vm.filters[\"sort[locationName]\"],\r\n\t\t\t\t\t\t\tassignmentstartdateutc: vm.filters[\"sort[assignmentStartDateUtc]\"]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif (!completeLastUpdatedRange()) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// sets the filters in the querystring to make the page linkable\r\n\t\t\t\t\treportHlp.setUrl($location, queryString);\r\n\r\n\t\t\t\t\tvm.empAssignments = yield empReportsApi.getAssignmentsPost(queryString, body);\r\n\r\n\t\t\t\t\tif (vm.empAssignments != null) {\r\n\t\t\t\t\t\t// set up pagination fields\r\n\t\t\t\t\t\tvm.filterConfig.totalResults = parseInt(vm.empAssignments.$headers['total-results'], 10);\r\n\t\t\t\t\t\tvm.filterConfig.totalResults = isNaN(vm.filterConfig.totalResults) ? 0 : vm.filterConfig.totalResults;\r\n\t\t\t\t\t\tvm.pages = Math.ceil(vm.filterConfig.totalResults / pageSize);\r\n\r\n\t\t\t\t\t\tvm.useGroupByEmployee = body.sort.lastname != null;\r\n\t\t\t\t\t\tif (vm.useGroupByEmployee) {\r\n\t\t\t\t\t\t\tvm.empAssignments.forEach(assignment => {\r\n\t\t\t\t\t\t\t\tassignment._employee = {\r\n\t\t\t\t\t\t\t\t\tid: assignment._employeeId,\r\n\t\t\t\t\t\t\t\t\tfirstName: assignment._employeeFirstName,\r\n\t\t\t\t\t\t\t\t\tlastName: assignment._employeeLastName\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tvm.empAssignments = reportHlp.groupByEmployee(vm.empAssignments);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvm.filterConfig.totalResults = 0;\r\n\t\t\t\t\t\tvm.pages = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tconsole && console.error && console.error('Error getting assignments', error);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tvm.loading = false;\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t}\r\n\r\n\t\tfunction completeLastUpdatedRange() {\r\n\t\t\tif (vm.filters['filter[lastUpdatedStart]'] && vm.filters['filter[lastUpdatedEnd]'] == null) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif (vm.filters['filter[lastUpdatedEnd]'] && vm.filters['filter[lastUpdatedStart]'] == null) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/reports/assignments/report/segment-content) --# //\r\n// #---------------------------------------------------------------# //\r\n\r\nangular.module('ec-employee-segments').directive('segmentReportsAssignmentsReportContent', () => new Content('content'));\r\n","/*@ngInject*/\r\nfunction logic() {\r\n\t// logic api\r\n\treturn {\r\n\r\n\t};\r\n}\r\nangular.module('ec-employee-segment-logic').factory('segmentReportsAssignmentsReportContentLogic', logic);\r\n","import { Segment } from 'base-segment';\r\n// #--------------------------------------------------------# //\r\n// #---- Segment (/reports/assignments/segment-content) ----# //\r\n\r\nclass Content extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $scope, $location, ssFlagSvc, ssPermissionsSvc, ssStorage, ngIntroService) {\r\n\t\t// view model that is shared by all segments on this route,\r\n\t\t// used for segment coordination\r\n\t\tconst routeVm = $scope.routeVm; // jshint ignore:line\r\n\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentReportsAssignmentsContentLogic'); // jshint ignore:line\r\n\r\n\t\t// redirect to the slash url because the automatic redirect in the state does not bring querystring params\r\n\t\tif ($location.path() === '/ec-employee/reports/assignments') {\r\n\t\t\t$location.path($location.path() + '/report');\r\n\t\t}\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\ttemplateId: null,\r\n\t\t\tshowTabs: ssFlagSvc.checkState('fc-emp-ui-custom-exports'),\r\n\t\t};\r\n\r\n\t\t// intro.js based UI feature tour\r\n\t\t$scope.ngIntroService = ngIntroService;\r\n\t\t$scope.ssStorage = ssStorage;\r\n\t\t$scope.ssFlagSvc = ssFlagSvc;\r\n\t\t$scope.ssPermissionsSvc = ssPermissionsSvc;\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { // jshint ignore:line\r\n\t\t};\r\n\r\n\t\tif (ssPermissionsSvc.isPermittedAction('exportTemplates', 'view') && vm.showTabs) {\r\n\t\t\t$scope.exportType = routeVm.exportType;\r\n\t\t\t$scope.exportTemplates = routeVm.exportTemplates;\r\n\r\n\t\t\t// dynamically create the link for the settings tab; we currently only have 1 template so use the first we find otherwise use 'create'\r\n\t\t\tvm.templateId = $scope.exportTemplates.length ? $scope.exportTemplates[0].id : 'create';\r\n\r\n\t\t\t$scope.$on('ec-employee.reports.feature.intro', function(e) {\r\n\t\t\t\tssStorage.save('ec-employee.reports.feature.intro', true, { persistent: true, expires: false });\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tlink(scope, elem) {\r\n\t\t// intro.js based UI feature tour\r\n\t\tfunction cannotSeeUITour() {\r\n\t\t\treturn (\r\n\t\t\t\tscope.ssStorage.load('ec-employee.reports.feature.intro') ||\r\n\t\t\t\t!scope.ssPermissionsSvc.isPermittedAction('exportTemplates', 'view') ||\r\n\t\t\t\t!scope.ssFlagSvc.checkState('fc-emp-ui-custom-exports')\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif (cannotSeeUITour()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tangular.element(document).ready(function() {\r\n\t\t\tscope.ngIntroService.setOptions({\r\n\t\t\t\tsteps: [{\r\n\t\t\t\t\telement: angular.element(elem[0].querySelector('#ui-tour-step1'))[0],\r\n\t\t\t\t\tintro: '<h4>Introducing Export Settings</h4><p>You can create a custom template to manage the report output.</p>'\r\n\t\t\t\t}],\r\n\t\t\t\tdoneLabel: 'Got it!',\r\n\t\t\t\tshowBullets: false,\r\n\t\t\t\tshowStepNumbers: false,\r\n\t\t\t\tdisableInteraction: true\r\n\t\t\t});\r\n\r\n\t\t\tscope.ngIntroService.onExit(function() {\r\n\t\t\t\tscope.$emit('ec-employee.reports.feature.intro');\r\n\t\t\t});\r\n\r\n\t\t\tscope.ngIntroService.start();\r\n\t\t});\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/reports/assignments/segment-content) --# //\r\n// #--------------------------------------------------------# //\r\n\r\nangular.module('ec-employee-segments').directive('segmentReportsAssignmentsContent', () => new Content('content'));\r\n","/*@ngInject*/\r\nfunction logic() {\r\n\r\n\t// logic api\r\n\treturn {};\r\n\r\n}\r\nangular.module('ec-employee-segment-logic').factory('segmentReportsAssignmentsContentLogic', logic);\r\n","import { Segment } from 'base-segment';\r\n// #-----------------------------------------------------------------# //\r\n// #---- Segment (/reports/assignments/settings/segment-content) ----# //\r\n\r\nclass Content extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($rootScope, $injector, $scope, $stateParams) {\r\n\t\t// view model that is shared by all segments on this route,\r\n\t\t// used for segment coordination\r\n\t\tconst routeVm = $scope.routeVm; // jshint ignore:line\r\n\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentReportsAssignmentsSettingsContentLogic'); // jshint ignore:line\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = { // jshint ignore:line\r\n\t\t\ttemplateId: $stateParams.templateId,\r\n\t\t\ttype: $rootScope.utils.findInParentScope('exportType', $scope),\r\n\t\t};\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { // jshint ignore:line\r\n\t\t};\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/reports/assignments/settings/segment-content) --# //\r\n// #-----------------------------------------------------------------# //\r\n\r\nangular.module('ec-employee-segments').directive('segmentReportsAssignmentsSettingsContent', () => new Content('content'));\r\n","/*@ngInject*/\r\nfunction logic() {\r\n\t// logic api\r\n\treturn {\r\n\r\n\t};\r\n}\r\nangular.module('ec-employee-segment-logic').factory('segmentReportsAssignmentsSettingsContentLogic', logic);\r\n","import { State } from 'base-state';\r\n// #-----------------------------------------------# //\r\n// #---- State (/reports/assignments/settings) ----# //\r\n\r\n// view model that is shared by all segments on this route,\r\n// used for segment coordination. Define initial state here.\r\nconst routeVm = {};\r\n\r\nconst stateName = 'reports.assignments.settings';\r\n\r\n// config object for ui-router\r\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\r\nconst stateConfig = {\r\n\turl: '/settings/:templateId',\r\n\ttemplateUrl: 'routes/reports/assignments/settings/settings.html',\r\n\tresolve: {\r\n\t\t$title: /*@ngInject*/ () => {\r\n\t\t\treturn 'Employee Assignment Report - Export Settings';\r\n\t\t}\r\n\t},\r\n\t$permissions: (permissionSvc) => permissionSvc.isPermittedAction('exportTemplates', 'view'),\r\n};\r\n\r\n// #-- END State (/reports/assignments/settings) --# //\r\n// #-----------------------------------------------# //\r\n\r\nangular.module('ec-employee').config( /*@ngInject*/ ($stateProvider) => {\r\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\r\n});\r\n","import { State } from 'base-state';\r\n// #--------------------------------------# //\r\n// #---- State (/reports/credentials) ----# //\r\n\r\n// view model that is shared by all segments on this route,\r\n// used for segment coordination. Define initial state here.\r\nconst routeVm = {};\r\n\r\nconst stateName = 'reports.credentials';\r\n\r\n// config object for ui-router\r\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\r\nconst stateConfig = {\r\n\turl: '/credentials',\r\n\ttemplateUrl: 'routes/reports/credentials/credentials.html',\r\n\tresolve: {\r\n\t\torg: /*@ngInject*/ function(ssOrganizationSvc, ssAsync) {\r\n\t\t\treturn (ssAsync(function*() {\r\n\t\t\t\trouteVm.org = yield ssOrganizationSvc.getActiveOrg();\r\n\t\t\t})());\r\n\t\t},\r\n\t\t$title: /*@ngInject*/ () => {\r\n\t\t\treturn 'Employee Records - Credentials Report';\r\n\t\t}\r\n\t},\r\n\t$permissions: (permissionSvc) => {\r\n\t\treturn permissionSvc.isPermittedAction('employeecredentials', 'viewreports');\r\n\t}\r\n};\r\n\r\n// #-- END State (/reports/credentials) --# //\r\n// #--------------------------------------# //\r\n\r\nangular.module('ec-employee').config( /*@ngInject*/ ($stateProvider) => {\r\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\r\n});\r\n","import { Segment } from 'base-segment';\r\n// #--------------------------------------------------------# //\r\n// #---- Segment (/reports/credentials/segment-content) ----# //\r\n\r\nclass Content extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $scope, $location, ssEmployeeApi, ssDebounce, ssAsync, ssMultiInitiativeFeatureDetectorSvc, ssCredentialBusinessEngineSvc, empReportsApi, reportHlp) {\r\n\t\t// view model that is shared by all segments on this route,\r\n\t\t// used for segment coordination\r\n\t\tconst routeVm = $scope.routeVm;\r\n\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentReportsCredentialsContentLogic');\r\n\r\n\t\tconst credentialConstants = ssCredentialBusinessEngineSvc.credentialConstants;\r\n\t\tconst pageSize = 50;\r\n\r\n\t\tlet org = routeVm.org;\r\n\r\n\t\tlet currentRequest = null;\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\tloading: true,\r\n\r\n\t\t\tempCredentials: [],\r\n\t\t\tuseGroupByEmployee: false, // true to use different display style in grid\r\n\r\n\t\t\t// changes to this object will result in data change\r\n\t\t\tfilters: {},\r\n\r\n\t\t\tpages: 0,\r\n\r\n\t\t\tisGlobalDirectory: ssMultiInitiativeFeatureDetectorSvc.isDataIntegrationsEnabled(),\r\n\r\n\t\t\tfilterConfig: {\r\n\t\t\t\tcountLabel: 'Credentials of Employee',\r\n\t\t\t\tsearchLabel: 'Employee',\r\n\t\t\t\tuseFilter: ['jobTypes', 'credentials', 'empStatus', 'adminVerified', 'expiration'],\r\n\t\t\t\tsortOptions: [{\r\n\t\t\t\t\tname: 'Last Name A-Z',\r\n\t\t\t\t\tariaLabel: 'Sort report by last name ascending',\r\n\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\tfield: reportHlp.sortKeys.LAST_NAME,\r\n\t\t\t\t\t\tdir: 'asc'\r\n\t\t\t\t\t},\r\n\t\t\t\t}, {\r\n\t\t\t\t\tname: 'Last Name Z-A',\r\n\t\t\t\t\tariaLabel: 'Sort report by last name descending',\r\n\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\tfield: reportHlp.sortKeys.LAST_NAME,\r\n\t\t\t\t\t\tdir: 'desc'\r\n\t\t\t\t\t},\r\n\t\t\t\t}, {\r\n\t\t\t\t\tname: 'Expiration Date',\r\n\t\t\t\t\tariaLabel: 'Sort report by expiration date',\r\n\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\tfield: reportHlp.sortKeys.EXPIRATION_DAY,\r\n\t\t\t\t\t\tdir: 'asc'\r\n\t\t\t\t\t},\r\n\t\t\t\t}],\r\n\t\t\t\tdefaultSortIndex: 2,\r\n\r\n\t\t\t\texportFileName: 'employeeCredentialsExport.csv',\r\n\t\t\t\texport: empReportsApi.exportCredentialsCsv,\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst debounce = ssDebounce(() => {\r\n\t\t\t// does not trigger on load but will as soon as the filter-bar touches this object\r\n\t\t\tgo.filterResults({ currentPage: 1 });\r\n\t\t}, 350);\r\n\r\n\t\t$scope.$watch('vm.filters', debounce, true);\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = {\r\n\t\t\tfilterResults,\r\n\r\n\t\t\t/**\r\n\t\t\t * For DIP enabled orgs get the employee org person id and then go to the global directory\r\n\t\t\t * @param {String} empId\r\n\t\t\t */\r\n\t\t\ttoProfile(empId) {\r\n\t\t\t\tif (!vm.isGlobalDirectory) { return; }\r\n\t\t\t\tssEmployeeApi.get({ id: empId, fields: 'orgPersonId' }, null, false).then(emp => $location.url(`/ec-directory/person-detail/${emp._orgPersonId}/credentials`));\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Is the credential active and have active dates?\r\n\t\t\t */\r\n\t\t\thasActiveDates(cred) {\r\n\t\t\t\tlet status = ssCredentialBusinessEngineSvc.getCredentialStatus(cred, moment());\r\n\t\t\t\treturn (status.value === credentialConstants.ACTIVE || status.value === credentialConstants.NOT_ACTIVE) && (cred._stateStartedDay || cred._expirationDay || cred._verifiedDay);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Is the credential active and have in progress dates?\r\n\t\t\t */\r\n\t\t\thasInProgressDates(cred) {\r\n\t\t\t\tlet status = ssCredentialBusinessEngineSvc.getCredentialStatus(cred, moment());\r\n\t\t\t\treturn status.value === credentialConstants.IN_PROGRESS;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Is the credential a renewal?\r\n\t\t\t */\r\n\t\t\tisRenewed(cred) {\r\n\t\t\t\treturn cred._issuedReason === credentialConstants.CREDENTIAL_RENEWED;\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tfunction filterResults(event) {\r\n\t\t\tvm.currentPage = event.currentPage;\r\n\t\t\tif (currentRequest != null) {\r\n\t\t\t\tcurrentRequest.$abort();\r\n\t\t\t\tcurrentRequest = null;\r\n\t\t\t}\r\n\t\t\tcurrentRequest = ssAsync(function*() {\r\n\t\t\t\tvm.loading = true;\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tlet queryString = Object.assign({}, {\r\n\t\t\t\t\t\torganizationId: routeVm.org.id\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tlet body = Object.assign({}, {\r\n\t\t\t\t\t\toffset: (event.currentPage - 1) * pageSize,\r\n\t\t\t\t\t\tlimit: pageSize,\r\n\t\t\t\t\t\tfilter:{\r\n\t\t\t\t\t\t\tcredentialids: vm.filters[\"filter[credentialIds]\"],\r\n\t\t\t\t\t\t\tjobtype: vm.filters[\"filter[jobType]\"],\r\n\t\t\t\t\t\t\texpiresafter: vm.filters[\"filter[expiresAfter]\"],\r\n\t\t\t\t\t\t\texpiresbefore: vm.filters[\"filter[expiresBefore]\"],\r\n\t\t\t\t\t\t\tisadminverified: JSON.stringify(vm.filters[\"filter[isAdminVerified]\"]),\r\n\t\t\t\t\t\t\tstatus: vm.filters[\"filter[status]\"],\r\n\t\t\t\t\t\t\tfullname: vm.filters[\"filter[fullname]\"],\r\n\t\t\t\t\t\t\t\"credentialtype|issuedreasons\": JSON.stringify(vm.filters[\"filter[credentialType|IssuedReasons]\"])\t\r\n\t\t\t\t\t\t},\t\r\n\t\t\t\t\t\tsort:{\r\n\t\t\t\t\t\t\texpirationday: vm.filters[\"sort[expirationDay]\"],\r\n\t\t\t\t\t\t\tlastname: vm.filters[\"sort[lastname]\"]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t// sets the filters in the querystring to make the page linkable\r\n\t\t\t\t\treportHlp.setUrl($location, queryString);\r\n\r\n\t\t\t\t\tvm.empCredentials = yield empReportsApi.getCredentialsPost(queryString, body);\r\n\t\t\t\t\tif (vm.empCredentials != null) {\r\n\t\t\t\t\t\tvm.empCredentials.forEach(cred => logic.processCredential(cred, org));\r\n\t\t\t\t\t\t// set up pagination fields\r\n\t\t\t\t\t\tvm.filterConfig.totalResults = parseInt(vm.empCredentials.$headers['total-results'], 10);\r\n\t\t\t\t\t\tvm.filterConfig.totalResults = isNaN(vm.filterConfig.totalResults) ? 0 : vm.filterConfig.totalResults;\r\n\t\t\t\t\t\tvm.pages = Math.ceil(vm.filterConfig.totalResults / pageSize);\r\n\r\n\t\t\t\t\t\tvm.useGroupByEmployee = body.sort.lastname != null;\r\n\t\t\t\t\t\tif (vm.useGroupByEmployee) {\r\n\t\t\t\t\t\t\tvm.empCredentials = reportHlp.groupByEmployee(vm.empCredentials);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvm.filterConfig.totalResults = 0;\r\n\t\t\t\t\t\tvm.pages = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tconsole && console.error && console.error('Error getting credentials', error);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tvm.loading = false;\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/reports/credentials/segment-content) --# //\r\n// #--------------------------------------------------------# //\r\n\r\nangular.module('ec-employee-segments').directive('segmentReportsCredentialsContent', () => new Content('content'));\r\n","/*@ngInject*/\r\nfunction logic(moment, ssDateByOrgHlp, ssListSvc) {\r\n\r\n\tlet positionTypes = [];\r\n\tssListSvc.getByExternalId('position.types').then(types => {\r\n\t\tpositionTypes = types;\r\n\t});\r\n\r\n\t// logic api\r\n\treturn {\r\n\t\tprocessCredential\r\n\t};\r\n\r\n\t/**\r\n\t *\r\n\t * @param {Object} cred\r\n\t */\r\n\tfunction processCredential(cred, org) {\r\n\t\tcred.issuedTxt = cred._stateStartedDay != null ? ssDateByOrgHlp.startOfDayRelativeTo(moment(cred._stateStartedDay), org) : null;\r\n\t\tcred.expirationTxt = cred._expirationDay != null ? ssDateByOrgHlp.startOfDayRelativeTo(moment(cred._expirationDay), org) : null;\r\n\t\tcred.subjects = cred._subjects != null ? cred._subjects.map(sub => sub.name).join(', ') : '';\r\n\r\n\t\tcred._employee.positionNameTxt = '';\r\n\r\n\t\tif (cred._employee.primaryJobTypeName != null) {\r\n\t\t\tcred._employee.positionNameTxt += cred._employee.primaryJobTypeName;\r\n\t\t}\r\n\r\n\t\tif (cred._employee.primaryPositionName != null) {\r\n\t\t\tif (cred._employee.positionNameTxt.length) { cred._employee.positionNameTxt += ', '; }\r\n\t\t\tcred._employee.positionNameTxt += ssListSvc.mapName(cred._employee.primaryPositionName, positionTypes);\r\n\t\t}\r\n\r\n\t\tif (cred._employee.stateEducatorId != null && cred._employee.stateEducatorId.length) {\r\n\t\t\tif (cred._employee.positionNameTxt.length) { cred._employee.positionNameTxt += ' | '; }\r\n\t\t\tcred._employee.positionNameTxt += cred._employee.stateEducatorId;\r\n\t\t}\r\n\t}\r\n}\r\nangular.module('ec-employee-segment-logic').factory('segmentReportsCredentialsContentLogic', logic);\r\n","import { State } from 'base-state';\r\n// #--------------------------------------# //\r\n// #---- State (/reports/demographic) ----# //\r\n\r\n// view model that is shared by all segments on this route,\r\n// used for segment coordination. Define initial state here.\r\nconst routeVm = {};\r\n\r\nconst stateName = 'reports.demographic';\r\n\r\n// config object for ui-router\r\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\r\nconst stateConfig = {\r\n\turl: '/demographic',\r\n\ttemplateUrl: 'routes/reports/demographic/demographic.html',\r\n\tresolve: {\r\n\t\texportType: /*@ngInject*/ (ssAsync, ssPermissionsSvc, ssFlagSvc, exportTemplateApi, sortFilterHlp) => {\r\n\t\t\tconst exportTypeName = 'EmployeeDemographics';\r\n\r\n\t\t\treturn ssPermissionsSvc.ready.then(() => {\r\n\t\t\t\tif (ssPermissionsSvc.isNotPermittedAction('exportTemplates', 'view')\r\n\t\t\t\t\t|| !ssFlagSvc.checkState('fc-emp-ui-custom-exports')) { return; }\r\n\r\n\t\t\t\treturn ssAsync(function*() {\r\n\t\t\t\t\t// get the type and put it on the scope so children scopes can read this\r\n\t\t\t\t\tconst types = yield exportTemplateApi.getTypes(Object.assign({}, sortFilterHlp.filterOrNull([{ id: exportTypeName }], 'exportSource')));\r\n\t\t\t\t\trouteVm.exportType = types.data.data[0];\r\n\r\n\t\t\t\t\t// get the templates based on the type and put it on the scope so report scope can use it to build the export button\r\n\t\t\t\t\t// dynamically create the link for the settings tab; we currently only have 1 template so use the first we find otherwise use 'create'\r\n\t\t\t\t\tconst templates = yield exportTemplateApi.getTemplates(Object.assign({}, sortFilterHlp.filterOrNull([{ id: routeVm.exportType.id }], 'exportTypeId')));\r\n\t\t\t\t\trouteVm.exportTemplates = templates.data.data;\r\n\t\t\t\t})();\r\n\t\t\t});\r\n\t\t},\r\n\t\t$title: /*@ngInject*/ () => {\r\n\t\t\treturn 'Employee Records - Demographic Report';\r\n\t\t}\r\n\t},\r\n\t$permissions: (permissionSvc) => {\r\n\t\treturn permissionSvc.isPermittedAction('employees', 'viewreports');\r\n\t},\r\n};\r\n\r\n// #-- END State (/reports/demographic) --# //\r\n// #--------------------------------------# //\r\n\r\nangular.module('ec-employee').config( /*@ngInject*/ ($stateProvider) => {\r\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\r\n});\r\n","import { State } from 'base-state';\r\n// #---------------------------------------------# //\r\n// #---- State (/reports/demographic/report) ----# //\r\n\r\n// view model that is shared by all segments on this route,\r\n// used for segment coordination. Define initial state here.\r\nconst routeVm = {};\r\n\r\nconst stateName = 'reports.demographic.report';\r\n\r\n// config object for ui-router\r\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\r\nconst stateConfig = {\r\n\turl: '/report',\r\n\ttemplateUrl: 'routes/reports/demographic/report/report.html',\r\n\tresolve: {\r\n\t\torg: /*@ngInject*/ function(ssOrganizationSvc, ssAsync) {\r\n\t\t\treturn (ssAsync(function*() {\r\n\t\t\t\trouteVm.org = yield ssOrganizationSvc.getActiveOrg();\r\n\t\t\t})());\r\n\t\t},\r\n\t\t$title: /*@ngInject*/ () => {\r\n\t\t\treturn 'Employee Demographic Report';\r\n\t\t}\r\n\t}\r\n};\r\n\r\n// #-- END State (/reports/demographic/report) --# //\r\n// #---------------------------------------------# //\r\n\r\nangular.module('ec-employee').config( /*@ngInject*/ ($stateProvider) => {\r\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\r\n});\r\n","import { Segment } from 'base-segment';\r\n// #---------------------------------------------------------------# //\r\n// #---- Segment (/reports/demographic/report/segment-content) ----# //\r\n\r\nclass Content extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($rootScope, $injector, $scope, $location, $window, ssEmployeeApi, ssDebounce, ssAsync, ssEventSvc, ssMultiInitiativeFeatureDetectorSvc, ssMutatorDataHlp, empReportsApi, reportHlp) {\r\n\t\t// view model that is shared by all segments on this route,\r\n\t\t// used for segment coordination\r\n\t\tconst routeVm = $scope.routeVm; // jshint ignore:line\r\n\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentReportsDemographicReportContentLogic'); // jshint ignore:line\r\n\r\n\t\tconst pageSize = 50;\r\n\r\n\t\tlet currentRequest = null;\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\tloading: true,\r\n\t\t\temployees: [],\r\n\r\n\t\t\t// changes to this object will result in data change\r\n\t\t\tfilters: {},\r\n\r\n\t\t\tpages: 0,\r\n\r\n\t\t\tisGlobalDirectory: ssMultiInitiativeFeatureDetectorSvc.isDataIntegrationsEnabled(),\r\n\r\n\t\t\tfilterConfig: {\r\n\t\t\t\tcountLabel: 'Employee',\r\n\t\t\t\tsearchLabel: 'Employee',\r\n\t\t\t\tuseFilter: ['effectiveDate', 'empStatus', 'empStatusReasons', 'lastUpdated'],\r\n\t\t\t\tsortOptions: [{\r\n\t\t\t\t\tname: 'Last Name A-Z',\r\n\t\t\t\t\tariaLabel: 'Sort report by last name ascending',\r\n\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\tfield: reportHlp.sortKeys.LAST_NAME,\r\n\t\t\t\t\t\tdir: 'asc'\r\n\t\t\t\t\t},\r\n\t\t\t\t}, {\r\n\t\t\t\t\tname: 'Last Name Z-A',\r\n\t\t\t\t\tariaLabel: 'Sort report by last name descending',\r\n\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\tfield: reportHlp.sortKeys.LAST_NAME,\r\n\t\t\t\t\t\tdir: 'desc'\r\n\t\t\t\t\t},\r\n\t\t\t\t}, {\r\n\t\t\t\t\tname: 'Last Updated Asc',\r\n\t\t\t\t\tariaLabel: 'Sort report by last updated date ascending',\r\n\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\tfield: reportHlp.sortKeys.EMP_LAST_UPDATED,\r\n\t\t\t\t\t\tdir: 'asc'\r\n\t\t\t\t\t}\r\n\t\t\t\t}, {\r\n\t\t\t\t\tname: 'Last Updated Desc',\r\n\t\t\t\t\tariaLabel: 'Sort report by last updated date descending',\r\n\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\tfield: reportHlp.sortKeys.EMP_LAST_UPDATED,\r\n\t\t\t\t\t\tdir: 'desc'\r\n\t\t\t\t\t}\r\n\t\t\t\t}, {\r\n\t\t\t\t\tname: 'Hire Date Asc',\r\n\t\t\t\t\tariaLabel: 'Sort report by hire date ascending',\r\n\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\tfield: reportHlp.sortKeys.HIRE_DATE,\r\n\t\t\t\t\t\tdir: 'asc'\r\n\t\t\t\t\t}\r\n\t\t\t\t}, {\r\n\t\t\t\t\tname: 'Hire Date Desc',\r\n\t\t\t\t\tariaLabel: 'Sort report by hire date descending',\r\n\t\t\t\t\tvalue: {\r\n\t\t\t\t\t\tfield: reportHlp.sortKeys.HIRE_DATE,\r\n\t\t\t\t\t\tdir: 'desc'\r\n\t\t\t\t\t}\r\n\t\t\t\t}],\r\n\t\t\t\tdefaultSortIndex: 0,\r\n\r\n\t\t\t\texportFileName: 'employeeDemographicExport.csv',\r\n\t\t\t\texport: empReportsApi.exportDemographicsCsv,\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst debounce = ssDebounce((nv, ov) => {\r\n\t\t\tif (nv === ov) { return; }\r\n\t\t\tgo.filterResults({ currentPage: 1 });\r\n\t\t}, 350);\r\n\r\n\t\t$scope.$watch('vm.filters', debounce, true);\r\n\r\n\t\tssEventSvc.on('location-change-start', (event, toUrl) => {\r\n\t\t\tif (toUrl.indexOf('today') > -1) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\t$window.location = toUrl;\r\n\t\t\t}\r\n\t\t}, $rootScope);\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = {\r\n\t\t\tfilterResults,\r\n\r\n\t\t\t/**\r\n\t\t\t * For DIP enabled orgs get the employee org person id and then go to the global directory\r\n\t\t\t * @param {String} empId\r\n\t\t\t */\r\n\t\t\ttoProfile(empId) {\r\n\t\t\t\tif (!vm.isGlobalDirectory) { return; }\r\n\t\t\t\tssEmployeeApi.get({ id: empId, fields: 'orgPersonId' }, null, false).then(emp => $location.url(`/ec-directory/person-detail/${emp._orgPersonId}/personal`));\r\n\t\t\t},\r\n\r\n\t\t\tformatPhone(phone) {\r\n\t\t\t\treturn ssMutatorDataHlp.formatPhone(phone);\r\n\t\t\t},\r\n\r\n\t\t\tformatDate(date) {\r\n\t\t\t\tlet val = new Date(date + 'Z');\r\n\t\t\t\treturn val.toLocaleString();\r\n\t\t\t},\r\n\r\n\t\t\tgetDateString: reportHlp.getDateString\r\n\t\t};\r\n\r\n\t\tfunction filterResults(event) {\r\n\t\t\tvm.currentPage = event.currentPage;\r\n\t\t\tif (currentRequest != null) {\r\n\t\t\t\tcurrentRequest.$abort();\r\n\t\t\t\tcurrentRequest = null;\r\n\t\t\t}\r\n\t\t\tcurrentRequest = ssAsync(function*() {\r\n\t\t\t\tvm.loading = true;\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tlet querystring = Object.assign({}, {\r\n\t\t\t\t\t\torganizationId: routeVm.org.id\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tlet body = Object.assign({}, {\r\n\t\t\t\t\t\toffset: (event.currentPage - 1) * pageSize,\r\n\t\t\t\t\t\tlimit: pageSize,\r\n\t\t\t\t\t\tfilter:{\r\n\t\t\t\t\t\t\tasofutctime: vm.filters[\"filter[asOfTimeUtc]\"],\r\n\t\t\t\t\t\t\tlastupdatedstart: vm.filters[\"filter[lastUpdatedStart]\"],\r\n\t\t\t\t\t\t\tlastupdatedend: vm.filters[\"filter[lastUpdatedEnd]\"],\r\n\t\t\t\t\t\t\tstatusreason: vm.filters[\"filter[statusReason]\"],\r\n\t\t\t\t\t\t\tstatus: vm.filters[\"filter[status]\"],\r\n\t\t\t\t\t\t\tfullname: vm.filters[\"filter[fullname]\"]\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tsort: {\r\n\t\t\t\t\t\t\tlastname: vm.filters[\"sort[lastname]\"],\r\n\t\t\t\t\t\t\thiredate: vm.filters[\"sort[hireDate]\"],\r\n\t\t\t\t\t\t\tlastupdatedutc: vm.filters[\"sort[lastupdatedutc]\"]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif (!completeLastUpdatedRange()) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// sets the filters in the querystring to make the page linkable\r\n\t\t\t\t\treportHlp.setUrl($location, querystring);\r\n\r\n\t\t\t\t\tvm.employees = yield empReportsApi.getDemographicsPost(querystring, body);\r\n\r\n\t\t\t\t\tvm.employees.forEach(e => e.securityGroup = e._securityGroup == null ? '' : e._securityGroup.split(',').join(', '));\r\n\r\n\t\t\t\t\tif (vm.employees != null) {\r\n\t\t\t\t\t\t// set up pagination fields\r\n\t\t\t\t\t\tvm.filterConfig.totalResults = parseInt(vm.employees.$headers['total-results'], 10);\r\n\t\t\t\t\t\tvm.filterConfig.totalResults = isNaN(vm.filterConfig.totalResults) ? 0 : vm.filterConfig.totalResults;\r\n\t\t\t\t\t\tvm.pages = Math.ceil(vm.filterConfig.totalResults / pageSize);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvm.filterConfig.totalResults = 0;\r\n\t\t\t\t\t\tvm.pages = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tconsole && console.error && console.error('Error getting demographic', error);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tvm.loading = false;\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t}\r\n\r\n\t\tfunction completeLastUpdatedRange() {\r\n\t\t\tif (vm.filters['filter[lastUpdatedStart]'] && vm.filters['filter[lastUpdatedEnd]'] == null) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif (vm.filters['filter[lastUpdatedEnd]'] && vm.filters['filter[lastUpdatedStart]'] == null) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/reports/demographic/report/segment-content) --# //\r\n// #---------------------------------------------------------------# //\r\n\r\nangular.module('ec-employee-segments').directive('segmentReportsDemographicReportContent', () => new Content('content'));\r\n","/*@ngInject*/\r\nfunction logic() {\r\n\t// logic api\r\n\treturn {\r\n\r\n\t};\r\n}\r\nangular.module('ec-employee-segment-logic').factory('segmentReportsDemographicReportContentLogic', logic);\r\n","import { Segment } from 'base-segment';\r\n// #--------------------------------------------------------# //\r\n// #---- Segment (/reports/demographic/segment-content) ----# //\r\n\r\nclass Content extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $scope, $location, ssFlagSvc, ssPermissionsSvc, ssStorage, ngIntroService) {\r\n\t\t// view model that is shared by all segments on this route,\r\n\t\t// used for segment coordination\r\n\t\tconst routeVm = $scope.routeVm; // jshint ignore:line\r\n\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentReportsDemographicContentLogic'); // jshint ignore:line\r\n\r\n\t\t// redirect to the slash url because the automatic redirect in the state does not bring querystring params\r\n\t\tif ($location.path() === '/ec-employee/reports/demographic') {\r\n\t\t\t$location.path($location.path() + '/report');\r\n\t\t}\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\ttemplateId: null,\r\n\t\t\tshowTabs: ssFlagSvc.checkState('fc-emp-ui-custom-exports'),\r\n\t\t};\r\n\r\n\t\t// intro.js based UI feature tour, used in the link function below\r\n\t\t$scope.ngIntroService = ngIntroService;\r\n\t\t$scope.ssStorage = ssStorage;\r\n\t\t$scope.ssFlagSvc = ssFlagSvc;\r\n\t\t$scope.ssPermissionsSvc = ssPermissionsSvc;\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { // jshint ignore:line\r\n\t\t};\r\n\r\n\t\tif (ssPermissionsSvc.isPermittedAction('exportTemplates', 'view') && vm.showTabs) {\r\n\t\t\t$scope.exportType = routeVm.exportType;\r\n\t\t\t$scope.exportTemplates = routeVm.exportTemplates;\r\n\r\n\t\t\t// dynamically create the link for the settings tab; we currently only have 1 template so use the first we find otherwise use 'create'\r\n\t\t\tvm.templateId = $scope.exportTemplates.length ? $scope.exportTemplates[0].id : 'create';\r\n\r\n\t\t\t$scope.$on('ec-employee.reports.feature.intro', function (e) {\r\n\t\t\t\tssStorage.save('ec-employee.reports.feature.intro', true, { persistent: true, expires: false });\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tlink(scope, elem) {\r\n\t\t// intro.js based UI feature tour\r\n\t\tfunction cannotSeeUITour() {\r\n\t\t\treturn (\r\n\t\t\t\tscope.ssStorage.load('ec-employee.reports.feature.intro') ||\r\n\t\t\t\t!scope.ssPermissionsSvc.isPermittedAction('exportTemplates', 'view') ||\r\n\t\t\t\t!scope.ssFlagSvc.checkState('fc-emp-ui-custom-exports')\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif (cannotSeeUITour()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tangular.element(document).ready(function() {\r\n\t\t\tscope.ngIntroService.setOptions({\r\n\t\t\t\tsteps: [{\r\n\t\t\t\t\telement: angular.element(elem[0].querySelector('#ui-tour-step1'))[0],\r\n\t\t\t\t\tintro: '<h4>Introducing Export Settings</h4><p>You can create a custom template to manage the report output.</p>'\r\n\t\t\t\t}],\r\n\t\t\t\tdoneLabel: 'Got it!',\r\n\t\t\t\tshowBullets: false,\r\n\t\t\t\tshowStepNumbers: false,\r\n\t\t\t\tdisableInteraction: true\r\n\t\t\t});\r\n\r\n\t\t\tscope.ngIntroService.onExit(function () {\r\n\t\t\t\tscope.$emit('ec-employee.reports.feature.intro');\r\n\t\t\t});\r\n\r\n\t\t\tscope.ngIntroService.start();\r\n\t\t});\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/reports/demographic/segment-content) --# //\r\n// #--------------------------------------------------------# //\r\n\r\nangular.module('ec-employee-segments').directive('segmentReportsDemographicContent', () => new Content('content'));\r\n","/*@ngInject*/\r\nfunction logic() {\r\n\r\n\t// logic api\r\n\treturn {};\r\n\r\n}\r\nangular.module('ec-employee-segment-logic').factory('segmentReportsDemographicContentLogic', logic);\r\n","import { Segment } from 'base-segment';\r\n// #-----------------------------------------------------------------# //\r\n// #---- Segment (/reports/demographic/settings/segment-content) ----# //\r\n\r\nclass Content extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($rootScope, $injector, $scope, $stateParams) {\r\n\t\t// view model that is shared by all segments on this route,\r\n\t\t// used for segment coordination\r\n\t\tconst routeVm = $scope.routeVm; // jshint ignore:line\r\n\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentReportsDemographicSettingsContentLogic'); // jshint ignore:line\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = { // jshint ignore:line\r\n\t\t\ttemplateId: $stateParams.templateId,\r\n\t\t\ttype: $rootScope.utils.findInParentScope('exportType', $scope),\r\n\t\t};\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { // jshint ignore:line\r\n\t\t};\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/reports/demographic/settings/segment-content) --# //\r\n// #-----------------------------------------------------------------# //\r\n\r\nangular.module('ec-employee-segments').directive('segmentReportsDemographicSettingsContent', () => new Content('content'));\r\n","/*@ngInject*/\r\nfunction logic() {\r\n\t// logic api\r\n\treturn {\r\n\r\n\t};\r\n}\r\nangular.module('ec-employee-segment-logic').factory('segmentReportsDemographicSettingsContentLogic', logic);\r\n","import { State } from 'base-state';\r\n// #-----------------------------------------------# //\r\n// #---- State (/reports/demographic/settings) ----# //\r\n\r\n// view model that is shared by all segments on this route,\r\n// used for segment coordination. Define initial state here.\r\nconst routeVm = {};\r\n\r\nconst stateName = 'reports.demographic.settings';\r\n\r\n// config object for ui-router\r\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\r\nconst stateConfig = {\r\n\turl: '/settings/:templateId',\r\n\ttemplateUrl: 'routes/reports/demographic/settings/settings.html',\r\n\tresolve: {\r\n\t\t$title: /*@ngInject*/ () => {\r\n\t\t\treturn 'Employee Demographic Report - Export Settings';\r\n\t\t}\r\n\t},\r\n\t$permissions: (permissionSvc) => permissionSvc.isPermittedAction('exportTemplates', 'view'),\r\n};\r\n\r\n// #-- END State (/reports/demographic/settings) --# //\r\n// #-----------------------------------------------# //\r\n\r\nangular.module('ec-employee').config( /*@ngInject*/ ($stateProvider) => {\r\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\r\n});\r\n","import { State } from 'base-state';\r\n// #---------------------------# //\r\n// #---- State (/reports) ----# //\r\n\r\n// view model that is shared by all segments on this route,\r\n// used for segment coordination. Define initial state here.\r\nconst routeVm = {};\r\n\r\nconst stateName = 'reports';\r\n\r\n// config object for ui-router\r\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\r\nconst stateConfig = {\r\n\turl: '/reports',\r\n\ttemplateUrl: 'routes/reports/reports.html',\r\n\tresolve: {\r\n\t\t$title: /*@ngInject*/ () => {\r\n\t\t\treturn 'Employee Records - Reports';\r\n\t\t}\r\n\t}\r\n};\r\n\r\n// #-- END State (/reports) --# //\r\n// #---------------------------# //\r\n\r\nangular.module('ec-employee').config( /*@ngInject*/ ($stateProvider) => {\r\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\r\n});\r\n","import { Segment } from 'base-segment';\r\n// #--------------------------------------------# //\r\n// #---- Segment (/reports/segment-content) ----# //\r\n\r\nclass Content extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $scope) {\r\n\t\t// view model that is shared by all segments on this route,\r\n\t\t// used for segment coordination\r\n\t\tconst routeVm = $scope.routeVm; // jshint ignore:line\r\n\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentReportsContentLogic'); // jshint ignore:line\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = { // jshint ignore:line\r\n\t\t};\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { // jshint ignore:line\r\n\t\t};\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/reports/segment-content) --# //\r\n// #--------------------------------------------# //\r\n\r\nangular.module('ec-employee-segments').directive('segmentReportsContent', () => new Content('content'));\r\n","/*@ngInject*/\r\nfunction logic() {\r\n\t// logic api\r\n\treturn {\r\n\r\n\t};\r\n}\r\nangular.module('ec-employee-segment-logic').factory('segmentReportsContentLogic', logic);\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}