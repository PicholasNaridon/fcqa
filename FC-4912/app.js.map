{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/app.js","src/components/cmp-attachments/attachments.js","src/components/cmp-box-creator/box-creator.js","src/components/cmp-box-date-options/box-date-options.js","src/components/cmp-box-resizer/box-resizer.js","src/components/cmp-checkbox-group/checkbox-group.js","src/components/cmp-credential-group/credential-group.js","src/components/cmp-credential/credential.js","src/components/cmp-dnd-options/dnd-options.js","src/components/cmp-emp-initiated-template/emp-initiated-template.js","src/components/cmp-field-renderer/field-renderer.js","src/components/cmp-fl-share-form/fl-share-form.js","src/components/cmp-form-list-group/form-list-group.js","src/components/cmp-form-send-status/form-send-status.js","src/components/cmp-multiple-employee-search/multiple-employee-search.js","src/components/cmp-overlay-builder-toolbox/overlay-builder-toolbox.js","src/components/cmp-properties-credentials/properties-credentials.js","src/components/cmp-properties-custom-common/properties-custom-common.js","src/components/cmp-properties-custom-date/properties-custom-date.js","src/components/cmp-properties-custom-dropdown/properties-custom-dropdown.js","src/components/cmp-properties-custom-filelink/properties-custom-filelink.js","src/components/cmp-properties-custom-fileupload/properties-custom-fileupload.js","src/components/cmp-properties-custom-input/properties-custom-input.js","src/components/cmp-properties-custom-sectionhead/properties-custom-sectionhead.js","src/components/cmp-properties-custom-selectbox/properties-custom-selectbox.js","src/components/cmp-properties-custom-signature/properties-custom-signature.js","src/components/cmp-properties-custom-text/properties-custom-text.js","src/components/cmp-properties-emp-record/properties-emp-record.js","src/components/cmp-properties-form-complete/properties-form-complete.js","src/components/cmp-properties-notifications/properties-notifications.js","src/components/cmp-properties-primary-assignment/properties-primary-assignment.js","src/components/cmp-properties-profile-review/properties-profile-review.js","src/components/cmp-properties-salary/properties-salary.js","src/components/cmp-properties-secondary-assignments/properties-secondary-assignments.js","src/components/cmp-properties-smart/properties-smart.js","src/components/cmp-properties-step-permissions/properties-step-permissions.js","src/components/cmp-properties-step/properties-step.js","src/components/cmp-properties-text-editor/properties-text-editor.js","src/components/cmp-secondary-assignment/secondary-assignment.js","src/components/cmp-secondary-assignments/secondary-assignments.js","src/components/cmp-step-checkbox-display/step-checkbox-display.js","src/components/cmp-step-date-display/step-date-display.js","src/components/cmp-step-renderer/step-renderer.js","src/components/cmp-step-text-display/step-text-display.js","src/components/cmp-template-field-renderer/template-field-renderer.js","src/components/cmp-template-list-form/template-list-form.js","src/components/cmp-template-list-packet/template-list-packet.js","src/components/cmp-text-editor/ckeditorConfig.js","src/components/cmp-text-editor/placeholders.js","src/components/cmp-text-editor/plugins/placeholder_select.js","src/components/cmp-text-editor/text-editor.js","src/components/cmp-tracked-form-group/tracked-form-group.js","src/components/cmp-tracked-form/tracked-form.js","src/config/base-component.js","src/config/base-segment.js","src/config/base-state.js","src/config/load-config.js","src/config/router.js","src/helpers/fieldRendererHlp/field-renderer.js","src/helpers/fieldsHlp/fields.js","src/helpers/formsHlp/forms.js","src/helpers/statusLabelHlp/status-label.js","src/helpers/viewportOffsetHlp/viewport-offset.js","src/includes.js","src/module.js","src/partials.compiled.js","src/routes/form-builder/builder/builder.state.js","src/routes/form-builder/builder/segment-builder/builder.js","src/routes/form-builder/builder/segment-builder/builder.logic.js","src/routes/form-builder/builder/segment-fields/fields.js","src/routes/form-builder/builder/segment-fields/fields.logic.js","src/routes/form-builder/builder/segment-properties/properties.js","src/routes/form-builder/builder/segment-properties/properties.logic.js","src/routes/form-builder/form-builder.state.js","src/routes/form-builder/overlay-builder/overlay-builder.state.js","src/routes/form-builder/overlay-builder/segment-data-panel/data-panel.js","src/routes/form-builder/overlay-builder/segment-data-panel/data-panel.logic.js","src/routes/form-builder/overlay-builder/segment-overlay/overlay.js","src/routes/form-builder/overlay-builder/segment-overlay/overlay.logic.js","src/routes/form-builder/preview/preview.state.js","src/routes/form-builder/preview/segment-attachments/attachments.js","src/routes/form-builder/preview/segment-attachments/attachments.logic.js","src/routes/form-builder/preview/segment-form-workflow/form-workflow.js","src/routes/form-builder/preview/segment-form-workflow/form-workflow.logic.js","src/routes/form-builder/preview/segment-page-header/page-header.js","src/routes/form-builder/preview/segment-page-header/page-header.logic.js","src/routes/form-builder/preview/segment-steps-summary/steps-summary.js","src/routes/form-builder/preview/segment-steps-summary/steps-summary.logic.js","src/routes/form-builder/segment-content/content.js","src/routes/form-builder/segment-content/content.logic.js","src/routes/form-builder/segment-header/header.js","src/routes/form-builder/segment-header/header.logic.js","src/routes/form-builder/settings/segment-settings/settings.js","src/routes/form-builder/settings/segment-settings/settings.logic.js","src/routes/form-builder/settings/settings.state.js","src/routes/form-instance/form-instance.state.js","src/routes/form-instance/segment-attachments/attachments.js","src/routes/form-instance/segment-attachments/attachments.logic.js","src/routes/form-instance/segment-form/form.js","src/routes/form-instance/segment-form/form.logic.js","src/routes/form-instance/segment-header/header.js","src/routes/form-instance/segment-header/header.logic.js","src/routes/form-instance/segment-steps-summary/steps-summary.js","src/routes/form-instance/segment-steps-summary/steps-summary.logic.js","src/routes/form-templates/form-templates.state.js","src/routes/form-templates/segment-content/content.js","src/routes/form-templates/segment-content/content.logic.js","src/routes/form-templates/segment-header/header.js","src/routes/form-templates/segment-header/header.logic.js","src/routes/form-tracking/form-tracking.state.js","src/routes/form-tracking/segment-content/content.js","src/routes/form-tracking/segment-content/content.logic.js","src/routes/form-tracking/segment-header/header.js","src/routes/form-tracking/segment-header/header.logic.js","src/routes/inbox/form-instance/form-instance.state.js","src/routes/inbox/form-instance/segment-attachments/attachments.js","src/routes/inbox/form-instance/segment-attachments/attachments.logic.js","src/routes/inbox/form-instance/segment-close/close.js","src/routes/inbox/form-instance/segment-close/close.logic.js","src/routes/inbox/form-instance/segment-form/form.js","src/routes/inbox/form-instance/segment-form/form.logic.js","src/routes/inbox/form-instance/segment-header/header.js","src/routes/inbox/form-instance/segment-header/header.logic.js","src/routes/inbox/form-instance/segment-steps/steps.js","src/routes/inbox/form-instance/segment-steps/steps.logic.js","src/routes/inbox/inbox.state.js","src/routes/inbox/segment-content/content.js","src/routes/inbox/segment-content/content.logic.js","src/routes/inbox/segment-header/header.js","src/routes/inbox/segment-header/header.logic.js","src/routes/index/index.state.js","src/routes/index/segment-content/content.js","src/routes/index/segment-content/content.logic.js","src/routes/index/segment-header/header.js","src/routes/index/segment-header/header.logic.js","src/routes/my-forms/my-forms.state.js","src/routes/my-forms/segment-content/content.js","src/routes/my-forms/segment-content/content.logic.js","src/routes/my-forms/segment-header/header.js","src/routes/my-forms/segment-header/header.logic.js","src/routes/packet-builder/builder/builder.state.js","src/routes/packet-builder/builder/segment-builder/builder.js","src/routes/packet-builder/builder/segment-builder/builder.logic.js","src/routes/packet-builder/packet-builder.state.js","src/routes/packet-builder/segment-content/content.js","src/routes/packet-builder/segment-content/content.logic.js","src/routes/packet-builder/segment-header/header.js","src/routes/packet-builder/segment-header/header.logic.js","src/routes/packet-builder/settings/segment-settings/settings.js","src/routes/packet-builder/settings/segment-settings/settings.logic.js","src/routes/packet-builder/settings/settings.state.js","src/routes/send/segment-content/content.js","src/routes/send/segment-content/content.logic.js","src/routes/send/segment-header/header.js","src/routes/send/segment-header/header.logic.js","src/routes/send/send.state.js"],"names":[],"mappings":"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AAM,GAAN,EAAW;AACV,MAAG,GAAH,GAAS,CAAT;AACA;;AAED,SAAO,EAAP;AACA;AACF;AACA;;AA3Ca,CAAb;;AA8CA,SAAS,iBAAT,GAA6B;AAAE,QAAO,IAAP;AAAc;AAC7C,QAAQ,MAAR,CAAe,kBAAf,EAAmC,OAAnC,CAA2C,mBAA3C,EAAgE,iBAAhE;;;;;AC/CA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;ACnJA,QAAQ,MAAR,CAAe,UAAf,EAA2B,CAC1B,YAD0B,EAE1B,mBAF0B,EAG1B,wBAH0B,EAI1B,oBAJ0B,EAK1B,UAL0B,EAM1B,kBAN0B,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","file":"app.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import './partials.compiled';\r\nimport './module';\r\nimport './includes';\r\n\r\nvar _win = (0,eval)('this');\r\nif (_win.registerUiModule) { _win.registerUiModule('ec-forms'); }\r\n","import { Component } from 'base-component';\r\n// #-------------------------------------# //\r\n// #---- Component (cmp-attachments) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tlabel: '@',\r\n};\r\n\r\nclass Attachments extends Component {\r\n\t/*@ngInject*/\r\n\tcontroller($scope, $q, $window, $stateParams, filenameHlp, ssAsync, ssFormTemplatesApi, ssToastHlp, FileUploader, ssAuthSvc, ssModalSvc) {\r\n\r\n\t\tvar uploader, intendedFile;\r\n\t\tconst MAX_FILESIZE = 52428800;\r\n\t\tconst MAX_FILESIZE_ERROR_MSG = 'The file upload size cannot exceed 50MB. Please upload a smaller file.';\r\n\t\tconst FILE_UPLOAD_ERROR_TITLE = 'File Upload Failed';\r\n\t\tconst FILE_UPLOAD_ERROR_MESSAGE = 'The selected file did not upload correctly. Please try again.';\r\n\t\tconst FILE_DOWNLOAD_ERROR_TITLE = 'File Download Failed';\r\n\t\tconst FILE_DOWNLOAD_ERROR_MSG = 'The selected file did not download correctly. Please try again.';\r\n\t\tconst FILE_ASSOCIATION_ERROR_MESSAGE = 'There was an error associating file with form template';\r\n\t\tconst FILE_EXISTS_ERROR_MSG = 'You have already uploaded a file by that name.'\r\n\t\tconst FILE_LOADING_ERROR_MESSAGE = 'There was an error getting the attachments for this form template';\r\n\t\tconst INVALID_EXT_ERROR_MSG = 'The file you have selected does not have a valid extension. Please add one or choose another file'\r\n\t\tconst removeConfirmation = {\r\n\t\t\ttitle: 'You will lose all your overlay mappings',\r\n\t\t\tcontent: 'Removing this file will result in losing all the mappings done on the current form.',\r\n\t\t\tprimaryText: 'Continue',\r\n\t\t\tsecondaryText: 'Cancel'\r\n\t\t};\r\n\r\n\t\tconst UPLOADER_CONFIG = {\r\n\t\t\twithCredentials: false,\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `Bearer ${ssAuthSvc.token.access}`\r\n\t\t\t},\r\n\t\t\tfilters: [{\r\n\t\t\t\tname: 'validExt',\r\n\t\t\t\tfn: function(fileItem) {\r\n\t\t\t\t\tif (!filenameHlp.getExtension(fileItem.name) || !filenameHlp.getValidExtensions().includes(filenameHlp.getExtension(fileItem.name))) {\r\n\t\t\t\t\t\tssToastHlp.error(INVALID_EXT_ERROR_MSG, FILE_UPLOAD_ERROR_TITLE);\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t};\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}, {\r\n\t\t\t\tname: 'fileSize',\r\n\t\t\t\tfn: function(fileItem) {\r\n\t\t\t\t\tif (fileItem.size != null && fileItem.size >= 0 && fileItem.size >= MAX_FILESIZE) {\r\n\t\t\t\t\t\tssToastHlp.error(MAX_FILESIZE_ERROR_MSG, FILE_UPLOAD_ERROR_TITLE);\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t};\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}, {\r\n\t\t\t\tname: 'fileDupe',\r\n\t\t\t\tfn: function(fileItem) {\r\n\t\t\t\t\tif (vm.files.find(file => file.filename === fileItem.name)) {\r\n\t\t\t\t\t\tssToastHlp.error(FILE_EXISTS_ERROR_MSG, FILE_UPLOAD_ERROR_TITLE);\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t};\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}]\r\n\t\t};\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\tfiles: [],\r\n\t\t\tprocessing: null,\r\n\t\t\tprocessingStatus: null,\r\n\t\t};\r\n\r\n\t\tlet form;\r\n\r\n\t\tinitUploader();\r\n\r\n\t\tuploader.onAfterAddingFile = function(fileItem) {\r\n\t\t\t$scope.statusElem.text('');\r\n\t\t\tfileItem.removeAfterUpload = true;\r\n\t\t\tvm.processing = true;\r\n\t\t\tvm.processingStatus = 'adding attachment...';\r\n\r\n\t\t\tssFormTemplatesApi.attachFile({}, {\r\n\t\t\t\tfilename: fileItem.file.name,\r\n\t\t\t\tfileType: 2\r\n\t\t\t}, null, false).then(file => {\r\n\t\t\t\tintendedFile = file;\r\n\t\t\t\tintendedFile.filename = file._filename;\r\n\t\t\t\tfileItem.updatedUrl = ssFormTemplatesApi.getUploadFileUrl({ id: intendedFile.id });\r\n\t\t\t\tfileItem.upload();\r\n\t\t\t}).catch((err) => {\r\n\t\t\t\tif (err.status === 422) {\r\n\t\t\t\t\tssToastHlp.error(err.data.errors.Title, FILE_UPLOAD_ERROR_TITLE);\r\n\t\t\t\t}\r\n\t\t\t\tvm.processing = false;\r\n\t\t\t\tvm.processingStatus = '';\r\n\t\t\t\tuploader.clearQueue();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\tuploader.onBeforeUploadItem = function(fileItem) {\r\n\t\t\tfileItem.url = fileItem.updatedUrl;\r\n\t\t};\r\n\r\n\t\tuploader.onErrorItem = function(fileItem, response, status, headers) {\r\n\t\t\tvm.processing = false;\r\n\t\t\tvm.processingStatus = '';\r\n\t\t\tssToastHlp.error(FILE_UPLOAD_ERROR_MESSAGE, FILE_UPLOAD_ERROR_TITLE);\r\n\t\t\tfileItem.remove();\r\n\t\t};\r\n\r\n\t\tuploader.onCancelItem = function(fileItem, response, status, headers) {\r\n\t\t\tvm.processing = false;\r\n\t\t\tvm.processingStatus = '';\r\n\t\t\tssToastHlp.info('attachment upload cancelled.');\r\n\t\t\tfileItem.remove();\r\n\t\t};\r\n\r\n\t\tuploader.onSuccessItem = function(fileItem, response, status, headers) {\r\n\t\t\tssAsync(function*() {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tyield ssFormTemplatesApi.associateFile({\r\n\t\t\t\t\t\tid: $stateParams.formId\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\tfileId: intendedFile.id\r\n\t\t\t\t\t});\r\n\t\t\t\t\tyield form.$refresh();\r\n\t\t\t\t\tyield loadAttachments();\r\n\t\t\t\t\t$scope.statusElem.text('the file has been uploaded successfully');\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tvm.processing = false;\r\n\t\t\t\t\tvm.processingStatus = '';\r\n\t\t\t\t\tssToastHlp.error(FILE_ASSOCIATION_ERROR_MESSAGE, FILE_UPLOAD_ERROR_TITLE);\r\n\t\t\t\t\tconsole && console.error && console.error('Error associating file with form template', e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tuploader.clearQueue();\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t};\r\n\r\n\t\tuploader.onCompleteAll = function(fileItem) {\r\n\t\t\tuploader.clearQueue();\r\n\t\t\tuploader.destroy();\r\n\t\t\tinitUploader();\r\n\t\t};\r\n\r\n\t\tconst go = $scope.go = { // eslint-disable-line\r\n\t\t\tdownload(id) {\r\n\t\t\t\tssFormTemplatesApi.getFileUrl({\r\n\t\t\t\t\tid: id\r\n\t\t\t\t}).then(success => {\r\n\t\t\t\t\t$window.open(success._string, '_blank');\r\n\t\t\t\t}).catch((e) => {\r\n\t\t\t\t\tssToastHlp.error(FILE_DOWNLOAD_ERROR_MSG, FILE_DOWNLOAD_ERROR_TITLE);\r\n\t\t\t\t\tconsole && console.error && console.error('Error downloading the attachment', e);\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\tdelete(file) {\r\n\t\t\t\t// if (form._printPreviewDefinition && file._fileId === form._printPreviewDefinition.templateFileId) {\r\n\t\t\t\t// \tssModalSvc.showDestructive(removeConfirmation).then(() => {\r\n\t\t\t\t// \t\tdeleteFile(file);\r\n\t\t\t\t// \t});\r\n\t\t\t\t// } else {\r\n\t\t\t\tdeleteFile(file);\r\n\t\t\t\t// }\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tfunction deleteFile(file) {\r\n\t\t\t$scope.statusElem.text('');\r\n\t\t\tvm.processing = true;\r\n\t\t\tvm.processingStatus = 'deleting attachment...';\r\n\r\n\t\t\tssAsync(function*() {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tyield file.$remove();\r\n\t\t\t\t\tyield form.$refresh();\r\n\t\t\t\t\tyield loadAttachments();\r\n\t\t\t\t\t$scope.statusElem.text('the file has been successfully deleted');\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tvm.processing = false;\r\n\t\t\t\t\tvm.processingStatus = '';\r\n\t\t\t\t\tconsole && console.error && console.error('Error deleting attachment', e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tuploader.clearQueue();\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t}\r\n\r\n\t\t// checks to see if a file matches the PDF overlay file (used to filter the PDF overlay out of the file list)\r\n\t\tfunction filterPDFOverlayFile(files) {\r\n\t\t\treturn files.filter((file) => {\r\n\t\t\t\treturn form._printPreviewDefinition ? file._fileId !== form._printPreviewDefinition.templateFileId : true;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction initUploader() {\r\n\t\t\tuploader = $scope.uploader = new FileUploader(UPLOADER_CONFIG);\r\n\t\t}\r\n\r\n\t\tfunction loadAttachments({ initLoad = false } = {}) {\r\n\t\t\treturn ssAsync(function*() {\r\n\t\t\t\tif (initLoad) {\r\n\t\t\t\t\tvm.processing = true;\r\n\t\t\t\t\tvm.processingStatus = 'loading attachments...';\r\n\t\t\t\t}\r\n\t\t\t\tform = yield ssFormTemplatesApi.get({\r\n\t\t\t\t\tid: $stateParams.formId,\r\n\t\t\t\t\tfields: 'printPreviewDefinition',\r\n\t\t\t\t\tinclude: 'files'\r\n\t\t\t\t});\r\n\r\n\t\t\t\tvar promises = form._files.map(x => ssFormTemplatesApi.getFile({ id: x._fileId }));\r\n\r\n\t\t\t\treturn $q.all(promises).then((files) => {\r\n\t\t\t\t\tform._files.forEach(function(file) {\r\n\t\t\t\t\t\tlet _file = files.find(x => x.id === file._fileId);\r\n\t\t\t\t\t\tfile.filename = _file._filename;\r\n\t\t\t\t\t\tlet ext = filenameHlp.getExtension(file.filename);\r\n\t\t\t\t\t\tfile.icon = filenameHlp.getIcon(ext);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tvm.files = [...form._files];\r\n\t\t\t\t\tvm.files = filterPDFOverlayFile(vm.files);\r\n\t\t\t\t}).catch((err) => {\r\n\t\t\t\t\tssToastHlp.error(FILE_LOADING_ERROR_MESSAGE, FILE_UPLOAD_ERROR_TITLE);\r\n\t\t\t\t\tconsole && console.error && console.error(err);\r\n\t\t\t\t}).finally(() => {\r\n\t\t\t\t\tvm.processing = false;\r\n\t\t\t\t\tvm.processingStatus = '';\r\n\t\t\t\t});\r\n\t\t\t})();\r\n\t\t}\r\n\r\n\t\tloadAttachments({ initLoad: true });\r\n\t}\r\n\r\n\tlink(scope, elem, attrs) {\r\n\t\tscope.statusElem = angular.element(elem[0].querySelector('.attachment-status-alert'));\r\n\t}\r\n}\r\n\r\n// #-- END Component (cmp-attachments) --# //\r\n// #-------------------------------------# //\r\n\r\nangular.module('ec-forms-components').directive('cmpAttachments', () => new Attachments(props, 'attachments'));\r\n","import {Component} from 'base-component';\r\n// #-------------------------------------# //\r\n// #---- Component (cmp-box-creator) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tstartingPoint: '=',\r\n\tboxCreated: '&'\r\n};\r\n\r\nclass BoxCreator extends Component {\r\n\t/*@ngInject*/\r\n\tcontroller($scope) {\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = { // jshint ignore:line\r\n\t\t};\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { // jshint ignore:line\r\n\t\t};\r\n\t}\r\n\r\n\tlink(scope, elem, attrs) {\r\n\t\tconst parent = elem.parent();\r\n\t\tconst parentEl = parent[0];\r\n\t\tvar anchorPoint;\r\n\t\tvar parentRect;\r\n\t\tvar top, left, height, width;\r\n\r\n\t\tscope.$watch('startingPoint', function (pos) {\r\n\t\t\tif (pos == null) { return; }\r\n\r\n\t\t\tanchorPoint = pos;\r\n\t\t\tparentRect = parentEl.getBoundingClientRect();\r\n\t\t\theight = width = 0;\r\n\r\n\t\t\telem.css({\r\n\t\t\t\ttop: `${pos.y}px`,\r\n\t\t\t\tleft: `${pos.x}px`,\r\n\t\t\t\theight: `${height}px`,\r\n\t\t\t\twidth: `${width}px`\r\n\t\t\t});\r\n\r\n\t\t\tparent.on('mousemove', sizeBox);\r\n\t\t\tparent.on('mouseup', finalizeBox);\r\n\t\t});\r\n\r\n\t\tfunction sizeBox(evt) {\r\n\t\t\tlet leftCalc = window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft || 0;\r\n\t\t\tlet topCalc = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;\r\n\r\n\t\t\tconst mousePos = {\r\n\t\t\t\tx: evt.pageX - parentRect.left - leftCalc,\r\n\t\t\t\ty: evt.pageY - parentRect.top - topCalc\r\n\t\t\t};\r\n\r\n\t\t\ttop = (mousePos.y < anchorPoint.y ? mousePos.y : anchorPoint.y);\r\n\t\t\tleft = (mousePos.x < anchorPoint.x ? mousePos.x : anchorPoint.x);\r\n\t\t\theight = Math.abs(mousePos.y - anchorPoint.y);\r\n\t\t\twidth = Math.abs(mousePos.x - anchorPoint.x);\r\n\r\n\t\t\telem.css({\r\n\t\t\t\ttop: `${top}px`,\r\n\t\t\t\tleft: `${left}px`,\r\n\t\t\t\theight: `${height}px`,\r\n\t\t\t\twidth: `${width}px`\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction finalizeBox() {\r\n\t\t\tparent.off('mouseup', finalizeBox);\r\n\t\t\tparent.off('mousemove', sizeBox);\r\n\t\t\t// box needs to have some size\r\n\t\t\tif (height < 5 || width < 5) { return; }\r\n\r\n\t\t\tconst bottom = parentEl.offsetHeight - (top + height);\r\n\t\t\tconst right = parentEl.offsetWidth - (left + width);\r\n\r\n\t\t\tscope.boxCreated({$box: {\r\n\t\t\t\ttop: (top / parentEl.offsetHeight) * 100,\r\n\t\t\t\tright: (right / parentEl.offsetWidth) * 100,\r\n\t\t\t\tbottom: (bottom / parentEl.offsetHeight) * 100,\r\n\t\t\t\tleft: (left / parentEl.offsetWidth) * 100\r\n\t\t\t}});\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// #-- END Component (cmp-box-creator) --# //\r\n// #-------------------------------------# //\r\n\r\nangular.module('ec-forms-components').directive('cmpBoxCreator', () => new BoxCreator(props, 'box-creator') );\r\n","import {Component} from 'base-component';\r\n// #------------------------------------------# //\r\n// #---- Component (cmp-box-date-options) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tbox: '='\r\n};\r\n\r\nclass BoxDateOptions extends Component {\r\n\t/*@ngInject*/\r\n\tcontroller($scope, moment) {\r\n\r\n\t\t//https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\r\n\t\tlet guid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n\t\t    var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);\r\n\t\t    return v.toString(16);\r\n\t\t});\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = { // eslint-disable-line\r\n\t\t\tdisplayString: '',\r\n\t\t\tdateOptions:[{\r\n\t\t\t\tname: `Month`,\r\n\t\t\t\tguid: `Month-${guid}`,\r\n\t\t\t\tselected: false,\r\n\t\t\t\tselectedVal: '',\r\n\t\t\t\toptions: [{\r\n\t\t\t\t\tname: 'MM',\r\n\t\t\t\t\tcSharpFormat: 'MM',\r\n\t\t\t\t\tjsFormat: 'MM'\r\n\t\t\t\t},{\r\n\t\t\t\t\tname: 'Month',\r\n\t\t\t\t\tcSharpFormat: 'MMMM',\r\n\t\t\t\t\tjsFormat: 'MMMM'\r\n\t\t\t\t}]\r\n\t\t\t},{\r\n\t\t\t\tname: `Date`,\r\n\t\t\t\tguid: `Date-${guid}`,\r\n\t\t\t\tselected: false,\r\n\t\t\t\tselectedVal: '',\r\n\t\t\t\toptions: [{\r\n\t\t\t\t\tname: 'DD',\r\n\t\t\t\t\tcSharpFormat: 'dd',\r\n\t\t\t\t\tjsFormat: 'DD'\r\n\t\t\t\t}]\r\n\t\t\t},{\r\n\t\t\t\tname: `Year`,\r\n\t\t\t\tguid: `Year-${guid}`,\r\n\t\t\t\tselected: false,\r\n\t\t\t\tselectedVal: '',\r\n\t\t\t\toptions: [{\r\n\t\t\t\t\tname: 'YYYY',\r\n\t\t\t\t\tcSharpFormat: 'yyyy',\r\n\t\t\t\t\tjsFormat: 'YYYY'\r\n\t\t\t\t},{\r\n\t\t\t\t\tname: 'YY',\r\n\t\t\t\t\tcSharpFormat: 'yy',\r\n\t\t\t\t\tjsFormat: 'YY'\r\n\t\t\t\t}]\r\n\t\t\t}]\r\n\t\t};\r\n\r\n\t\tif($scope.box.stringFormat){\r\n\t\t\tlet format = $scope.box.stringFormat;\r\n\t\t\tlet seperator = format.startsWith('MMMM') ? ' ' : '/';\r\n\t\t\tlet formatArray = format.split(seperator);\r\n\t\t\tformatArray.forEach(item => setJsFormat(item))\r\n\t\t\tupdate();\r\n\t\t}\r\n\r\n\r\n\t\tfunction setJsFormat(item){\r\n\t\t\tconst isCSharpFormat = x => x.cSharpFormat === item;\r\n\t\t\tvar flatten = vm.dateOptions.reduce(function(a, b){ return a.concat(b.options) },[]);\r\n\t\t\tvar option = flatten.find(isCSharpFormat);\r\n\t\t\tvar dateOption = vm.dateOptions.find(x => x.options.filter(isCSharpFormat).length > 0);\r\n\t\t\tdateOption.selected = true;\r\n\t\t\tdateOption.selectedVal = option.jsFormat;\r\n\r\n\t\t}\r\n\r\n\t\tfunction update() {\r\n\t\t\tvar dateFormats = [];\r\n\t\t\tvm.dateOptions.forEach((dateOption) => {\r\n\t\t\t\tif(dateOption.selected && dateOption.selectedVal.length) {\r\n\t\t\t\t\tlet val = dateOption.options.find(x => x.jsFormat === dateOption.selectedVal);\r\n\t\t\t\t\tif(val) { dateFormats.push(val); }\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tvar hasMonth = !!dateFormats.find(x => x.name === 'Month');\r\n\t\t\tvar seperator = hasMonth ? ' ' : '/';\r\n\t\t\tvar jsFormatArray = dateFormats.map(x => x.jsFormat);\r\n\t\t\t/* Following peice of code with turn on the Ordinal Number  */\r\n\t\t\t/* -------------------------------------------------------- */\r\n\t\t\t//var indexOfDate = jsFormatArray.indexOf('D');\r\n\t\t\t//if(indexOfDate >= 0 && hasMonth) { jsFormatArray[indexOfDate] = 'Do'; }\r\n\t\t\t/* -------------------------------------------------------- */\r\n\t\t\tvar stringFormat = jsFormatArray.join(seperator);\r\n\t\t\tif(dateFormats.length){\r\n\t\t\t\tvm.displayString = moment().format(stringFormat);\r\n\t\t\t\t$scope.box.stringFormat = dateFormats.map(x => x.cSharpFormat).join(seperator);\r\n\t\t\t}else{\r\n\t\t\t\tvm.displayString = '';\r\n\t\t\t\t$scope.box.stringFormat = '';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { // eslint-disable-line\r\n\t\t\tupdate\r\n\t\t};\r\n\t}\r\n}\r\n\r\n// #-- END Component (cmp-box-date-options) --# //\r\n// #------------------------------------------# //\r\n\r\nangular.module('ec-forms-components').directive('cmpBoxDateOptions', () => new BoxDateOptions(props, 'box-date-options') );\r\n","import {Component} from 'base-component';\r\n// #-------------------------------------# //\r\n// #---- Component (cmp-box-resizer) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tbox: '=',\r\n\ttext: '=',\r\n\tonDelete: '&',\r\n\tisActive: '&'\r\n};\r\n\r\nclass BoxResizer extends Component {\r\n\t/*@ngInject*/\r\n\tcontroller($scope, rAF, viewportOffsetHlp) {\r\n\t\t// view model for tracking state\r\n\t\t$scope.rAF = rAF;\r\n\t\t$scope.viewportOffsetHlp = viewportOffsetHlp;\r\n\r\n\t\tconst vm = $scope.vm = { // jshint ignore:line\r\n\t\t\toptionsTemplate: `<cmp-box-${$scope.box.type}-options box=\"box\"></cmp-box-${$scope.box.type}-options>`\r\n\t\t};\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { // jshint ignore:line\r\n\r\n\t\t};\r\n\t}\r\n\r\n\tlink(scope, elem, attrs) {\r\n\t\tconst box = scope.box;\r\n\t\tconst el = elem[0];\r\n\t\tconst parent = elem.parent();\r\n\t\tconst parentEl = parent[0];\r\n\t\tconst handlePoint = {x:0, y:0};\r\n\t\tconst grabbing = {\r\n\t\t\ttop: false,\r\n\t\t\tright: false,\r\n\t\t\tbottom: false,\r\n\t\t\tleft: false\r\n\t\t};\r\n\r\n\t\tvar parentRect, elRect;\r\n\r\n\t\t/////\r\n\t\t// setup the initial box size\r\n\t\t//\r\n\t\tel.style.top = `${box.top}%`;\r\n\t\tel.style.right = `${box.right}%`;\r\n\t\tel.style.bottom = `${box.bottom}%`;\r\n\t\tel.style.left = `${box.left}%`;\r\n\r\n\t\t/////\r\n\t\t// bind up our events\r\n\t\t//\r\n\t\telem.on('mousedown', startDrag);\r\n\t\telem.on('mouseup', stopDrag);\r\n\t\t// --\r\n\t\tparent.on('mouseup', stopDrag);\r\n\t\t// --\r\n\t\tscope.$on('$destroy', function () {\r\n\t\t\tparent.off('mouseup', stopDrag);\r\n\t\t\tparent.off('mousemove', trackMouse);\r\n\t\t});\r\n\r\n\t\t/////\r\n\t\t// event handlers\r\n\t\t//\r\n\t\tfunction startDrag(evt) {\r\n\t\t\tevt.stopPropagation();\r\n\t\t\tif (!scope.isActive()) { return; }\r\n\r\n\t\t\tparentRect = parentEl.getBoundingClientRect();\r\n\t\t\telRect = el.getBoundingClientRect();\r\n\r\n\t\t\tvar offsets = scope.viewportOffsetHlp.getViewportOffsets(window);\r\n\r\n\t\t\thandlePoint.x = evt.pageX - elRect.left - offsets.left;\r\n\t\t\thandlePoint.y = evt.pageY - elRect.top - offsets.top;\r\n\r\n\t\t\t// reset grabbed edges\r\n\t\t\tconst edges = Object.keys(grabbing);\r\n\t\t\tedges.forEach(p => grabbing[p] = false);\r\n\t\t\tif (handlePoint.x <= 6) { grabbing.left = true; }\r\n\t\t\tif (el.offsetWidth - handlePoint.x <= 6) { grabbing.right = true; }\r\n\t\t\tif (handlePoint.y <= 6) { grabbing.top = true; }\r\n\t\t\tif (el.offsetHeight - handlePoint.y <= 6) { grabbing.bottom = true; }\r\n\t\t\tlet grabbingEdge = edges.reduce((p, k) => p || grabbing[k], false);\r\n\t\t\tif (!grabbingEdge) {\r\n\t\t\t\t// if we are not grabbing any, we are grabbing all\r\n\t\t\t\t// ...profound, I know\r\n\t\t\t\tedges.forEach(p => grabbing[p] = true);\r\n\t\t\t}\r\n\r\n\t\t\tparent.on('mousemove', trackMouse);\r\n\t\t}\r\n\r\n\t\tfunction stopDrag(evt) {\r\n\t\t\tscope.isDrawing = false;\r\n\t\t\tscope.$root.safeApply();\r\n\t\t\tparent.off('mousemove', trackMouse);\r\n\t\t}\r\n\r\n\t\tfunction trackMouse(evt) {\r\n\t\t\tvar offsets = scope.viewportOffsetHlp.getViewportOffsets(window);\r\n\r\n\t\t\tconst pos = {\r\n\t\t\t\tx: evt.pageX - parentRect.left - offsets.left,\r\n\t\t\t\ty: evt.pageY - parentRect.top - offsets.top\r\n\t\t\t};\r\n\r\n\t\t\tif (grabbing.top) {\r\n\t\t\t\tlet top = ((pos.y - handlePoint.y) / parentRect.height) * 100;\r\n\t\t\t\tbox.top = (top <= 0) ? 0 : top;\r\n\t\t\t\tel.style.top = `${box.top}%`;\r\n\t\t\t}\r\n\t\t\tif (grabbing.left) {\r\n\t\t\t\tlet left = ((pos.x - handlePoint.x) / parentRect.width) * 100;\r\n\t\t\t\tbox.left = (left <= 0) ? 0 : left;\r\n\t\t\t\tel.style.left = `${box.left}%`;\r\n\t\t\t}\r\n\t\t\tif (grabbing.bottom) {\r\n\t\t\t\tlet pxFromTop = pos.y + (elRect.height - handlePoint.y);\r\n\t\t\t\tlet pxFromBottom = parentRect.height - pxFromTop;\r\n\t\t\t\tlet bottom = (pxFromBottom / parentRect.height) * 100;\r\n\t\t\t\tbox.bottom = (bottom <= 0) ? 0 : bottom;\r\n\t\t\t\tel.style.bottom = `${box.bottom}%`;\r\n\t\t\t}\r\n\t\t\tif (grabbing.right) {\r\n\t\t\t\tlet pxFromLeft = pos.x + (elRect.width - handlePoint.x);\r\n\t\t\t\tlet pxFromRight = parentRect.width - pxFromLeft;\r\n\t\t\t\tlet right = (pxFromRight / parentRect.width) * 100;\r\n\t\t\t\tbox.right = (right <= 0) ? 0 : right;\r\n\t\t\t\tel.style.right = `${box.right}%`;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// #-- END Component (cmp-box-resizer) --# //\r\n// #-------------------------------------# //\r\n\r\nangular.module('ec-forms-components').directive('cmpBoxResizer', () => new BoxResizer(props, 'box-resizer') );\r\n","import {Component} from 'base-component';\r\n// #----------------------------------------# //\r\n// #---- Component (cmp-checkbox-group) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tfield: '='\r\n};\r\n\r\nclass CheckboxGroup extends Component {\r\n\t/*@ngInject*/\r\n\tcontroller($scope, $attrs, $window) {\r\n\r\n\t\tconst array = new Uint32Array(1);\r\n\t\tvar crypto = $window.crypto || $window.msCrypto;\r\n\t\tvar radioGroupId = crypto.getRandomValues(array);\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\ttemplate: '',\r\n\t\t\tvalidate: () => true,\r\n\t\t\tisDisabled: $scope.field.disabled\r\n\t\t};\r\n\t\t\r\n\t\tif ($scope.field._required) {\r\n\t\t\tvm.validate = (val, fieldName) => {\r\n\t\t\t\t// if any options in the val are checked (true) then we are validated\r\n\t\t\t\tif($scope.field.config.multiple) {\r\n\t\t\t\t\tfor (var i = 0; i < $scope.field._options.length; i++) {\r\n\t\t\t\t\t\tif (val[`${$scope.field.id}-${i}`] === true) { return true; }\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(val[`${$scope.field.id}`]) { return true; }\r\n\t\t\t\treturn `${fieldName} is required.`;\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { // eslint-disable-line\r\n\t\t};\r\n\r\n\t\t$scope.$watch('field.config.multiple', (val) => {\r\n\t\t\t$scope.field.config.selectType = val === false ? 'super-input-radio' : 'super-input-checkbox';\r\n\t\t\trenderTemplate($scope.field.config.selectType);\r\n\t\t});\t\r\n\r\n\t\tfunction renderTemplate(tag) {\r\n\t\t\tif (tag == null) { return; }\r\n\t\t\tif (tag === 'super-input-radio') {\r\n\t\t\t\tvm.template = `<${tag}\r\n\t\t\t\t\tng-repeat=\"option in field._options track by $index\"\r\n\t\t\t\t\tlabel=\"{{option}}\"\r\n\t\t\t\t\tvalue=\"{{option}}\"\r\n\t\t\t\t\tname=\"radio-group-${radioGroupId[0]}\"\r\n\t\t\t\t\tmodel=\"field.step.formFieldValues[\\'' + field.id + '\\']\"\r\n\t\t\t\t\tis-disabled=\"vm.isDisabled\"\r\n\t\t\t\t\tedit-mode=\"field.editMode\"\r\n\t\t\t\t\tng-style=\"{width: field.config.colwidth}\"\r\n\t\t\t\t\t></${tag}>`;\r\n\t\t\t} else {\r\n\t\t\t\tvm.template = `<${tag}\r\n\t\t\t\t\tng-repeat=\"option in field._options track by $index\"\r\n\t\t\t\t\tlabel=\"{{option}}\"\r\n\t\t\t\t\tvalue=\"{{option}}\"\r\n\t\t\t\t\tname=\"{{option}}\"\r\n\t\t\t\t\tmodel=\"field.step.formFieldValues[\\'' + field.id + '-' + $index + '\\']\"\r\n\t\t\t\t\trequired=\"field._required\"\r\n\t\t\t\t\tis-disabled=\"vm.isDisabled\"\r\n\t\t\t\t\tedit-mode=\"field.editMode\"\r\n\t\t\t\t\tng-style=\"{width: field.config.colwidth}\"\r\n\t\t\t\t\t></${tag}>`;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n// #-- END Component (cmp-checkbox-group) --# //\r\n// #----------------------------------------# //\r\n\r\nangular.module('ec-forms-components').directive('cmpCheckboxGroup', () => new CheckboxGroup(props, 'checkbox-group'));\r\n","import {Component} from 'base-component';\r\n\r\n// #-------------------------------------------# //\r\n// #---- Component (cmp-credential-group) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tfield: '=',\r\n\tmodel: '=',\r\n};\r\n\r\n\r\nclass CredentialGroup extends Component {\r\n\t/*@ngInject*/\r\n\tcontroller($scope, ssAsync, ssEventSvc, ssToastHlp, fieldsHlp) {\r\n\t\t// view model for tracking state\r\n\t\tconst field = $scope.field;\r\n\r\n\t\t\r\n\t\tconst vm = $scope.vm = {\r\n\t\t};\r\n\t\t\r\n\t\tif (field.step){\r\n\t\t\tvm.formFieldValues = field.step.formFieldValues[field.id] ? field.step.formFieldValues[field.id] : '';\r\n\t\t}\r\n\r\n\t\tconst go = $scope.go = {\r\n\t\t\thideHeadings: (field) => {\r\n\t\t\t\treturn field._fieldType != 'heading';\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tshowGroupLabel: () => {\r\n\t\t\t\tlet labelIsVisible = field.step ? vm.formFieldValues.length : true;\r\n\t\t\t\treturn labelIsVisible;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t\r\n\t\tssEventSvc.on('cred-select-active', (val, data) => {\r\n\t\t\tdata.forEach(field => {\r\n\t\t\t\tfieldsHlp.updateActiveCredentialSelection(field, val);\r\n\t\t\t});\r\n\t\t}, $scope);\r\n\t}\r\n}\r\n\r\n// #-- END Component (cmp-credential-group) --# //\r\n// #-------------------------------------------# //\r\n\r\nangular.module('ec-forms-components').directive('cmpCredentialGroup', () => new CredentialGroup(props, 'credential-group') );\r\n","import {Component} from 'base-component';\r\n// #------------------------------------------# //\r\n// #---- Component (cmp-credential-field) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tfield: '=',\r\n\tformfieldvalues: '=',\r\n};\r\n\r\nclass Credential extends Component {\r\n\t/*@ngInject*/\r\n\tcontroller($scope, fieldRendererHlp) {\r\n\t\tconst field = $scope.field;\r\n\t\tconst formfieldvalues = $scope.formfieldvalues;\r\n\r\n\t\tfieldRendererHlp.bindConfigObject($scope, 'field._configJson', 'field.config');\r\n\r\n\t\t$scope.$watch(fieldRendererHlp.getVisibility(field), val => vm.visibility = val);\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\tformfieldvalues: formfieldvalues\r\n\t\t};\r\n\r\n\t\tconst go = $scope.go = {\r\n\t\t\thideHeadingsAndInactive: (field) => {\r\n\t\t\t\treturn field._active && field._fieldType !== 'heading';\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// #-- END Component (cmp-credential-field) --# //\r\n// #------------------------------------------# //\r\n\r\nangular.module('ec-forms-components').directive('cmpCredential', () => new Credential(props, 'credential') );\r\n","import {Component} from 'base-component';\r\n// #-------------------------------------# //\r\n// #---- Component (cmp-dnd-options) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\toptions: '=',\r\n\tfield: '='\r\n};\r\n\r\nclass DndOptions extends Component {\r\n\t/*@ngInject*/\r\n\tcontroller($scope, $element, ssValidateHlp, fieldsHlp) {\r\n\r\n\t\tconst fieldValidator = fieldsHlp.getValidator($scope.field._fieldType);\r\n\t\tlet moveTarget = null;\r\n\t\t\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\toptions: $scope.options.map(value => { return { value }; })\r\n\t\t};\r\n\r\n\t\tif ($scope.options == null) { $scope.options = []; }\r\n\r\n\t\t$scope.$watch('vm.options', (nv, ov) => {\r\n\t\t\tif (nv === ov) { return; }\r\n\t\t\tupdateFieldOptions();\r\n\t\t}, true);\r\n\r\n\t\t$scope.$watch('field.config.multiple', (nv, ov) => {\r\n\t\t\tif (nv === ov) { return; }\r\n\t\t\tif (nv === false) {\r\n\t\t\t\tif (vm.options.length < 2) {\r\n\t\t\t\t\tvm.options.push({ value: 'Option 2' });\r\n\t\t\t\t\tupdateFieldOptions();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { // eslint-disable-line no-unused-vars\r\n\t\t\taddOption() {\r\n\t\t\t\tvm.options.push({ value: `Option ${vm.options.length + 1}` });\r\n\t\t\t\tupdateFieldOptions();\r\n\t\t\t},\r\n\t\t\tdropOption(ev, index, item) {\r\n\t\t\t\tmoveTarget = index;\r\n\t\t\t\treturn item;\r\n\t\t\t},\r\n\t\t\tmoveOption(index, option) {\r\n\t\t\t\tif (index > moveTarget) { index++; }\r\n\t\t\t\tvm.options.splice(index, 1);\r\n\t\t\t\tupdateFieldOptions();\r\n\t\t\t},\r\n\t\t\tremoveOption(index) {\r\n\t\t\t\tif ($scope.field.config.selectType && $scope.field.config.selectType === 'super-input-radio') {\r\n\t\t\t\t\tif (vm.options.length === 2) { return; }\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (vm.options.length === 1) { return; }\r\n\t\t\t\t}\r\n\t\t\t\tvm.options.splice(index, 1);\r\n\t\t\t\tupdateFieldOptions();\r\n\t\t\t},\r\n\t\t\tvalidate(field) {\r\n\t\t\t\tif(typeof fieldValidator === 'function'){\r\n\t\t\t\t\tlet result = fieldValidator.call(null, field);\r\n\t\t\t\t\treturn !result ? true : result;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tfunction updateFieldOptions() {\r\n\t\t\t$scope.options = vm.options.map(o => o.value);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// #-- END Component (cmp-dnd-options) --# //\r\n// #-------------------------------------# //\r\n\r\nangular.module('ec-forms-components').directive('cmpDndOptions', () => new DndOptions(props, 'dnd-options') );\r\n","import {Component} from 'base-component';\r\n// #------------------------------------------------# //\r\n// #---- Component (cmp-emp-initiated-template) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tsearch: '=',\r\n\tfilter: '=',\r\n\ttype: '@',\r\n\tendpoint: '&'\r\n};\r\n\r\nclass EmpInitiatedTemplate extends Component {\r\n\t/*@ngInject*/\r\n\tcontroller($scope, $state, ssAsync, ssListSvc, $location, ssActiveUserSvc, ssFormInstancesApi, ssEmployeeApi, ssToastHlp, ssStorage, enumFormAdministratorType) {\r\n\r\n\t\tconst PAGESIZE = 50;\r\n\t\tvar currentPage = 0,\r\n\t\t\ttotalRetrieved = 0,\r\n\t\t\tgetFormsPromise = null,\r\n\t\t\tcount;\r\n\r\n\t\tconst postTemplate = {\r\n\t\t\t'type': 'FormTemplate',\r\n\t\t\t'attributes': [{\r\n\t\t\t\t'dueDateUtc': null,\r\n\t\t\t\t'formTemplate': {\r\n\t\t\t\t'formTemplateId': ''\r\n\t\t\t\t},\r\n\t\t\t\t'employee':{\r\n\t\t\t\t\t'employeeId': ''\r\n\t\t\t\t}\r\n\t\t\t}]\r\n\t\t};\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\tformsAndPackets: [],\r\n\t\t\tshowInfScroll: true,\r\n\t\t\tisLoading: false,\r\n\t\t\tisSearching: false,\r\n\t\t\tisSorting: false,\r\n\t\t\tsortCriteria: [{\r\n\t\t\t\tname: 'Form Category',\r\n\t\t\t\tvalue: {\r\n\t\t\t\t\tfield: 'categoryname',\r\n\t\t\t\t\tdir: 'asc'\r\n\t\t\t\t}\r\n\t\t\t},{\r\n\t\t\t\tname: 'Form Administrator Type',\r\n\t\t\t\tvalue: {\r\n\t\t\t\t\tfield: 'formadministratortype',\r\n\t\t\t\t\tdir: 'desc'\r\n\t\t\t\t}\r\n\t\t\t},{\r\n\t\t\t\tname: 'Form Name (A-Z)',\r\n\t\t\t\tvalue: {\r\n\t\t\t\t\tfield: 'name',\r\n\t\t\t\t\tdir: 'asc'\r\n\t\t\t\t}\r\n\t\t\t}],\r\n\r\n\t\t};\r\n\r\n\t\tvm.sortBy = vm.sortCriteria[0].value;\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { // eslint-disable-line\r\n\r\n\t\t\tinitiateForm(form) {\r\n\t\t\t\tform.initiating = true;\r\n\t\t\t\tlet redirectUrl = null;\r\n\r\n\t\t\t\tssAsync(function* () {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t//\tGet the user's info\r\n\t\t\t\t\t\tlet userKey = yield ssActiveUserSvc.getIdentityByType('employee');\r\n\r\n\t\t\t\t\t//\tthrow an error if formAdministratorType is 1 (sender)\r\n\t\t\t\t\t\tif(form._formAdministrator.formAdministratorType === 1) {\r\n\t\t\t\t\t\t\tthrow 'An Employee-Initiated form cannot be started by an employee who is also assigned as the Form Administrator.'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t//\tGrab a copy of the post object\r\n\t\t\t\t\t\tvar post = angular.copy(postTemplate);\r\n\t\t\t\t\t\tpost.attributes[0].formTemplate.formTemplateId = form.id;\r\n\t\t\t\t\t\tpost.attributes[0].employee.employeeId = userKey;\r\n\t\t\t\t\t//\tSend the form instance to myself\r\n\t\t\t\t\t\tlet result = yield ssFormInstancesApi.send(post, { 'isemployeeinitiated': true });\r\n\r\n\t\t\t\t\t/*\r\n\t\t\t\t\t1. if the logged in user is the step participant of the first step, redirect to the form instance view, otherwise, show a toast message that the form was sent and remain on the form templates page\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t\tif(userKey === result[0].currentStep._stepParticipant.employeeIds[0]) {\r\n\t\t\t\t\t\t\tlet url = $state.href('base.formInstance', {\r\n\t\t\t\t\t\t\t\tformInstanceId: result[0].id,\r\n\t\t\t\t\t\t\t\treturnUrl: $location.url(),\r\n\t\t\t\t\t\t\t\ttarget: '_blank'\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\twindow.open(url, '_blank');\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tssToastHlp.success(`\"${result[0].name}\" has been sent`, 'Form Sent', false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch(error) {\r\n\t\t\t\t\t\tconsole && console.error && console.error(error);\r\n\t\t\t\t\t\tssToastHlp.error(error,'Error', false);\r\n\t\t\t\t\t} finally {\r\n\t\t\t\t\t\tform.initiating = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t})();\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\t//Reset page settings and fetch the data\r\n\t\tfunction refreshData() {\r\n\t\t\tcurrentPage = 0;\r\n\t\t\ttotalRetrieved = 0;\r\n\t\t\tvm.formsAndPackets = [];\r\n\t\t\tfetchFormData();\r\n\t\t}\r\n\r\n\t\t//\tSorting\r\n\t\t$scope.$on('$destroy', $scope.$watch('vm.sortBy', (newval, oldval) => {\r\n\t\t\tif (newval === oldval) { return; }\r\n\t\t\tvm.formsAndPackets = [];\r\n\t\t\tvm.isSorting = true;\r\n\t\t\tvm.isLoading = false;\r\n\t\t\tvm.isSearching = false;\r\n\t\t\tvm.sortBy = newval;\r\n\t\t\tfetchFormData();\r\n\t\t}));\r\n\r\n\t\t// filter the forms by search value\r\n\t\t$scope.$on('$destroy', $scope.$watch('search', (newval, oldval) => {\r\n\t\t\tif (newval === oldval) { return; }\r\n\t\t\tvm.isSearching = true;\r\n\t\t\tvm.isLoading = false;\r\n\t\t\tvm.isSorting = false;\r\n\t\t\trefreshData(); \t// A new search should reset the page that we are on.\r\n\t\t}));\r\n\r\n\t\t// method to handle scrolling\r\n\t\t$scope.scrollData = function scrollData() {\r\n\t\t\tvm.isLoading = true;\r\n\t\t\tif ($scope.filter !== $scope.type && currentPage < 0) { return; }\r\n\t\t\tif (!vm.showInfScroll || getFormsPromise != null) { return; }\r\n\t\t\tfetchFormData();\r\n\t\t};\r\n\r\n\t\tfunction fetchFormData() {\r\n\r\n\t\t\t//\tabort if a call is already in progress\r\n\t\t\tif (getFormsPromise != null) {\r\n\t\t\t\tgetFormsPromise.$abort();\r\n\t\t\t\tgetFormsPromise = null;\r\n\t\t\t}\r\n\r\n\t\t\tgetFormsPromise = ssAsync(function*() {\r\n\t\t\t\ttry {\r\n\t\t\t\t// \tupdate infinite scroll\r\n\t\t\t\t\tcurrentPage = vm.isSorting ? currentPage : currentPage+1;\r\n\t\t\t\t\tvar offset = !vm.isSearching && !vm.isSorting ? (currentPage - 1) * PAGESIZE : 0\r\n\t\t\t\t\ttotalRetrieved = vm.isSorting ? totalRetrieved : totalRetrieved + PAGESIZE;\r\n\t\t\t\t// \tget the passed in endpoint object\r\n\t\t\t\t\tvar endpoint = $scope.endpoint();\r\n\t\t\t\t// \tadd the limit and offset queries to the endpoint config object\r\n\t\t\t\t\tendpoint.config.limit = vm.isSorting ? totalRetrieved : PAGESIZE;\r\n\t\t\t\t\tendpoint.config.offset = offset;\r\n\t\t\t\t//\tAdd the sort filter\r\n\t\t\t\t\tendpoint.config = Object.assign(endpoint.config, sortOrNull(vm.sortBy));\r\n\t\t\t\t//\trun the endpoint\r\n\t\t\t\t\tvar allForms = yield endpoint.api(endpoint.config);\r\n\t\t\t\t// \tget a total count\r\n\t\t\t\t\tcount = parseInt(allForms.$headers['total-results'], 10);\r\n\t\t\t\t// \textend the form instance with necessary properties\r\n\t\t\t\t\tallForms = extendForms(allForms);\r\n\t\t\t\t//\tfilter out in-active forms\r\n\t\t\t\t\tallForms = allForms.filter(form => form.status !== 'inactive');\r\n\t\t\t\t//\tAggregate the list\r\n\t\t\t\t\tvm.formsAndPackets = vm.isSorting ? [...allForms] : [...vm.formsAndPackets, ...allForms];\r\n\t\t\t\t// \tfigure out when we've reached the end of the list\r\n\t\t\t\t\tlet diff = totalRetrieved - allForms.length;\r\n\t\t\t\t\tvm.showInfScroll = allForms.length < (count - diff);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tvm.showInfScroll = false;\r\n\t\t\t\t\tconsole && console.error && console.error('Error getting data', e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tvm.isLoading = false;\r\n\t\t\t\t\tvm.isSearching = false;\r\n\t\t\t\t\tvm.isSorting = false;\r\n\t\t\t\t\tgetFormsPromise = null;\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\r\n\t\t\treturn getFormsPromise;\r\n\t\t}\r\n\r\n\t\tfunction extendForms(forms) {\r\n\r\n\t\t\tforms.forEach(form => {\r\n\t\t\t\tif(form._formAdministrator.employeeId !== null) {\r\n\t\t\t\t\tform.adminName = form._formAdministrator.name;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tform.adminName = enumFormAdministratorType.byValue(form._formAdministrator.formAdministratorType) || 'None';\r\n\t\t\t\t}\r\n\r\n\t\t\t});\r\n\r\n\t\t\treturn forms;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * return an object containing the 'sort' query value that is passed to the enpoint\r\n\t\t * @param {obj} sort - The 'value' property of the selected sort option\r\n\t\t */\r\n\t\tfunction sortOrNull(sort) {\r\n\t\t\tvar o = {};\r\n\t\t\to['sort[' + sort.field + ']'] = sort.dir;\r\n\t\t\treturn o;\r\n\t\t}\r\n\r\n\t}\r\n}\r\n\r\n// #-- END Component (cmp-emp-initiated-template) --# //\r\n// #------------------------------------------------# //\r\n\r\nangular.module('ec-forms-components').directive('cmpEmpInitiatedTemplate', () => new EmpInitiatedTemplate(props, 'emp-initiated-template') );\r\n","import {Component} from 'base-component';\r\n// #----------------------------------------# //\r\n// #---- Component (cmp-field-renderer) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tfield: '=',\r\n\tgroup: '=',\t\r\n\tignoreValidations: '=',\r\n\torg: '=?'\r\n};\r\n\r\n\r\nclass FieldRenderer extends Component {\r\n\t/*@ngInject*/\r\n\tcontroller($scope, ssValidationHlp, ssObjectHlp, fieldRendererHlp) {\r\n\r\n\t\tconst { glean } = ssObjectHlp;\r\n\t\tconst field = $scope.field;\r\n\t\tconst group = $scope.group;\r\n\t\tconst requiredErr = f => `${f} is required`;\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\ttemplate: ''\r\n\t\t};\r\n\r\n\t\t$scope.validator = {\r\n\t\t\trequired: ssValidationHlp.required(),\r\n\t\t\tnumeric: ssValidationHlp.numeric(),\r\n\t\t\tnumericRequired: ssValidationHlp.numeric({ required: true }),\r\n\t\t\tphone: ssValidationHlp.phone(),\r\n\t\t\tphoneRequired: ssValidationHlp.phone({ required: true }),\r\n\t\t\tssn: ssValidationHlp.ssn(),\r\n\t\t\tssnRequired: ssValidationHlp.ssn({ required: true}),\r\n\t\t\temail: ssValidationHlp.email(),\r\n\t\t\temailRequired: ssValidationHlp.email({ required: true }),\r\n\t\t\tzip: ssValidationHlp.zip(),\r\n\t\t\tzipRequired: ssValidationHlp.zip({ required: true }),\r\n\t\t\tdigitalSignatureRequired: ssValidationHlp.object({ required: true }, [(v, f) => glean( v,x => (x.isSigned && x.name != null && x.name.trim() !== \"\") || requiredErr(f), requiredErr(f))]),\r\n\t\t\tfileUploadRequired: ssValidationHlp.string({ required: true }),\r\n\t\t};\r\n\r\n\t/*\tFC-3214 **************************************\r\n\t**\t(TEMP) Replace the field type of any fields within\r\n\t**\texisting templates that have a '_fieldType'\r\n\t**\tof 'super-input-datepicker'\r\n\t*/\r\n\t\tif(field._fieldType === 'super-input-datepicker') {\r\n\t\t\tfield._fieldType = 'super-iso-org-date';\r\n\t\t}\r\n\t/* ********************************************* */\r\n\r\n\t\tfieldRendererHlp.bindConfigObject($scope, 'field._configJson', 'field.config');\r\n\r\n\t\t$scope.$watchGroup(['field._fieldType', 'field.isRedacted', 'field.ignoreValidations'], () => renderTemplate(field));\r\n\t\t$scope.$watch(fieldRendererHlp.getVisibility(field), val => vm.visibility = val);\r\n\r\n\t\tfunction renderTemplate(field) {\t\t\t\r\n\t\t\tvar tag = fieldRendererHlp.getTag(field);\r\n\t\t\tvar properties = fieldRendererHlp.getProperties(field, group);\r\n\t\t\tvar content = fieldRendererHlp.getContent(field, {scope: $scope.$root});\r\n\t\t\tvm.template = `<${tag}${properties}>${content}</${tag}>`;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// #-- END Component (cmp-field-renderer) --# //\r\n// #----------------------------------------# //\r\n\r\nangular.module('ec-forms-components').directive('cmpFieldRenderer', () => new FieldRenderer(props,\r\n\t'field-renderer'));\r\n","import { Component } from 'base-component';\r\n// #---------------------------------------# //\r\n// #---- Component (cmp-fl-share-form) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\ttemplate: '=',\r\n};\r\n\r\nclass FlShareForm extends Component {\r\n\t/*@ngInject*/\r\n\tcontroller($scope, $element, $document, ssAsync, ssEventSvc, ssToastHlp, ssFormTemplatesApi) {\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\tformName: $scope.template._name,\r\n\t\t\torg: [],\r\n\t\t\tsaving: false,\r\n\t\t};\r\n\r\n\t\t// get ref to modal-fade and show it\r\n\t\tconst faderClass = 'shown';\r\n\t\tconst fader = angular.element($document[0].getElementById('modal-fade'));\r\n\t\tfader.addClass(faderClass);\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = {\r\n\t\t\tcancel: close,\r\n\r\n\t\t\tshare() {\r\n\t\t\t\tvm.saving = true;\r\n\t\t\t\tlet org = vm.org[0];\r\n\t\t\t\tssAsync(function*() {\r\n\t\t\t\t\tyield ssFormTemplatesApi.shareToOrg($scope.template.id, {\r\n\t\t\t\t\t\tdestinationOrgId: org.Id,\r\n\t\t\t\t\t\tdestinationTemplateName: vm.formName\r\n\t\t\t\t\t}).then(res => {\r\n\t\t\t\t\t\tif (res.status === -1 || res.status >= 400) {\r\n\t\t\t\t\t\t\tif (res.status === 422) {\r\n\t\t\t\t\t\t\t\tssToastHlp.error(res.data.errors.Title, `Error sharing \"${vm.formName}\" to ${org.Name} (${org.Id})`);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tssToastHlp.error('', `Error sharing \"${vm.formName}\" to ${org.Name} (${org.Id})`);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tconsole && console.error && console.error(`Error sharing \"${vm.formName}\" to ${org.Name} (${org.Id})`, res);\r\n\t\t\t\t\t\t\tvm.saving = false;\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tssToastHlp.success('', `\"${vm.formName}\" has been shared to ${org.Name} (${org.Id})`);\r\n\t\t\t\t\t\tclose();\r\n\t\t\t\t\t}).catch(err => {\r\n\t\t\t\t\t\tif (err.status === 422) {\r\n\t\t\t\t\t\t\tssToastHlp.error(err.data.errors.Title, `Error sharing \"${vm.formName}\" to ${org.Name} (${org.Id})`);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tssToastHlp.error(err, `Error sharing \"${vm.formName}\" to ${org.Name} (${org.Id})`);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconsole && console.error && console.error(`Error sharing \"${vm.formName}\" to ${org.Name} (${org.Id})`, err);\r\n\t\t\t\t\t\tvm.saving = false;\r\n\t\t\t\t\t});\r\n\t\t\t\t})();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// move the element to the body so that the z-index can be higher than the modal-fade\r\n\t\tangular.element(document.body).append($element);\r\n\r\n\t\tfunction close() {\r\n\t\t\t// remove the scope and element\r\n\t\t\t$scope.$destroy();\r\n\t\t\t$scope = null;\r\n\t\t\t$element.remove();\r\n\t\t\t$element = null;\r\n\r\n\t\t\t// hide modal-view\r\n\t\t\tfader.removeClass(faderClass);\r\n\r\n\t\t\t// emit event so parent can catch and hide widget so further clicks will show the component again\r\n\t\t\tssEventSvc.emit('fl-share-form-cancel');\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// #-- END Component (cmp-fl-share-form) --# //\r\n// #---------------------------------------# //\r\n\r\nangular.module('ec-forms-components').directive('cmpFlShareForm', () => new FlShareForm(props, 'fl-share-form'));\r\n","import { Component } from 'base-component';\r\n// #-----------------------------------------# //\r\n// #---- Component (cmp-form-list-group) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tsearch: '=',\r\n\tcount: '=',\r\n\tfilter: '=',\r\n\ttype: '@',\r\n\tendpoint: '&'\r\n};\r\n\r\nconst stepActionLabels = {\r\n\t0: 'Complete Form',\r\n\t1: 'Review Form',\r\n\t2: 'Review & Approve',\r\n\t3: 'View Form',\r\n\t4: 'Review Profile' \r\n};\r\n\r\nclass FormListGroup extends Component {\r\n\t/*@ngInject*/\r\n\tcontroller($scope, $filter, $state, $stateParams, $location, rAF, enumStepAction, enumFormStatus, ssAsync, ssObjectHlp, ssDateHlp, ssDateByOrgHlp, ssDueDateHlp) {\r\n\r\n\t\tconst routeVm = $scope.$root.utils.findInParentScope('routeVm', $scope);\r\n\t\tvar currentPage = 0;\r\n\t\tconst pageSize = 50;\r\n\t\tvar totalRetrieved = 0;\r\n\t\tvar viewType = $scope.type; //Current|Sent|Completed - does not directly tie to a form status (Incomplete|Complete|Rejected|Archived)\r\n\t\tvar emplId;\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = { // eslint-disable-line\r\n\t\t\tformsAndPackets: [],\r\n\t\t\tshowInfScroll: true,\r\n\t\t\tloading: false,\r\n\t\t\trefreshing: false,\r\n\t\t\tsorting: false,\r\n\t\t\tsortCriteria: [{\r\n\t\t\t\tname: 'Most Recent',\r\n\t\t\t\tvalue: {\r\n\t\t\t\t\tfield: 'recentlysent',\r\n\t\t\t\t\tdir: 'desc'\r\n\t\t\t\t}\r\n\t\t\t}, {\r\n\t\t\t\tname: 'Due Date',\r\n\t\t\t\tvalue: {\r\n\t\t\t\t\tfield: 'duedate',\r\n\t\t\t\t\tdir: 'asc'\r\n\t\t\t\t}\r\n\t\t\t}, {\r\n\t\t\t\tname: 'Form/Packet Name (A-Z)',\r\n\t\t\t\tvalue: {\r\n\t\t\t\t\tfield: 'formname',\r\n\t\t\t\t\tdir: 'asc'\r\n\t\t\t\t}\r\n\t\t\t}],\r\n\t\t\ttype: viewType\r\n\t\t};\r\n\r\n\t\tvm.sortBy = vm.sortCriteria[1].value;\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { // eslint-disable-line\r\n\t\t\tcomplete(form) {\r\n\t\t\t\tlet url = $state.href('base.formInstance', {\r\n\t\t\t\t\tformInstanceId: form.id,\r\n\t\t\t\t\treturnUrl: $location.url(),\r\n\t\t\t\t\ttarget: '_blank'\r\n\t\t\t\t});\r\n\t\t\t\twindow.open(url, '_blank');\r\n\t\t\t},\r\n\r\n\t\t\ttoggleDetails(formObj) {\r\n\t\t\t\tformObj.showDetails = !formObj.showDetails;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t//Reset page settings and fetch the data\r\n\t\tfunction refreshData() {\r\n\t\t\tcurrentPage = 0;\r\n\t\t\ttotalRetrieved = 0;\r\n\t\t\tvm.formsAndPackets = [];\r\n\t\t\tfetchFormData();\r\n\t\t}\r\n\r\n\t\t//\tSorting\r\n\t\t$scope.$watch('vm.sortBy', (newval, oldval) => {\r\n\t\t\tif (newval === oldval || vm.formsAndPackets == null || vm.formsAndPackets.length === 0) { return; }\r\n\t\t\tvm.sortBy = newval;\r\n\t\t\tvm.sorting = true;\r\n\t\t\tfetchFormData();\r\n\t\t});\r\n\r\n\t\t// filter the forms by search value\r\n\t\t$scope.$watch('search', (newval, oldval) => {\r\n\t\t\tif (newval === oldval) { return; }\r\n\t\t\trefreshData(); \t// A new search should reset the page that we are on.\r\n\t\t});\r\n\r\n\t\t// method to handle scrolling\r\n\t\t$scope.scrollData = function scrollData() {\r\n\t\t\tif ($scope.filter !== $scope.type && currentPage < 0) { return; }\r\n\t\t\tif (!vm.showInfScroll || vm.loading) { return; }\r\n\t\t\tfetchFormData();\r\n\t\t};\r\n\r\n\t\tfunction fetchFormData() {\r\n\r\n\t\t\tvm.loading = true;\r\n\r\n\t\t\treturn ssAsync(function* () {\r\n\t\t\t\ttry {\r\n\t\t\t\t\t// \tupdate infinite scroll\r\n\t\t\t\t\tcurrentPage = vm.sorting ? currentPage : currentPage + 1;\r\n\t\t\t\t\tvar offset = (currentPage - 1) * pageSize;\r\n\t\t\t\t\ttotalRetrieved = vm.sorting ? totalRetrieved : totalRetrieved + pageSize;\r\n\t\t\t\t\t// \tget the passed in endpoint object\r\n\t\t\t\t\tvar endpoint = $scope.endpoint();\r\n\t\t\t\t\t// \tpass in the employee ID thats retrieved from the endpoint call\r\n\t\t\t\t\templId = endpoint.config.id;\r\n\t\t\t\t\t// \tadd the limit and offset queries to the endpoint config object\r\n\t\t\t\t\tendpoint.config.limit = vm.sorting ? totalRetrieved : pageSize;\r\n\t\t\t\t\tendpoint.config.offset = vm.sorting ? 0 : offset;\r\n\t\t\t\t\t//\tAdd the sort filter\r\n\t\t\t\t\tendpoint.config = Object.assign(endpoint.config, sortOrNull(vm.sortBy));\r\n\t\t\t\t\t//\trun the endpoint\r\n\t\t\t\t\tvar allForms = endpoint.config.id ? yield endpoint.api(endpoint.config) : null;\r\n\t\t\t\t\t// \tget a total count\r\n\t\t\t\t\t$scope.count = parseInt(allForms.$headers['total-results'], 10);\r\n\t\t\t\t\t// \tcreate all the neceesary properties for our view\r\n\t\t\t\t\tprocessFormData(allForms);\r\n\t\t\t\t\t// \tfigure out when we've reached the end of the list\r\n\t\t\t\t\tvm.showInfScroll = totalRetrieved < $scope.count;\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tvm.showInfScroll = false;\r\n\t\t\t\t\tconsole && console.error && console.error('Error getting data', e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tvm.loading = false;\r\n\t\t\t\t\tvm.sorting = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\trAF(function () {\r\n\t\t\t\t\tvm.loading = false;\r\n\t\t\t\t\t$scope.$emit('forms-inbox.data-loaded');\r\n\t\t\t\t}, $scope);\r\n\r\n\t\t\t})();\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Initial method to process the form data\r\n\t\t * @param {arr} forms - The collection on which to operate\r\n\t\t */\r\n\t\tfunction processFormData(forms) {\r\n\t\t\tforms.forEach(form => {\r\n\t\t\t\t// determine if the user is the primary recipient\r\n\t\t\t\tform.userIsPrimary = form._employee.employeeId !== null && form._employee.employeeId === emplId;\r\n\t\t\t\t// set the necessary current step properties\r\n\t\t\t\tsetCurrentStepProps(form);\r\n\t\t\t\t// determine the displayed form status\r\n\t\t\t\tform.formStatus = getStatus(form);\r\n\t\t\t\t//\tget a friendly due date string if a due date exists\r\n\t\t\t\tif(form._dueDateUtc){\r\n\t\t\t\t\tform.dueDateStatus = ssDueDateHlp.dueStatus(form, routeVm.org);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t// create the packets\r\n\t\t\tvar formsAndPackets = makeFormAndPacketList(forms);\r\n\t\t\t// update the viewable form list based on whether we are sorting them or retrieving them\r\n\t\t\tvm.formsAndPackets = vm.sorting ? [...formsAndPackets] : [...vm.formsAndPackets, ...formsAndPackets];\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Determine the displayed form status\r\n\t\t * @param {obj} form - The form instance object on which to operate\r\n\t\t */\r\n\t\tfunction getStatus(form) {\r\n\r\n\t\t\tif (!form.currentStep) { return 'No Workflow'; }\r\n\r\n\t\t\tif (form.isUserStep) {\r\n\t\t\t\tif (form.isRejected) {\r\n\t\t\t\t\tvar deniedDate = ssDateByOrgHlp.utcIsoToRelativeMoment(form.currentStep._submittedDtUtc, routeVm.org).format('MM/DD/YY');\r\n\t\t\t\t\treturn `Denied ${deniedDate} ${getDeniedBy(form)}`;\r\n\t\t\t\t}\r\n\t\t\t\tif (form.currentStep._lastModifiedDtUtc && !form.isSubmitted && !form.isComplete) {\r\n\t\t\t\t\tvar modifiedDate = ssDateByOrgHlp.utcIsoToRelativeMoment(form.currentStep._lastModifiedDtUtc, routeVm.org).format('MM/DD/YY');\r\n\t\t\t\t\treturn `Progress Saved ${modifiedDate}`;\r\n\t\t\t\t}\r\n\t\t\t} else if (form.isSubmitted) {\r\n\t\t\t\t\tvar lastUserStepIndex = getLastUserStepIndex(form._steps);\r\n\t\t\t\t\tvar submittedDate = ssDateByOrgHlp.utcIsoToRelativeMoment(form._steps[lastUserStepIndex]._submittedDtUtc, routeVm.org).format('MM/DD/YY');\r\n\t\t\t\t\treturn `Submitted ${submittedDate}`;\r\n\t\t\t} else if (form.isComplete) {\r\n\t\t\t\t\tvar formCompletedDate = ssDateByOrgHlp.utcIsoToRelativeMoment(form._completionDateUtc, routeVm.org).format('MM/DD/YY');\r\n\t\t\t\t\treturn `Completed ${formCompletedDate}`;\r\n\t\t\t} else if(form.isPending){\r\n\t\t\t\treturn 'Workflow Pending';\r\n\t\t\t} else {\r\n\t\t\t\treturn '';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * create the required properties on the form instance\r\n\t\t * @param {obj} form - The form instance object on which to operate\r\n\t\t */\r\n\t\tfunction setCurrentStepProps(form) {\r\n\r\n\t\t\tform.isUserStep = false;\r\n\t\t\tform.isPending = false;\r\n\t\t\tform.isSubmitted = false;\r\n\t\t\tform.isComplete = false;\r\n\t\t\tform.isRejected = false;\r\n\t\t\tform.rejectedByUser = false;\r\n\t\t\tform.stepActionName = 'undefined';\r\n\t\t\tform.stepActionLabel = null;\r\n\r\n\t\t\t// if current step doesn't exist, return\r\n\t\t\tif (!form.currentStep) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// set the action button label for the current step action\r\n\t\t\tform.stepActionLabel = form.currentStep._stepAction !== null ? stepActionLabels[form.currentStep._stepAction] : stepActionLabels[3];\r\n\r\n\t\t\t// If '_stepAction' is 0 (form entry), we replace its enum name otherwise we use it as is\r\n\t\t\tif (form.currentStep._stepAction === enumStepAction.formEntry) {\r\n\t\t\t\tform.stepActionName = 'Fill Out Form';\r\n\t\t\t} else {\r\n\t\t\t\tform.stepActionName = enumStepAction.byValue(form.currentStep._stepAction);\r\n\t\t\t}\r\n\r\n\t\t\tform.isComplete = form.currentStep._stepAction === enumStepAction.formCompleted\r\n\r\n\t\t\t//\tcheck to see if form is complete and if so, we can return\r\n\t\t\tif (form.isComplete) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t/*\t\r\n\t\t\t**\tresolved edit permission from server\r\n\t\t\t**\tAdding Glean so that failures at least resolve to canEdit false\r\n\t\t\t*/\r\n\t\t\tconst CAN_EDIT = ssObjectHlp.glean(form, _ => _.currentStep._meta.permissions.permittedActions.edit, false);\r\n\r\n\t\t\t//\tget the indexes of the current step and the last step in which the user is a participant to determine if the form is submitted (If the user does not have any steps past the current step)\r\n\t\t\tvar currStepIndex = form._steps.indexOf(form.currentStep);\r\n\t\t\tvar lastUserStepIndex = getLastUserStepIndex(form._steps);\r\n\t\t\tform.isSubmitted = currStepIndex >= lastUserStepIndex && form._steps[lastUserStepIndex]._submittedDtUtc != null && !ssDateHlp.isForeverPast(form._steps[lastUserStepIndex]._submittedDtUtc);\r\n\r\n\t\t\t// is the user the participant in the current step?\r\n\t\t\tif (form.currentStep._stepParticipant != null && angular.isArray(form.currentStep._stepParticipant.employeeIds)) {\r\n\t\t\t\tform.isUserStep = form.currentStep._stepParticipant.employeeIds[0] === emplId;\r\n\t\t\t}\r\n\r\n\t\t\t//\tcheck to see if form is rejected, and if the current user is the one who rejected it\r\n\t\t\tif (form.isUserStep && form._statusId === enumFormStatus.rejected) {\r\n\t\t\t\tform.isRejected = true;\r\n\t\t\t\tif (form.currentStep._stepAction === 2) {\r\n\t\t\t\t\tform.rejectedByUser = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tform.isPending = !form.isUserStep && !form.isSubmitted && !CAN_EDIT;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Retrieve the index of the last step in which the user is the participant\r\n\t\t * @param {obj} form - The form instance object on which to operate\r\n\t\t */\r\n\t\tfunction getLastUserStepIndex(steps) {\r\n\t\t\tfor (let i = steps.length - 1; i >= 0; i--) {\r\n\t\t\t\tif (steps[i]._stepParticipant == null || !angular.isArray(steps[i]._stepParticipant.employeeIds)) { continue; }\r\n\t\t\t\tif (steps[i]._stepParticipant.employeeIds[0] === emplId) {\r\n\t\t\t\t\treturn steps.indexOf(steps[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction getDeniedBy(form) {\r\n\t\t\tif (!form.rejectedByUser && form.isUserStep) {\r\n\t\t\t\tvar ind = form._steps.indexOf(form.currentStep) + 1;\r\n\t\t\t\treturn `by ${form._steps[ind]._stepParticipant.name}`;\r\n\t\t\t}\r\n\t\t\treturn '';\r\n\t\t}\r\n\r\n\t\tfunction getPacketCompletionDate(forms) {\r\n\t\t\tlet latestForm = forms.reduce((prev, curr) => {\r\n\t\t\t\treturn prev._completionDateUtc > curr._completionDateUtc ? prev : curr;\r\n\t\t\t});\r\n\t\t\treturn ssDateByOrgHlp.utcIsoToRelativeMoment(latestForm._completionDateUtc, routeVm.org).format('MM/DD/YY');\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * create a separate packets array\r\n\t\t * @param {arr} formArr - The collection on which to operate\r\n\t\t */\r\n\t\tfunction makeFormAndPacketList(formArr) {\r\n\t\t\tconst packetMap = new Map();\r\n\t\t\treturn formArr\r\n\t\t\t\t.map(function (form, idx, arr) {\r\n\t\t\t\t\tvar packet, completeCount, incompleteCount, totalFormsCount;\r\n\t\t\t\t\tform.isPacket = false;\r\n\r\n\t\t\t\t\t// if the form is not in a packet, don't wrap it in one... duh!\r\n\t\t\t\t\tif (!form.isInPacket) { return form; }\r\n\t\t\t\t\t\r\n\t\t\t\t\t// check if we already know about this packet\r\n\t\t\t\t\tif (!packetMap.has(form._packetInstance.instanceId)) {\r\n\t\t\t\t\t\tpacketMap.set(form._packetInstance.instanceId, {\r\n\t\t\t\t\t\t\tname: form._packetInstance.name,\r\n\t\t\t\t\t\t\tisPacket: true,\r\n\t\t\t\t\t\t\tisRejected: false,\r\n\t\t\t\t\t\t\tshowDetails: false,\r\n\t\t\t\t\t\t\tcontent: []\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcompleteCount = form._packetInstance.completeFormInstanceIds.length;\r\n\t\t\t\t\tincompleteCount = form._packetInstance.incompleteFormInstanceIds.length;\r\n\t\t\t\t\ttotalFormsCount = completeCount + incompleteCount;\r\n\r\n\t\t\t\t\tpacket = packetMap.get(form._packetInstance.instanceId);\r\n\t\t\t\t\tpacket.content.push(form);\r\n\r\n\t\t\t\t\t/*\t\r\n\t\t\t\t\t**\tDetermine the due date status (indicator) for a packet\r\n\t\t\t\t\t**\tbased on the due status of included forms...\r\n\t\t\t\t\t**\t'overdue': there is at least one overdue form included\r\n\t\t\t\t\t**\t'due soon': there are no overdue forms but there is at least one form due soon\r\n\t\t\t\t\t**\tnull: There are no forms with a due date\r\n\t\t\t\t\t*/\r\n\t\t\t\t\tpacket.dueDateStatus = (() => {\r\n\t\t\t\t\t\tlet overdueForms = packet.content.filter((form) => form.dueDateStatus && form.dueDateStatus.class === 'overdue');\r\n\t\t\t\t\t\tlet dueSoonForms = packet.content.filter((form) => form.dueDateStatus &&form.dueDateStatus.class === 'due-soon');\r\n\t\t\t\t\t\tif(overdueForms.length) {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tclass: 'overdue'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else if(dueSoonForms.length) {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tclass: 'due-soon'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})();\r\n\r\n\t\t\t\t//\tdetermine displayed status for a packet\r\n\t\t\t\t\tpacket.formStatus = (() => {\r\n\t\t\t\t\t\tlet rejectedForms = packet.content.filter(form => form.isRejected);\r\n\t\t\t\t\t\tif (rejectedForms.length) {\r\n\t\t\t\t\t\t\tpacket.isRejected = true;\r\n\t\t\t\t\t\t\tif (rejectedForms.length === 1) {\r\n\t\t\t\t\t\t\t\treturn `form denied ${getDeniedBy(rejectedForms[0])}`;\r\n\t\t\t\t\t\t\t} else if (rejectedForms.length > 1) {\r\n\t\t\t\t\t\t\t\treturn `${rejectedForms.length} forms denied`;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else if (incompleteCount === 0) {\r\n\t\t\t\t\t\t\treturn `Completed ${getPacketCompletionDate(packet.content)}`;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn `${completeCount}/${totalFormsCount} Forms Completed`;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})();\r\n\r\n\t\t\t\t\tif (packet.content.length > 1) { return null; }\r\n\t\t\t\t\treturn packet;\r\n\t\t\t\t})\r\n\t\t\t\t.filter(form => form != null);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Apply the form sort to the list of forms\r\n\t\t *\r\n\t\t * @param {string} sortBy - The sort string that determines how to sort the list.\r\n\t\t * @param {Array} forms - The list of forms to sort.\r\n\t\t */\r\n\t\tfunction applySort(sortBy, forms, dir) {\r\n\t\t\tvar reverse;\r\n\t\t\treverse = dir === 'DESC' ? true : false;\r\n\t\t\treturn $filter('orderBy')(forms, `_${sortBy}`, reverse);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * return an object containing the 'sort' query value that is passed to the enpoint\r\n\t\t * @param {obj} sort - The 'value' property of the selected sort option\r\n\t\t */\r\n\t\tfunction sortOrNull(sort) {\r\n\t\t\tvar o = {};\r\n\t\t\to['sort[' + sort.field + ']'] = sort.dir;\r\n\t\t\treturn o;\r\n\t\t}\r\n\r\n\t}\r\n}\r\n\r\n// #-- END Component (cmp-form-list-group) --# //\r\n// #-----------------------------------------# //\r\n\r\nangular.module('ec-forms-components').directive('cmpFormListGroup', () => new FormListGroup(props, 'form-list-group'));\r\n","import {Component} from 'base-component';\r\n// #------------------------------------------# //\r\n// #---- Component (cmp-form-send-status) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\torg: '=',\r\n\tform: '=',\r\n\tbatch: '=',\r\n\tonComplete: '&?'\r\n};\r\n\r\nclass FormSendStatus extends Component {\r\n\t/*@ngInject*/\r\n\tcontroller($scope, ssAsync, $q, ssFormInstancesApi, $timeout, ssToastHlp, ssStorage, moment, $filter, $sce, ssDateByOrgHlp) {\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\tprogressMessage: '',\r\n\t\t\tstatus: '',\r\n\t\t\tsendStatusText: '',\r\n\t\t\tstatusHelperText: '',\r\n\t\t\tpercentComplete: '0%',\r\n\t\t\tloading: true,\r\n\t\t\tinProgress: false,\r\n\t\t\tshowRemove: true,\r\n\t\t\tloadingMessage: ''\r\n\t\t};\r\n\r\n\t\tvar completeOnLoad = false;\r\n\t\tvar firstPoll = true;\r\n\t\tconst formType = $scope.form._objectType === \"FormTemplate\" ? 'Form' : 'Packet';\r\n\r\n\t\tvm.formattedRecipientLength = $filter('number')($scope.batch._includedEmployeeIds.length, 0)\r\n\r\n\t//\tSet the default status & helper text\t\r\n\t\tvm.sendStatusText = `Sending ${formType} to ${vm.formattedRecipientLength}`;\r\n\t\tvm.statusHelperText = $sce.trustAsHtml('<strong>This may take several minutes.</strong> Sender will be notified and emailed when complete.');\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { // eslint-disable-line\r\n\r\n\t\t\tremoveBatch() { \r\n\t\t\t\t$scope.onComplete({batch: $scope.batch});\r\n\t\t\t}, \r\n\t\t\t\r\n\t\t\tarchiveBatch() {\r\n\t\t\t\tvm.loadingMessage = 'Archiving batch...';\r\n\t\t\t\tvm.loading = true;\r\n\t\t\t\tvm.status._isArchived = true;\r\n\t\t\t\tvm.status.$save().then(() => {\r\n\t\t\t\t\tgo.removeBatch();\r\n\t\t\t\t\tssToastHlp.success('', 'Batch successfully archived');\r\n\t\t\t\t}).catch((e) => {\r\n\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t\tssToastHlp.error('', 'There was a problem archiving the batch. Please try again');\r\n\t\t\t\t}).finally(() => {\r\n\t\t\t\t\tvm.loadingMessage = '';\r\n\t\t\t\t\tvm.loading = false;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tfunction checkStatus() {\r\n\r\n \t\t\tvar deferred = $q.defer();\r\n \t\t\tvm.loadingMessage = 'Preparing batch...'\r\n\r\n \t\t\tfunction checking() {\r\n\r\n\t\t\t\tssFormInstancesApi.getBatchStatus({\r\n\t\t\t\t\tid: $scope.batch.id\r\n\t\t\t\t}).then((status) => {\r\n\t\t\t\t\tvm.loading = false;\r\n\t\t\t\t\tvm.loadingMessage = '';\r\n\r\n\t\t\t\t//\tassign the returned status object to the view model\r\n\t\t\t\t\tvm.status = status;\r\n\r\n\t\t\t\t//\tcreate some properly formatted number strings for the view\r\n\t\t\t\t\tvm.numInBatch = $filter('number')(vm.status._numInBatch, 0);\r\n\t\t\t\t\tvm.numFailed = $filter('number')(vm.status._numFailed, 0);\r\n\t\t\t\t\tvm.numComplete = $filter('number')(vm.status._numComplete, 0)\r\n\r\n\t\t\t\t\tswitch(vm.status._status) {\r\n\t\t\t\t\t\tcase 0:\r\n\t\t\t\t\t\t\tvm.progressMessage = 'Preparing to send';\r\n\t\t\t\t\t\t\tvm.progressMessageClass = 'waiting';\r\n\t\t\t\t\t\t\tvm.sendStatusText = `Preparing ${formType} for ${vm.formattedRecipientLength}`;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 1: \r\n\t\t\t\t\t\t\tvm.inProgress = true;\r\n\t\t\t\t\t\t\tvm.sendStatusText = `Sending ${formType} to ${vm.formattedRecipientLength}`;\r\n\t\t\t\t\t\t\tvm.percentComplete = vm.status._percentComplete + '%';\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 3: \r\n\t\t\t\t\t\t\tvm.inProgress = true;\r\n\t\t\t\t\t\t\tvm.percentComplete = '100%';\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (vm.status._status === 3 || vm.status._status === 4 || vm.status._status === 5) {\r\n\t\t\t\t\t\tcompleteOnLoad = firstPoll;\r\n\t\t\t\t\t\t$timeout(function() {\r\n\t\t\t\t\t\t\tdeferred.resolve();\r\n\t\t\t\t\t\t}, 3000);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tfirstPoll = false;\r\n\t\t\t\t\t\t$timeout(checking, 3000);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t});\r\n \t\t\t}\r\n \t\t\tchecking();\r\n\t\t\treturn deferred.promise;\r\n\t\t}\r\n\r\n\t\tfunction resolvedBatchState() {\r\n\r\n\t\t\tvm.inProgress = false; \r\n\r\n\t\t\tlet sentMoment = ssDateByOrgHlp.utcIsoToRelativeMoment(vm.status._endedAtUtc, $scope.org);\r\n\r\n\t\t\tlet sentDate = sentMoment.calendar(null, {\r\n\t\t\t\tsameDay: '[Sent Today at] LT',\r\n\t\t\t\tlastDay: '[Sent Yesterday at] LT',\r\n\t\t\t\tsameElse: '[Sent on] l [at] h:mm a'\r\n\t\t\t});\r\n\r\n\t\t\tvm.statusHelperText = $sce.trustAsHtml(`${sentDate}`);\r\n\r\n\t\t\tif(!vm.status._numFailed) {\r\n\t\t\t\tvm.sendStatusText = `${formType} sent to ${vm.numInBatch}`;\r\n\t\t\t\tvm.progressMessage = 'Success!';\r\n\t\t\t\tvm.progressMessageClass = 'success';\r\n\t\t\t\tif(!completeOnLoad) { \r\n\t\t\t\t\tssToastHlp.success('', `\"${$scope.form._name}\" sent successfully to ${vm.numInBatch} ${vm.status._numInBatch > 1 ? 'people' : 'person'}`, false);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$timeout(function() {\r\n\t\t\t\t\tgo.removeBatch();\r\n\t\t\t\t}, 3000);\r\n\r\n\t\t\t} else {\r\n\t\t\t\tvm.hasFailures = true;\r\n\t\t\t\tvm.sendStatusText = `${formType} sent to ${vm.numInBatch - vm.numFailed} employees`;\r\n\t\t\t\tvm.progressMessage = `${vm.numFailed} failed to send`;\r\n\t\t\t\tvm.progressMessageClass = 'error';\r\n\t\t\t\tif(!completeOnLoad) { \r\n\t\t\t\t\tssToastHlp.standard('', `\"${$scope.form._name}\" sent to ${vm.numInBatch} people, but only ${vm.numComplete} succeeded`, false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tcheckStatus().then(() => {\r\n\t\t\tresolvedBatchState();\r\n\t\t});\r\n\r\n\t}\r\n}\r\n\r\n// #-- END Component (cmp-form-send-status) --# //\r\n// #------------------------------------------# //\r\n\r\nangular.module('ec-forms-components').directive('cmpFormSendStatus', () => new FormSendStatus(props, 'form-send-status') );\r\n","import { Component } from 'base-component';\r\n// #--------------------------------------------------# //\r\n// #---- Component (cmp-multiple-employee-search) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tlabel: '@',\r\n\tmodel: '=',\r\n\texclusions: '='\r\n};\r\n\r\nclass MultipleEmployeeSearch extends Component {\r\n\t/*@ngInject*/\r\n\tcontroller($scope, $rootScope, $document, $element, ssAsync, ssListSvc, ssLocationSvc,\r\n\t\tssJobTypeSvc, ssDepartmentSvc, ssEmployeeApi, enumEmployeeStatus, ssStringHlp, ssDateByOrgHlp, moment, ssToastHlp ) {\r\n\r\n\t\t$scope.routeVm = $scope.$root.utils.findInParentScope('routeVm', $scope);\r\n\t\tvar now = moment().format('MM/DD/YYYY');\r\n\t\tvar groupPromise = null;\r\n\t\tvar newEmps = null;\r\n\r\n\t//\tObject that holds the filter reset values\r\n\t\tvar resetOptions = {\r\n\t\t\tselected: {},\r\n\t\t\texclusions: []\r\n\t\t};\r\n\r\n\t\tconst vm = $scope.vm = { // eslint-disable-line\r\n\t\t\tasOf: now,\r\n\t\t\tformOpened: false,\r\n\t\t\tfiltering: false,\r\n\t\t\tattempted: false,\r\n\t\t\tselected: {\r\n\t\t\t\tlocation: [],\r\n\t\t\t\tjobType: [],\r\n\t\t\t\temploymentGroup: [],\r\n\t\t\t\tdepartment: [],\r\n\t\t\t\tstatus: null,\r\n\t\t\t\thireDateStart: null,\r\n\t\t\t\thireDateEnd: null\r\n\t\t\t},\r\n\t\t\temploymentGroupDisabled: false\r\n\t\t};\r\n\r\n\t//\tPrepare data for dropdowns and what not\r\n\t\tssAsync(function* () {\r\n\t\t\ttry {\r\n\t\t\t\tvm.locations = yield ssLocationSvc.getAll();\r\n\t\t\t\tvm.jobTypes = vm.jobTypesAll = yield ssJobTypeSvc.getAll();\r\n\t\t\t\tvm.employmentGroups = yield ssListSvc.getByExternalId('jobtype.employmentgroups');\r\n\t\t\t\tvm.employmentGroups = vm.employmentGroups.map(o => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t_name: o.name,\r\n\t\t\t\t\t\tid: o.value\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\r\n\t\t\t\tvm.departments = yield ssDepartmentSvc.getAll();\r\n\t\t\t\tvm.status = enumEmployeeStatus.getEnums().map(o => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t_name: ssStringHlp.toProperCase(o.name.toLowerCase()),\r\n\t\t\t\t\t\tid: o.value\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\r\n\t\t\t//\tDefault status filter to 'active' employees\r\n\t\t\t\tvm.selected.status = [vm.status.find(s => s.id === enumEmployeeStatus.active)];\r\n\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.error('ERROR', e);\r\n\t\t\t}\r\n\t\t})();\r\n\r\n\t\tconst go = $scope.go = { // eslint-disable-line\r\n\r\n\t\t\tcancel() {\r\n\t\t\t\tvm.formOpened = false;\r\n\t\t\t\tvm.filtering = false;\r\n\r\n\t\t\t//\tReset filter/exclusion values if there is a current recipient group\r\n\t\t\t\tif ($scope.model.length) {\r\n\t\t\t\t\tvm.selected = angular.copy(resetOptions.selected, vm.selected);\r\n\t\t\t\t\t$scope.exclusions = angular.copy(resetOptions.exclusions, $scope.exclusions);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tresetFilters() {\r\n\t\t\t\tvm.status[1].checked = true;\r\n\t\t\t\tvm.selected.status.push(vm.status[1]);\r\n\t\t\t},\r\n\r\n\t\t//\tclear all filters & appropriate variables\r\n\t\t\tclearAllFilters() {\r\n\t\t\t\tvm.selected.location = [];\r\n\t\t\t\tvm.selected.jobType = [];\r\n\t\t\t\tvm.selected.employmentGroup = [];\r\n\t\t\t\tvm.selected.department = [];\r\n\t\t\t\tvm.selected.status = [];\r\n\t\t\t\tvm.selected.hireDateStart = '';\r\n\t\t\t\tvm.selected.hireDateEnd = '';\r\n\t\t\t\tvm.locations.forEach(uncheck);\r\n\t\t\t\tvm.jobTypes.forEach(uncheck);\r\n\t\t\t\tvm.employmentGroups.forEach(uncheck);\r\n\t\t\t\tvm.departments.forEach(uncheck);\r\n\t\t\t\tvm.status.forEach(uncheck);\r\n\t\t\t\t$scope.exclusions = [];\r\n\t\t\t\tvm.attempted = false;\r\n\t\t\t\tvm.filtering = false;\r\n\t\t\t},\r\n\r\n\t\t\ttoggleFilter() {\r\n\t\t\t\tif (!$scope.model.length) {\r\n\t\t\t\t\tgo.clearAllFilters();\r\n\t\t\t\t\tgo.resetFilters();\r\n\t\t\t\t}\r\n\t\t\t\tvm.formOpened = !vm.formOpened;\r\n\t\t\t},\r\n\r\n\t\t\taddGroup() {\r\n\t\t\t\tvm.filtering = true;\r\n\t\t\t\tlet hireStart = vm.selected.hireDateStart && vm.selected.hireDateStart.toISOString()\r\n\t\t\t\t\t? ssDateByOrgHlp.startOfDayRelativeTo(moment(vm.selected.hireDateStart.toISOString()), $scope.routeVm.org)\r\n\t\t\t\t\t: null;\r\n\t\t\t\tlet hireEnd = vm.selected.hireDateEnd && vm.selected.hireDateEnd.toISOString()\r\n\t\t\t\t\t? ssDateByOrgHlp.endOfDayRelativeTo(moment(vm.selected.hireDateEnd.toISOString()), $scope.routeVm.org)\r\n\t\t\t\t\t: null;\r\n\r\n\t\t\t\tvar searchFilter = Object.assign({}, {\r\n\t\t\t\t\tlocation: filterOrNull(vm.selected.location),\r\n\t\t\t\t\tjobtype: filterOrNull(vm.selected.jobType),\r\n\t\t\t\t\tdepartment: filterOrNull(vm.selected.department),\r\n\t\t\t\t\tstatus: filterOrNull(vm.selected.status),\r\n\t\t\t\t\temploymentgroup: filterOrNull(vm.selected.employmentGroup),\r\n\t\t\t\t\thiredatestart: hireStart,\r\n\t\t\t\t\thiredateend: hireEnd\r\n\t\t\t\t})\r\n\t\t\t\t\tObject.keys(searchFilter).forEach((key) => (searchFilter[key] == null) && delete searchFilter[key]);\r\n\r\n\t\t\t\t\tvar filter = Object.assign({}, {\r\n\t\t\t\t\t\t\tfields: 'firstname,lastname,id',\r\n\t\t\t\t\t\t\tlimit: 10000,\r\n\t\t\t\t\t\t\tasOfTimeUtc: ssDateByOrgHlp.safeAsOfDateRelativeTo(moment(vm.asOf).startOf('day'), $scope.routeVm.org),\r\n\t\t\t\t\t\t\tfilter: searchFilter,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\r\n\r\n\t\t\t\tgroupPromise = ssAsync(function* () {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tnewEmps = yield ssEmployeeApi.search({}, filter);\r\n\r\n\t\t\t\t\t\tnewEmps = newEmps.map(function (emp) {\r\n\t\t\t\t\t\t\treturn { id: emp.id }\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tvm.attempted = true;\r\n\r\n\t\t\t\t\t\tvalidateExclusions(newEmps, $scope.exclusions);\r\n\r\n\t\t\t\t\t\t$scope.model = filterExclusions(newEmps);\r\n\r\n\t\t\t\t\t\tif ($scope.model.length) {\r\n\t\t\t\t\t\t\tvm.formOpened = false;\r\n\t\t\t\t\t\t//\tupdate the reset values\r\n\t\t\t\t\t\t\tresetOptions.exclusions = angular.copy($scope.exclusions, resetOptions.exclusions);\r\n\t\t\t\t\t\t\tresetOptions.selected = angular.copy(vm.selected, resetOptions.selected);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\tconsole.error('error retrieving employees', e);\r\n\t\t\t\t\t} finally {\r\n\t\t\t\t\t\tvm.filtering = false;\r\n\t\t\t\t\t\tgroupPromise = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t})();\r\n\t\t\t}\r\n\r\n\t\t};\r\n\t//\tThis method is on routeVm so that the header segment can remove the recipient group & reset the filters after successfully sending a form\r\n\t\t$scope.routeVm.removeGroup = function() {\r\n\t\t\tif(vm.formOpened) { go.toggleFilter(); }\r\n\t\t\t$scope.model = [];\r\n\t\t\tgo.clearAllFilters();\r\n\t\t\tgo.resetFilters();\r\n\t\t};\r\n\r\n\t//\tBind the change of the effective date to the parent value.\r\n\t\t$rootScope.$on('$destroy', $rootScope.$on('parentAsOfDate-Change', function (event, data) {\r\n\t\t\tif (data == null || data.asOf == null || data.asOf.toString() === '') {\r\n\t\t\t\tvm.asOf = now;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvm.asOf = moment(data.asOf).format('MM/DD/YYYY');\r\n\t\t\t}\r\n\t\t}));\r\n\r\n\t\t$scope.$on('destroy', $scope.$watch('vm.selected.jobType.length', (nv, ov) => {\r\n\r\n\t\t\tif (nv === ov) { return; }\r\n\r\n\t\t\tif (nv > 0) {\r\n\t\t\t\tvm.employmentGroupDisabled = true;\r\n\t\t\t\tvm.selected.employmentGroup = [];\r\n\t\t\t\tvm.employmentGroups.forEach(uncheck);\r\n\t\t\t} else {\r\n\t\t\t\tvm.employmentGroupDisabled = false;\r\n\t\t\t}\r\n\t\t}));\r\n\r\n\t\t$scope.$on('destroy', $scope.$watch('vm.selected.employmentGroup.length', (nv, ov) => {\r\n\r\n\t\t\tif (nv === ov) { return; }\r\n\r\n\t\t\tif (nv > 0) {\r\n\t\t\t\tconst empGroupIds = vm.selected.employmentGroup.map(g => g.id);\r\n\t\t\t\tconst jobTypeBargainingUnitIds = vm.jobTypesAll.map(t => t._bargainingUnit.id);\r\n\t\t\t\tvm.jobTypes = [];\r\n\r\n\t\t\t\tlet associatedBargainingUnitIds = jobTypeBargainingUnitIds.filter(id => {\r\n\t\t\t\t\tlet empGroupId = id.split('_')[1];\r\n\t\t\t\t\treturn empGroupIds.includes(empGroupId) === true;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tvm.jobTypes = vm.jobTypesAll.filter(jobType => {\r\n\t\t\t\t\treturn associatedBargainingUnitIds.includes(jobType._bargainingUnit.id) === true;\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tvm.jobTypes = vm.jobTypesAll;\r\n\t\t\t}\r\n\t\t}));\r\n\r\n\t\t//\tWatch the filters and if any are changed while a group is being added, cancel the add group action\r\n\t\t$scope.$on('destroy', $scope.$watch('vm.selected', function (nv, ov) {\r\n\t\t\tif (nv === ov) { return; }\r\n\t\t\tif (groupPromise) {\r\n\t\t\t\tgroupPromise.$abort();\r\n\t\t\t\tvm.filtering = false;\r\n\t\t\t\tvm.attempted = false;\r\n\t\t\t}\r\n\t\t}, true));\r\n\r\n\t//\tRemove any valid exclusions\tfrom the current recipient group\r\n\t\tfunction filterExclusions(emps) {\r\n\t\t\tlet excludedEmployeeIds = $scope.exclusions.map((emp) => {\r\n\t\t\t\treturn { id: emp.id };\r\n\t\t\t});\r\n\t\t\treturn emps.filter((emp) => {\r\n\t\t\t\treturn !excludedEmployeeIds.find((exemp) => {\r\n\t\t\t\t\treturn exemp.id === emp.id;\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t//\tmake sure the selected exclusion(s) are part of the current recipient group and if not, remove them from the exclusions collection\r\n\t\tfunction validateExclusions(recipients, exclusions) {\r\n\t\t//\tcreate a simplified recipient collection containing just IDs\r\n\t\t\tlet recipientIds = recipients.map((emp) => {\r\n\t\t\t\treturn emp.id;\r\n\t\t\t});\r\n\t\t//\tValidate current exclusions are part of the current recipient group\r\n\t\t\tlet exemps = exclusions.filter((exemp) => {\r\n\t\t\t\treturn !recipientIds.includes(exemp.id);\r\n\t\t\t});\r\n\t\t//\tRemove any non-valid exclusion from the exclusion collection\r\n\t\t\texemps.forEach((exemp) => {\r\n\t\t\t\texclusions.splice(exclusions.indexOf(exemp), 1);\r\n\t\t\t});\r\n\t\t//\tHandle user messaging\r\n\t\t\tif(exemps.length) {\r\n\t\t\t\tssToastHlp.warn('One or more of the selected exclusions are not members of the current recipient group and have therefore been removed', '')\r\n\t\t\t} else {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\n//\tHelper Functions\r\n\r\n\tfunction uncheck(item) {\r\n\t\titem.checked = false;\r\n\t}\r\n\r\n\tfunction check(item) {\r\n\t\titem.checked = true;\r\n\t}\r\n\r\n\tfunction filterOrNull(filtersList) {\r\n\t\tif (filtersList.length > 0) {\r\n\t\t\tvar o = []\r\n\r\n\t\t\tfiltersList.map((item) => {\r\n\t\t\t\to.push(item.id)\r\n\t\t\t})\r\n\r\n\t\t\treturn o.join(',');\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction stringFilter(val, type) {\r\n\t\tvar o = {};\r\n\r\n\t\tif (val != null) {\r\n\t\t\tlet joinedValue = val.split(' ').join(',');\r\n\r\n\t\t\to['filter[' + type + ']'] = joinedValue;\r\n\r\n\t\t\treturn o;\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n// #-- END Component (cmp-multiple-employee-search) --# //\r\n// #--------------------------------------------------# //\r\n\r\nangular.module('ec-forms-components').directive('cmpMultipleEmployeeSearch', () => new MultipleEmployeeSearch(props, 'multiple-employee-search'));\r\n","import {Component} from 'base-component';\r\n// #-------------------------------------------------# //\r\n// #---- Component (cmp-overlay-builder-toolbox) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n};\r\n\r\nclass OverlayBuilderToolbox extends Component {\r\n\t/*@ngInject*/\r\n\tcontroller($scope, ssEventSvc) {\r\n\r\n\t\t$scope.routeVm = $scope.$root.utils.findInParentScope('routeVm', $scope);\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\ttools: [{\r\n\t\t\t\ttype: 'text',\r\n\t\t\t\ticon: 'pencil-square',\r\n\t\t\t\ttitle: 'Text Box'\r\n\t\t\t}, {\r\n\t\t\t\ttype: 'date',\r\n\t\t\t\ticon: 'calendar',\r\n\t\t\t\ttitle: 'Date Picker'\r\n\t\t\t}, {\r\n\t\t\t\ttype: 'checkbox',\r\n\t\t\t\tshape: 'square',\r\n\t\t\t\ticon: 'check-square',\r\n\t\t\t\ttitle: 'CheckBox'\r\n\t\t\t}]\r\n\t\t};\r\n\r\n\t\t$scope.routeVm.selectedTool = vm.tools[0];\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { // jshint ignore:line\r\n\t\t\thighlightSelectedBox: function(box) {\r\n\t\t\t\t$scope.routeVm.selectedTool = vm.tools.find((tool) => {\r\n\t\t\t\t\treturn tool.type === box.type;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\t\tssEventSvc.on('pvb.select-box', go.highlightSelectedBox, $scope);\r\n\t}\r\n}\r\n\r\n// #-- END Component (cmp-overlay-builder-toolbox) --# //\r\n// #-------------------------------------------------# //\r\n\r\nangular.module('ec-forms-components').directive('cmpOverlayBuilderToolbox', () => new OverlayBuilderToolbox(props, 'overlay-builder-toolbox') );\r\n","import {Component} from 'base-component';\r\n// #------------------------------------------------# //\r\n// #---- Component (cmp-properties-credentials) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tfields: '='\r\n};\r\n\r\nclass PropertiesCredentials extends Component {\r\n\t/*@ngInject*/\r\n\r\n\tcontroller($scope, ssEventSvc, ssValidationHlp, ssFlagSvc) {\r\n\t\tconst routeVm = $scope.routeVm = $scope.$root.utils.findInParentScope('routeVm', $scope);\r\n\r\n\t\t// get 'showActive' value from form fields\r\n\t\tvar showActiveInitVal;\r\n\t\t$scope.fields[0]._externalData.split('.').length == 4 ? showActiveInitVal = true : showActiveInitVal = false;\r\n\t\t\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\tfields: $scope.fields,\r\n\t\t\tcanEdit: true,\r\n\t\t\teditableFieldLabels: false, // can a user change fields' labels\r\n\t\t\tshowActive: showActiveInitVal\r\n\t\t};\r\n\r\n\t\t$scope.validator = {\r\n\t\t\tlabel: ssValidationHlp.string({ maxLength: 25 })\r\n\t\t};\r\n\r\n\t\tconst go = $scope.go = { //eslint-disable-line\r\n\t\t\thideHeadings: (field) => {\r\n\t\t\t\treturn field._fieldType != 'heading';\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t$scope.$watch('vm.showActive', (nv, ov) => {\r\n\t\t\tif (nv != ov){\r\n\t\t\t\tssEventSvc.emit('cred-select-active', nv, $scope.fields);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// If org has feature flag on, they can change field label names\r\n\t\tssFlagSvc.ready.then(() => {\r\n\t\t\tif (ssFlagSvc.checkState('fc-enable-editable-form-labels')) {\r\n\t\t\t\tvm.editableFieldLabels = true;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// protect against all heading fields that may not have this attribute that already exist\r\n\t\tif ($scope.fields[0]._active == null) {\r\n\t\t\t$scope.fields[0]._active = true;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n// #-- END Component (cmp-properties-credentials) --# //\r\n// #------------------------------------------------# //\r\n\r\nangular.module('ec-forms-components').directive('cmpPropertiesCredentials', () => new PropertiesCredentials(props, 'properties-credentials') );\r\n","import {Component} from 'base-component';\r\n// #--------------------------------------------------# //\r\n// #---- Component (cmp-properties-custom-common) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tfields: '=',\r\n\tshowLabel: '@?',\r\n\tshowRequired: '@?'\r\n};\r\n\r\nclass PropertiesCustomCommon extends Component {\r\n\t/*@ngInject*/\r\n\tcontroller($scope) {\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = { // eslint-disable-line\r\n\t\t\tfield: $scope.fields[0],\r\n\t\t\tshowLabel: $scope.showLabel !== 'false',\r\n\t\t\tshowRequired: $scope.showRequired !== 'false'\r\n\t\t};\r\n\t}\r\n}\r\n\r\n// #-- END Component (cmp-properties-custom-common) --# //\r\n// #--------------------------------------------------# //\r\n\r\nangular.module('ec-forms-components').directive('cmpPropertiesCustomCommon', () => new PropertiesCustomCommon(props, 'properties-custom-common') );\r\n","import {Component} from 'base-component';\r\n// #------------------------------------------------# //\r\n// #---- Component (cmp-properties-custom-date) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tfields: '='\r\n};\r\n\r\nclass PropertiesCustomDate extends Component {\r\n\t/*@ngInject*/\r\n\tcontroller($scope) {\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = { //eslint-disable-line\r\n\t\t\tfield: $scope.fields[0]\r\n\t\t};\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { //eslint-disable-line\r\n\t\t\t\r\n\t\t};\r\n\t}\r\n}\r\n\r\n// #-- END Component (cmp-properties-custom-date) --# //\r\n// #------------------------------------------------# //\r\n\r\nangular.module('ec-forms-components').directive('cmpPropertiesCustomDate', () => new PropertiesCustomDate(props, 'properties-custom-date') );\r\n","import {Component} from 'base-component';\r\n// #----------------------------------------------------# //\r\n// #---- Component (cmp-properties-custom-dropdown) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tfields: '='\r\n};\r\n\r\nclass PropertiesCustomDropdown extends Component {\r\n\t/*@ngInject*/\r\n\tcontroller($scope, enumFieldWidths) {\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\tnewOption: '',\r\n\t\t\tfield: $scope.fields[0],\r\n\t\t\twidths: enumFieldWidths.getEnums().filter((w) => w.name !== 'Large' && w.name !== 'Full')\r\n\t\t};\r\n\r\n\t\tif (vm.field._options == null) {\r\n\t\t\tvm.field._options = [];\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// #-- END Component (cmp-properties-custom-dropdown) --# //\r\n// #----------------------------------------------------# //\r\n\r\nangular.module('ec-forms-components').directive('cmpPropertiesCustomDropdown', () => new PropertiesCustomDropdown(props, 'properties-custom-dropdown') );\r\n","import {Component} from 'base-component';\r\n// #----------------------------------------------------# //\r\n// #---- Component (cmp-properties-custom-filelink) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tfields: '='\r\n};\r\n\r\nclass PropertiesCustomFilelink extends Component {\r\n\t/*@ngInject*/\r\n\tcontroller($scope, ssValidationHlp) {\r\n\r\n\t\tconst field = $scope.field = $scope.fields[0];\r\n\t\tconst validator = $scope.validator = ssValidationHlp; // jshint ignore:line\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = { // jshint ignore:line\r\n\t\t\tvalidator: {\r\n\t\t\t\trequiredUrl: ssValidationHlp.url({ require:true })\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { // jshint ignore:line\r\n\t\t};\r\n\r\n\t\tconst urlPreRegEx = /^((http|https):\\/\\/)/;\r\n\r\n\t\t$scope.$watch('field.config', function(val) {\r\n\r\n\t\t\t$scope.$watch('field.config.location', function(nv, ov) {\r\n\t\t\t\t\r\n\t\t\t\tif (nv === ov){return;}\r\n\r\n\t\t\t\t//set the display text of the link to the value of the link location if no link name is defined\r\n\t\t\t\tif (nv && nv.length !== 0 && !field.config.name) {\r\n\t\t\t\t\tfield.config.display = nv;\r\n\t\t\t\t} else if(field.config.name){\r\n\t\t\t\t\tfield.config.display = field.config.name; \r\n\t\t\t\t} else {\r\n\t\t\t\t\tfield.config.display = 'link will display here';\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (vm.validator.requiredUrl(nv) === true) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tfield.config.isValid = true;\r\n\t\t\t\t\tif(!urlPreRegEx.test(field.config.location)) {\r\n\t\t\t\t\t\tfield.config.location = `http://${field.config.location}`;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfield.config.isValid = false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// set the link display text to the value of the link name field as long as there is a value\r\n\t\t\t$scope.$watch('field.config.name', function(nv, ov) {\r\n\t\t\t\t\r\n\t\t\t\tif (nv === ov){return;}\r\n\r\n\t\t\t\tif(nv && nv.length !== 0){\r\n\t\t\t\t\tfield.config.display = nv;\r\n\t\t\t\t} else if (field.config.location) {\r\n\t\t\t\t\tfield.config.display = field.config.location;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfield.config.display = 'link will display here';\r\n\t\t\t\t}\r\n\r\n\t\t\t});\r\n\r\n\t\t});\r\n\t\t\r\n\t}\r\n}\r\n\r\n// #-- END Component (cmp-properties-custom-filelink) --# //\r\n// #----------------------------------------------------# //\r\n\r\nangular.module('ec-forms-components').directive('cmpPropertiesCustomFilelink', () => new PropertiesCustomFilelink(props, 'properties-custom-filelink') );\r\n","import {Component} from 'base-component';\r\n// #------------------------------------------------------# //\r\n// #---- Component (cmp-properties-custom-fileupload) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tfields: '='\r\n};\r\n\r\nclass PropertiesCustomFileupload extends Component {\r\n\t/*@ngInject*/\r\n\tcontroller($scope, enumPersonnelCategory, enumMedicalCategory) {\r\n\t\t// view model for tracking state\r\n\t\tconst formVm = $scope.$root.utils.findInParentScope('formVm', $scope);\r\n\t\tconst vm = $scope.vm = { // jshint ignore:line\r\n\t\t\tfield: $scope.fields[0],\r\n\t\t\tpersonnel: enumPersonnelCategory,\r\n\t\t\tmedical: enumMedicalCategory,\r\n\r\n\t\t\t// default to Personnel Other\r\n\t\t\twebFormCategory: formVm.formData._formFields[0]._documentCategory,\r\n\t\t\twebFormSubCategory: formVm.formData._formFields[0]._documentSubCategory,\r\n\t\t\twebFormCatSubCat: formVm.formData._formFields[0]._documentCategory + '-' + formVm.formData._formFields[0]._documentSubCategory,\r\n\t\t\taddToEmpRecord: true\r\n\t\t};\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { // jshint ignore:line\r\n\t\t\tclick(evt) { }\r\n\t\t};\r\n\r\n\t\t$scope.$watch('vm.addToEmpRecord', (nv, ov) => {\r\n\t\t\tif (nv === ov) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tformVm._updateEmployeeRecord = nv;\r\n\t\t\tformVm.modelChanged();\r\n\t\t});\r\n\r\n\t\t$scope.$watch('vm.webFormCatSubCat', (nv, ov) => {\r\n\t\t\tif (nv === ov) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// The dropdown value is formated: 'category-subcategory' \r\n\t\t\t//\tsince the select is a merged list of personnel and medical selections\r\n\t\t\tlet category = nv.split('-')[0];\r\n\t\t\tlet subCategory = nv.split('-')[1];\r\n\r\n\t\t\tvm.field._updateEmployeeRecord = true;\r\n\t\t\tvm.field._documentCategory = category;\r\n\t\t\tvm.field._documentSubCategory = subCategory;\r\n\t\t\tformVm.modelChanged();\r\n\t\t});\r\n\t}\r\n}\r\n\r\n// #-- END Component (cmp-properties-custom-fileupload) --# //\r\n// #------------------------------------------------------# //\r\n\r\nangular.module('ec-forms-components').directive('cmpPropertiesCustomFileupload', () => new PropertiesCustomFileupload(props, 'properties-custom-fileupload') );\r\n","import {Component} from 'base-component';\r\n// #-------------------------------------------------# //\r\n// #---- Component (cmp-properties-custom-input) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tfields: '='\r\n};\r\n\r\nclass PropertiesCustomInput extends Component {\r\n\t/*@ngInject*/\r\n\tcontroller($scope, enumFieldHeights, enumFieldWidths) {\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = { //eslint-disable-line\r\n\t\t\tfield: $scope.fields[0],\r\n\t\t\theights: enumFieldHeights.getEnums(),\r\n\t\t\twidths: enumFieldWidths.getEnums()\r\n\t\t};\r\n\r\n\t\tif (vm.field._label == null || vm.field._label.length === 0) {\r\n\t\t\tvm.field._label = 'Input Label';\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// #-- END Component (cmp-properties-custom-input) --# //\r\n// #-------------------------------------------------# //\r\n\r\nangular.module('ec-forms-components').directive('cmpPropertiesCustomInput', () => new PropertiesCustomInput(props, 'properties-custom-input') );\r\n","import {Component} from 'base-component';\r\n// #-------------------------------------------------------# //\r\n// #---- Component (cmp-properties-custom-sectionhead) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tfields: '='\r\n};\r\n\r\nclass PropertiesCustomSectionhead extends Component {\r\n\t/*@ngInject*/\r\n\tcontroller($scope) {\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = { //eslint-disable-line\r\n\t\t\tfield: $scope.fields[0]\r\n\t\t};\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { //eslint-disable-line\r\n\t\t};\r\n\t}\r\n}\r\n\r\n// #-- END Component (cmp-properties-custom-sectionhead) --# //\r\n// #-------------------------------------------------------# //\r\n\r\nangular.module('ec-forms-components').directive('cmpPropertiesCustomSectionhead', () => new PropertiesCustomSectionhead(props, 'properties-custom-sectionhead') );\r\n","import {Component} from 'base-component';\r\n// #-----------------------------------------------------# //\r\n// #---- Component (cmp-properties-custom-selectbox) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tfields: '='\r\n};\r\n\r\nclass PropertiesCustomSelectbox extends Component {\r\n\t/*@ngInject*/\r\n\tcontroller($scope) {\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = { // eslint-disable-line\r\n\t\t\tfield: $scope.fields[0],\r\n\t\t\tcols: [{\r\n\t\t\t\tname: 'One',\r\n\t\t\t\tvalue: '100%'\r\n\t\t\t}, {\r\n\t\t\t\tname: 'Two',\r\n\t\t\t\tvalue: '50%'\r\n\t\t\t}, {\r\n\t\t\t\tname: 'Three',\r\n\t\t\t\tvalue: '33%'\r\n\t\t\t}, {\r\n\t\t\t\tname: 'Four',\r\n\t\t\t\tvalue: '25%'\r\n\t\t\t}]\r\n\t\t};\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { // eslint-disable-line\r\n\t\t}; \r\n\t}\r\n}\r\n\r\n// #-- END Component (cmp-properties-custom-selectbox) --# //\r\n// #-----------------------------------------------------# //\r\n\r\nangular.module('ec-forms-components').directive('cmpPropertiesCustomSelectbox', () => new PropertiesCustomSelectbox(props, 'properties-custom-selectbox') );\r\n","import {Component} from 'base-component';\r\n// #-----------------------------------------------------# //\r\n// #---- Component (cmp-properties-custom-signature) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tfields: '='\r\n};\r\n\r\nclass PropertiesCustomSignature extends Component {\r\n\t/*@ngInject*/\r\n\tcontroller($scope, ssAsync, ssSignatureApi, ssEventSvc, ssFlagSvc, ssPermissionsSvc) {\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = { //eslint-disable-line\r\n\t\t\tfield: $scope.fields[0],\r\n\t\t\tselectedSignatures: [],\r\n\t\t\torientation: $scope.fields[0].config.orientation,\r\n\t\t\tfcEnableSignatures: ssFlagSvc.checkState('fc-enable-signatures'),\r\n\t\t\tsignatureDisplay: $scope.fields[0].config.signatureDisplay || 'step-participant' //defaulting for old templates\r\n\t\t};\r\n\r\n\t\tvm.canAssociateSignatures = ssPermissionsSvc.isPermittedAction('formTemplates', 'associateSignatures') || !!$scope.$root.isPermitted.activeUser.idmAdministrator;\r\n\t\t\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { //eslint-disable-line\r\n\t\t\tdropSignature(event, index, type, item) {\r\n\t\t\t\tlet matchedSignature = vm.selectedSignatures.find(x => x.id === item.id);\r\n\t\t\t\tif (matchedSignature) {\r\n\t\t\t\t\tlet currIndex = vm.selectedSignatures.indexOf(matchedSignature);\r\n\t\t\t\t\tmove(currIndex, index);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvm.selectedSignatures.splice(index, 0, item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tfunction move(from, to) {\r\n\t\t\tvm.selectedSignatures.splice(to, 0, vm.selectedSignatures.splice(from,1)[0]);\r\n\t\t}\r\n\r\n\t\tif(vm.fcEnableSignatures) {\r\n\t\t\tssAsync(function*() {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tvm.loadingDropdown = true;\r\n\t\r\n\t\t\t\t\tvm.allSignatures = yield ssSignatureApi.query();\r\n\r\n\t\t\t\t\tif (vm.field.config.signatureIds != null) {\r\n\t\t\t\t\t\tvm.field.config.signatureIds.forEach(id => {\r\n\t\t\t\t\t\t\tlet match = vm.allSignatures.find(s => {\r\n\t\t\t\t\t\t\t\treturn s.id === id;\r\n\t\t\t\t\t\t\t});\r\n\t\t\r\n\t\t\t\t\t\t\t$scope.$applyAsync(() => {\r\n\t\t\t\t\t\t\t\tvm.selectedSignatures.push(match);\r\n\t\t\t\t\t\t\t\tvm.loadingDropdown = false;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t$scope.$watchCollection('vm.selectedSignatures', (nv, ov) => {\r\n\t\t\t\t\t\tif (nv === ov) { return; }\r\n\t\t\t\t\t\tvm.field.config.signatureIds = nv.map(s => s.id);\r\n\t\t\t\t\t\tvm.field._configJson = JSON.stringify(vm.field.config);\r\n\t\t\t\t\t});\r\n\t\r\n\t\t\t\t\t$scope.$watch('vm.orientation', (nv, ov) => {\r\n\t\t\t\t\t\tif (nv === ov) { return; }\r\n\t\t\t\t\t\tvm.field.config.orientation = nv;\r\n\t\t\t\t\t\tvm.field._configJson = JSON.stringify(vm.field.config);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t$scope.$watch('vm.signatureDisplay', (nv, ov) => {\r\n\t\t\t\t\t\tif (nv === ov) { return; }\r\n\t\t\t\t\t\tvm.field._required = nv === 'step-participant' ? true : false;\r\n\t\t\t\t\t\tvm.field.config.signatureDisplay = nv;\r\n\t\t\t\t\t\tvm.field._configJson = JSON.stringify(vm.field.config);\r\n\t\t\t\t\t});\r\n\t\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tconsole && console.error && console.error('ERROR', e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tvm.loadingDropdown = false;\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// #-- END Component (cmp-properties-custom-signature) --# //\r\n// #-----------------------------------------------------# //\r\n\r\nangular.module('ec-forms-components').directive('cmpPropertiesCustomSignature', () => new PropertiesCustomSignature(props, 'properties-custom-signature') );\r\n","import {Component} from 'base-component';\r\n// #------------------------------------------------# //\r\n// #---- Component (cmp-properties-custom-text) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tfields: '='\r\n};\r\n\r\nclass PropertiesCustomText extends Component {\r\n\t/*@ngInject*/\r\n\tcontroller($scope, enumFieldWidths, fieldsHlp) {\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = { // eslint-disable-line\r\n\t\t\tfield: $scope.fields[0],\r\n\t\t\twidths: enumFieldWidths.getEnums(),\r\n\t\t};\r\n\r\n\t\tlet fieldValidator = fieldsHlp.getValidator(vm.field._fieldType);\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { // eslint-disable-line\r\n\t\t\tvalidate(field) {\r\n\t\t\t\tif(typeof fieldValidator === 'function'){\r\n\t\t\t\t\tlet result = fieldValidator.call(null, field);\r\n\t\t\t\t\treturn !result ? true : result;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n}\r\n\r\n// #-- END Component (cmp-properties-custom-text) --# //\r\n// #------------------------------------------------# //\r\n\r\nangular.module('ec-forms-components').directive('cmpPropertiesCustomText', () => new PropertiesCustomText(props, 'properties-custom-text') );\r\n","import {Component} from 'base-component';\r\n// #-----------------------------------------------# //\r\n// #---- Component (cmp-properties-emp-record) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tfields: '=',\r\n\tcanEdit: '='\r\n};\r\n\r\nclass PropertiesEmpRecord extends Component {\r\n\t/*@ngInject*/\r\n\tcontroller($scope, ssEventSvc) {\r\n\r\n\t\tlet actionableFields = $scope.fields.filter(f => { return f._fieldDefId != null });\r\n\r\n\t//\tview model for tracking state\r\n\t\tconst vm = $scope.vm = { //eslint-disable-line\r\n\t\t\tcommit: !!actionableFields[0]._updateEmployeeRecord,\r\n\t\t\thasExternalData: true\r\n\t\t};\r\n\r\n\t\t$scope.$watch('canEdit', (nv, ov) => {\r\n\t\t\tif (nv === false) {\r\n\t\t\t\tvm.commit = false;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t$scope.$watch('vm.commit', (nv, ov) => {\r\n\t\t\tif (nv === ov) {return;}\r\n\r\n\t\t\tfor(let i = 0; i < $scope.fields.length; i++) {\r\n\t\t\t\tif(actionableFields.includes($scope.fields[i])) {\r\n\t\t\t\t\t$scope.fields[i]._updateEmployeeRecord = nv;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tssEventSvc.emit('emp-record-commit', nv, $scope.fields);\r\n\t\t});\r\n\r\n\t\t// checks to see if every field in an editable field group has an external data property which we use to write back to the employee record. If a field group doesn't have a field with this property, then we can safely disable the 'commit to employe record' checkbox and prevent these fields from being displayed in the employee review step.\r\n\t\tvm.hasExternalData = actionableFields.every((field) => {\r\n\t\t\treturn field._externalData && field._externalData !== null;\r\n\t\t});\r\n\t}\r\n}\r\n\r\n// #-- END Component (cmp-properties-emp-record) --# //\r\n// #-----------------------------------------------# //\r\n\r\nangular.module('ec-forms-components').directive('cmpPropertiesEmpRecord', () => new PropertiesEmpRecord(props, 'properties-emp-record') );\r\n","import {Component} from 'base-component';\r\n// #--------------------------------------------------# //\r\n// #---- Component (cmp-properties-form-complete) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tstep: '=',\r\n\tform: '='\r\n};\r\n\r\nclass PropertiesFormComplete extends Component {\r\n\t/*@ngInject*/\r\n\tcontroller($scope, enumPersonnelCategory, enumMedicalCategory, ssEnum, ssAsync, ssEmployeeApi, ssEventSvc) {\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = { // jshint ignore:line\r\n\t\t\tpersonnel: enumPersonnelCategory,\r\n\t\t\tmedical: enumMedicalCategory,\r\n\r\n\t\t\tstepAction: ssEnum.stepAction,\r\n\t\t\tstepEventAction: ssEnum.stepEventAction,\r\n\t\t\tstepEventType: ssEnum.stepEventType,\r\n\t\t\tstepParticipantType: ssEnum.stepParticipantType,\r\n\r\n\t\t\t// default to Personnel Other\r\n\t\t\twebFormCategory: 0,\r\n\t\t\twebFormSubCategory: enumPersonnelCategory.otherDocuments,\r\n\t\t\taddToEmpRecord: false\r\n\t\t};\r\n\r\n\r\n\t\tlet step = $scope.step;\r\n\t\tlet form = $scope.form;\r\n\t\tlet actions = $scope.actions = {};\r\n\t\tinitActions();\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { // jshint ignore:line\r\n\t\t};\r\n\r\n\t\t$scope.$watch('vm.webFormSubCategory', (nv, ov) => {\r\n\t\t\tif (nv === ov) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// The dropdown value is formated: 'category-subcategory'\r\n\t\t\t//\tsince the select is a merged list of personnel and medical selections\r\n\t\t\tlet category = nv.split('-')[0];\r\n\t\t\tlet subCategory = nv.split('-')[1];\r\n\r\n\t\t\tform._employeeRecord.addToEmployeeRecord = true;\r\n\t\t\tform._employeeRecord.category = category;\r\n\t\t\tform._employeeRecord.subCategory = subCategory;\r\n\t\t});\r\n\r\n\t\t$scope.$watch('actions.emailEmployee', (nv, ov) => {\r\n\t\t\tif (nv === ov) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\thandleAction(nv, 0, vm.stepEventAction.emailEmployee);\r\n\t\t});\r\n\r\n\t\t$scope.$watch('actions.emailFormSender', (nv, ov) => {\r\n\t\t\tif (nv === ov) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\thandleAction(nv, 0, vm.stepEventAction.emailFormSender);\r\n\t\t});\r\n\r\n\t\t$scope.$watch('actions.emailSupervisor', (nv, ov) => {\r\n\t\t\tif (nv === ov) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\thandleAction(nv, 0, vm.stepEventAction.emailSupervisor);\r\n\t\t});\r\n\r\n\t\t$scope.$watch('actions.emailOthers', (nv, ov) => {\r\n\t\t\tif (nv === ov) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tlet action = handleAction(nv, 0, vm.stepEventAction.emailOthers);\r\n\t\t\tif (nv) {\r\n\t\t\t\taction.employeeIds = [];\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t$scope.$watch('vm.addToEmpRecord', (nv, ov) => {\r\n\t\t\tif (nv === ov) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tform._employeeRecord.addToEmployeeRecord = nv;\r\n\t\t});\r\n\r\n\t\t$scope.$watch('actions.emailIds.length', (nv, ov) => {\r\n\t\t\tif (nv === ov) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\thandleEmail(0, 'emailIds');\r\n\t\t});\r\n\r\n\r\n\t\t$scope.$watch('step._stepAction', (nv, ov) => {\r\n\t\t\tif (nv === ov) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tstep._stepEvents = [{\r\n\t\t\t\teventType: vm.stepEventType.onComplete,\r\n\t\t\t\teventActions: []\r\n\t\t\t}];\r\n\r\n\t\t\tactions.emailOtherIds = [];\r\n\r\n\t\t\tif (step.last) {\r\n\t\t\t\tactions.addToEmpRecord = true;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tfunction initActions() {\r\n\t\t\tactions.emailIds = [];\r\n\r\n\t\t\tif (step._stepEvents == null) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tstep._stepEvents[0].eventActions.forEach(action => {\r\n\t\t\t\tif (action.eventAction === vm.stepEventAction.emailFormSender) {\r\n\t\t\t\t\tactions['emailFormSender'] = true;\r\n\t\t\t\t} else if (action.eventAction === vm.stepEventAction.emailSupervisor) {\r\n\t\t\t\t\tactions['emailSupervisor'] = true;\r\n\t\t\t\t} else if (action.eventAction === vm.stepEventAction.emailOthers) {\r\n\t\t\t\t\tactions['emailOthers'] = true;\r\n\t\t\t\t\tgetEmployees(action.employeeIds);\r\n\t\t\t\t} else if (action.eventAction === vm.stepEventAction.emailEmployee) {\r\n\t\t\t\t\tactions['emailEmployee'] = true;\r\n\t\t\t\t} else if (step.last && action.eventAction === vm.stepEventAction.addToEmployeeRecord) {\r\n\t\t\t\t\tactions.addToEmpRecord = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t// Default is 0 which is \"On Submit\", we are on the completed step so we get \"On Complete\" (4)\r\n\t\t\tstep._stepEvents[0].eventType = vm.stepEventType.onComplete;\r\n\r\n\t\t\tvm.addToEmpRecord = form._employeeRecord.addToEmployeeRecord;\r\n\r\n\t\t\tvm.webFormSubCategory = `${form._employeeRecord.category}-${form._employeeRecord.subCategory}`;\r\n\t\t\tif (form._employeeRecord.addToEmployeeRecord === false) {\r\n\t\t\t\tvm.webFormSubCategory = null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction handleAction(value, actionIndex, eventAction) {\r\n\t\t\tvar evtActions = step._stepEvents[actionIndex].eventActions;\r\n\t\t\tif (value) {\r\n\t\t\t\tvar action = {\teventAction: eventAction };\r\n\t\t\t\tstep._stepEvents[actionIndex].eventActions = [...evtActions, action];\r\n\t\t\t\tstep._stepEvents = step._stepEvents.slice(); // hack to trigger change\r\n\t\t\t\treturn action;\r\n\t\t\t} else {\r\n\t\t\t\tstep._stepEvents[actionIndex].eventActions = evtActions.filter(a => a.eventAction !== eventAction);\r\n\r\n\t\t\t\tstep._stepEvents = step._stepEvents.slice(); // hack to trigger change\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction handleEmail(index, property) {\r\n\t\t\tif (step._stepEvents[0] == null) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tlet action, actions = step._stepEvents[0].eventActions;\r\n\t\t\tfor (let i = 0; i < actions.length; i++) {\r\n\t\t\t\taction = actions[i];\r\n\t\t\t\tif (action.eventAction === vm.stepEventAction.emailOthers) {\r\n\t\t\t\t\tif ($scope.actions.hasOwnProperty(property)) {\r\n\t\t\t\t\t\tif ($scope.actions[property] == undefined || !!($scope.actions[property] == null)) {\r\n\t\t\t\t\t\t\tif (property === 'emailIds') {\r\n\t\t\t\t\t\t\t\t$scope.actions[property] = [];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\taction.employeeIds = $scope.actions[property].map(val => { return val.id; });\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tstep._stepEvents = step._stepEvents.slice(); // hack to trigger change\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction getEmployees(ids) {\r\n\t\t\tif (ids == null || ids.length < 1) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tssAsync(function* () {\r\n\r\n\t\t\t\t$scope.actions['emailIds'] = yield ssEmployeeApi.queryByIds({\r\n\t\t\t\t\tfields: 'firstName,lastName'\r\n\t\t\t\t},\r\n\t\t\t\t\t{ ids: ids });\r\n\t\t\t})();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// #-- END Component (cmp-properties-form-complete) --# //\r\n// #--------------------------------------------------# //\r\n\r\nangular.module('ec-forms-components').directive('cmpPropertiesFormComplete', () => new PropertiesFormComplete(props, 'properties-form-complete') );\r\n","import {Component} from 'base-component';\r\n// #--------------------------------------------------# //\r\n// #---- Component (cmp-properties-notifications) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tstep: '='\r\n};\r\n\r\nclass PropertiesNotifications extends Component {\r\n\t/*@ngInject*/\r\n\tcontroller($scope, ssEnum, ssAsync, ssEmployeeApi) {\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\tstepEvents: new GetStepEventsJson()\r\n\t\t};\r\n\r\n\t\tconst go = $scope.go = {\r\n\t\t\teventClicked(event, action){\r\n\t\t\t\taction.eventAction.forEach((v) => {\r\n\t\t\t\t\thandleAction(action.checked, event, v);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet step = $scope.step;\r\n\r\n\t//\tget the step event action enums for each event, and if the \"email others\" action is present, then find that matching action and add its employee ID to the array in memory\r\n\t\tif(step._stepEvents && step._stepEvents.length){\r\n\t\t\tstep._stepEvents.forEach(function(stepEvent){\r\n\t\t\t\tlet eventActionIds = stepEvent.eventActions.map(x => x.eventAction);\r\n\t\t\t\tlet employeeIds = [];\r\n\t\t\t\tif(eventActionIds.includes(ssEnum.stepEventAction.emailOthers)){\r\n\t\t\t\t\tlet emailOtherEvent = stepEvent.eventActions.find(function(a){ return a.eventAction === ssEnum.stepEventAction.emailOthers});\r\n\t\t\t\t\temployeeIds = emailOtherEvent.employeeIds;\r\n\t\t\t\t}\r\n\t\t\t//\tfind matching event from the list of events\r\n\t\t\t\tlet stepAction = vm.stepEvents.find(x => x.eventType === stepEvent.eventType);\r\n\t\t\t\tif(stepAction){\r\n\t\t\t\t\tstepAction.eventActions.forEach(function(action){\r\n\t\t\t\t\t//\tmark the matching action of any assigned actions as checked\r\n\t\t\t\t\t\tlet markChecked = action.eventAction.every(function(a){ return eventActionIds.indexOf(a) > -1 });\r\n\t\t\t\t\t\tif(markChecked) { action.checked = true }\r\n\t\t\t\t\t\t// if there are employee Ids present, add that ID to the \"email\" array of the matching action\r\n\t\t\t\t\t\tif(employeeIds.length && action.eventAction.includes(ssEnum.stepEventAction.emailOthers)){\r\n\t\t\t\t\t\t\tssAsync(function* () {\r\n\t\t\t\t\t\t\t\taction.emails = yield ssEmployeeApi.queryByIds({\r\n\t\t\t\t\t\t\t\t\tfields: 'firstName,lastName'\r\n\t\t\t\t\t\t\t\t},{ ids: employeeIds });\r\n\t\t\t\t\t\t\t})();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tvm.stepEvents.forEach(function(event, eventIdx){\r\n\t\t\tevent.eventActions.forEach(function(action, actionIdx){\r\n\t\t\t\tif(action.emails){\r\n\t\t\t\t\t$scope.$watch(`vm.stepEvents[${eventIdx}].eventActions[${actionIdx}].emails.length`,function(nv, ov){\r\n\t\t\t\t\t\tif(nv === ov) { return; }\r\n\t\t\t\t\t\tlet eventIndex = eventIdx;\r\n\t\t\t\t\t\tlet actionIndex = actionIdx;\r\n\t\t\t\t\t\thandleEmail(vm.stepEvents[eventIndex], vm.stepEvents[eventIndex].eventActions[actionIndex]);\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\r\n\t//\tresets the event action values when switching step action\r\n\t\t$scope.$watch('step._stepAction', (nv, ov) => {\r\n\t\t\tif (nv === ov) { return; }\r\n\r\n\t\t\tif (nv === ssEnum.stepAction.formEntry) {\r\n\t\t\t\tstep._stepEvents = [{\r\n\t\t\t\t\teventType: ssEnum.stepEventType.onSubmit,\r\n\t\t\t\t\teventActions: []\r\n\t\t\t\t}];\r\n\t\t\t} else if (nv === ssEnum.stepAction.reviewApproveOrDeny) {\r\n\t\t\t\tstep._stepEvents = [{\r\n\t\t\t\t\teventType: ssEnum.stepEventType.onApprove,\r\n\t\t\t\t\teventActions: []\r\n\t\t\t\t}, {\r\n\t\t\t\t\teventType: ssEnum.stepEventType.onDeny,\r\n\t\t\t\t\teventActions: []\r\n\t\t\t\t}];\r\n\t\t\t} else if (nv === ssEnum.stepAction.reviewForm) {\r\n\t\t\t\tstep._stepEvents = [{\r\n\t\t\t\t\teventType: ssEnum.stepEventType.onReview,\r\n\t\t\t\t\teventActions: []\r\n\t\t\t\t}];\r\n\t\t\t} else if (nv === ssEnum.stepAction.formCompleted) {\r\n\t\t\t\tstep._stepEvents = [{\r\n\t\t\t\t\teventType: ssEnum.stepEventType.onComplete,\r\n\t\t\t\t\teventActions: []\r\n\t\t\t\t}];\r\n\t\t\t} else if (nv === ssEnum.stepAction.employeeProfileReview) {\r\n\t\t\t\tstep._stepEvents = [{\r\n\t\t\t\t\teventType: ssEnum.stepEventType.onEmployeeProfileReview,\r\n\t\t\t\t\teventActions: []\r\n\t\t\t\t}];\r\n\t\t\t}\r\n\t\t\tvm.stepEvents = new GetStepEventsJson();\r\n\t\t});\r\n\r\n\t\t/**\r\n\t\t * Handle a step action change request and toggles the action on or off\r\n\t\t *\r\n\t\t * @param {boolean} value the new value to save for the action - on or off\r\n\t\t * @param {int} actionIndex Some kind of MAGIC number that matches up with the array position in the step event array. Kinda scary.\r\n\t\t * @param {int} eventAction The event action type to update, follows the StepEventActionEnum\r\n\t\t */\r\n\t\tfunction handleAction(checked, eventProp, eventAction) {\r\n\t\t\tlet event = step._stepEvents.find(x => x.eventType === eventProp.eventType);\r\n\t\t\tlet actions = event.eventActions;\r\n\t\t\tif(checked){\r\n\t\t\t\tlet action = { eventAction };\r\n\t\t\t\tevent.eventActions = [...actions, action];\r\n\t\t\t}else{\r\n\t\t\t\tevent.eventActions = actions.filter(a => a.eventAction !== eventAction);\r\n\t\t\t}\r\n\t\t\tstep._stepEvents = step._stepEvents.slice(); // hack to trigger change\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleEmail(event, action) {\r\n\t\t\tlet stepEvent = step._stepEvents.find(x => x.eventType === event.eventType);\r\n\t\t\tif(stepEvent){\r\n\t\t\t\tlet stepAction = stepEvent.eventActions.find(x => x.eventAction === ssEnum.stepEventAction.emailOthers);\r\n\t\t\t\tif(stepAction){\r\n\t\t\t\t\tstepAction.employeeIds = action.emails.map(val => val.id);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tstep._stepEvents = step._stepEvents.slice();\r\n\t\t}\r\n\r\n\t\tfunction GetStepEventsJson() {\r\n\t\t\treturn [{\r\n\t\t\t\ttitle: 'On Submit',\r\n\t\t\t\tdataAuto: 'on-submit',\r\n\t\t\t\teventType: ssEnum.stepEventType.onSubmit,\r\n\t\t\t\teventActionEnum: ssEnum.stepAction.formEntry,\r\n\t\t\t\teventActions: [{\r\n\t\t\t\t\ttitle: 'Email Employee',\r\n\t\t\t\t\tdataAuto: 'email-employee',\r\n\t\t\t\t\teventAction: [ssEnum.stepEventAction.emailEmployee],\r\n\t\t\t\t\tchecked: false\r\n\t\t\t\t}, {\r\n\t\t\t\t\ttitle: 'Email Form Sender',\r\n\t\t\t\t\tdataAuto: 'email-form-sender',\r\n\t\t\t\t\teventAction: [ssEnum.stepEventAction.emailFormSender],\r\n\t\t\t\t\tchecked: false\r\n\t\t\t\t}, {\r\n\t\t\t\t\ttitle: 'Email Employee\\'s Supervisor',\r\n\t\t\t\t\tdataAuto: 'email-employee-supervisor',\r\n\t\t\t\t\teventAction: [ssEnum.stepEventAction.emailSupervisor],\r\n\t\t\t\t\tchecked: false,\r\n\t\t\t\t\tisDisabled: () => step._stepParticipant.participantType === ssEnum.stepParticipantType.employeeSSupervisor\r\n\t\t\t\t}, {\r\n\t\t\t\t\ttitle: 'Email Others',\r\n\t\t\t\t\tdataAuto: 'email-others',\r\n\t\t\t\t\teventAction: [ssEnum.stepEventAction.emailOthers],\r\n\t\t\t\t\tchecked: false,\r\n\t\t\t\t\temails: []\r\n\t\t\t\t}]\r\n\t\t\t}, {\r\n\t\t\t\ttitle: 'On Review',\r\n\t\t\t\tdataAuto: 'on-review',\r\n\t\t\t\teventType: ssEnum.stepEventType.onReview,\r\n\t\t\t\teventActionEnum: ssEnum.stepAction.reviewForm,\r\n\t\t\t\teventActions: [{\r\n\t\t\t\t\ttitle: 'Email Employee',\r\n\t\t\t\t\tdataAuto: 'email-employee',\r\n\t\t\t\t\teventAction: [ssEnum.stepEventAction.emailEmployee],\r\n\t\t\t\t\tchecked: false\r\n\t\t\t\t}, {\r\n\t\t\t\t\ttitle: 'Email Form Sender',\r\n\t\t\t\t\tdataAuto: 'email-form-sender',\r\n\t\t\t\t\teventAction: [ssEnum.stepEventAction.emailFormSender],\r\n\t\t\t\t\tchecked: false\r\n\t\t\t\t}, {\r\n\t\t\t\t\ttitle: 'Email Employee\\'s Supervisor',\r\n\t\t\t\t\tdataAuto: 'email-employee-supervisor',\r\n\t\t\t\t\teventAction: [ssEnum.stepEventAction.emailSupervisor],\r\n\t\t\t\t\tchecked: false,\r\n\t\t\t\t\tisDisabled: () => step._stepParticipant.participantType === ssEnum.stepParticipantType.employeeSSupervisor\r\n\t\t\t\t}, {\r\n\t\t\t\t\ttitle: 'Email Others',\r\n\t\t\t\t\tdataAuto: 'email-others',\r\n\t\t\t\t\teventAction: [ssEnum.stepEventAction.emailOthers],\r\n\t\t\t\t\tchecked: false,\r\n\t\t\t\t\temails: []\r\n\t\t\t\t}]\r\n\t\t\t}, {\r\n\t\t\t\ttitle: 'On Approve',\r\n\t\t\t\tdataAuto: 'on-approve',\r\n\t\t\t\teventType: ssEnum.stepEventType.onApprove,\r\n\t\t\t\teventActionEnum: ssEnum.stepAction.reviewApproveOrDeny,\r\n\t\t\t\teventActions: [{\r\n\t\t\t\t\ttitle: 'Email Employee',\r\n\t\t\t\t\tdataAuto: 'email-employee',\r\n\t\t\t\t\teventAction: [ssEnum.stepEventAction.emailEmployee],\r\n\t\t\t\t\tchecked: false\r\n\t\t\t\t}, {\r\n\t\t\t\t\ttitle: 'Email Form Sender',\r\n\t\t\t\t\tdataAuto: 'email-form-sender',\r\n\t\t\t\t\teventAction: [ssEnum.stepEventAction.emailFormSender],\r\n\t\t\t\t\tchecked: false\r\n\t\t\t\t}, {\r\n\t\t\t\t\ttitle: 'Email Employee\\'s Supervisor',\r\n\t\t\t\t\tdataAuto: 'email-employee-supervisor',\r\n\t\t\t\t\teventAction: [ssEnum.stepEventAction.emailSupervisor],\r\n\t\t\t\t\tchecked: false,\r\n\t\t\t\t\tisDisabled: () => step._stepParticipant.participantType === ssEnum.stepParticipantType.employeeSSupervisor\r\n\t\t\t\t}, {\r\n\t\t\t\t\ttitle: 'Email Others',\r\n\t\t\t\t\tdataAuto: 'email-others',\r\n\t\t\t\t\teventAction: [ssEnum.stepEventAction.emailOthers],\r\n\t\t\t\t\tchecked: false,\r\n\t\t\t\t\temails: []\r\n\t\t\t\t}]\r\n\t\t\t}, {\r\n\t\t\t\ttitle: 'On Deny',\r\n\t\t\t\tdataAuto: 'on-deny',\r\n\t\t\t\teventType: ssEnum.stepEventType.onDeny,\r\n\t\t\t\teventActionEnum: ssEnum.stepAction.reviewApproveOrDeny,\r\n\t\t\t\teventActions: [{\r\n\t\t\t\t\ttitle: 'Email Employee',\r\n\t\t\t\t\tdataAuto: 'email-employee',\r\n\t\t\t\t\teventAction: [ssEnum.stepEventAction.emailEmployee],\r\n\t\t\t\t\tchecked: false\r\n\t\t\t\t}, {\r\n\t\t\t\t\ttitle: 'Email Form Sender',\r\n\t\t\t\t\tdataAuto: 'email-form-sender',\r\n\t\t\t\t\teventAction: [ssEnum.stepEventAction.stopWorkFlow, ssEnum.stepEventAction.emailFormSender],\r\n\t\t\t\t\tchecked: false\r\n\t\t\t\t}, {\r\n\t\t\t\t\ttitle: 'Email Employee\\'s Supervisor',\r\n\t\t\t\t\tdataAuto: 'email-employee-supervisor',\r\n\t\t\t\t\teventAction: [ssEnum.stepEventAction.emailSupervisor],\r\n\t\t\t\t\tchecked: false,\r\n\t\t\t\t\tisDisabled: () => step._stepParticipant.participantType === ssEnum.stepParticipantType.employeeSSupervisor\r\n\t\t\t\t}, {\r\n\t\t\t\t\ttitle: 'Email Others',\r\n\t\t\t\t\tdataAuto: 'email-others',\r\n\t\t\t\t\teventAction: [ssEnum.stepEventAction.stopWorkFlow, ssEnum.stepEventAction.emailOthers],\r\n\t\t\t\t\tchecked: false,\r\n\t\t\t\t\temails: []\r\n\t\t\t\t}]\r\n\t\t\t}, {\r\n\t\t\t\ttitle: 'On Review', //On Employee Profile Review\r\n\t\t\t\tdataAuto: 'on-employee-profile-review',\r\n\t\t\t\teventType: ssEnum.stepEventType.onEmployeeProfileReview,\r\n\t\t\t\teventActionEnum: ssEnum.stepAction.employeeProfileReview,\r\n\t\t\t\teventActions: [{\r\n\t\t\t\t\ttitle: 'Email Employee',\r\n\t\t\t\t\tdataAuto: 'email-employee',\r\n\t\t\t\t\teventAction: [ssEnum.stepEventAction.emailEmployee],\r\n\t\t\t\t\tchecked: false\r\n\t\t\t\t}, {\r\n\t\t\t\t\ttitle: 'Email Form Sender',\r\n\t\t\t\t\tdataAuto: 'email-form-sender',\r\n\t\t\t\t\teventAction: [ssEnum.stepEventAction.emailFormSender],\r\n\t\t\t\t\tchecked: false\r\n\t\t\t\t}, {\r\n\t\t\t\t\ttitle: 'Email Employee\\'s Supervisor',\r\n\t\t\t\t\tdataAuto: 'email-employee-supervisor',\r\n\t\t\t\t\teventAction: [ssEnum.stepEventAction.emailSupervisor],\r\n\t\t\t\t\tchecked: false,\r\n\t\t\t\t\tisDisabled: () => step._stepParticipant.participantType === ssEnum.stepParticipantType.employeeSSupervisor\r\n\t\t\t\t}, {\r\n\t\t\t\t\ttitle: 'Email Others',\r\n\t\t\t\t\tdataAuto: 'email-others',\r\n\t\t\t\t\teventAction: [ssEnum.stepEventAction.emailOthers],\r\n\t\t\t\t\tchecked: false,\r\n\t\t\t\t\temails: []\r\n\t\t\t\t}]\r\n\t\t\t}];\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// #-- END Component (cmp-properties-notifications) --# //\r\n// #--------------------------------------------------# //\r\n\r\nangular.module('ec-forms-components').directive('cmpPropertiesNotifications', () => new PropertiesNotifications(props, 'properties-notifications') );\r\n","import {Component} from 'base-component';\r\n// #--------------------------------------------------------# //\r\n// #---- Component (cmp-properties-primary-assignment) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tform: '=',\r\n\tfields: '=',\r\n};\r\n\r\nclass PropertiesPrimaryAssignment extends Component {\r\n\t/*@ngInject*/\r\n\tcontroller($scope, ssValidationHlp, ssFlagSvc) {\r\n\t\tconst routeVm = $scope.routeVm = $scope.$root.utils.findInParentScope('routeVm', $scope);\r\n\r\n\t\t// get 'showActive' value from form fields\r\n\t\t\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\tfields: $scope.fields,\r\n\t\t\tcanEdit: true,\r\n\t\t\teditableFieldLabels: false, // can a user change fields' labels\r\n\t\t};\r\n\r\n\t\t$scope.validator = {\r\n\t\t\tlabel: ssValidationHlp.string({ maxLength: 25 })\r\n\t\t};\r\n\r\n\t\tconst go = $scope.go = { //eslint-disable-line\r\n\t\t\tshowActionableFields: (field) => {\r\n\t\t\t\treturn field._fieldType != 'instructions';\r\n\r\n\t\t\t},\r\n\t\t\tcheckIfHeadingOrInstructions(field){\r\n\t\t\t\tswitch(field._fieldType){\r\n\t\t\t\t\tcase 'readOnlyHeading':\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\tcase 'readOnlySubheading':\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\tcase 'instructions':\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t$scope.$watch('vm.showActive', (nv, ov) => {\r\n\t\t\tif (nv != ov){\r\n\t\t\t\tssEventSvc.emit('cred-select-active', nv, $scope.fields);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// If org has feature flag on, they can change field label names\r\n\t\tssFlagSvc.ready.then(() => {\r\n\t\t\tif (ssFlagSvc.checkState('fc-enable-editable-form-labels')) {\r\n\t\t\t\tvm.editableFieldLabels = true;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// protect against all heading fields that may not have this attribute that already exist\r\n\t\tif ($scope.fields[0]._active == null) {\r\n\t\t\t$scope.fields[0]._active = true;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// #-- END Component (cmp-properties-primary-assignment) --# //\r\n// #--------------------------------------------------------# //\r\n\r\nangular.module('ec-forms-components').directive('cmpPropertiesPrimaryAssignment', () => new PropertiesPrimaryAssignment(props, 'properties-primary-assignment') );\r\n","import {Component} from 'base-component';\r\n// #---------------------------------------------------# //\r\n// #---- Component (cmp-properties-profile-review) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tform: '=',\r\n\tstep: '='\r\n};\r\n\r\nvar stepParticipantSearch;\r\n\r\nclass PropertiesProfileReview extends Component {\r\n\t/*@ngInject*/\r\n\tcontroller($scope, ssEnum, ssAsync, ssEmployeeApi, ssValidateHlp, ssValidationHlp, formsHlp, ssToastHlp) {\r\n\t\tconst step = $scope.step;\r\n\t\tconst form = $scope.form;\r\n\t\tconst actions = $scope.actions = {};\r\n\t\tvar initialSpecificParticipantId;\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\tspecificParticipant: [],\r\n\t\t\tstepAction: ssEnum.stepAction,\r\n\t\t\tstepEventAction: ssEnum.stepEventAction,\r\n\t\t\tstepEventType: ssEnum.stepEventType,\r\n\t\t\tstepParticipantType: ssEnum.stepParticipantType,\r\n\t\t\tstepParticipant: ssEnum.stepParticipantType.getEnums().filter(type => { \r\n\t\t\t\tif (form._isEmployeeInitiated) {\r\n\t\t\t\t\treturn (type.value !== 0 && type.value !== 3);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn type.value !== 0;\r\n\t\t\t\t}\r\n\t\t\t}),\r\n\t\t\tvalidator: {\r\n\t\t\t\trequired: ssValidationHlp.required()\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { // eslint-disable-line\r\n\t\t\tselectParticipant(option) {\r\n\t\t\t\tvm.buttonLabel = option.name;\r\n\t\t\t\tstep._stepParticipant.participantType = option.value;\r\n\t\t\t\tstep._stepParticipant.employeeIds = vm.specificParticipant = [];\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t$scope.$watch('actions.emailEmployee', (nv, ov) => {\r\n\t\t\tif (nv === ov) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\thandleAction(nv, 0, vm.stepEventAction.emailEmployee);\r\n\t\t});\r\n\r\n\t\t$scope.$watch('actions.emailFormSender', (nv, ov) => {\r\n\t\t\tif (nv === ov) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\thandleAction(nv, 0, vm.stepEventAction.emailFormSender);\r\n\t\t});\r\n\r\n\t\t$scope.$watch('actions.emailSupervisor', (nv, ov) => {\r\n\t\t\tif (nv === ov) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\thandleAction(nv, 0, vm.stepEventAction.emailSupervisor);\r\n\t\t});\r\n\r\n\t\t$scope.$watch('actions.emailOthers', (nv, ov) => {\r\n\t\t\tif (nv === ov) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tlet action = handleAction(nv, 0, vm.stepEventAction.emailOthers);\r\n\t\t\tif (nv) {\r\n\t\t\t\taction.employeeIds = [];\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t$scope.$watch('actions.emailIds.length', (nv, ov) => {\r\n\t\t\tif (nv === ov) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\thandleEmail(0, 'emailIds');\r\n\t\t});\r\n\r\n\t\t$scope.$watch('step._stepParticipant', (nv, ov) => {\r\n\t\t\tif(!nv || nv === ov) { return; };\r\n\t\t\t// update the step permissions of the other steps with this participant\r\n\t\t\tformsHlp.updatePermissions({\r\n\t\t\t\tsteps: form._steps,\r\n\t\t\t\tcurrentStep: $scope.step,\r\n\t\t\t\tnewStepParticipant: nv,\r\n\t\t\t\toldStepParticipant: ov\r\n\t\t\t});\r\n\t\t\t// directly update the permission object for this step, since it is skipped in the step permisison update logic\r\n\t\t\t$scope.step._permissions[0].participantType = nv.participantType;\r\n\t\t\t$scope.step._permissions[0].employeeId = nv.employeeIds.length ? nv.employeeIds[0] : '';\r\n\t\t}, true);\r\n\r\n\t\t(function init() {\r\n\t\t\t// Set the 'step participant dropdown menu label to a default value if there is no initial value - This emulates the functionality of the 'super-select-list' component, but since we are customizing it, we manually set this here\r\n\t\t\tif (step._stepParticipant.participantType == null) {\r\n\t\t\t\tvm.buttonLabel = 'Please Select';\r\n\t\t\t} else {\r\n\t\t\t\tvm.buttonLabel = ssEnum.stepParticipantType.byValue(step._stepParticipant.participantType);\r\n\t\t\t}\r\n\t\t\t// retrieve the specific step participant if an ID exists\r\n\t\t\tif (step._stepParticipant.employeeIds.length) {\r\n\t\t\t\tgetEmployee(step._stepParticipant.employeeIds[0]).then((emp)=> {\r\n\t\t\t\t\tinitialSpecificParticipantId = angular.copy(emp.id);\r\n\t\t\t\t\tvm.specificParticipant.push(emp);\r\n\t\t\t\t}).catch((err) => {\r\n\t\t\t\t\tssToastHlp.error('there was an error retrieving the step participant name', '');\r\n\t\t\t\t\tconsole && console.error && console.error(err);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tinitActions();\r\n\t\t}());\r\n\r\n\t\t$scope.$watch('vm.specificParticipant', (nv, ov) => {\r\n\r\n\t\t\tif(!nv.length || nv === ov) { return; };\r\n\r\n\t\t\tif (initialSpecificParticipantId && nv[0].id === initialSpecificParticipantId) {\r\n\t\t\t\tinitialSpecificParticipantId = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif(stepParticipantSearch) { ssValidateHlp.resetValidation(stepParticipantSearch); }\r\n\r\n\t\t\tstep._stepParticipant.employeeIds = vm.specificParticipant.map(emp => {\r\n\t\t\t\treturn emp.id;\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tfunction initActions() {\r\n\t\t\tactions.emailIds = [];\r\n\r\n\t\t\tif (step._stepEvents == null) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tstep._stepEvents[0].eventActions.forEach(action => {\r\n\t\t\t\tif (action.eventAction === vm.stepEventAction.emailFormSender) {\r\n\t\t\t\t\tactions['emailFormSender'] = true;\r\n\t\t\t\t} else if (action.eventAction === vm.stepEventAction.emailSupervisor) {\r\n\t\t\t\t\tactions['emailSupervisor'] = true;\r\n\t\t\t\t} else if (action.eventAction === vm.stepEventAction.emailOthers) {\r\n\t\t\t\t\tactions['emailOthers'] = true;\r\n\t\t\t\t\tgetEmployees(action.employeeIds);\r\n\t\t\t\t} else if (action.eventAction === vm.stepEventAction.emailEmployee) {\r\n\t\t\t\t\tactions['emailEmployee'] = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// Default is 0 which is \"On Submit\", we are on the review step so we get \"On Employee Profile Review\" (5)\r\n\t\t\tstep._stepEvents[0].eventType = vm.stepEventType.onEmployeeProfileReview;\r\n\t\t}\r\n\r\n\t\tfunction handleAction(value, actionIndex, eventAction) {\r\n\t\t\tvar evtActions = step._stepEvents[actionIndex].eventActions;\r\n\t\t\tif (value) {\r\n\t\t\t\tvar action = {\teventAction: eventAction };\r\n\t\t\t\tstep._stepEvents[actionIndex].eventActions = [...evtActions, action];\r\n\t\t\t\tstep._stepEvents = step._stepEvents.slice(); // hack to trigger change\r\n\t\t\t\treturn action;\r\n\t\t\t} else {\r\n\t\t\t\tstep._stepEvents[actionIndex].eventActions = evtActions.filter(a => a.eventAction !== eventAction);\r\n\r\n\t\t\t\tstep._stepEvents = step._stepEvents.slice(); // hack to trigger change\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction handleEmail(index, property) {\r\n\t\t\tif (step._stepEvents[0] == null) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tlet action, actions = step._stepEvents[0].eventActions;\r\n\t\t\tfor (let i = 0; i < actions.length; i++) {\r\n\t\t\t\taction = actions[i];\r\n\t\t\t\tif (action.eventAction === vm.stepEventAction.emailOthers) {\r\n\t\t\t\t\tif ($scope.actions.hasOwnProperty(property)) {\r\n\t\t\t\t\t\tif ($scope.actions[property] == undefined || !!($scope.actions[property] == null)) {\r\n\t\t\t\t\t\t\tif (property === 'emailIds') {\r\n\t\t\t\t\t\t\t\t$scope.actions[property] = [];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\taction.employeeIds = $scope.actions[property].map(val => { return val.id; });\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tstep._stepEvents = step._stepEvents.slice(); // hack to trigger change\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction getEmployee(id) {\r\n\t\t\tif (id == null) { return; }\r\n\t\t\t// supressing internal error handling for the get employee call so that the activation endpoint can handle all errors.\r\n\t\t\treturn ssEmployeeApi.get({\r\n\t\t\t\tid: id,\r\n\t\t\t\tfields: 'firstName,lastName'\r\n\t\t\t}, '', false);\r\n\t\t}\r\n\r\n\t\tfunction getEmployees(ids) {\r\n\t\t\tif (ids == null || ids.length < 1) { return; }\r\n\r\n\t\t\tssAsync(function* () {\r\n\t\t\t\t$scope.actions['emailIds'] = yield ssEmployeeApi.queryByIds({\r\n\t\t\t\t\tfields: 'firstName,lastName'\r\n\t\t\t\t},{ ids: ids });\r\n\t\t\t})();\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tlink(scope, elem, attrs) {\r\n\t\t// This element is needed for validation reset\r\n\t\tangular.element(document).ready(function () {\r\n\t\t\tstepParticipantSearch = angular.element(document.getElementById('step-participant-search'));\r\n\t\t});\r\n\r\n\t};\r\n}\r\n\r\n// #-- END Component (cmp-properties-profile-review) --# //\r\n// #---------------------------------------------------# //\r\n\r\nangular.module('ec-forms-components').directive('cmpPropertiesProfileReview', () => new PropertiesProfileReview(props, 'properties-profile-review') );\r\n","import {Component} from 'base-component';\r\n// #-------------------------------------------# //\r\n// #---- Component (cmp-properties-salary) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tform: '=',\r\n\tfields: '=',\r\n};\r\n\r\nclass PropertiesSalary extends Component {\r\n\t/*@ngInject*/\r\n\tcontroller($scope, ssMultiInitiativeFeatureDetectorSvc, ssValidationHlp, ssFlagSvc) {\r\n\t\tconst routeVm = $scope.routeVm = $scope.$root.utils.findInParentScope('routeVm', $scope);\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\tcanEdit: true,\r\n\t\t\teditableFieldLabels: false // can a user change fields' labels\r\n\t\t};\r\n\r\n\t\tconst actionableFields = $scope.fields.filter(f => f._fieldDefId != null);\r\n\r\n\t\t$scope.validator = {\r\n\t\t\tlabel: ssValidationHlp.string({ maxLength: 30 })\r\n\t\t};\r\n\r\n\t\tconst go = $scope.go = { //eslint-disable-line\r\n\t\t\tshowActionableFields: (field) => {\r\n\t\t\t\tif (ssMultiInitiativeFeatureDetectorSvc.isHRMSEnabled()) {\r\n\t\t\t\t\t// remove those not viewable for HRMS\r\n\t\t\t\t\treturn field._fieldDefId != null && !field._hideForHRMS;\r\n\t\t\t\t} else { \r\n\t\t\t\t\treturn field._fieldDefId != null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// If the '_fieldType' of every actionable field does not contain the string 'read', then the user can edit the fields\r\n\t\tvm.canEdit = actionableFields.every(field => {\r\n\t\t\treturn field._fieldType && !field._fieldType.includes('read');\r\n\t\t});\r\n\r\n\r\n\t\t// If org has feature flag on, they can change field label names\r\n\t\tssFlagSvc.ready.then(() => {\r\n\t\t\tif (ssFlagSvc.checkState('fc-enable-editable-form-labels')) {\r\n\t\t\t\tvm.editableFieldLabels = true;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// protect against all heading fields that may not have this attribute that already exist\r\n\t\tif ($scope.fields[0]._active == null) {\r\n\t\t\t$scope.fields[0]._active = true;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// #-- END Component (cmp-properties-salary) --# //\r\n// #-------------------------------------------# //\r\n\r\nangular.module('ec-forms-components').directive('cmpPropertiesSalary', () => new PropertiesSalary(props, 'properties-salary') );\r\n","import {Component} from 'base-component';\r\n// #----------------------------------------------------------# //\r\n// #---- Component (cmp-properties-secondary-assignments) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tfields: '='\r\n};\r\n\r\nclass PropertiesSecondaryAssignments extends Component {\r\n\t/*@ngInject*/\r\n\tcontroller($scope, ssValidationHlp, ssFlagSvc) {\r\n\t\t// view model for tracking state\r\n\r\n\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\tfields: $scope.fields,\r\n\t\t\tcanEdit: true,\r\n\t\t\teditableFieldLabels: true, // can a user change fields' labels\r\n\t\t\thrmsEnabled: false\r\n\t\t};\r\n\r\n\t\tssFlagSvc.ready.then(() => {\r\n\t\t\tif (ssFlagSvc.checkState('hrms')) {\r\n\t\t\t\tvm.hrmsEnabled = true;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t$scope.validator = {\r\n\t\t\tlabel: ssValidationHlp.string({ maxLength: 25 })\r\n\t\t}\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = {\r\n\t\t\thideInstructions: (field) => {\r\n\t\t\t\treturn field._fieldType != 'instructions';\r\n\t\t\t},\r\n\t\t\tcheckIfHeadingOrInstructions(field){\r\n\t\t\t\tswitch(field._fieldType){\r\n\t\t\t\t\tcase 'readOnlyHeading':\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\tcase 'readOnlySubheading':\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\tcase 'instructions':\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\thideIfHrms: (field) => {\r\n\t\t\t\tif (vm.hrmsEnabled){\r\n\t\t\t\t\treturn !field._hideForHRMS;\r\n\t\t\t\t}else {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tvm.canEdit = $scope.fields.some(field => {\r\n\t\t\treturn field._fieldType && !field._fieldType.includes('read');\r\n\t\t});\r\n\t}\r\n}\r\n\r\n// #-- END Component (cmp-properties-secondary-assignments) --# //\r\n// #----------------------------------------------------------# //\r\n\r\nangular.module('ec-forms-components').directive('cmpPropertiesSecondaryAssignments', () => new PropertiesSecondaryAssignments(props, 'properties-secondary-assignments') );\r\n","import { Component } from 'base-component';\r\n// #------------------------------------------# //\r\n// #---- Component (cmp-properties-smart) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tform: '=',\r\n\tfields: '=',\r\n};\r\n\r\nclass PropertiesSmart extends Component {\r\n\t/*@ngInject*/\r\n\tcontroller($scope, ssMultiInitiativeFeatureDetectorSvc, ssValidationHlp, ssFlagSvc) {\r\n\t\tconst routeVm = $scope.routeVm = $scope.$root.utils.findInParentScope('routeVm', $scope);\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\thasSensitiveFields: $scope.fields.some(field => field._sensitive),\r\n\t\t\tcanEdit: true,\r\n\t\t\teditableFieldLabels: false // can a user change fields' labels\r\n\t\t};\r\n\r\n\t\tconst actionableFields = $scope.fields.filter(f => f._fieldDefId != null);\r\n\r\n\t\t$scope.validator = {\r\n\t\t\tlabel: ssValidationHlp.string({ maxLength: 30 })\r\n\t\t};\r\n\r\n\t\tconst go = $scope.go = { //eslint-disable-line\r\n\t\t\tswitchFieldTypes: (canEdit) => {\r\n\t\t\t\tlet fieldType = canEdit ? 'edit' : 'view';\r\n\t\t\t\t//\tupdate the field group heading type\r\n\t\t\t\t$scope.fields[0]._fieldType = !canEdit ? 'readOnlyHeading' : 'heading';\r\n\t\t\t\t//\tupdate the fieldType of all fields\r\n\t\t\t\tactionableFields.forEach(field => {\r\n\t\t\t\t\tif (field._fieldTypeOptions && field._fieldTypeOptions.view && field._fieldTypeOptions.edit) {\r\n\t\t\t\t\t\tfield._fieldType = field._fieldTypeOptions[fieldType];\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//\tuncheck 'required' for all non-editable fields\r\n\t\t\t\t\tif (!canEdit) {\r\n\t\t\t\t\t\tfield._required = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tshowActionableFields: (field) => {\r\n\t\t\t\tif (ssMultiInitiativeFeatureDetectorSvc.isHRMSEnabled()) {\r\n\t\t\t\t\t// remove those not viewable for HRMS\r\n\t\t\t\t\treturn field._fieldDefId != null && !field._hideForHRMS;\r\n\t\t\t\t} else { \r\n\t\t\t\t\treturn field._fieldDefId != null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// If the '_fieldType' of every actionable field does not contain the string 'read', then the user can edit the fields\r\n\t\tvm.canEdit = actionableFields.every(field => {\r\n\t\t\treturn field._fieldType && !field._fieldType.includes('read');\r\n\t\t});\r\n\r\n\t\t/*\r\n\t\tIn order for the toggle to be enabled:\r\n\t\tORG cannot be HRMS;\r\n\t\tAll fields must all have both 'edit' and 'view' fieldTypeOptions values\r\n\t\t*/\r\n\t\tvm.canToggleFieldTypes = function() {\r\n\t\t\tlet hasFieldTypeOptions = actionableFields.every((field) => field._fieldTypeOptions && field._fieldTypeOptions.view && field._fieldTypeOptions.edit);\r\n\t\t\treturn !routeVm.isHRMSEnabled && hasFieldTypeOptions;\r\n\t\t}();\r\n\r\n\t\t// If org has feature flag on, they can change field label names\r\n\t\tssFlagSvc.ready.then(() => {\r\n\t\t\tif (ssFlagSvc.checkState('fc-enable-editable-form-labels')) {\r\n\t\t\t\tvm.editableFieldLabels = true;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// protect against all heading fields that may not have this attribute that already exist\r\n\t\tif ($scope.fields[0]._active == null) {\r\n\t\t\t$scope.fields[0]._active = true;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// #-- END Component (cmp-properties-smart) --# //\r\n// #------------------------------------------# //\r\n\r\nangular.module('ec-forms-components').directive('cmpPropertiesSmart', () => new PropertiesSmart(props, 'properties-smart'));\r\n","import {Component} from 'base-component';\r\n// #-----------------------------------------------------# //\r\n// #---- Component (cmp-properties-step-permissions) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tform: '=',\r\n\tstep: '='\r\n};\r\n\r\nclass PropertiesStepPermissions extends Component {\r\n\t/*@ngInject*/\r\n\tcontroller($scope, ssAsync, ssEmployeeApi, enumStepParticipantType, ssModalSvc, ssEnum, formsHlp) {\r\n\t\tconst form = $scope.form;\r\n\t\tlet deregs = [];\r\n        $scope.routeVm = $scope.$root.utils.findInParentScope('routeVm', $scope);\r\n\t\t$scope.formVm = $scope.$root.utils.findInParentScope('formVm', $scope);\r\n\t\t \r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = { // eslint-disable-line\r\n\t\t};\r\n\r\n\t\tconst go = $scope.go = {\r\n\t\t\tmatchByParticipant: (source, target) => {\r\n\t\t\t\treturn formsHlp.matchByParticipant(source, target)\r\n\t\t\t},\r\n\t\t\tadjustStepAccess: (level, permission) => {\r\n\r\n\t\t\t\tlet isPrimaryParticipant = formsHlp.matchByParticipant(permission,$scope.step._stepParticipant);\r\n\r\n\t\t\t\tif(level === 'canView' && !permission[level]) {\r\n\t\t\t\t\tpermission.canEdit = false;\r\n\t\t\t\t\tpermission.canViewSensitive = false;\r\n\t\t\t\t\tpermission.canEditSensitive = false;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(level === 'canViewSensitive' && !permission[level]) {\r\n\t\t\t\t\tpermission.canEditSensitive = false;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(level === 'canEdit') {\r\n\t\t\t\t\tif(permission[level]) {\r\n\t\t\t\t\t\tif(!$scope.formVm.suppressEditAccessModal && !isPrimaryParticipant) {\r\n\t\t\t\t\t\t\tgo.showEditModal().then(() => {\r\n\t\t\t\t\t\t\t\tpermission[level] = permission.canView = true;\r\n\t\t\t\t\t\t\t}).catch((rej) => {\r\n\t\t\t\t\t\t\t\tpermission[level] = false;\r\n\t\t\t\t\t\t\t\tpermission.canView = !permission.canView ? false : true;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpermission.canView = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpermission.canEditSensitive = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(level === 'canEditSensitive') {\r\n\t\t\t\t\tif(!$scope.formVm.suppressEditAccessModal && !isPrimaryParticipant && !permission.canEdit) {\r\n\t\t\t\t\t\tgo.showEditModal().then(() => {\r\n\t\t\t\t\t\t\tpermission.canEdit = permission.canViewSensitive = true;\r\n\t\t\t\t\t\t}).catch((rej) => {\r\n\t\t\t\t\t\t\tpermission[level] = permission.canEdit = false;\r\n\t\t\t\t\t\t\tpermission.canViewSensitive = !permission.canViewSensitive ? false : true;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpermission.canEdit = permission.canViewSensitive = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tshowEditModal: () => {\r\n\t\t\t\tvar config = {\r\n\t\t\t\t\ttitle: 'Edit Step Access',\r\n\t\t\t\t\tcontent: 'This form participant will have the ability to modify this form step only after it has been submitted by the primary participant.',\r\n\t\t\t\t\tprimaryText: 'Ok',\r\n\t\t\t\t\tsecondaryText: 'cancel',\r\n\t\t\t\t\tshowSuppress: true,\r\n\t\t\t\t\talwaysOnTop: true\r\n\t\t\t\t};\r\n\t\t\t\treturn ssModalSvc.showStandard(config).then((scope) => {\r\n\t\t\t\t\t$scope.formVm.suppressEditAccessModal = scope.suppressTheModal;\r\n\t\t\t\t}).catch((scope) => {\r\n\t\t\t\t\t$scope.formVm.suppressEditAccessModal = scope.suppressTheModal;\r\n\t\t\t\t\tthrow 'cancel';\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t(function init() {\r\n\t\t\tif ($scope.step._permissions && $scope.step._permissions.length) {\r\n\t\t\t\t// call deregister for existing watches\r\n\t\t\t\tderegs.forEach(d => d());\r\n\t\t\t\t// create new watches\r\n\t\t\t\tfor (let i = 0; i < $scope.step._permissions.length; i++) {\r\n\t\t\t\t\tderegs.push($scope.$watchGroup([`step._permissions[${i}].canView`, `step._permissions[${i}].canEdit`, `step._permissions[${i}].canViewSensitive`, `step._permissions[${i}].canEditSensitive`], (nv, ov) => {\r\n\t\t\t\t\t\tif(nv != null && (angular.equals(nv, ov))) { return; }\r\n\t\t\t\t\t\t// create a new reference for json api to pick up\r\n\t\t\t\t\t\t$scope.step._permissions = $scope.step._permissions.slice();\r\n\t\t\t\t\t}));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}());\r\n\r\n\t//\twatch for addition of senstive fields and show sensitive field step access controls\r\n\t\t$scope.$watchCollection('step.fieldGroups', (nv, ov) => {\r\n\t\t\tvm.hasSensitiveFields = hasSensitiveFields();\r\n\t\t});\r\n\r\n\t\t$scope.$watch('formVm.saving', (nv, ov) => {\r\n\t\t\tif(nv == null || (angular.equals(nv, ov))) { return; }\r\n\t\t\tif (nv === false && ov === true) {\r\n\t\t\t\tpermissionDisplay($scope.step)\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t$scope.$watch('form._steps.length', (nv, ov) => {\r\n\t\t\tif(angular.equals(nv, ov)) { return; }\r\n\t\t\tif(nv && nv < ov) {\r\n\t\t\t\tformsHlp.updatePermissions({\r\n\t\t\t\t\tsteps: form._steps,\r\n\t\t\t\t\tcurrentStep: $scope.step,\r\n\t\t\t\t\toptions: {\r\n\t\t\t\t\t\tisHRMS: $scope.routeVm.isHRMSEnabled\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tpermissionDisplay($scope.step);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t$scope.$watch('step._stepParticipant', (nv, ov) => {\r\n\t\t\t// display the step participants\r\n\t\t\tpermissionDisplay($scope.step);\r\n\t\t\t// if there's no step participant (new step) or the step participant hasnt changed, do not update permissions\r\n\t\t\tif(nv._participantType && nv._participantType === ov._participantType && nv.employeeIds[0] ===  ov.employeeIds[0]) { return; }\r\n\t\t\t// update step permissions\r\n\t\t\tformsHlp.updatePermissions({\r\n\t\t\t\tsteps: form._steps,\r\n\t\t\t\tcurrentStep: $scope.step,\r\n\t\t\t\tnewStepParticipant: nv,\r\n\t\t\t\toldStepParticipant: ov,\r\n\t\t\t\toptions: {\r\n\t\t\t\t\tisHRMS: $scope.routeVm.isHRMSEnabled\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t// update the display after the permission updates\r\n\t\t\tpermissionDisplay($scope.step);\r\n\t\t}, true);\r\n\r\n\t\tfunction hasSensitiveFields() {\r\n\t\t\tif($scope.step.fieldGroups.length) {\r\n\t\t\t\treturn $scope.step.fieldGroups.reduce((prev, curr) => {\r\n\t\t\t\t\treturn [...prev, ...curr];\r\n\t\t\t\t}, $scope.step.fieldGroups[0]).some((field) => {\r\n\t\t\t\t\treturn field._sensitive == true || Array.isArray(field._tokenFields) && !!field._tokenFields.find(field => field.sensitive);\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// @param {Obj} stepPerm: a step permission object\r\n\t\tfunction permissionDisplay(step) {\r\n\t\t\tstep._permissions.forEach((perm) => {\r\n\t\t\t\tif (perm.participantType == null) {\r\n\t\t\t\t\tperm.display = 'select participant';\r\n\t\t\t\t} else if (perm.participantType === enumStepParticipantType.specificPerson) {\r\n\t\t\t\t\tif (perm.emp) {\r\n\t\t\t\t\t\tperm.display = perm.emp.fullName;\r\n\t\t\t\t\t} else if (perm.employeeId.length) {\r\n\t\t\t\t\t\tssAsync(function*() {\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\tperm.display = 'loading participant...';\r\n\t\t\t\t\t\t\t\t// supressing internal error handling for the get employee call so that the activation endpoint can handle all errors.\r\n\t\t\t\t\t\t\t\tperm.emp = yield ssEmployeeApi.get({\r\n\t\t\t\t\t\t\t\t\tid: perm.employeeId,\r\n\t\t\t\t\t\t\t\t\tfields: 'firstname,lastname'\r\n\t\t\t\t\t\t\t\t}, '', false);\r\n\t\t\t\t\t\t\t\t\tperm.display = perm.emp.fullName;\r\n\t\t\t\t\t\t\t} catch(err) {\r\n\t\t\t\t\t\t\t\tconsole && console.error && console.error(err);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tperm.display = 'select participant';\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tperm.display = enumStepParticipantType.byValue(perm.participantType);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t}\r\n}\r\n\r\n// #-- END Component (cmp-properties-step-permissions) --# //\r\n// #-----------------------------------------------------# //\r\n\r\nangular.module('ec-forms-components').directive('cmpPropertiesStepPermissions', () => new PropertiesStepPermissions(props, 'properties-step-permissions') );\r\n","import {Component} from 'base-component';\r\n// #-----------------------------------------# //\r\n// #---- Component (cmp-properties-step) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tform: '=', // pass through to children\r\n\tstep: '='\r\n};\r\n\r\nvar stepParticipantSearch;\r\n\r\nclass PropertiesStep extends Component {\r\n\t/*@ngInject*/\r\n\tcontroller($scope, ssEnum, ssAsync, ssEmployeeApi, ssValidateHlp, ssValidationHlp, ssToastHlp) {\r\n\t\tconst step = $scope.step;\r\n\t\tvar initialSpecificParticipantId;\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\tspecificParticipant: [],\r\n\t\t\tstepActions: [],\r\n\t\t\tstepParticipant: ssEnum.stepParticipantType,\r\n\t\t\tvalidator: {\r\n\t\t\t\trequired: ssValidationHlp.required()\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tvm.stepActions = ssEnum.stepAction.getEnums().filter(e => e.value !== ssEnum.stepAction.formCompleted && e.value !== ssEnum.stepAction.employeeProfileReview);\r\n\r\n\t\tconst go = $scope.go = { // eslint-disable-line\r\n\t\t\tselectParticipant(option) {\r\n\t\t\t\tvm.buttonLabel = option.name;\r\n\t\t\t\tstep._stepParticipant.participantType = option.value;\r\n\t\t\t\tstep._stepParticipant.employeeIds = vm.specificParticipant = [];\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t(function init() {\r\n\t\t\t// Set the 'step participant dropdown menu label to a default value if there is no initial value\r\n\t\t\t// This emulates the functionality of the 'super-select-list' component, but since we are customizing it, we manually set this here\r\n\t\t\tif (step._stepParticipant.participantType == null) {\r\n\t\t\t\tvm.buttonLabel = 'Please Select';\r\n\t\t\t} else {\r\n\t\t\t\tvm.buttonLabel = ssEnum.stepParticipantType.byValue(step._stepParticipant.participantType);\r\n\t\t\t}\r\n\t\t\t// retrieve the specific step participant if an ID exists\r\n\t\t\tif (step._stepParticipant.employeeIds.length) {\r\n\t\t\t\tgetEmployee(step._stepParticipant.employeeIds[0]);\r\n\t\t\t}\r\n\t\t}());\r\n\t\t\r\n\t\t$scope.$on('$destroy', $scope.$watch('vm.specificParticipant', (nv, ov) => {\r\n\t\t\tif (!nv.length) { return; }\r\n\r\n\t\t\tif (initialSpecificParticipantId && nv[0].id === initialSpecificParticipantId) {\r\n\t\t\t\tinitialSpecificParticipantId = null;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tssValidateHlp.resetValidation(stepParticipantSearch);\r\n\r\n\t\t\tstep._stepParticipant.employeeIds = vm.specificParticipant.map(emp => {\r\n\t\t\t\treturn emp.id;\r\n\t\t\t});\r\n\t\t}));\r\n\t//\t@param {String} id: an employee ID string\r\n\t\tfunction getEmployee(id) {\r\n\t\t\tif (id == null) {return;}\r\n\t\t\tssAsync(function*() {\r\n\t\t\t\ttry {\r\n\t\t\t\t\t// supressing internal error handling for the get employee call so that the activation endpoint can handle all errors.\r\n\t\t\t\t\tlet emp = yield ssEmployeeApi.get({\r\n\t\t\t\t\t\tid: id,\r\n\t\t\t\t\t\tfields: 'firstName,lastName'\r\n\t\t\t\t\t}, '', false);\r\n\t\t\t\t\tvm.specificParticipant.push(emp);\r\n\t\t\t\t\tinitialSpecificParticipantId = angular.copy(emp.id);\r\n\t\t\t\t} catch(err) {\r\n\t\t\t\t\tconsole && console.error && console.error(err);\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t};\r\n\r\n\t};\r\n\r\n\tlink(scope, elem, attrs) {\r\n\t\t// This element is needed for validation reset\r\n\t\tangular.element(document).ready(function () {\r\n\t\t\tstepParticipantSearch = angular.element(document.getElementById('step-participant-search'));\r\n\t\t});\r\n\r\n\t};\r\n}\r\n\r\n// #-- END Component (cmp-properties-step) --# //\r\n// #-----------------------------------------# //\r\n\r\nangular.module('ec-forms-components').directive('cmpPropertiesStep', () => new PropertiesStep(props, 'properties-step') );\r\n","import {Component} from 'base-component';\r\n// #------------------------------------------------# //\r\n// #---- Component (cmp-properties-text-editor) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\ttext: '@'\r\n};\r\n\r\nclass PropertiesTextEditor extends Component {\r\n\t/*@ngInject*/\r\n\tcontroller($scope) {\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\ttest: 'testing...'\r\n\t\t};\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = {\r\n\t\t\tclick(evt) {\r\n\t\t\t\tvm.test = $scope.text;\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n}\r\n\r\n// #-- END Component (cmp-properties-text-editor) --# //\r\n// #------------------------------------------------# //\r\n\r\nangular.module('ec-forms-components').directive('cmpPropertiesTextEditor', () => new PropertiesTextEditor(props, 'properties-text-editor') );\r\n","import {Component} from 'base-component';\r\n// #----------------------------------------------# //\r\n// #---- Component (cmp-secondary-assignment) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tfield: '=',\r\n\tformfieldvalues: '='\r\n};\r\n\r\nclass SecondaryAssignment extends Component {\r\n\t/*@ngInject*/\r\n\tcontroller($scope, fieldRendererHlp, ssFlagSvc) {\r\n\t\tconst field = $scope.field;\r\n\t\tconst formfieldvalues = $scope.formfieldvalues;\r\n\r\n\t\tfieldRendererHlp.bindConfigObject($scope, 'field._configJson', 'field.config');\r\n\r\n\t\t$scope.$watch(fieldRendererHlp.getVisibility(field), val => vm.visibility = val);\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\tformfieldvalues: formfieldvalues,\r\n\t\t\thrmsEnabled: false\r\n\t\t};\r\n\r\n\t\tssFlagSvc.ready.then(() => {\r\n\t\t\tif (ssFlagSvc.checkState('hrms')) {\r\n\t\t\t\tvm.hrmsEnabled = true;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst go = $scope.go = {\r\n\t\t\tcheckIfHeadingOrInstructions(field){\r\n\t\t\t\tswitch(field._fieldType){\r\n\t\t\t\t\tcase 'readOnlyHeading':\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\tcase 'readOnlySubheading':\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\tcase 'instructions':\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\thideIfHrms: (field) => {\r\n\t\t\t\tif (vm.hrmsEnabled){\r\n\t\t\t\t\treturn !field._hideForHRMS;\r\n\t\t\t\t}else {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// #-- END Component (cmp-secondary-assignment) --# //\r\n// #----------------------------------------------# //\r\n\r\nangular.module('ec-forms-components').directive('cmpSecondaryAssignment', () => new SecondaryAssignment(props, 'secondary-assignment') );\r\n","import {Component} from 'base-component';\r\n// #-----------------------------------------------# //\r\n// #---- Component (cmp-secondary-assignments) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tfield: '=',\r\n\tmodel: '=',\r\n};\r\n\r\nclass SecondaryAssignments extends Component {\r\n\t/*@ngInject*/\r\n\tcontroller($scope, ssFlagSvc) {\r\n\t\t// view model for tracking state\r\n\t\tconst field = $scope.field;\r\n\t\t\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\thrmsEnabled: false\r\n\t\t};\r\n\t\t\r\n\t\tssFlagSvc.ready.then(() => {\r\n\t\t\tif (ssFlagSvc.checkState('hrms')) {\r\n\t\t\t\tvm.hrmsEnabled = true;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (field.step){\r\n\t\t\tvm.formFieldValues = field.step.formFieldValues[field.id] ? field.step.formFieldValues[field.id] : '';\r\n\t\t}\r\n\r\n\t\tconst go = $scope.go = {\r\n\t\t\tshowGroupLabel: () => {\r\n\t\t\t\tlet labelIsVisible = field.step ? vm.formFieldValues.length : true;\r\n\t\t\t\treturn labelIsVisible;\r\n\t\t\t},\r\n\t\t\thideIfHrms: (field) => {\r\n\t\t\t\tif (vm.hrmsEnabled){\r\n\t\t\t\t\treturn !field._hideForHRMS;\r\n\t\t\t\t}else {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// #-- END Component (cmp-secondary-assignments) --# //\r\n// #-----------------------------------------------# //\r\n\r\nangular.module('ec-forms-components').directive('cmpSecondaryAssignments', () => new SecondaryAssignments(props, 'secondary-assignments') );\r\n","import {Component} from 'base-component';\r\n// #-----------------------------------------------# //\r\n// #---- Component (cmp-step-checkbox-display) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tstep: '=',\r\n\tonLoad: '&?'\r\n};\r\n\r\nclass StepCheckboxDisplay extends Component {\r\n\t/*@ngInject*/\r\n\tcontroller($scope, ssEventSvc, fieldsHlp) {\r\n\r\n\t\t$scope.routeVm = $scope.$root.utils.findInParentScope('routeVm', $scope)\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = { // jshint ignore:line\r\n\t\t};\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { // jshint ignore:line\r\n\t\t\tselectOption(field, opt) {\r\n\t\t\t\tssEventSvc.emit('pvb.select-option', field, opt);\r\n\t\t\t},\r\n\t\t\tisSelected(field, opt) {\r\n\t\t\t\treturn $scope.routeVm.selectedBox.formFieldGuids[0] === field.id && $scope.routeVm.selectedBox.matchValue === opt;\r\n\t\t\t},\r\n\t\t\tnumerateLabel(targetField, group) {\r\n\t\t\t\tlet numerator = '';\r\n\t\t\t\tlet dupes = group.filter((field) => {\r\n\t\t\t\t\treturn targetField.resolvedLabel === field._label || targetField.resolvedLabel === field.config.uniqueLabel;\r\n\t\t\t\t});\r\n\t\t\t\tif(dupes.length > 1) {\r\n\t\t\t\t\tnumerator = dupes.indexOf(targetField) > 0 ? `(${dupes.indexOf(targetField) + 1})` : numerator;\r\n\t\t\t\t}\r\n\t\t\t\treturn (numerator ? `${targetField.resolvedLabel} ${numerator}` : targetField.resolvedLabel);\r\n\t\t\t},\r\n\t\t\tshowGroup(group) {\r\n\t\t\t\treturn !(group.fields.every(field => field._options.length === 0));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// #-- END Component (cmp-step-checkbox-display) --# //\r\n// #-----------------------------------------------# //\r\n\r\nangular.module('ec-forms-components').directive('cmpStepCheckboxDisplay', () => new StepCheckboxDisplay(props, 'step-checkbox-display') );\r\n","import {Component} from 'base-component';\r\n// #-------------------------------------------# //\r\n// #---- Component (cmp-step-date-display) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tstep: '=',\r\n\tonLoad: '&?'\r\n};\r\n\r\nclass StepDateDisplay extends Component {\r\n\t/*@ngInject*/\r\n\tcontroller($scope, ssEventSvc, fieldsHlp) {\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\ttest: 'testing...'\r\n\t\t};\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = {\r\n\t\t\tselectOption(field, group) {\r\n\t\t\t\tssEventSvc.emit('pvb.select-option', field);\r\n\t\t\t},\r\n\t\t\tnumerateLabel(targetField, group) {\r\n\t\t\t\tlet numerator = '';\r\n\t\t\t\tlet dupes = group.filter((field) => {\r\n\t\t\t\t\treturn targetField.resolvedLabel === field._label || targetField.resolvedLabel === field.config.uniqueLabel;\r\n\t\t\t\t});\r\n\t\t\t\tif(dupes.length > 1) {\r\n\t\t\t\t\tnumerator = dupes.indexOf(targetField) > 0 ? `(${dupes.indexOf(targetField) + 1})` : numerator;\r\n\t\t\t\t}\r\n\t\t\t\treturn (numerator ? `${targetField.resolvedLabel} ${numerator}` : targetField.resolvedLabel);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// #-- END Component (cmp-step-date-display) --# //\r\n// #-------------------------------------------# //\r\n\r\nangular.module('ec-forms-components').directive('cmpStepDateDisplay', () => new StepDateDisplay(props, 'step-date-display') );\r\n","import {Component} from 'base-component';\r\n// #---------------------------------------# //\r\n// #---- Component (cmp-step-renderer) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tstep: '=',\r\n\tstepIndex: '='\r\n};\r\n\r\nclass StepRenderer extends Component {\r\n\t/*@ngInject*/\r\n\tcontroller($scope, ssAsync, ssEmployeeApi, ssModalSvc, ssEventSvc, enumStepParticipantType, fieldsHlp, ssMultiInitiativeFeatureDetectorSvc, ssFlagSvc) {\r\n\t\tconst formVm = $scope.formVm = $scope.$root.utils.findInParentScope('formVm', $scope);\r\n\t\tconst routeVm = $scope.routeVm = $scope.$root.utils.findInParentScope('routeVm', $scope);\r\n\t\tconst form = formVm.formData;\r\n\t\tconst step = $scope.step;\r\n\t\tlet moveTarget = null;\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\tstepParticipant: enumStepParticipantType,\r\n\t\t\tparticipantLabel: '',\r\n\t\t\tmifd: ssMultiInitiativeFeatureDetectorSvc,\r\n\t\t};\r\n\r\n\t\t$scope.$watch('stepIndex', (nv, ov) => {\r\n\t\t\tvm.stepIndex = parseInt(nv, 10);\r\n\t\t});\r\n\r\n\t\t$scope.$watch('step._stepParticipant', (nv, ov) => {\r\n\t\t\tif(!nv) { return; }\r\n\t\t\tif(nv.participantType === enumStepParticipantType.specificPerson) {\r\n\t\t\t\tif(nv.employeeIds && nv.employeeIds.length) {\r\n\t\t\t\t\tssAsync(function*() {\r\n\t\t\t\t\t\tlet emp = yield ssEmployeeApi.get({\r\n\t\t\t\t\t\t\tid: nv.employeeIds[0],\r\n\t\t\t\t\t\t\tfields: 'firstName,lastName'\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tvm.participantLabel = `${emp._firstName} ${emp._lastName}`;\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t})();\r\n\t\t\t\t}\r\n\t\t\t} else if(nv.participantType || nv.participantType === 0) {\r\n\t\t\t\tvm.participantLabel = vm.stepParticipant.byValue(nv.participantType);\r\n\t\t\t} else {\r\n\t\t\t\tvm.participantLabel = 'select participant';\r\n\t\t\t}\r\n\t\t}, true);\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = {\r\n\r\n\t\t\tfieldGroupSettings(event, group) {\r\n\t\t\t\tevent.stopPropagation();\r\n\t\t\t\trouteVm.vm.selectedFormObject = group;\r\n\t\t\t\tlet config = group[0].config || group[0]._configJson;\r\n\t\t\t\t$scope.$emit('component-properties', config.cmp, group);\r\n\t\t\t},\r\n\r\n\t\t\tdropFieldGroup(event, index, item, type, step) {\r\n\t\t\t// If we are dragging an exisiting field group, return the exisitng field group...\r\n\t\t\t\tif (type === 'fieldGroup') {\r\n\t\t\t\t\treturn item;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar droppedFields;\r\n\r\n\t\t\t//\tOtherwise, it's a newly added field group\r\n\t\t\t\tdroppedFields = fieldsHlp.getFields(item.fields, item.component);\r\n\t\t\t//  Remove certain fields (compensation, benefits, etc) for HRMS clients\r\n\t\t\t\tif (ssFlagSvc.checkState('hrms')){\r\n\t\t\t\t\tdroppedFields = droppedFields.filter((f) =>{\r\n\t\t\t\t\t\treturn !f._hideForHRMS;\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\r\n\t\t\t//\ttrack field groups that don't allow multiple instances to prevent them from being added again.\r\n\t\t\t\trouteVm.added[item.fields] = !item.allowMultiple;\r\n\r\n\t\t\t// Display the properties panel when a field is dragged in and make it selected\r\n\t\t\t\t$scope.$emit('component-properties', item.component, droppedFields);\r\n\t\t\t\trouteVm.vm.selectedFormObject = droppedFields;\r\n\r\n\t\t\t\t// force model change so moving a field group allows save\r\n\t\t\t\tformVm.formData.$$forceChangedState('_ownerVersionNumber');\r\n\t\t\t\tformVm.modelChanged();\r\n\r\n\t\t\t\treturn droppedFields;\r\n\t\t\t},\r\n\r\n\t\t\tmovedFieldGroup(index, group, step) {\r\n\t\t\t\t// compensating for a bug in DnD where dropping a fieldGroup\r\n\t\t\t\t\t// back to an empty collection that it has previously been\r\n\t\t\t\t\t// the index is 1 instead of 0\r\n\t\t\t\t\t// ¯\\_(ツ)_/¯ -- whatevs\r\n\t\t\t\tif (step.fieldGroups.length === 0) {\r\n\t\t\t\t\tindex = 0;\r\n\t\t\t\t}\r\n\t\t\t\t// setup the move target for the move action to pick up later\r\n\t\t\t\tmoveTarget = {\r\n\t\t\t\t\tindex, step\r\n\t\t\t\t};\r\n\t\t\t\t// add/remove field group\r\n\t\t\t\tmoveTarget.step.fieldGroups[moveTarget.index] = group.filter(f => true);\r\n\t\t\t\tstep.fieldGroups.splice(index, 1);\r\n\t\t\t\t// force model change so moving a field group allows save\r\n\t\t\t\tformVm.formData.$$forceChangedState('_ownerVersionNumber');\r\n\t\t\t\tformVm.modelChanged();\r\n\t\t\t},\r\n\r\n\t\t\tremoveFieldGroup(group, step) {\r\n\t\t\t//\tremove the group name from the 'added' collection\r\n\t\t\t\tremoveAddedFields(group);\r\n\t\t\t//\tsplice out the field group from the step\r\n\t\t\t\tstep.fieldGroups.splice(step.fieldGroups.indexOf(group), 1);\r\n\r\n\t\t\t\tformVm.updateFormFields();\r\n\t\t\t//\temit an event to update the visibility of the employee profile review step\r\n\t\t\t\tssEventSvc.emit('emp-record-commit', false, group);\r\n\t\t\t\tformVm.modelChanged();\r\n\t\t\t},\r\n\r\n\t\t\tremoveStep($event, index, list) {\r\n\t\t\t\t$event.stopPropagation();\r\n\t\t\t\tlet selectedStepIndex;\r\n\t\t\t\tlet removedStep;\r\n\r\n\t\t\t//\tremove any associated field group names from the 'added' collection\r\n\t\t\t\t$scope.step.fieldGroups.forEach(removeAddedFields);\r\n\r\n\t\t\t//\tdetermine the index of the step that should be selected once a step is removed\r\n\t\t\t\tif(list.indexOf(routeVm.vm.selectedFormObject) > index) {\r\n\t\t\t\t\tselectedStepIndex = list.indexOf(routeVm.vm.selectedFormObject) - 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tselectedStepIndex = index-1 < 0 ? 0 : index-1;\r\n\t\t\t\t}\r\n\t\t\t//\tshow modal warning only if there are fields\r\n\t\t\t\tif ($scope.step.fieldGroups == null || $scope.step.fieldGroups.length === 0) {\r\n\t\t\t\t//\tsplice the step out of the lists and update the selected step\r\n\t\t\t\t\tremovedStep = list.splice(index, 1)[0];\r\n\t\t\t\t\tform._steps.splice(form._steps.indexOf(removedStep), 1);\r\n\t\t\t\t\t$scope.$emit('component-properties', 'cmp-properties-step', list[selectedStepIndex]);\r\n\t\t\t\t\trouteVm.vm.selectedFormObject = list[selectedStepIndex];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar modalConfig = {\r\n\t\t\t\t\t\ttitle: 'Remove Step',\r\n\t\t\t\t\t\tcontent: `Removing this step will also remove any fields that are assigned to it.`,\r\n\t\t\t\t\t\tprimaryText: 'Remove Step',\r\n\t\t\t\t\t\tsecondaryText: 'Cancel',\r\n\t\t\t\t\t\talwaysOnTop: true\r\n\t\t\t\t\t};\r\n\t\t\t\t\tssModalSvc.showDestructive(modalConfig).then(() => {\r\n\t\t\t\t\t\tremovedStep = list.splice(index, 1)[0];\r\n\t\t\t\t\t//\tsplice the step out of the lists and update the selected step\r\n\t\t\t\t\t\tform._steps.splice(form._steps.indexOf(removedStep), 1);\r\n\t\t\t\t\t\t$scope.$emit('component-properties', 'cmp-properties-step', list[selectedStepIndex]);\r\n\t\t\t\t\t\trouteVm.vm.selectedFormObject = list[selectedStepIndex];\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//\tSince we have separated the removal of form fields from this logic, We need to also emit this event here to correctly remove any field groups that belonged to the removed step from the collection that saves the current fields which are to commit to the employee record\r\n\t\t\t\t$scope.step.fieldGroups.forEach((group) => {\r\n\t\t\t\t\tssEventSvc.emit('emp-record-commit', false, group);\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tformVm.modelChanged();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tfunction removeAddedFields(group) {\r\n\t\t\tif (group[0]._fieldGroup && group[0]._fieldGroup.length) {\r\n\t\t\t\trouteVm.added[group[0]._fieldGroup] = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n}\r\n\r\n// #-- END Component (cmp-step-renderer) --# //\r\n// #---------------------------------------# //\r\n\r\nangular.module('ec-forms-components').directive('cmpStepRenderer', () => new StepRenderer(props, 'step-renderer') );\r\n","import {Component} from 'base-component';\r\n// #-------------------------------------------# //\r\n// #---- Component (cmp-step-text-display) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tstep: '=',\r\n\tonLoad: '&?'\r\n};\r\n\r\nclass StepTextDisplay extends Component {\r\n\t/*@ngInject*/\r\n\tcontroller($scope, ssEventSvc, fieldsHlp) {\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = { // jshint ignore:line\r\n\t\t};\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { // jshint ignore:line\r\n\t\t\tselectField(field) {\r\n\t\t\t\tssEventSvc.emit('pvb.select-field', field);\r\n\t\t\t},\r\n\t\t\tfilterUnmappable(field) {\r\n\t\t\t\treturn field.config.mappable != null ? field.config.mappable === true : true;\r\n\t\t\t},\r\n\t\t\tnumerateLabel(targetField, group) {\r\n\t\t\t\tlet numerator = '';\r\n\t\t\t\tlet dupes = group.filter((field) => {\r\n\t\t\t\t\treturn targetField.resolvedLabel === field._label || targetField.resolvedLabel === field.config.uniqueLabel;\r\n\t\t\t\t});\r\n\t\t\t\tif(dupes.length > 1) {\r\n\t\t\t\t\tnumerator = dupes.indexOf(targetField) > 0 ? `(${dupes.indexOf(targetField) + 1})` : numerator;\r\n\t\t\t\t}\r\n\t\t\t\treturn (numerator ? `${targetField.resolvedLabel} ${numerator}` : targetField.resolvedLabel);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// #-- END Component (cmp-step-text-display) --# //\r\n// #-------------------------------------------# //\r\n\r\nangular.module('ec-forms-components').directive('cmpStepTextDisplay', () => new StepTextDisplay(props, 'step-text-display') );\r\n","import {Component} from 'base-component';\r\n// #----------------------------------------# //\r\n// #---- Component (cmp-field-renderer) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tfield: '=',\r\n\tgroup: '=',\r\n};\r\n\r\nclass templateFieldRenderer extends Component {\r\n\t/*@ngInject*/\r\n\tcontroller($scope, $filter, fieldsHlp, fieldRendererHlp) {\r\n\t\tconst field = $scope.field;\r\n\t\tconst group = $scope.group;\r\n\t\tconst routeVm = $scope.routeVm = $scope.$root.utils.findInParentScope('routeVm', $scope);\r\n\t\tconst fieldValidator = fieldsHlp.getValidator($scope.field._fieldType);\r\n\r\n\t\tfieldRendererHlp.bindConfigObject($scope, 'field._configJson', 'field.config');\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\ttemplate: '',\r\n\t\t\tstyle: {}\r\n\t\t};\r\n\r\n\t\tconst go = $scope.go = { // eslint-disable-line no-unused-vars\r\n\t\t\tvalidate(field) {\r\n\t\t\t\tif(typeof fieldValidator === 'function'){\r\n\t\t\t\t\tlet result = fieldValidator.call(null, field);\r\n\t\t\t\t\treturn !result ? true : result;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tif (field.config.width) {\r\n\t\t\tvm.style.width = field.config.width;\r\n\t\t\t$scope.$watch('field.config.width', nv => vm.style.width = nv);\r\n\t\t}\r\n\r\n\t//\tchange _fieldType here of employee profile fields for HRMS Orgs: \r\n\t//\t-\tfield must have \"_externalData\" property\r\n\t//\t-\tif the field has a \"_fieldTypeOptions\" property, then switch to the 'view' fieldType option, otherise use the existing fieldType value\t\r\n\t\tif(routeVm.isHRMSEnabled) {\r\n\r\n\t\t\tlet isExternalDataGroup = group.some((field) => {\r\n\t\t\t\treturn field._externalData;\r\n\t\t\t});\r\n\r\n\t\t\tif(field._externalData){\r\n\t\t\t\tif(field._fieldTypeOptions && field._fieldTypeOptions.view) {\r\n\t\t\t\t\tfield._fieldType = field._fieldTypeOptions.view;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(field._fieldType === 'heading' && isExternalDataGroup) {\r\n\t\t\t\tfield._fieldType = 'readOnlyHeading'\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t//\tBypass any validators for form templates\r\n\t\tfield.ignoreValidations = true;\r\n\t//\tDisable fields on form templates - this prevents the user from interacting with the fields\r\n\t\tfield.disabled = true;\r\n\r\n\t\t$scope.$watch('field._fieldType', () => renderTemplate(field));\r\n\t\t\r\n\t\t$scope.$watch('field._label', () => renderTemplate(field));\r\n\r\n\t\t$scope.$watch(fieldRendererHlp.getVisibility(field), val => vm.visibility = val);\r\n\r\n\t\tfunction renderTemplate(field) { // eslint-disable-line\r\n\t\t\tvar tag = fieldRendererHlp.getTag(field);\r\n\t\t\tvar properties = fieldRendererHlp.getProperties(field, group);\r\n\t\t\tvar content = fieldRendererHlp.getContent(field, {scope: $scope.$root});\r\n\t\t\tvm.template = `<${tag}${properties}>${content}</${tag}>`;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// #-- END Component (cmp-field-renderer) --# //\r\n// #----------------------------------------# //\r\n\r\nangular.module('ec-forms-components').directive('cmpTemplateFieldRenderer', () => new templateFieldRenderer(props,\r\n\t'template-field-renderer'));\r\n","import { Component } from 'base-component';\r\n// #--------------------------------------------# //\r\n// #---- Component (cmp-template-list-form) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\ttemplate: '=',\r\n\torg: '=',\r\n};\r\n\r\nclass TemplateListForm extends Component {\r\n\t/*@ngInject*/\r\n\tcontroller($scope, $state, $location, buildConfig, ssAsync, ssActiveUserSvc, ssModalSvc, ssFormTemplatesApi, ssStatusApi, enumFormTemplateStatus, enumFormAdministratorType, \r\n\t\t\t\tssFormInstancesApi, ssArrayHlp, ssToastHlp, ssEventSvc, ssObjectHlp, ssSleepHlp, ssFlagSvc) {\r\n\r\n\t\tconst routeVm = $scope.routeVm = $scope.$root.utils.findInParentScope('routeVm', $scope);\r\n\r\n\t\tconst testOrgValue = buildConfig.sharedFormsOrg;\r\n\r\n\t\tconst isIdmAdmin = ssObjectHlp.glean($scope, _ => _.$root.isPermitted.activeUser.idmAdministrator, false);\r\n\r\n\t\tconst postTemplate = {\r\n\t\t\t'type': 'FormTemplate',\r\n\t\t\t'attributes': [{\r\n\t\t\t\t'dueDateUtc': null,\r\n\t\t\t\t'formTemplate': {\r\n\t\t\t\t\t'formTemplateId': ''\r\n\t\t\t\t},\r\n\t\t\t\t'employee': {\r\n\t\t\t\t\t'employeeId': ''\r\n\t\t\t\t}\r\n\t\t\t}]\r\n\t\t};\r\n\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\tpendingMessage: '',\r\n\t\t\tshowShare: false,\r\n\t\t};\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { // eslint-disable-line\r\n\t\t\tdelete(template) {\r\n\t\t\t\tvar config = {\r\n\t\t\t\t\ttitle: 'Delete Form Template',\r\n\t\t\t\t\tcontent: 'Once deleted, this form template will be removed and cannot be retrieved.',\r\n\t\t\t\t\tprimaryText: 'Delete Template',\r\n\t\t\t\t\tsecondaryText: 'Cancel',\r\n\t\t\t\t\talwaysOnTop: true\r\n\t\t\t\t};\r\n\r\n\t\t\t\tssModalSvc.showDestructive(config).then(() => {\r\n\t\t\t\t\ttemplate.isPending = true;\r\n\t\t\t\t\tvm.pendingMessage = `Deleting \"${template._name}\"`;\r\n\t\t\t\t\tssAsync(function*() {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tyield template.$remove();\r\n\t\t\t\t\t\t\tyield ssSleepHlp.sleep();\r\n\t\t\t\t\t\t\tyield routeVm.refreshData();\r\n\t\t\t\t\t\t\tssToastHlp.success(`\"${template._name}\" has been deleted`, '');\r\n\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t\tconsole && console.error && console.error(`Error deleting \"${template._name}\"`, e);\r\n\t\t\t\t\t\t} finally {\r\n\t\t\t\t\t\t\ttemplate.isPending = false;\r\n\t\t\t\t\t\t\tvm.pendingMessage = null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})();\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tsendToSelf: ssAsync(function*(template) {\r\n\t\t\t\ttemplate.isPending = true;\r\n\t\t\t\tvm.pendingMessage = `Initiating \"${template._name}\"`;\r\n\t\t\t\tlet redirectUrl = null;\r\n\r\n\t\t\t\t//\tGet the user's info\r\n\t\t\t\tlet userKey = yield ssActiveUserSvc.getIdentityByType('employee');\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\t//\tthrow an error if formAdministratorType is 1 (sender)\r\n\t\t\t\t\tif (template._formAdministrator.formAdministratorType === enumFormAdministratorType.formPacketSender) {\r\n\t\t\t\t\t\tthrow 'An Employee-Initiated form cannot be started by an employee who is also assigned as the Form Administrator.'\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Grab a copy of the post object\r\n\t\t\t\t\tvar post = angular.copy(postTemplate);\r\n\t\t\t\t\tpost.attributes[0].formTemplate.formTemplateId = template.id;\r\n\t\t\t\t\tpost.attributes[0].employee.employeeId = userKey;\r\n\t\t\t\t\t// Send the form instance to myself & redirect\r\n\t\t\t\t\tlet result = yield ssFormInstancesApi.send(post, { 'isemployeeinitiated': true });\r\n\r\n\t\t\t\t\t/*\r\n\t\t\t\t\tIf the logged in user is the step participant of the first step, redirect to the form instance view, otherwise show a toast message that the form was sent.\r\n\t\t\t\t\t*/\r\n\t\t\t\t\tif(userKey === result[0].currentStep._stepParticipant.employeeIds[0]) {\r\n\t\t\t\t\t\tif (ssFlagSvc.checkState('fc-enable-merged-forms-modules')) {\r\n\t\t\t\t\t\t\t$state.go('base.formInstance', { \r\n\t\t\t\t\t\t\t\tformInstanceId: result[0].id,\r\n\t\t\t\t\t\t\t\treturnUrl: '/ec-forms/my-forms?activeTab=current',\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$location.url(`/ec-forms/form-instance/${result[0].id}?returnUrl=/ec-forms/my-forms?activeTab=current`);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tssToastHlp.success(`\"${result[0].name}\" has been sent`, 'Form Sent', false);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttemplate.isPending = false;\r\n\t\t\t\t\tvm.pendingMessage = '';\r\n\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tconsole && console.error && console.error(error);\r\n\t\t\t\t\tssToastHlp.error(error, 'Error', false);\r\n\t\t\t\t\ttemplate.isPending = false;\r\n\t\t\t\t\tvm.pendingMessage = '';\r\n\t\t\t\t}\r\n\t\t\t}),\r\n\r\n\t\t\tsend(template) {\r\n\t\t\t\t$state.go('base.send', {\r\n\t\t\t\t\tid: template.id,\r\n\t\t\t\t\ttype: 'FormTemplate'\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\tpreview(template) {\r\n\t\t\t\t$state.go('base.formBuilder.preview', {\r\n\t\t\t\t\tformId: template.id,\r\n\t\t\t\t\treturnTo: '/ec-forms/form-templates' \r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\tedit(template) {\r\n\t\t\t\tif (template.status === 'active') {\r\n\t\t\t\t\tvar editTemplateConfig = {\r\n\t\t\t\t\t\ttitle: 'Edit Form Template',\r\n\t\t\t\t\t\tcontent: 'Editing will deactivate and disable it from being sent until it has been reactivated. Prior recipients will not receive changes made.',\r\n\t\t\t\t\t\tprimaryText: 'Edit Template',\r\n\t\t\t\t\t\tsecondaryText: 'Cancel',\r\n\t\t\t\t\t\talwaysOnTop: true\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tssModalSvc.showStandard(editTemplateConfig).then(() => {\r\n\t\t\t\t\t\ttemplate.isPending = true;\r\n\t\t\t\t\t\tvm.pendingMessage = 'Deactivating \"' + template._name + '\"';\r\n\r\n\t\t\t\t\t\tssFormTemplatesApi.editActive(template).then((deactivatedForm) => {\r\n\t\t\t\t\t\t\t$state.go('base.formBuilder.builder', {\r\n\t\t\t\t\t\t\t\tformId: deactivatedForm.id\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}).catch((err) => {\r\n\t\t\t\t\t\t\tssToastHlp.error('There was an error deactivating the form template', '');\r\n\t\t\t\t\t\t\tconsole && console.error && console.error(err);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (ssFlagSvc.checkState('fc-enable-merged-forms-modules')) {\r\n\t\t\t\t\t\t$state.go('base.formBuilder.builder', {\r\n\t\t\t\t\t\t\tformId: template.id\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$location.url(`/ec-forms/form-builder/${template.id}/builder`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tcopy(template) {\r\n\t\t\t\ttemplate.isPending = true;\r\n\t\t\t\tvm.pendingMessage = `Copying ${template._name}`;\r\n\t\t\t\tssAsync(function*() {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tvar copiedForm = yield ssFormTemplatesApi.copy({\r\n\t\t\t\t\t\t\tid: template.id\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tyield ssSleepHlp.sleep();\r\n\t\t\t\t\t\tyield routeVm.refreshData();\r\n\t\t\t\t\t\t//\tfind the newly copied template in the list of templates and apply the highlight\r\n\t\t\t\t\t\tssArrayHlp.findWhere(routeVm.displayTemplates, { id: copiedForm.id }).isHighlighted = true;\r\n\t\t\t\t\t\tssToastHlp.success('', `${copiedForm._name} created`);\r\n\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\tconsole && console.error && console.error(`Error copying \"${template._name}\"`, e);\r\n\t\t\t\t\t} finally {\r\n\t\t\t\t\t\ttemplate.isPending = false;\r\n\t\t\t\t\t\tvm.pendingMessage = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t})();\r\n\t\t\t},\r\n\r\n\t\t\tarchive(template) {\r\n\r\n\t\t\t\tvar config = {\r\n\t\t\t\t\ttitle: 'Archive Form Template',\r\n\t\t\t\t\tcontent: `${template._name} will not be deleted, but will be removed from this list.`,\r\n\t\t\t\t\tprimaryText: 'Archive Template',\r\n\t\t\t\t\tsecondaryText: 'Cancel',\r\n\t\t\t\t\talwaysOnTop: true\r\n\t\t\t\t};\r\n\r\n\t\t\t\tssModalSvc.showDestructive(config).then(() => {\r\n\t\t\t\t\ttemplate.isPending = true;\r\n\t\t\t\t\tvm.pendingMessage = `Archiving \"${template._name}\"`;\r\n\t\t\t\t\tssAsync(function*() {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tyield ssStatusApi.update({ id: template.id }, {\r\n\t\t\t\t\t\t\t\tstatusId: enumFormTemplateStatus.archived,\r\n\t\t\t\t\t\t\t\tfrom: new Date().toISOString()\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tyield ssSleepHlp.sleep();\r\n\t\t\t\t\t\t\tyield routeVm.refreshData();\r\n\t\t\t\t\t\t\tssToastHlp.success('', `\"${template._name}\" has been archived`);\r\n\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t\tconsole && console.error && console.error(`Error archiving \"${template._name}\"`, e);\r\n\t\t\t\t\t\t} finally {\r\n\t\t\t\t\t\t\ttemplate.isPending = false;\r\n\t\t\t\t\t\t\tvm.pendingMessage = null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})();\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\tdeactivate(template) {\r\n\t\t\t\tlet deactivateTemplateConfig = {\r\n\t\t\t\t\ttitle: 'Deactivate Form Template',\r\n\t\t\t\t\tcontent: 'Deactivating this template will disable it from being sent.',\r\n\t\t\t\t\tprimaryText: 'Deactivate',\r\n\t\t\t\t\tsecondaryText: 'Cancel',\r\n\t\t\t\t\talwaysOnTop: true\r\n\t\t\t\t};\r\n\r\n\t\t\t\tssModalSvc.showDestructive(deactivateTemplateConfig).then(() => {\r\n\t\t\t\t\trouteVm.loading = true;\r\n\t\t\t\t\trouteVm.loadingMessage = `Deactivating \"${template._name}\"`;\r\n\r\n\t\t\t\t\tssFormTemplatesApi.editActive(template).then(updatedTemplate => {\r\n\t\t\t\t\t\tssSleepHlp.sleep().then(() => {\r\n\t\t\t\t\t\t\trouteVm.refreshData().then(() => {\r\n\t\t\t\t\t\t\t\trouteVm.loading = false;\r\n\t\t\t\t\t\t\t\trouteVm.loadingMessage = null;\r\n\t\t\t\t\t\t\t}).catch(err => {\r\n\t\t\t\t\t\t\t\tssToastHlp.error('There was a problem fetching the form templates', '');\r\n\t\t\t\t\t\t\t\tconsole && console.error && console.error(err);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\t\t\t\t\t\t\r\n\t\t\t\t\t}).catch(err => {\r\n\t\t\t\t\t\tssToastHlp.error(`There was a problem deactivating \"${template._name}\"`, '');\r\n\t\t\t\t\t\tconsole && console.error && console.error(err);\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\tcanShare(template) {\r\n\t\t\t\treturn isIdmAdmin && template.status === 'active' && $scope.org.id === testOrgValue;\r\n\t\t\t},\r\n\r\n\t\t\tshare() {\r\n\t\t\t\tvm.showShare = true;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tssEventSvc.on('fl-share-form-cancel', () => {\r\n\t\t\tvm.showShare = false;\r\n\t\t}, $scope);\r\n\r\n\t}\r\n}\r\n\r\n// #-- END Component (cmp-template-list-form) --# //\r\n// #--------------------------------------------# //\r\n\r\nangular.module('ec-forms-components').directive('cmpTemplateListForm', () => new TemplateListForm(props,\r\n\t'template-list-form'));\r\n","import { Component } from 'base-component';\r\n// #----------------------------------------------# //\r\n// #---- Component (cmp-template-list-packet) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\ttemplate: '='\r\n};\r\n\r\nclass TemplateListPacket extends Component {\r\n\t/*@ngInject*/\r\n\tcontroller($scope, $state, $location, ssAsync, ssPacketsApi, ssModalSvc, ssFormTemplatesApi, ssStatusApi, enumFormTemplateStatus, ssToastHlp) {\r\n\r\n\t\tconst routeVm = $scope.routeVm = $scope.$root.utils.findInParentScope('routeVm', $scope);\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { // eslint-disable-line\r\n\r\n\t\t\tsend(template) {\r\n\t\t\t\t$state.go('base.send', {\r\n\t\t\t\t\tid: template.id,\r\n\t\t\t\t\ttype: 'Packet'\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\ttoggleDetails(packet) {\r\n\t\t\t\tif (!packet.detailsOpen) {\r\n\t\t\t\t\tif (!packet.contents) {\r\n\t\t\t\t\t\tpacket.loading = true;\r\n\t\t\t\t\t\tssAsync(function* () {\r\n\t\t\t\t\t\t\tvar ids;\r\n\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\tpacket.contents = yield ssPacketsApi.get({ id: packet.id });\r\n\t\t\t\t\t\t\t\tids = packet.contents._formTemplateIds;\r\n\t\t\t\t\t\t\t\tpacket.contents.forms = yield ids.map(id => {\r\n\t\t\t\t\t\t\t\t\treturn ssFormTemplatesApi.get({\r\n\t\t\t\t\t\t\t\t\t\tinclude: 'steps,statusHistory',\r\n\t\t\t\t\t\t\t\t\t\tid: id\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t//\tcall the route-level method that gives packet forms the necessary properties\r\n\t\t\t\t\t\t\t\tpacket.contents.forms.forEach(routeVm.extendCommonProps);\r\n\r\n\t\t\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\t\t\tconsole && console.error && console.error(error);\r\n\t\t\t\t\t\t\t} finally {\r\n\t\t\t\t\t\t\t\tpacket.loading = false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tpacket.detailsOpen = !packet.detailsOpen;\r\n\t\t\t},\r\n\r\n\t\t\teditPacket(template) {\r\n\t\t\t\tlet path = `/ec-forms/packet-builder/${template.id}/builder`;\r\n\t\t\t\t$location.url(path);\r\n\t\t\t},\r\n\r\n\t\t\teditForm(form){\r\n\t\t\t\tif (form.status === 'active') {\r\n\t\t\t\t\tvar editTemplateConfig = {\r\n\t\t\t\t\t\ttitle: 'Edit Form Template',\r\n\t\t\t\t\t\tcontent: 'Editing will deactivate and disable it from being sent until it has been reactivated. Prior recipients will not receive changes made.',\r\n\t\t\t\t\t\tprimaryText: 'Edit Template',\r\n\t\t\t\t\t\tsecondaryText: 'Cancel',\r\n\t\t\t\t\t\talwaysOnTop: true\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tssModalSvc.showStandard(editTemplateConfig).then(() => {\r\n\t\t\t\t\t\tform.isPending = true;\r\n\t\t\t\t\t\tform.pendingMessage = 'Deactivating \"' + form._name + '\"';\r\n\r\n\t\t\t\t\t\tssFormTemplatesApi.editActive(form).then((newForm) => {\r\n\t\t\t\t\t\t\t$state.go('base.formBuilder.builder', {\r\n\t\t\t\t\t\t\t\tformId: newForm.id\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}).catch((err) => {\r\n\t\t\t\t\t\t\tssToastHlp.error('There was an error deactivating the form template', '');\r\n\t\t\t\t\t\t\tconsole && console.error && console.error(err);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet path = `/ec-forms/form-builder/${form.id}/builder`;\r\n\t\t\t\t\t$location.url(path);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tpreview(form) {\r\n\t\t\t\tif (ssFlagSvc.checkState('fc-enable-merged-forms-modules')) {\r\n\t\t\t\t\t$state.go('base.formBuilder.preview', {\r\n\t\t\t\t\t\tformId: form.id,\r\n\t\t\t\t\t\treturnTo: $state.current.name\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$location.url(`/ec-forms/form-builder/${form.id}/preview?returnTo=/ec-forms/`);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t/*\r\n\t\t** Disabling code - archiving packets is not currently supported\t\r\n\t\t*/\r\n\r\n\t\t// \tarchive(template) {\r\n\t\t// \t\tvar config = {\r\n\t\t// \t\t\ttitle: 'Archive Packet',\r\n\t\t// \t\t\tcontent: `${template._name} will be removed from this list. The forms within the packet <strong>will not</strong> be archived.`,\r\n\t\t// \t\t\tprimaryText: 'Archive Packet',\r\n\t\t// \t\t\tsecondaryText: 'Cancel'\r\n\t\t// \t\t};\r\n\r\n\t\t// \t\tssModalSvc.showDestructive(config).then(() => {\r\n\r\n\t\t// \t\t\trouteVm.loading = true;\r\n\t\t// \t\t\trouteVm.loadingMessage = 'Archiving \"'+template._name+'\"';\r\n\r\n\t\t// \t\t\tssAsync(function* () {\r\n\t\t// \t\t\t\ttry {\r\n\t\t// \t\t\t\t\tyield ssStatusApi.update({ id: template.id }, {\r\n\t\t// \t\t\t\t\t\tstatusId: enumFormTemplateStatus.archived,\r\n\t\t// \t\t\t\t\t\tfrom: new Date().toISOString()\r\n\t\t// \t\t\t\t\t});\r\n\t\t// \t\t\t\t\tyield routeVm.loadFormTemplates(false);\r\n\t\t// \t\t\t\t\tssToastHlp.success('\"'+template._name+'\" has been archived')\r\n\r\n\t\t// \t\t\t\t} catch(e) {\r\n\t\t// \t\t\t\t\tconsole.error(`error archiving \"${template._name}\"`, e)\r\n\t\t// \t\t\t\t} finally {\r\n\t\t// \t\t\t\t\trouteVm.loading = false;\r\n\t\t// \t\t\t\t\trouteVm.loadingMessage = null;\r\n\t\t// \t\t\t\t}\r\n\t\t// \t\t\t})();\r\n\t\t// \t\t});\r\n\t\t// \t}\r\n\t\t};\r\n\r\n\t}\r\n}\r\n\r\n// #-- END Component (cmp-template-list-packet) --# //\r\n// #----------------------------------------------# //\r\n\r\nangular.module('ec-forms-components').directive('cmpTemplateListPacket', () => new TemplateListPacket(props, 'template-list-packet'));\r\n","function getConfig() {\r\n\t// Define changes to default configuration here.\r\n\t// For complete reference see:\r\n\t// https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_config.html\r\n\t// The toolbar groups arrangement, optimized for a single toolbar row.\r\n    return {\r\n        contentCss: '/text-editor.styl',\r\n        copyFormatting_allowedContexts: ['text'],\r\n        disallowedContent: 'script',\r\n        disableNativeTableHandles: false,\r\n        div_wrapTable: true,\r\n        // extraAllowedContent = 'style;*[id,rel](*)',\r\n        extraPlugins: 'autocomplete,textmatch,richcombo,placeholder,placeholder_select,sharedspace,justify,preview,autogrow,format',\r\n     // htmlEncodeOutput: true,\r\n        removeButtons: 'Anchor,Source,SpecialChar,HorizontalRule,Maximize',\r\n        removeDialogTabs: 'link:advanced',\r\n        toolbar: [{ \r\n            name: 'basicstyles',\r\n            groups: [ 'basicstyles', 'cleanup' ],\r\n            items: [ 'Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', '-', 'RemoveFormat' ]\r\n        },{\r\n            name: 'paragraph',\r\n            groups: [ 'list', 'indent', 'align' ],\r\n            items: [ 'NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock' ]\r\n        },\r\n        '/',\r\n        {\r\n            name: 'others',\r\n            items: [ 'placeholder_select' ]\r\n        },{\r\n            name: 'links',\r\n            items: [ 'Link', 'Unlink' ]\r\n        },{\r\n            name: 'insert',\r\n            groups: ['insert' ],\r\n            items: [ 'Table', 'HorizontalRule']\r\n        },{\r\n            name: 'styles',\r\n            items: [ 'Format', 'FontSize', 'TextColor' ]\r\n        }],\r\n        startupFocus: 'start',\r\n        uiColor: '#e5e9ec',\r\n        // toolbarGroups: [\r\n        //     { name: 'basicstyles', groups: [ 'basicstyles', 'cleanup' ] },\r\n        //     { name: 'insert' },\r\n        //     { name: 'links' },\r\n        //     // { name: 'document', groups: [ 'mode' ] },\r\n        //     // { name: 'clipboard', groups: [ 'clipboard', 'undo' ] },\r\n        //     // { name: 'editing', groups: [ 'find', 'selection', 'spellchecker' ] },\r\n        //     // { name: 'forms' },\r\n        //     { name: 'paragraph', groups: [ 'list', 'indent', 'align' ] },\r\n        //     { name: 'styles' },\r\n        //     // { name: 'colors' },\r\n        //     { name: 'tools' },\r\n        //     { name: 'holders', groups: ['placeholder_select']}\r\n        //     // { name: 'others' },\r\n        // ],\r\n\r\n    }\r\n};\r\n\r\nexport { getConfig }","function getPlaceholders() {\r\n\t// Define changes to default configuration here.\r\n\t// For complete reference see:\r\n\t// https://ckeditor.com/docs/ckeditor4/latest/api/CKEDITOR_config.html\r\n\t// The toolbar groups arrangement, optimized for a single toolbar row.\r\n    const PLACEHOLDER_TOKENS = [{\r\n        title: 'Prefix',\r\n        value: 'Employee.Title'\r\n    },{\r\n        title: 'First Name',\r\n        value: 'Employee.FirstName'\r\n    },{\r\n        title: 'Middle Name',\r\n        value: 'Employee.MiddleName'\r\n    },{\r\n        title: 'Last Name',\r\n        value: 'Employee.LastName'\r\n    },{\r\n        title: 'Suffix',\r\n        value: 'Employee.Suffix'\r\n    },{\r\n        title: 'Other First Name',\r\n        value: 'Employee.AliasFirstName'\r\n    },{\r\n        title: 'Other Middle Name',\r\n        value: 'Employee.AliasMiddleName'\r\n    },{\r\n        title: 'Other Last Name',\r\n        value: 'Employee.AliasLastName'\r\n    },{\r\n        title: 'Address Line 1',\r\n        value: 'Employee.Addresses.Primary.Street1'\r\n    },{\r\n        title: 'Address Line 2',\r\n        value: 'Employee.Addresses.Primary.Street2'\r\n    },{\r\n        title: 'City',\r\n        value: 'Employee.Addresses.Primary.City'\r\n    },{\r\n        title: 'State',\r\n        value: 'Employee.Addresses.Primary.State'\r\n    },{\r\n        title: 'Zip Code',\r\n        value: 'Employee.Addresses.Primary.Zip'\r\n    },{\r\n        title: 'Work Phone Number',\r\n        value: 'Employee.PhoneNumbers.Work.Number'\r\n    },{\r\n        title: 'Work Extension',\r\n        value: 'Employee.PhoneNumbers.Work.Extension'\r\n    },{\r\n        title: 'Personal Phone Number',\r\n        value: 'Employee.PhoneNumbers.Personal.Number'\r\n    },{\r\n        title: 'Other Phone Number',\r\n        value: 'Employee.PhoneNumbers.Other.Number'\r\n    },{\r\n        title: 'Work Email Address',\r\n        value: 'Employee.Emails.Work.EmailAddress'\r\n    },{\r\n        title: 'Personal Email Address',\r\n        value: 'Employee.Emails.Personal.EmailAddress'\r\n    },{\r\n        title: 'Birth Date',\r\n        value: 'Employee.BirthDateUtc'\r\n    },{\r\n        title: 'SSN',\r\n        value: 'Employee.SSN'\r\n    },{\r\n        title: 'External ID',\r\n        value: 'Employee.ExternalId'\r\n    },{\r\n        title: 'Marital Status',\r\n        value: 'Employee.MaritalStatus'\r\n    },{\r\n        title: 'Gender',\r\n        value: 'Employee.Gender'\r\n    },{\r\n        title: 'Ethnicity',\r\n        value: 'Employee.Ethnicity'\r\n    },{\r\n        title: 'Race',\r\n        value: 'Employee.Race'\r\n    },{\r\n        title: 'Hire Date',\r\n        value: 'Employee.HireDate'\r\n    },{\r\n        title: 'Seniority Date',\r\n        value: 'Employee.SeniorityDate'\r\n    },{\r\n        title: 'Tenure Date',\r\n        value: 'Employee.TenureDate'\r\n    },{\r\n        title: 'Primary Assignment - Start Date',\r\n        value: 'Employee.Assignments.Primary.StartDateTimeUTC'\r\n    },{\r\n        title: 'Primary Assignment - End Date',\r\n        value: 'Employee.Assignments.Primary.EndDateTimeUTC'\r\n    },{\r\n        title: 'Primary Assignment - Employment Group',\r\n        value: 'Employee.Assignments.Primary.JobType.EmploymentGroup.Name',\r\n        hideForHrms: true\r\n    },{\r\n        title: 'Primary Assignment - Job Type',\r\n        value: 'Employee.Assignments.Primary.JobType.Name'\r\n    },{\r\n        title: 'Primary Assignment - Position Name',\r\n        value: 'Employee.Assignments.Primary.Name'\r\n    },{\r\n        title: 'Primary Assignment - Location',\r\n        value: 'Employee.Assignments.Primary.Location.Name'\r\n    },{\r\n        title: 'Primary Assignment - Department',\r\n        value: 'Employee.Assignments.Primary.Department.Name'\r\n    },{\r\n        title: 'Primary Assignment - External ID',\r\n        value: 'Employee.Assignments.Primary.ExternalId',\r\n    },{\r\n        title: 'Primary Assignment - FTE',\r\n        value: 'Employee.Assignments.Primary.FTE',\r\n        hideForHrms: true\r\n    },{\r\n        title: 'Primary Assignment - Hours Per Day',\r\n        value: 'Employee.Assignments.Primary.HoursPerDay',\r\n        hideForHrms: true\r\n    },{\r\n        title: 'Primary Assignment - Days Per Year',\r\n        value: 'Employee.Assignments.Primary.WorkDays',\r\n        hideForHrms: true\r\n    },{\r\n        title: 'Primary Assignment - Pay Schedule',\r\n        value: 'Employee.Assignments.Primary.PaySchedule.Name',\r\n        hideForHrms: true\r\n    },{\r\n        title: 'Primary Assignment - Pay Lane',\r\n        value: 'Employee.Assignments.Primary.PayLane.Name',\r\n        hideForHrms: true\r\n    },{\r\n        title: 'Primary Assignment - Pay Step',\r\n        value: 'Employee.Assignments.Primary.PayStep.Name',\r\n        hideForHrms: true\r\n    },{\r\n        title: 'Primary Assignment - # Pays Per Year',\r\n        value: 'Employee.Assignments.Primary.PayPeriodsPerYear',\r\n        hideForHrms: true\r\n    },{\r\n        title: 'Primary Assignment - Pay Per Period',\r\n        value: 'Employee.Assignments.Primary.PayPerPeriod',\r\n        hideForHrms: true\r\n    },{\r\n        title: 'Primary Assignment - Salary',\r\n        value: 'Employee.Assignments.Primary.Salary',\r\n        hideForHrms: true\r\n    },{\r\n        title: 'Primary Assignment - Sick Days Per Year',\r\n        value: 'Employee.Assignments.Primary.SickDaysPerSchoolYear',\r\n        hideForHrms: true\r\n    },{\r\n        title: 'Primary Assignment - Personal Days Per Year',\r\n        value: 'Employee.Assignments.Primary.PersonalDaysPerSchoolYear',\r\n        hideForHrms: true\r\n    },{\r\n        title: 'Primary Assignment - Vacation Days Per Year',\r\n        value: 'Employee.Assignments.Primary.VacationDaysPerSchoolYear',\r\n        hideForHrms: true\r\n    },{\r\n        title: 'Primary Assignment - Paid Holidays Per Year',\r\n        value: 'Employee.Assignments.Primary.PaidHolidaysPerSchoolYear',\r\n        hideForHrms: true\r\n    },{\r\n        title: 'Primary Assignment - Retirement System',\r\n        value: 'Employee.Assignments.Primary.RetirementSystem.Name',\r\n        hideForHrms: true\r\n    },{\r\n        title: 'Emergency Contact - Name',\r\n        value: 'Employee.EmergencyContacts.Primary.ContactName'\r\n    },{\r\n        title: 'Emergency Contact - Relationship',\r\n        value: 'Employee.EmergencyContacts.Primary.RelationshipType'\r\n    },{\r\n        title: 'Emergency Contact - Phone',\r\n        value: 'Employee.EmergencyContacts.Primary.PrimaryPhone'\r\n    },{\r\n        title: 'Emergency Contact - Alternate Phone',\r\n        value: 'Employee.EmergencyContacts.Primary.AlternatePhone'\r\n    },{\r\n        title: 'Secondary Contact - Name',\r\n        value: 'Employee.EmergencyContacts.Secondary.ContactName'\r\n    },{\r\n        title: 'Secondary Contact - Relationship',\r\n        value: 'Employee.EmergencyContacts.Secondary.RelationshipType'\r\n    },{\r\n        title: 'Secondary Contact - Phone',\r\n        value: 'Employee.EmergencyContacts.Secondary.PrimaryPhone'\r\n    },{\r\n        title: 'Secondary Contact - Alternate Phone',\r\n        value: 'Employee.EmergencyContacts.Secondary.AlternatePhone'\r\n    }]\r\n\r\n    // Add some more props (needed for autocomplete) and return the final collection\r\n    return PLACEHOLDER_TOKENS.map((p, i) => { \r\n        let obj = Object.assign(p, { id: i+1});\r\n        obj['name'] = obj.title.toLowerCase().replace('/s/g', '');\r\n        return obj;\r\n    });\r\n};\r\n\r\nexport { getPlaceholders }","const PLUGIN_DEF = {\r\n    name: 'placeholder_select',\r\n    definition: {\r\n\t\trequires : ['richcombo'],\r\n\t\tinit : function( editor ) {\r\n\t\t\t//  array of placeholders to choose from that'll be inserted into the editor\r\n\t\t\tvar placeholders = [];\r\n\t\t\t\r\n\t\t\t// init the default config - empty placeholders\r\n\t\t\tvar defaultConfig = {\r\n\t\t\t\tformat: '[[%placeholder%]]',\r\n\t\t\t\tplaceholders : []\r\n\t\t\t};\r\n\t\r\n\t\t\t// merge defaults with the passed in items\t\t\r\n\t\t\tvar config = CKEDITOR.tools.extend(defaultConfig, editor.config.placeholder_select || {}, true);\r\n\t\r\n\t\t\t// run through an create the set of items to use\r\n\t\t\tfor (var i = 0; i < config.placeholders.length; i++) {\r\n\t\t\t\t// get our potentially custom placeholder format\r\n\t\t\t\tvar placeholder = config.format.replace('%placeholder%', config.placeholders[i].value);\r\n\t\t\t\tplaceholders.push([placeholder, config.placeholders[i].title]);\r\n\t\t\t}\r\n\t\r\n\t\t\t// add the menu to the editor\r\n\t\t\teditor.ui.addRichCombo('placeholder_select', {\r\n\t\t\t\tlabel: \t\t'Insert placeholder',\r\n\t\t\t\ttitle: \t\t'Insert placeholder',\r\n\t\t\t\tvoiceLabel: 'Insert placeholder',\r\n\t\t\t\tclassName: \t'cke_format',\r\n\t\t\t\tmultiSelect:false,\r\n\t\t\t\tpanel: {\r\n\t\t\t\t\tcss: [ editor.config.contentsCss, CKEDITOR.skin.getPath('editor') ],\r\n\t\t\t\t\tvoiceLabel: editor.lang.panelVoiceLabel\r\n\t\t\t\t},\r\n\t\r\n\t\t\t\tinit: function() {\r\n\t\t\t\t\tthis.startGroup( \"Insert placeholder\" );\r\n\t\t\t\t\tfor (var i in placeholders) {\r\n\t\t\t\t\t\tthis.add(placeholders[i][0], placeholders[i][1], placeholders[i][1]);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\r\n\t\t\t\tonClick: function( value ) {\r\n\t\t\t\t\teditor.focus();\r\n\t\t\t\t\teditor.fire( 'saveSnapshot' );\r\n\t\t\t\t\teditor.insertHtml(value);\r\n\t\t\t\t\teditor.fire( 'saveSnapshot' );\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n};\r\n\r\nexport { PLUGIN_DEF }","import {Component} from 'base-component';\r\nimport {getConfig} from './ckeditorConfig.js';\r\nimport {getPlaceholders} from './placeholders.js';\r\n\r\n// #-------------------------------------# //\r\n// #---- Component (cmp-text-editor) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tfield: '=',\r\n\tdisabled: '=',\r\n\tmodel: '='\r\n};\r\n\r\nconst BUILDER_URL_REGEX = RegExp('\\/ec-forms\\/form-builder\\/[0-9A-Za-z-]+\\/builder');\r\n\r\n// const config = {\r\n// \trequire: '^ngModel',\r\n// \treplace: false\r\n// }\r\n\r\nfunction textEditor ($location, ssArrayHlp, fieldsHlp, ssFlagSvc) {\r\n\r\n\tclass TextEditor extends Component {\r\n\t\t/*@ngInject*/\r\n\t\tcontroller($scope, $sce) {\r\n\t\t\t// view model for tracking state\r\n\t\t\tconst vm = $scope.vm = {\r\n\t\t\t\tcontentVal: $scope.field.step ? $scope.field.step.formFieldValues[$scope.field.id] : $scope.field._label,\r\n\t\t\t\teditorId: uniqueId(),\r\n\t\t\t\teditorConfig: getConfig(),\r\n\t\t\t\tshowPlaceholder: false,\r\n\t\t\t\thrmsEnabled: false\r\n\t\t\t};\r\n\r\n\t\t\t// behavior that needs to be bound to the view\r\n\t\t\tconst go = $scope.go = {\r\n\t\t\t\tonReady: function () {\r\n\t\t\t\t},\r\n\t\t\t};\r\n\r\n\t\t\t$scope.SCE = $sce;\r\n\t\t\t$scope.editor = null;\r\n\r\n\t\t\tif($scope.field._tokenFields == null) {\r\n\t\t\t\t$scope.field['_tokenFields'] = [];\r\n\t\t\t}\r\n\r\n\t\t\t/* \r\n\t\t\tDetermine if the field is \"active\"; field should ONLY be active in the preview/instance when there's content, but can be active in the template when there's no content in order to show the placeholder.\r\n\t\t\t*/\r\n\t\t\tif(!BUILDER_URL_REGEX.test($location.path())) {\r\n\t\t\t\t$scope.field._active = !!$scope.field._label.length;\r\n\t\t\t\t$scope.field.$$resetChangesDetected();\r\n\t\t\t}\r\n\r\n\t\t\t$scope.placeholderTokens = getFilteredPlaceholders();\r\n\r\n\t\t\t// Check if the org is HRMS enabled, if so remove specific assignment fields\r\n\t\t\tfunction getFilteredPlaceholders() {\r\n\t\t\t\tlet placeholders = getPlaceholders();\r\n\t\t\t\tif (ssFlagSvc.checkState('hrms')){\r\n\t\t\t\t\tvar filteredPlaceHolders = placeholders.filter(p => {\r\n\t\t\t\t\t\treturn !p.hideForHrms;\r\n\t\t\t\t\t})\r\n\t\t\t\t\treturn filteredPlaceHolders;\r\n\t\t\t\t}\r\n\t\t\t\treturn placeholders;\r\n\t\t\t}\r\n\r\n\t\t\tfunction uniqueId() {\r\n\t\t\t\treturn 'id-' + Math.random().toString(36).substr(2, 16);\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tlink(scope, elem, attr, ngModel) {\r\n\r\n\t\t\tlet editorElem;\r\n\t\t\tconst CONTENT_PLACEHOLDER = '<div class=\"no-content-placeholder\"><h5>Text Editor</h5><p><b>Click here to add content</b></p>';\r\n\t\t\tconst TOKEN_START = '[[';\r\n\t\t\tconst TOKEN_END = ']]';\r\n\t\t\t/*\r\n\t\t\t**\tValid token delimiters consist of 2 or more of the following characters:\r\n\t\t\t**\t'[', '], '{', '}', '|'\r\n\t\t\t*/\r\n\t\t\tconst IS_VALID_START_TOKEN = /[\\[\\{\\|]{2}/.test(TOKEN_START);\r\n\t\t\tconst IS_VALID_END_TOKEN = /[\\]\\}\\|]{2}/.test(TOKEN_END);\r\n\t\t\tconst TOKEN_REGEX = `${TOKEN_START}(.*?)${TOKEN_END}`;\r\n\t\t\tconst ESC_TOKEN_REGEX = new RegExp(escapeRegExp(TOKEN_REGEX), \"g\");\r\n\r\n\t\t\telem.ready(() => {\r\n\t\t\t\teditorElem = elem[0].querySelector('[contenteditable]');\r\n\t\t\t\tngModel = angular.element(editorElem).controller('ngModel');\r\n\r\n\t\t\t\t// start off in edit mode if the field hasn't been saved\r\n\t\t\t\tif(!scope.field.id) {\r\n\t\t\t\t\tinitEditor();\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// otherwise, show the content or placeholder\r\n\t\t\t\t\tangular.element(editorElem).html(scope.SCE.trustAsHtml(scope.vm.contentVal || CONTENT_PLACEHOLDER));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// event propagation will occur in order to display the properties panel\r\n\t\t\telem.on('click', (evt) => {\r\n\t\t\t\tscope.$apply(() => {\r\n\t\t\t\t\t// if this is a form instance, return\t\r\n\t\t\t\t\tif (scope.field.step) { return; }\r\n\t\t\t\t\t//\tIf this editor is already enabled and has data, return;\r\n\t\t\t\t\tif (editorExists()) { return; }\r\n\t\t\t\t\t// initilaize the editor\r\n\t\t\t\t\tinitEditor();\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\tscope.$watch('model', (nv) => {\r\n\t\t\t\tangular.element(editorElem).html(scope.SCE.trustAsHtml(nv));\r\n\t\t\t});\r\n\r\n\t\t\t/* \r\n\t\t\twe need to watch this event so we can destroy editor instances when other non text editor field groups or steps are selected.\r\n\t\t\t*/\r\n\t\t\tscope.$on('$destroy', scope.$root.$on('component-properties', (event, type, data) => {\r\n\t\t\t\tif(type && type !== 'cmp-properties-text-editor') destroyInstances();\r\n\t\t\t}));\r\n\r\n\t\t\t// Checks to see if a particular instance name exists and it has data\r\n\t\t\tfunction editorExists() {\r\n\t\t\t\treturn CKEDITOR.currentInstance && CKEDITOR.currentInstance.name === scope.vm.editorId;\r\n\t\t\t}\r\n\r\n\t\t\t// destroys all instances except those without any content\r\n\t\t\tfunction destroyInstances() {\r\n\t\t\t\tObject.values(CKEDITOR.instances).forEach((instance) => {\r\n\t\t\t\t\tinstance.destroy();\r\n\t\t\t\t\tinstance = null;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tfunction initEditor(config = {}) {\r\n\r\n\t\t\t\t//\tdestroy the other editor instances to force them into 'preview' mode\r\n\t\t\t\tdestroyInstances();\r\n\r\n\t\t\t\t/* here we intilaize an editor type - there a multiple varieties */\r\n\r\n\t\t\t\t/* INLINE editor with shared space for toolbar */\r\n\t\t\t\tCKEDITOR.disableAutoInline = true;\r\n\r\n\t\t\t\tscope.editor = CKEDITOR.inline(editorElem, Object.assign(scope.vm.editorConfig, {\r\n\t\t\t\t\tsharedSpaces: {\r\n\t\t\t\t\t\ttop: `${scope.vm.editorId}-top`\r\n\t\t\t\t\t},\r\n\t\t\t\t\tplaceholder_select: {\r\n\t\t\t\t\t\tformat: `${TOKEN_START}%placeholder%${TOKEN_END}`,\r\n\t\t\t\t\t\tplaceholders : scope.placeholderTokens\r\n\t\t\t\t\t},\r\n\t\t\t\t\tremovePlugins: 'floatingspace,maximize,resize'\r\n\t\t\t\t}));\r\n\r\n\t\t\t\t/* FIXED editor */\r\n\t\t\t\t// scope.editor = CKEDITOR.replace(editorElem, Object.assign(scope.vm.editorConfig, {\r\n\t\t\t\t// \tautoGrow_onStartup: true,\r\n\t\t\t\t// \tautoGrow_maxHeight: '999999',\r\n\t\t\t\t// \ttoolbarCanCollapse: true,\r\n\t\t\t\t// \theight: 250,\r\n\t\t\t\t// \tplaceholder_select: {\r\n\t\t\t\t// \t\tformat: `${TOKEN_START}%placeholder%${TOKEN_END}`,\r\n\t\t\t\t// \t\tplaceholders : getPlaceholders()\r\n\t\t\t\t// \t},\r\n\t\t\t\t// \tresize_minHeight: 300,\r\n\t\t\t\t// }));\r\n\r\n\t\t\t\tif (!ngModel) return;\r\n\r\n\t\t\t\tscope.editor.on('instanceReady', function (evt) {\r\n\t\t\t\t\tscope.editor.setData(ngModel.$viewValue);\r\n\t\t\t\t\tinitAutoComplete(evt);\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// get the current set of placeholders (if they exist)\r\n\t\t\t\tlet currentTokens = ngModel.$viewValue.toString().match(ESC_TOKEN_REGEX) || [];\r\n\r\n\t\t\t\tfunction updateModel() {\r\n\t\t\t\t\tscope.$apply(function () {\r\n\t\t\t\t\t\tngModel.$setViewValue(scope.editor.getData());\r\n\t\t\t\t\t\tlet tokens = ngModel.$modelValue.match(ESC_TOKEN_REGEX) || [];\r\n\t\t\t\t\t\t// create tokens only if the quantity has changed\r\n\t\t\t\t\t\tif(tokens.length !== currentTokens.length) {\r\n\t\t\t\t\t\t\tcreateTokenFields(tokens);\r\n\t\t\t\t\t\t\tcurrentTokens = tokens;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscope.editor.on('destroy', () => {\r\n\t\t\t\t//\twhen an editor is destroyed, determine if we should show the placeholder or not based on content length\r\n\t\t\t\t\tlet content = !scope.field._label.length ? CONTENT_PLACEHOLDER : ngModel.$viewValue;\r\n\t\t\t\t\tangular.element(editorElem).html(scope.SCE.trustAsHtml(content));\r\n\t\t\t\t\tscope.editor = null;\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\tscope.editor.on('change', updateModel);\r\n\t\t\t\t// scope.editor.on('key', updateModel);\r\n\t\t\t\t// scope.editor.on('dataReady', updateModel);\r\n\r\n\t\t\t\tngModel.$render = function (value) {\r\n\t\t\t\t\tscope.editor.setData(ngModel.$viewValue);\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// disallow drag and drop into an editor\r\n\t\t\t\tscope.editor.on( 'drop', function( evt ) {\r\n\t\t\t\t\tconsole && console.log && console.log(evt.data);\r\n\t\t\t\t\tconsole && console.log && console.log(evt.data.dragRange.startContainer.getName());\r\n\t\t\t\t\t// evt.cancel();\r\n\t\t\t\t});\r\n\r\n\t\t\t};\r\n\r\n\t\t\tfunction createTokenFields(tokens = []) {\r\n\t\t\t\ttokens = Array.isArray(tokens) ? tokens : [];\r\n\t\t\t\tlet tokenFieldDefs = ssArrayHlp.unique(tokens).map((token) => {\r\n\t\t\t\t\tlet tokenVal = token.replace(/\\[\\[|\\]\\]/g, '');\r\n\t\t\t\t\tlet fieldDef = fieldsHlp.allFields.find((field) => {\r\n\t\t\t\t\t\treturn field._fieldDefId && field._externalData && field._externalData === tokenVal;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tfieldsHlp.updateFieldAttributes(fieldDef);\r\n\t\t\t\t\tfieldsHlp.updateFieldOptions(fieldDef);\r\n\t\t\t\t\tfieldDef['tokenField'] = true;\r\n\t\t\t\t\tfieldDef['fieldGroup'] = 'tokenFields';\r\n\t\t\t\t//\tWe need to manually strip off the underscores since token fields are not a JSON API model. This is a direct lift from line 46 of ssApiSvc\r\n\t\t\t\t\tlet newFieldDef = {};\r\n\t\t\t\t\tObject.keys(fieldDef).forEach((k) => {\r\n\t\t\t\t\t\tlet key = k;\r\n\t\t\t\t\t\tif (k.startsWith('_')) {\r\n\t\t\t\t\t\t\tkey = k.substr(1);\r\n\t\t\t\t\t\t\tnewFieldDef[key] = fieldDef[k];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn newFieldDef;\r\n\t\t\t\t});\r\n\t\t\t\tscope.field._tokenFields = tokenFieldDefs;\r\n\t\t\t}\r\n\t\t\r\n\t\t\tfunction escapeRegExp(string) {\r\n\t\t\t\tif(IS_VALID_START_TOKEN && IS_VALID_END_TOKEN) {\r\n\t\t\t\t\treturn string.replace(/[\\[\\]\\{\\}\\|]/g, '\\\\$&');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.error('token delimiters must match approved format (\"[[\",\"]]\",\"{{\",\"}}\",\"||\")');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfunction textTestCallback(range) {\r\n\t\t\t\tif (!range.collapsed) {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t\treturn CKEDITOR.plugins.textMatch.match(range, matchCallback);\r\n\t\t\t}\r\n\r\n\t\t  // 'text' param here is the 'text' property of the object returned from 'testTestCallback' function\r\n\t\t\tfunction matchCallback(text, offset) {\r\n\t\t\t\tvar pattern = /\\[{2}([A-Za-z]\\s*|\\])*$/,\r\n\t\t\t\tmatch = text.slice(0, offset)\r\n\t\t\t\t.match(pattern);\r\n\r\n\t\t\t\tif (!match) return null;\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tstart: match.index,\r\n\t\t\t\t\tend: offset\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t  \r\n\t\t\tfunction dataCallback(matchInfo, callback) {\r\n\t\t\t\tvar data = scope.placeholderTokens.filter(item => {\r\n\t\t\t\t\tlet textOnlyQuery = matchInfo.query.replace(/\\[{2}/, '');\r\n\t\t\t\t\tlet regExpStr = `${textOnlyQuery}`;\r\n\t\t\t\t\tlet regExp = new RegExp(regExpStr, \"gi\");\r\n\t\t\t\t\treturn regExp.test(item.name);\r\n\t\t\t\t});\r\n\t\t\t\tcallback(data);\r\n\t\t\t}\r\n\r\n\t\t\tfunction initAutoComplete(evt) {\r\n\t\t\t\tvar itemTemplate = '<li data-id=\"{id}\">{title}</li>',\r\n\t\t\t\toutputTemplate = `${TOKEN_START}{value}${TOKEN_END}`;\r\n\t\r\n\t\t\t\tvar autocomplete = new CKEDITOR.plugins.autocomplete(evt.editor, {\r\n\t\t\t\t\ttextTestCallback: textTestCallback,\r\n\t\t\t\t\tdataCallback: dataCallback,\r\n\t\t\t\t\titemTemplate: itemTemplate,\r\n\t\t\t\t\toutputTemplate: outputTemplate\r\n\t\t\t\t});\r\n\r\n\t\t\t\tautocomplete.getHtmlToInsert = function(item) {\r\n\t\t\t\t\treturn this.outputTemplate.output(item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tCKEDITOR.on(\"instanceReady\", function (evt) {\r\n\r\n\t\t\t\tlet editor = evt.editor;\r\n\r\n\t\t\t\t// CKEDITOR.stylesSet.add( 'styleSet-' + editor.id, [\r\n\t\t\t\t// \t{ name: 'Heading 1', element: 'h1', styles: { 'color': 'black' } },\r\n\t\t\t\t// \t{ name: 'Heading 2' , element: 'h2', styles: { 'color': 'black' } },\r\n\t\t\t\t// \t{ name: 'CSS Style', element: 'span', attributes: { 'class': 'my_style' } },\r\n\t\t\t\t// \t{ name: 'Marker: Yellow', element: 'span', styles: { 'background-color': 'Yellow' } }\r\n\t\t\t\t// ] );\r\n\r\n\t\t\t\t/*\r\n\t\t\t\t  editor.on('dialogShow', (dialogShowEvent) => {\r\n\t\t\t\t\tconsole && console.log && console.log(dialogShowEvent.data);\r\n\t\t\t\t\tvar name = dialogShowEvent.data.getName();\r\n\t\t\t\t\tif(name === 'tableProperties') {\r\n\t\t\t\t\t\tlet spacing = dialogShowEvent.data._.contents.info.txtCellSpace;\r\n\t\t\t\t\t\tconsole && console.log && console.log(spacing);\r\n\t\t\t\t\t\tlet textCellSpace = dialogShowEvent.data.getContentElement('info', 'txtCellSpace');\r\n\t\t\t\t\t\tconsole && console.log && console.log(textCellSpace);\r\n\t\t\t\t\t\tlet contents = dialogShowEvent.data.definition.getContents();\r\n\t\t\t\t\t\tconsole && console.log && console.log(contents);\r\n\t\t\t\t\t\t// contents.dialogShowEvent.data.definition.removeButton('txtCellSpace');\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t*/\r\n\t\t\t});\r\n\r\n\t\t}\r\n\t}\r\n\r\n\treturn new TextEditor(props, 'text-editor');\r\n\r\n}\r\n\r\n// #-- END Component (cmp-text-editor) --# //\r\n// #-------------------------------------# //\r\nangular.module('ec-forms-components').directive('cmpTextEditor', textEditor);\r\n// angular.module('super-suit').requires.push('ng.ckeditor');\r\n","import {Component} from 'base-component';\r\n// #--------------------------------------------# //\r\n// #---- Component (cmp-tracked-form-group) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tsearch: '=',\r\n\tsentBySort: '=',\r\n\tsortBy: '=',\r\n\tcategory: '=',\r\n\ttype: '@',\r\n\tendpoint: '&',\r\n\tlocation: '=',\r\n\tcount: '=?',\r\n\templId: '='\r\n};\r\n\r\nclass TrackedFormGroup extends Component {\r\n\t/*@ngInject*/\r\n\tcontroller($scope, $location, ssAsync, ssEnum, ssFormInstancesApi, ssStorage, ssToastHlp, ssDateByOrgHlp, ssDateHlp, ssDueDateHlp) {\r\n\t\t\r\n\t\tconst routeVm = $scope.routeVm = $scope.$root.utils.findInParentScope('routeVm', $scope);\r\n\r\n\t\tconst pageSize = 50;\r\n\t\tvar currentPage = 0;\r\n\t\tvar initialLoad = true;\r\n\t\tvar formsAndPackets = [];\r\n\r\n\t\tconst vm = $scope.vm = { // eslint-disable-line\r\n\t\t\tloading: false,\r\n\t\t\tshowInfScroll: false,\r\n\t\t\tformsAndPackets: []\r\n\t\t};\r\n\r\n\t\tconst go = $scope.go = { // eslint-disable-line\r\n\r\n\t\t\t//refresh the data when a form status is changed (archive, complete)\r\n\t\t\trefreshData: ssAsync(function* (form) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tformsAndPackets = vm.formsAndPackets = [];\r\n\t\t\t\t\tcurrentPage = 0;\r\n\t\t\t\t\tyield fetchFormData();\r\n\t\t\t\t\tyield fetchFormCounts();\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tconsole && console.error && console.error('Error getting forms', e);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t};\r\n\r\n\t//\tFunction to handle scrolling\r\n\t\t$scope.scrollData = function scrollData() {\r\n\t\t\tif (vm.scrolling) { return; }\r\n\t\t\tvm.scrolling = true;\r\n\t\t\tfetchFormData();\r\n\t\t}\r\n\r\n \t//\trefresh the counts\r\n\t\tfunction fetchFormCounts() {\r\n\t\t\t//\tabort if a call is already in progress\r\n\t\t\tif (routeVm.getFormCountsPromise != null) {\r\n\t\t\t\trouteVm.getFormCountsPromise.$abort();\r\n\t\t\t\trouteVm.getFormCountsPromise = null;\r\n\t\t\t}\r\n\r\n\t\t\trouteVm.getFormCountsPromise = ssAsync(function* () {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tlet filters = {\r\n\t\t\t\t\t\t'from': routeVm.dateSent.from.toISOString(),\r\n\t\t\t\t\t\t'to': routeVm.dateSent.to.toISOString()\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t//\tretrieve any stored filters from localstorage\r\n\t\t\t\t\tlet storedFilters = ssStorage.load('trackFormsFilters');\r\n\t\t\t\t\t// set the scope properties to values saved in localstorage if they exist and also if this the first time the data is being fetched\r\n\t\t\t\t\tif (initialLoad && storedFilters) {\r\n\t\t\t\t\t\t$scope.category = storedFilters[0].category;\r\n\t\t\t\t\t\t$scope.search = storedFilters[0].search;\r\n\t\t\t\t\t\t$scope.location = storedFilters[0].location;\r\n\t\t\t\t\t\t$scope.sentBySort = storedFilters[0].sentby;\r\n\t\t\t\t\t\t$scope.sortBy = storedFilters[0].sort;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Set endpoint search filter\r\n\t\t\t\t\tif ($scope.search != null && $scope.search.length > 0) {\r\n\t\t\t\t\t\tfilters['filter[search]'] = $scope.search;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Set endpoint location filter\r\n\t\t\t\t\tif ($scope.location != null && $scope.location !== '-1') {\r\n\t\t\t\t\t\tfilters['filter[locationIds]'] = $scope.location;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Set endpoint sort\r\n\t\t\t\t\tif ($scope.sortBy === 'recentlysent') {\r\n\t\t\t\t\t\tfilters['sort['+$scope.sortBy+']'] = 'desc';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tfilters['sort['+$scope.sortBy+']'] = 'asc';\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Set endpoint 'sent by' sort\r\n\t\t\t\t\tif ($scope.sentBySort != null && $scope.sentBySort !== '0') {\r\n\t\t\t\t\t\tdelete filters['filter[formadministrator]'];\r\n\t\t\t\t\t\tdelete filters['filter[creatorId]'];\r\n\t\t\t\t\t\tfilters['filter['+$scope.sentBySort+']'] = $scope.emplId;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (resolveMethod() !== null) {\r\n\t\t\t\t\t\tfilters['resolvemethod'] = resolveMethod();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\trouteVm.counts = yield ssFormInstancesApi.getFormCounts(filters);\r\n\t\t\t\t} catch(e) {\r\n\t\t\t\t\tssToastHlp.warn('There was a problem getting the total counts for each section. Try refreshing your browser.', 'Form Counts');\r\n\t\t\t\t\tconsole && console.log && console.log('Error getting form counts', e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\trouteVm.getFormCountsPromise = null;\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t}\r\n\r\n\t\tfunction resolveMethod() {\r\n\t\t\tconst resolveMethod = $location.search().resolvemethod;\r\n\r\n\t\t\tif (resolveMethod === 'ReadModel' || resolveMethod === 'Mongo') {\r\n\t\t\t\treturn resolveMethod;\r\n\t\t\t} else {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t// refresh the data\r\n\t\tfunction fetchFormData() {\r\n\t\t\tvm.loading = true;\r\n\r\n\t\t\tif (routeVm.getFormsPromise != null) {\r\n\t\t\t\trouteVm.getFormsPromise.$abort();\r\n\t\t\t\trouteVm.getFormsPromise = null;\r\n\t\t\t}\r\n\r\n\t\t\trouteVm.getFormsPromise = ssAsync(function* () {\r\n\t\t\t\ttry {\r\n\t\t\t\t//\tupdate infinite scroll\r\n\t\t\t\t\tcurrentPage++;\r\n\t\t\t\t\tvar offset = (currentPage - 1) * pageSize;\r\n\r\n\t\t\t\t//\tget the passed in endpoint object\r\n\t\t\t\t\tvar endpoint = $scope.endpoint();\r\n\r\n\t\t\t\t//\tadd the limit and offset queries to the config object\r\n\t\t\t\t\tendpoint.config.limit = pageSize;\r\n\t\t\t\t\tendpoint.config.offset = offset;\r\n\r\n\t\t\t\t//\tretrieve any stored filters from localstorage\r\n\t\t\t\t\tlet storedFilters = ssStorage.load('trackFormsFilters');\r\n\t\t\t\t//\tset the scope properties to values saved in localstorage if they exist and also if this the first time the data is being fetched\r\n\t\t\t\t\tif (initialLoad && storedFilters) {\r\n\t\t\t\t\t\t$scope.category = storedFilters[0].category;\r\n\t\t\t\t\t\t$scope.search = storedFilters[0].search;\r\n\t\t\t\t\t\t$scope.location = storedFilters[0].location;\r\n\t\t\t\t\t\t$scope.sentBySort = storedFilters[0].sentby;\r\n\t\t\t\t\t\t$scope.sortBy = storedFilters[0].sort;\r\n\t\t\t\t\t} \r\n\t\t\t\t//\tSet endpoint search filter\r\n\t\t\t\t\tif ($scope.search != null && $scope.search.length > 0) {\r\n\t\t\t\t\t\tendpoint.config['filter[search]'] = $scope.search;\r\n\t\t\t\t\t}\r\n\t\t\t\t//\tSet endpoint location filter\r\n\t\t\t\t\tif ($scope.location != null && $scope.location !== '-1') {\r\n\t\t\t\t\t\tendpoint.config['filter[locationIds]'] = $scope.location;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t//\tSet endpoint sort\r\n\t\t\t\t\tif ($scope.sortBy === 'recentlysent') {\r\n\t\t\t\t\t\tendpoint.config['sort['+$scope.sortBy+']'] = 'desc';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tendpoint.config['sort['+$scope.sortBy+']'] = 'asc';\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t//\tSet endpoint 'sent by' sort\r\n\t\t\t\t\tif ($scope.sentBySort != null && $scope.sentBySort !== '0') {\r\n\t\t\t\t\t\tdelete endpoint.config['filter[formadministrator]'];\r\n\t\t\t\t\t\tdelete endpoint.config['filter[creatorId]'];\r\n\t\t\t\t\t\tendpoint.config['filter['+$scope.sentBySort+']'] = $scope.emplId;\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tvar data = yield endpoint.api(endpoint.config);\r\n\r\n\t\t\t\t\t\tif (data) {\r\n\t\t\t\t\t\t\t// Process the forms\r\n\t\t\t\t\t\t\tdata.forEach(extendFormObj);\r\n\t\t\t\t\t\t\t// Make packets\r\n\t\t\t\t\t\t\tformsAndPackets = makeFormsAndPacketList(data);\r\n\t\t\t\t\t\t\t// update the array of total forms in view\r\n\t\t\t\t\t\t\tvm.formsAndPackets = [...vm.formsAndPackets, ...formsAndPackets];\r\n\t\t\t\t\t\t\t// figure out when we've reached the end of the list\r\n\t\t\t\t\t\t\tvm.showInfScroll = data.length && data.length < parseInt(data.$headers['total-results'], 10);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\tthrow e;\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch(e) {\r\n\t\t\t\t\tvm.showInfScroll = false;\r\n\t\t\t\t\tssToastHlp.error('There was an error retrieving Form Instances', '');\r\n\t\t\t\t\tconsole && console.log && console.log('Error getting forms', e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tvm.loading = false;\r\n\t\t\t\t\tvm.scrolling = false;\r\n\t\t\t\t\tinitialLoad = false;\r\n\t\t\t\t\trouteVm.getFormsPromise = null;\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t};\r\n\r\n\t//\twatches that refresh all data (updates all counts)\r\n\t\t$scope.$watchGroup(['sortBy','search','sentBySort','location','routeVm.dateSent'], (newval, oldval) => {\r\n\t\t\tif (initialLoad || newval === oldval ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tssStorage.save('trackFormsFilters', [{\r\n\t\t\t\t'category': routeVm.selectedCategory,\r\n\t\t\t\t'sort': routeVm.sortBy,\r\n\t\t\t\t'search': routeVm.search,\r\n\t\t\t\t'sentby': routeVm.sentByParticipant,\r\n\t\t\t\t'location': routeVm.sentToLocation\r\n\t\t\t}], { persistent: true, expires: false });\r\n\r\n\t\t\tgo.refreshData();\r\n\t\t});\r\n\r\n\t\t$scope.$watch('type', (newval, oldval) => {\r\n\t\t\t// also runs when page kicks off\r\n\t\t\tfetchFormData();\r\n\t\t\tfetchFormCounts();\r\n\t\t});\r\n\r\n\t\t/**\r\n\t\t* Assign additional properties to a form instance object\r\n\t\t*\r\n\t\t* @param {obj} form - The form instance object on which to operate\r\n\t\t*/\r\n\t\tfunction extendFormObj(form) {\r\n\t\t\tlet formStatus = ssEnum.formStatus.byValue(form._statusId).toLowerCase();\r\n\t\t\tform.isPacket = false;\r\n\t\t\tform.primaryRecipient = form._employee;\r\n\t\t\tform.creatorId = form._creator.employeeId;\r\n\t\t\tform.isComplete = formStatus === 'complete';\r\n\t\t\tform.isRejected = formStatus === 'rejected';\r\n\t\t\tform.dueDateStatus = ssDueDateHlp.dueStatus(form, routeVm.org);\r\n\t\t\tform.totalSteps = form._steps.filter(step => step._stepAction !== 3).length;\r\n\t\t\tform.searchText = `${form.name} ${form.primaryRecipient.name}`;\r\n\t\t\tform.sentDate = ssDateByOrgHlp.utcIsoToRelativeMoment(form._createdUtc, routeVm.org).format('M/D/YY');\r\n\t\t\tif (form._lastReminderSentUtc) {\r\n\t\t\t\tform.reminderSentDate = ssDateByOrgHlp.utcIsoToRelativeMoment(form._lastReminderSentUtc, routeVm.org).format('M/D/YY')\r\n\t\t\t}\r\n\t\t\tcurrentStepActions(form);\r\n\t\t\tstepStatus(form);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t* Set some properties on the form instance based on the current step\r\n\t\t*\r\n\t\t* @param {obj} form - The form instance object on which to operate\r\n\t\t*/\r\n\t\tfunction currentStepActions(form) {\r\n\t\t\tif (form.currentStep == null) { return; }\r\n\r\n\t\t\tform.currentStepIndex = form._steps.indexOf(form.currentStep);\r\n\t\t\tform.prevStep = (form.currentStepIndex === 0) ? form._steps[0] : form._steps[form.currentStepIndex - 1];\r\n\t\t\tform.prevStepNum = form._steps.indexOf(form.prevStep) + 1;\r\n\t\t\tform.currentStepAction = ssEnum.stepAction.byValue(form.currentStep._stepAction) || 'undefined';\r\n\t\t\tif (form.currentStep._stepParticipant == null) { return; }\r\n\t\t\tform.isUser = $scope.emplId === form.currentStep._stepParticipant.employeeIds[0] ? true : false;\r\n\t\t\tform.currentStepParticipantName = form.currentStep._stepParticipant.name || 'undefined';\r\n\r\n\t\t\tlet currentStepMeta = `${form.currentStepAction} | ${form.currentStepParticipantName}`;\r\n\r\n\t\t\tif(form.isRejected) {\r\n\t\t\t\tlet latestSubmission;\r\n\t\t\t\tif(form.currentStep._stepSubmissions.length) {\r\n\t\t\t\t\t// get the latest step submission object by the submission date\r\n\t\t\t\t\tlatestSubmission = form.currentStep._stepSubmissions.reduce((acc, cur) => {\r\n\t\t\t\t\t\treturn cur.submissionDateUtc > acc.submissionDateUtc ? cur : acc;\r\n\t\t\t\t\t}, {submissionDateUtc: ssDateHlp.foreverPast()});\r\n\t\t\t\t\tcurrentStepMeta = `Denied by ${latestSubmission.firstName} ${latestSubmission.lastName}`;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcurrentStepMeta = 'Form Denied';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tform.currentStepMeta = currentStepMeta;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t** set the status for each step\r\n\t\t** @param {obj} form - The form instance object on which to operate\r\n\t\t**/\r\n\t\tfunction stepStatus(form) {\r\n\t\t\tif (form.currentStepIndex == null) { return; }\r\n\t\t\tvar statusSet = false;\r\n\t\t\tform._steps.forEach((step) => {\r\n\t\t\t\tif (step.id === form._steps[form.currentStepIndex].id) {\r\n\t\t\t\t\tstep.stepStatus = ssEnum.formStatus.byValue(form._statusId);\r\n\t\t\t\t\tstatusSet = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstep.stepStatus = (statusSet) ? ssEnum.formStatus.byValue(0) : ssEnum.formStatus.byValue(1);\r\n\t\t\t\t}\r\n\t\t\t\tstep.stepStatus = step.stepStatus.toLowerCase();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t* create a separate form packets object\r\n\t\t*\r\n\t\t* @param {Array} formArr - The array of forms to separate.\r\n\t\t* @param {obj} map - The empty object to put packets in\r\n\t\t*/\r\n\t\tfunction makeFormsAndPacketList(formArr) {\r\n\t\t\tconst packetMap = new Map();\r\n\t\t\treturn formArr\r\n\t\t\t\t.map((form) => {\r\n\t\t\t\t\tvar packet; // bucket for packet to be put in\r\n\r\n\t\t\t\t\t// if the form is not in a packet, don't wrap it in one... duh!\r\n\t\t\t\t\tif (!form.isInPacket) { return form; }\r\n\r\n\t\t\t\t\t// check if we already know about this packet\r\n\t\t\t\t\tif (!packetMap.has(form._packetInstance.instanceId)) {\r\n\t\t\t\t\t\tlet completeCount = form._packetInstance.completeFormInstanceIds.length;\r\n\t\t\t\t\t\tlet incompleteCount = form._packetInstance.incompleteFormInstanceIds.length;\r\n\r\n\t\t\t\t\t\tlet newPacket = {\r\n\t\t\t\t\t\t\ttype: $scope.type,\r\n\t\t\t\t\t\t\t_employee: form._employee,\r\n\t\t\t\t\t\t\tname: form._packetInstance.name,\r\n\t\t\t\t\t\t\tisPacket: true,\r\n\t\t\t\t\t\t\tprimaryRecipient: form.primaryRecipient,\r\n\t\t\t\t\t\t\tcreatorId: form.creatorId,\r\n\t\t\t\t\t\t\tsearchText: `${form._packetInstance.name} ${form.primaryRecipient.name}`,\r\n\t\t\t\t\t\t\tcurrentStepMeta: null,\r\n\t\t\t\t\t\t\tdueDateStatus: null,\r\n\t\t\t\t\t\t\tsentDate: form.sentDate,\r\n\t\t\t\t\t\t\tisRejected: false,\r\n\t\t\t\t\t\t\tisComplete: incompleteCount === 0,\r\n\t\t\t\t\t\t\tcontent: [],\r\n\t\t\t\t\t\t\tcompleteCount, incompleteCount,\r\n\t\t\t\t\t\t\ttotalFormsCount: completeCount + incompleteCount\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tnewPacket.packetCount = newPacket.isComplete ? 'complete' : `${newPacket.completeCount}/${newPacket.totalFormsCount} forms complete`;\r\n\r\n\t\t\t\t\t\t// track this packet so we can add more forms later if needed\r\n\t\t\t\t\t\tpacketMap.set(form._packetInstance.instanceId, newPacket);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// put packet... into bucket\r\n\t\t\t\t\tpacket = packetMap.get(form._packetInstance.instanceId);\r\n\t\t\t\t\t// add the form\r\n\t\t\t\t\tpacket.content.push(form);\r\n\r\n\t\t\t\t/*\t\r\n\t\t\t\t**\tDetermine the due date status (indicator) for a packet\r\n\t\t\t\t**\tbased on the due status of included forms...\r\n\t\t\t\t**\t'overdue': there is at least one overdue form included\r\n\t\t\t\t**\t'due soon': there are no overdue forms but there is at least one form due soon\r\n\t\t\t\t**\tnull: There are no forms with a due date\r\n\t\t\t\t*/\r\n\t\t\t\t\tpacket.dueDateStatus = (() => {\r\n\t\t\t\t\t\tlet overdueForms = packet.content.filter((form) => form.dueDateStatus && form.dueDateStatus.class === 'overdue');\r\n\t\t\t\t\t\tlet dueSoonForms = packet.content.filter((form) => form.dueDateStatus &&form.dueDateStatus.class === 'due-soon');\r\n\t\t\t\t\t\tif(overdueForms.length) {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tclass: 'overdue'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else if(dueSoonForms.length) {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tclass: 'due-soon'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})();\r\n\r\n\t\t\t\t/*\t\r\n\t\t\t\t**\tDetermine the displayed meta data for a packet\r\n\t\t\t\t**\tWill only display a message if there is at least one rejected form in the packet\r\n\t\t\t\t*/\r\n\t\t\t\t\tpacket.currentStepMeta = (() => {\r\n\t\t\t\t\t\tlet rejectedForms = packet.content.filter(form => form.isRejected);\r\n\t\t\t\t\t\tif (rejectedForms.length) {\r\n\t\t\t\t\t\t\tpacket.isRejected = true;\r\n\t\t\t\t\t\t\tif (rejectedForms.length === 1) {\r\n\t\t\t\t\t\t\t\treturn `form denied by ${rejectedForms[0].currentStepParticipantName}`;\r\n\t\t\t\t\t\t\t} else if (rejectedForms.length > 1) {\r\n\t\t\t\t\t\t\treturn `${rejectedForms.length} forms denied`;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})();\r\n\r\n\t\t\t\t\t// if this is the 2nd or more form in this packet,\r\n\t\t\t\t\t// roll it in by removing this form from the list\r\n\t\t\t\t\tif (packet.content.length > 1) { return null; }\r\n\r\n\t\t\t\t\tpacket.countByType = (type) => {\r\n\t\t\t\t\t\treturn filter()\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t// map in out lovely el packeet-o\r\n\t\t\t\t\treturn packet;\r\n\t\t\t\t})\r\n\t\t\t//\tfilter out all of the forms that are now in packets\r\n\t\t\t\t.filter(form => form != null);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// #-- END Component (cmp-tracked-form-group) --# //\r\n// #--------------------------------------------# //\r\n\r\nangular.module('ec-forms-components').directive('cmpTrackedFormGroup', () => new TrackedFormGroup(props, 'tracked-form-group') );\r\n","import {Component} from 'base-component';\r\n// #--------------------------------------# //\r\n// #---- Component (cmp-tracked-form) ----# //\r\n\r\n// props is the directive's isolate scope object\r\n// http://onehungrymind.com/angularjs-sticky-notes-pt-2-isolated-scope\r\nconst props = {\r\n\tform: '=',\r\n\tstatusUpdated: '&?',\r\n\ttype: '='\r\n};\r\n\r\nconst employeeMap = new Map();\r\n\r\nclass TrackedForm extends Component {\r\n\t/*@ngInject*/\r\n\tcontroller($scope, $location, $window, $state, filenameHlp, ssStorage, ssAsync, ssEnum, ssFormInstancesApi, ssEmployeeApi, ssFormTemplatesApi, ssToastHlp, ssModalSvc, ssObjectHlp) {\r\n\r\n\t\tconst routeVm = $scope.routeVm = $scope.$root.utils.findInParentScope('routeVm', $scope);\r\n\t\tconst form = $scope.form;\r\n\t\tconst regex = /.*{\"filename\":.*/;\r\n\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\tloadingContact: true,\r\n\t\t\topenDetails: false,\r\n\t\t\tshowContactToggle: true\r\n\t\t};\r\n\r\n\t\tvm.showContactToggle = getEmpPropPermissions($scope.form);\r\n\r\n\t\t$scope.$watch('form', (nForm, oForm) => {\r\n\t\t\tif(nForm.isPacket){\r\n\t\t\t\tnForm.content.forEach(f => f.filesOnInstance = processFileAttachments(f));\r\n\t\t\t}else{\r\n\t\t\t\tnForm.filesOnInstance = processFileAttachments(nForm);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tfunction processFileAttachments(form) {\r\n\t\t\tlet filesOnInstance = [];\r\n\t\t\tconst formFieldValues = form._steps\r\n\t\t\t\t\t\t\t\t\t\t.filter(stp => regex.test(stp._formFieldValues) && stp._stepAction !== ssEnum.stepAction.formCompleted)\r\n\t\t\t\t\t\t\t\t\t\t.map(stp => stp._formFieldValues);\r\n\t\t\tif(formFieldValues.length) {\r\n\t\t\t\tformFieldValues.forEach((formFieldValue) => {\r\n\t\t\t\t\tconst parsedValue = JSON.parse(formFieldValue);\r\n\t\t\t\t\tObject.keys(parsedValue)\r\n\t\t\t\t\t.filter(key => Array.isArray(parsedValue[key]))\r\n\t\t\t\t\t.filter(key => parsedValue[key].every(item => !!item.filename))\r\n\t\t\t\t\t.forEach((key) => {\r\n\t\t\t\t\t\tfilesOnInstance = filesOnInstance.concat(...processFileDisplay(parsedValue[key]))\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\treturn filesOnInstance;\r\n\t\t}\r\n\r\n\t\tfunction processFileDisplay(files) {\r\n\t\t\treturn files.map((file) => {\r\n\t\t\t\tlet ext = filenameHlp.getExtension(file.filename);\r\n\t\t\t\tlet icon = filenameHlp.getIcon(ext);\r\n\t\t\t\treturn { id: file.id, filename: file.filename, ext, icon }\r\n\t\t\t})\r\n\t\t}\r\n\r\n\r\n\t\tconst go = $scope.go = { // jshint ignore:line\r\n\t\t\tdownload(files){\r\n\t\t\t\tfiles.forEach((file) => {\r\n\t\t\t\t\tssFormTemplatesApi.getFileUrl({\r\n\t\t\t\t\t\tid: file.id\r\n\t\t\t\t\t}).then(success => {\r\n\t\t\t\t\t\t$window.open(success._string, '_blank');\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tremove(form) {\r\n\t\t\t\tlet headerType = form.isInPacket ? 'Form in Packet' : 'Form';\r\n\t\t\t\tlet msg = `Form removed successfully.`;\r\n\t\t\t\tvar config = {\r\n\t\t\t\t\ttitle: `Delete ${headerType}`,\r\n\t\t\t\t\tcontent: `Are you sure you want to delete this form? This form will be deleted and cannot be retrieved.`,\r\n\t\t\t\t\tprimaryText: 'Delete',\r\n\t\t\t\t\tsecondaryText: 'Cancel'\r\n\t\t\t\t};\r\n\t\t\t\tssModalSvc.showDestructive(config).then(() => {\r\n\t\t\t\t\tssAsync(function*() {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tyield form.$remove();\r\n\t\t\t\t\t\t\tssToastHlp.success(msg);\r\n\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t\tconsole && console.error && console.error(`error deleting ${headerType}`, e);\r\n\t\t\t\t\t\t\tssToastHlp.error(`There was an error deleting \"${form.name}\"`, 'Error');\r\n\t\t\t\t\t\t} finally {\r\n\t\t\t\t\t\t\t$scope.statusUpdated();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})();\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\ttoggleContact() {\r\n\t\t\t\tssAsync(function*() {\r\n\t\t\t\t\tvar emp;\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tvm.loadingContact = true;\r\n\t\t\t\t\t\tif (!employeeMap.has(form.primaryRecipient.employeeId)) {\r\n\t\t\t\t\t\t\temp = yield ssEmployeeApi.get({\r\n\t\t\t\t\t\t\t\t'id': form.primaryRecipient.employeeId,\r\n\t\t\t\t\t\t\t\t'include': 'PhoneNumbers,Emails'\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tconsole && console.log && console.log(emp);\r\n\t\t\t\t\t\t\temployeeMap.set(form.primaryRecipient.employeeId, emp);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\temp = employeeMap.get(form.primaryRecipient.employeeId);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvm.empPhone = emp.bestContactNumber && emp.bestContactNumber.formatted || 'None';\r\n\t\t\t\t\t\tvm.empEmail = emp.bestContactEmail || 'None';\r\n\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\tconsole && console.error && console.error('ERROR', e);\r\n\t\t\t\t\t\tssToastHlp.error(`There was an error retreiving employee information for \"${form.primaryRecipient.name}\"`, 'Error');\r\n\t\t\t\t\t} finally {\r\n\t\t\t\t\t\tvm.loadingContact = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t})();\r\n\t\t\t},\r\n\r\n\t\t\tupdateFormStatus(form, status) {\r\n\t\t\t\tlet statusId = ssEnum.formStatus[status.toLowerCase()];\r\n\t\t\t\tlet type = (form.isInPacket) ? 'Packet' : 'Form';\r\n\t\t\t\tvar config = {\r\n\t\t\t\t\ttitle: `Archive ${type}`,\r\n\t\t\t\t\tcontent: `Are you sure you want to archive this ${type}?`,\r\n\t\t\t\t\tprimaryText: 'Archive',\r\n\t\t\t\t\tsecondaryText: 'Cancel'\r\n\t\t\t\t};\r\n\t\t\t\tssModalSvc.showStandard(config).then(() => {\r\n\t\t\t\t\tssAsync(function*() {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tyield ssFormInstancesApi.updateStatus({\r\n\t\t\t\t\t\t\t\tid: form.id,\r\n\t\t\t\t\t\t\t\tnewStatus: statusId\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tssToastHlp.success(`${form.name} has been marked as ${status}`, 'Form Status Updated', false);\r\n\t\t\t\t\t\t\t$scope.statusUpdated();\r\n\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t\tconsole && console.error && console.error(`error deleting \"${type}\"`, e);\r\n\t\t\t\t\t\t\tssToastHlp.error(`There was an error updating the status of ${form.name}`, 'Error', false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})();\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\tupdateEmpRecord(form) {\r\n\t\t\t\tvar modalConfig = {\r\n\t\t\t\t\ttitle: '<h2>Move to Employee Record</h2>',\r\n\t\t\t\t\tpersonnel: ssEnum.personnelCategory,\r\n\t\t\t\t\tmedical: ssEnum.medicalCategory,\r\n\t\t\t\t\twebFormSubCategory: '0-8',\r\n\t\t\t\t\tcontent: `<p>Please select a location to move \"${form.name}\"<br/>to ${form.primaryRecipient.name}'s Employee Record</p>\r\n\t\t\t\t\t\t<super-select-list model=\"webFormSubCategory\">\r\n\t\t\t\t\t\t\t<li><h4>Personnel Documents</h4></li>\r\n\t\t\t\t\t\t\t<super-select-list-item ng-repeat=\"item in personnel.enums\" value=\"'0-' + item.value\" label=\"item.name\"></super-select-list-item>\r\n\t\t\t\t\t\t\t<li><hr class=\"divider\"/></li>\r\n\t\t\t\t\t\t\t<li><h4>Medical Documents</h4></li>\r\n\t\t\t\t\t\t\t<super-select-list-item ng-repeat=\"item in medical.enums\" value=\"'1-' + item.value\" label=\"item.name\"></super-select-list-item>\r\n\t\t\t\t\t\t</super-select-list>`,\r\n\t\t\t\t\tprimaryText: 'Continue',\r\n\t\t\t\t\tsecondaryText: 'Cancel'\r\n\t\t\t\t};\r\n\r\n\t\t\t\tssModalSvc.showStandard(modalConfig).then((config) => {\r\n\t\t\t\t\tlet category = config.webFormSubCategory.split('-')[0];\r\n\t\t\t\t\tlet subCategory = config.webFormSubCategory.split('-')[1];\r\n\r\n\t\t\t\t\tssAsync(function*() {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tyield ssEmployeeApi.addFileToRecord({\r\n\t\t\t\t\t\t\t\temployeeId: form._employee.employeeId,\r\n\t\t\t\t\t\t\t\tformInstanceId: form.id,\r\n\t\t\t\t\t\t\t\tname: form.name,\r\n\t\t\t\t\t\t\t\tcategory: category,\r\n\t\t\t\t\t\t\t\tsubCategory: subCategory\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t$scope.statusUpdated();\r\n\t\t\t\t\t\t\tssToastHlp.success(`${form.name} has been added to ${form._employee.name}'s employee record`,\r\n\t\t\t\t\t\t\t\t'Form added to Employee Record ', false);\r\n\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t\tconsole && console.error && console.error('Error adding form to employee record', e);\r\n\t\t\t\t\t\t\tssToastHlp.error(`${form.name} was not added to ${form._employee.name}'s employee record successfully`,\r\n\t\t\t\t\t\t\t\t'Add to Employee Record ', false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})();\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\tupdateWorkflowStep(form) {\r\n\r\n\t\t\t\tlet config = {\r\n\t\t\t\t\tid: form.id,\r\n\t\t\t\t\ttargetStep: form.prevStep._formTemplateStepId,\r\n\t\t\t\t\tparams: {\r\n\t\t\t\t\t\ttargetStatus: 0\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\tssFormInstancesApi.updateCurrentStepId(config).then((success) => {\r\n\t\t\t\t\tif (success != null) {\r\n\t\t\t\t\t\tvar participant = (form.prevStep._stepParticipant.name) ? `to ${form.prevStep._stepParticipant.name}` : ``;\r\n\t\t\t\t\t\tssToastHlp.success(`Workflow step re-sent ${participant}`, 'Success!', false);\r\n\t\t\t\t\t\t$scope.statusUpdated();\r\n\t\t\t\t\t}\r\n\t\t\t\t}).catch((err) => {\r\n\t\t\t\t\tssToastHlp.error('There was an error resending the workflow step. Please try again.', 'Error');\r\n\t\t\t\t\tconsole && console.error && console.error('Error resending the workflow step', e);\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\tsendReminder: ssAsync(function*(form) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tssFormInstancesApi.postReminder({\r\n\t\t\t\t\t\tid: form.id\r\n\t\t\t\t\t}).then((success) => {\r\n\t\t\t\t\t\tvar participant = (form.currentStepParticipantName) ? `to ${form.currentStepParticipantName}` : ``;\r\n\t\t\t\t\t\tif (success != null) {\r\n\t\t\t\t\t\t\tssToastHlp.success(`${participant}`, 'Reminder Sent', false);\r\n\t\t\t\t\t\t\t$scope.statusUpdated();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tconsole && console.error && console.error('Error posting reminder', e);\r\n\t\t\t\t\tssToastHlp.error(`There was an error sending a reminder to ${participant}`, 'Error');\r\n\t\t\t\t}\r\n\t\t\t}),\r\n\r\n\t\t\tresolveEmpRecordPath: () => {\r\n\t\t\t\tssEmployeeApi.get({\r\n\t\t\t\t\t'id': form.primaryRecipient.employeeId,\r\n\t\t\t\t\t'include': 'PhoneNumbers,Emails'\r\n\t\t\t\t}).then((emp) => {\r\n\t\t\t\t\tif(routeVm.isDIPEnabled) {\r\n\t\t\t\t\t\tif(emp._orgPersonId) {\r\n\t\t\t\t\t\t\t$location.path(`/ec-directory/person-detail/${emp._orgPersonId}/personal`);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tssToastHlp.error('The user does not have a valid Org Person ID and therefore their employee record cannot be accessed')\r\n\t\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$location.path(`/ec-employee/record/${emp.id}/personal`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}).catch((err) => {\r\n\t\t\t\t\tssToastHlp.error('There was an error retriveing the employee')\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tresolveFormIcon: () => {\r\n\t\t\t\tlet icon = form._isEmployeeInitiated ? 'li-form-e-large' : 'li-form-large';\r\n\t\t\t\treturn icon;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// helper functions\r\n\r\n\t\tfunction getEmpPropPermissions(form) {\r\n\r\n\t\t\tif(ssObjectHlp.glean($scope, _=>_.$root.isPermitted.activeUser.idmAdministrator, false)) {\r\n\t\t\t\treturn true;\r\n\t\t\t};\r\n\r\n\t\t\tconst propsToCheck = ['emails', 'phoneNumbers'];\r\n\t\t\tlet propVals = propsToCheck.map((p) => {\r\n\t\t\t\tif(form._employee.meta) {\r\n\t\t\t\t\treturn form._employee.meta.permissions.permittedActualProperties[p];\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t});\r\n\t\t\treturn propVals.some(p => p !== 0);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// #-- END Component (cmp-tracked-form) --# //\r\n// #--------------------------------------# //\r\n\r\nangular.module('ec-forms-components').directive('cmpTrackedForm', () => new TrackedForm(props, 'tracked-form') );\r\n","export class Component {\r\n\tconstructor(props, componentName, config = {}) {\r\n\t\tthis.restrict = 'E';\r\n\t\tthis.replace = true;\r\n\t\tthis.scope = props;\r\n\t\tthis.templateUrl = `components/cmp-${componentName}/${componentName}.html`;\r\n\r\n\t\tObject.assign(this, config);\r\n\t}\r\n}\r\n","export class Segment {\r\n\tconstructor(segmentName) {\r\n\t\tthis.restrict = 'E';\r\n\t\tthis.scope = true;\r\n\t\tthis.replace = true;\r\n\t\tthis.templateUrl = (elem, attrs) => {\r\n\t\t\treturn `routes${attrs.folder}/segment-${segmentName}/${segmentName}.html`;\r\n\t\t};\r\n\t}\r\n}\r\n","export class State {\r\n\tconstructor(stateConfig, routeVm) {\r\n\t\tObject.assign(this, stateConfig);\r\n\t\tthis.resolve = this.resolve || {};\r\n\t\tthis.resolve.routeVm = () => {\r\n\t\t\treturn routeVm;\r\n\t\t};\r\n\t\t/*@ngInject*/\r\n\t\tthis.controller = ($scope, $window, routeVm) => {\r\n\t\t\t$scope.routeVm = routeVm;\r\n\t\t};\r\n\t}\r\n}\r\n","/*@ngInject*/\r\nfunction configLoader(ssAppConfigSvc) {\r\n\tssAppConfigSvc.load('employee-center');\r\n}\r\n\r\nangular.module('ec-forms').run(configLoader);\r\n","/*@ngInject*/\r\nfunction routerConfig($locationProvider) {\r\n\t$locationProvider.html5Mode(true);\r\n}\r\n\r\nangular.module('ec-forms').config(routerConfig);\r\n","function fieldRendererHlp($filter, ssToastHlp, ssEnum, ssFlagSvc) {\r\n\r\n\tconst phoneFieldIds = [\r\n\t\t'5e989212-29f0-43e4-8d02-1a6a047b7e48',\r\n\t\t'0977c048-185c-4eec-8800-74842a7fbb4f',\r\n\t\t'f658f159-910a-485f-89b7-f20559222f73',\r\n\t\t'14827dc2-9d54-400d-a556-47656bc72f83',\r\n\t\t'e0ec2374-be6a-4d6f-9f12-5cbf58f5a5cc',\r\n\t\t'4efae0cb-6d68-4eeb-8ce3-031b11678275',\r\n\t\t'3a4799b5-168e-4f19-91a6-27299c543f69'\r\n\t]\r\n\r\n\treturn {\r\n\r\n\t\t/**\r\n\t\t * Gets the template tag\r\n\t\t * @function getTag\r\n\t\t * @instance\r\n\t\t * @param {String} field -\r\n\t\t * @return {String} HTML tag name\r\n\t\t */\r\n\t\tgetTag: field => {\r\n\t\t\tswitch (field._fieldType) {\r\n\t\t\t\tcase 'heading': return 'h4';\r\n\t\t\t\tcase 'subheading': return 'h5';\r\n\t\t\t\tcase 'readOnlySubheading': return 'h5';\r\n\t\t\t\tcase 'readOnlyHeading': return 'h4';\r\n\t\t\t\tcase 'instructions': return 'p';\r\n\t\t\t\tcase 'text': return 'p';\r\n\t\t\t\tcase 'readOnlyText': return 'dl';\r\n\t\t\t\tcase 'readOnlyDate': return 'dl';\r\n\t\t\t\tcase 'readOnlyCredentials': return 'p';\r\n\t\t\t\tcase 'link': return 'a';\r\n\t\t\t\tdefault: return field._fieldType;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Gets the attributes for the HTML tag returned in getTag\r\n\t\t * @function getProperties\r\n\t\t * @instance\r\n\t\t * @param {String} field -\r\n\t\t * @param {String} group -\r\n\t\t * @return {String} Attributes for the HTML tag returned in getTag\r\n\t\t */\r\n\t\tgetProperties: (field, group) => {\r\n\r\n\t\t\tconst props = [''];\r\n\r\n\t\t//\tno need to process these fields.\r\n\t\t\tif(['heading','subheading', 'readOnlySubheading', 'readOnlyHeading','instructions','text','readOnlyText','readOnlyDate','readOnlyCredentials'].includes(field._fieldType)) {\r\n\t\t\t\treturn '';\r\n\t\t\t}\r\n\r\n\t\t\tif (field._fieldType.startsWith('cmp-')) {\r\n\t\t\t\tprops.push('field=\"field\"');\r\n\t\t\t\tif(field._fieldType === 'cmp-text-editor' && field.step){\r\n\t\t\t\t\tlet modelVal = `field.step.formFieldValues['${field.id}']`;\r\n\t\t\t\t\tprops.push(`model=\"${modelVal}\"`);\r\n\t\t\t\t}\r\n\t\t\t\treturn props.join(' ');\r\n\t\t\t}\r\n\r\n\t\t\tif (field._fieldType.startsWith('cmp-')) {\r\n\t\t\t\tprops.push('field=\"field\"');\r\n\t\t\t\treturn props.join(' ');\r\n\t\t\t}\r\n\r\n\t\t\tif (field._fieldType === 'link') {\r\n\t\t\t\tprops.push('class=\"file-link\"');\r\n\t\t\t\tprops.push('ss-icon=\"chain\"');\r\n\t\t\t\tprops.push('href=\"{{field.config.isValid ? field.config.location : \\'\\'}}\"');\r\n\t\t\t\tprops.push('ng-class=\"{\\'is-valid\\': field.config.isValid}\"');\r\n\t\t\t\tprops.push('target=\"_blank\"');\r\n\t\t\t\treturn props.join(' ');\r\n\t\t\t}\r\n\r\n\t\t\tif (field._fieldType.startsWith('super-')) {\r\n\r\n\t\t\t\tlet modelVal = `field.step.formFieldValues['${field.id}']`;\r\n\r\n\t\t\t\tprops.push('label=\"{{field._label}}\"');\r\n\t\t\t\tprops.push('required=\"field._required\"');\r\n\t\t\t\tprops.push('org=\"org\"');\r\n\r\n\t\t\t\t//\twe only want to add the \"edit mode\" attribute when we want the component to be read only. setting it to 'true' here is unnecessary because the component should have an inferred edit-mode if the attribute does not exist.\r\n\t\t\t\tif(field.editMode != null) {\r\n\t\t\t\t\tprops.push('edit-mode=\"field.editMode\"');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(field.isRedacted) {\r\n\t\t\t\t\tprops.push('permissions=\"{ view: false, edit: field.editMode, redacted: true }\"');\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//\tWe only want to add the \"disabled\" attribute to the component if we need it to appear editable but temporarily non-interactive\r\n\t\t\t\tif(field.disabled != null ) {\r\n\t\t\t\t\tprops.push(`is-disabled=\"${field.disabled}\"`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(!field._label || field._label == null) {\r\n\t\t\t\t\tprops.push('aria-label=\"{{field._placeholderLabel}} field\"');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet phonefieldIds = [\r\n\t\t\t\t\t'5e989212-29f0-43e4-8d02-1a6a047b7e48',\r\n\t\t\t\t\t'0977c048-185c-4eec-8800-74842a7fbb4f',\r\n\t\t\t\t\t'f658f159-910a-485f-89b7-f20559222f73',\r\n\t\t\t\t\t'14827dc2-9d54-400d-a556-47656bc72f83',\r\n\t\t\t\t\t'e0ec2374-be6a-4d6f-9f12-5cbf58f5a5cc',\r\n\t\t\t\t\t'4efae0cb-6d68-4eeb-8ce3-031b11678275',\r\n\t\t\t\t\t'3a4799b5-168e-4f19-91a6-27299c543f69'\r\n\t\t\t\t];\r\n\r\n\t\t\t\tif (phonefieldIds.includes(field._fieldDefId)){\r\n\t\t\t\t\tprops.push('mask=\"phone\"');\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\tif (field._fieldType === 'super-digital-signature') {\r\n\t\t\t\t\tprops.push(`signatures=\"field.config.signatureIds\"`);\r\n\t\t\t\t\tprops.push(`orientation=\"field.config.orientation\"`);\r\n\t\t\t\t\tprops.push(`signature-display=\"field.config.signatureDisplay\"`);\r\n\t\t\t\t\tprops.push(`mappable=\"field.config.mappable\"`);\r\n\r\n\t\t\t\t\tmodelVal = `field.step.formFieldValues['${field.id}'].config.signature`;\r\n\r\n\t\t\t\t\tprops.push('on-behalf=\"{{field.onBehalf}}\"');\r\n\t\t\t\t} \r\n\t\t\t\t\r\n\t\t\t\tif (field._fieldType === 'super-input-radio') {\r\n\r\n\t\t\t\t\tprops.push(`name=\"${field.config.name}\"`);\r\n\t\t\t\t\tprops.push(`value=\"${field._label}\"`);\r\n\r\n\t\t\t\t\tvar groupIdx = group.findIndex(v => {\r\n\t\t\t\t\t\treturn v === field;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tvar groupName = field.config.name || '';\r\n\t\t\t\t\tvar firstFieldInGroup = field;\r\n\t\t\t\t\tfor (; groupIdx--;) {\r\n\t\t\t\t\t\tif (group[groupIdx]._fieldType === 'super-input-radio' && group[groupIdx].config.name === groupName) {\r\n\t\t\t\t\t\t\tfirstFieldInGroup = group[groupIdx];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmodelVal = `field.step.formFieldValues['${firstFieldInGroup.id}']`;\r\n\t\t\t\t}\r\n\r\n\t\t\t/*\tthese validators are only applied to fields in a form instance by checking the\r\n\t\t\t**\t'disabled' property of a field - we need to figure out a better way to distinguish\r\n\t\t\t**\tbetween a form template & form instance\r\n\t\t\t*/\r\n\t\t\t\tif(!field.disabled) {\r\n\r\n\t\t\t\t\tlet required = field._required && !field.disabled ? 'Required' : '';\r\n\t\t\t\t//\tencode single/double quotes so they don't close the attribute\r\n\t\t\t\t\tlet label = field._label.replace(/'/g, '\\\\\\'').replace(/\"/g, '&quot;');\r\n\r\n\t\t\t\t\tif (field._validator) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tlet applyValidators = !field._validator.applyOnRequired || field._required && field._validator.applyOnRequired;\r\n\t\t\t\t\t\tif(applyValidators) {\r\n\t\t\t\t\t\t\tprops.push(`ss-validate=\"${field.ignoreValidations} || validator.${field._validator.type}${required}(${modelVal}, '${label}')\"`);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if(field._required) {\r\n\t\t\t\t\t\tprops.push(`ss-validate=\"${field.ignoreValidations} || validator.required(${modelVal}, '${label}')\"`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tprops.push(`model=\"${modelVal}\"`);\r\n\t\t\t\treturn props.join(' ');\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Gets the visibility\r\n\t\t * @function getVisibility\r\n\t\t * @instance\r\n\t\t * @param {String} field -\r\n\t\t * @return {Boolean} True|False if visible\r\n\t\t */\r\n\t\tgetVisibility: field => {\r\n\t\t\tswitch (field._fieldType) {\r\n\t\t\t\tcase 'heading': return '!!field._label.length && field._active';\r\n\t\t\t\tcase 'readOnlyHeading': return '!!field._label.length && field._active';\r\n\t\t\t\tcase 'readOnlySubheading': return '!!field._label.length && field._active';\r\n\t\t\t\tcase 'subheading': return '!!field._label.length && field._active';\r\n\t\t\t\tcase 'instructions': return '!!field._label.length && field._active';\r\n\t\t\t\tcase 'readOnlyText': return 'field._active';\r\n\t\t\t\tcase 'readOnlyDate': return 'field._active';\r\n\t\t\t\tcase 'link': return '!!field._label.length && field._active';\r\n\t\t\t\tdefault: return 'field._active';\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Gets the content\r\n\t\t * @function getContent\r\n\t\t * @instance\r\n\t\t * @param {String} field -\r\n\t\t * @param {Object} options -\r\n\t\t * @return {Boolean} The content\r\n\t\t */\r\n\t\tgetContent: (field, {scope} = {}) => {\r\n\t\t\tvar formattedValue;\r\n\t\t\tlet ariaLabel = '';\r\n\r\n\t\t\tswitch (field._fieldType) {\r\n\t\t\t\tcase 'heading': return '{{field._label}}';\r\n\t\t\t\tcase 'subheading': return '{{field._label}}';\r\n\t\t\t\tcase 'readOnlySubheading': return '{{field._label}}&nbsp;<em>Read-only</em>';\r\n\t\t\t\tcase 'readOnlyHeading': return '{{field._label}}&nbsp;<em>Read-only</em>';\r\n\t\t\t\tcase 'instructions': return '{{field._label}}';\r\n\t\t\t\tcase 'text': return '{{field._label}}';\r\n\t\t\t\tcase 'link': return '{{field.config.display}}';\r\n\r\n\t\t\t\tcase 'readOnlyText':\r\n\t\t\t\t\t// if an instance & theres a valid field value...\r\n\t\t\t\t\tif (field.step && field.step.formFieldValues[field.id] != null) {\r\n\t\t\t\t\t\tif (field._fieldTypeOptions && field._fieldTypeOptions.edit === 'super-select-list'){\r\n\t\t\t\t\t\t\tlet option;\r\n\t\t\t\t\t\t\tif (field._fieldDefId === '07ebdcec-0ff6-46ad-92aa-121b8573b8a6') { \r\n\t\t\t\t\t\t\t\toption = ssEnum.states.enums.find((e) => {\r\n\t\t\t\t\t\t\t\t\treturn e.value === field.step.formFieldValues[field.id]\r\n\t\t\t\t\t\t\t\t}).name;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\toption = field._options.find(o => { return field._options.indexOf(o) === field.step.formFieldValues[field.id] });\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tformattedValue = (option != null) ? option : '--';\r\n\t\t\t\t\t\t} else if (phoneFieldIds.includes(field._fieldDefId)) {\r\n\t\t\t\t\t\t\tformattedValue = field.step.formFieldValues[field.id].replace(/(\\d{3})(\\d{3})(\\d{4})/,\"($1) $2-$3\");\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tformattedValue = field.step.formFieldValues[field.id];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else { //...else a template\r\n\t\t\t\t\t\tformattedValue = '--';\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(field.isRedacted) {\r\n\t\t\t\t\t\tariaLabel = 'aria-label=\"value is redacted\"';\r\n\t\t\t\t\t\tformattedValue = '******';\r\n\t\t\t\t\t}\t\r\n\t\t\t\t\treturn `<dt class=\"field-label\">${field._label}</dt><dd ${ariaLabel}>${formattedValue}</dd>`;\r\n\r\n\t\t\t\tcase 'readOnlyDate':\r\n\r\n\t\t\t\t\tformattedValue = (field.step && field.step.formFieldValues[field.id] != null) ? $filter('date')(field.step.formFieldValues[field.id], 'MM/dd/yyyy') : '--/--/--';\r\n\r\n\t\t\t\t\tif(field.isRedacted) {\r\n\t\t\t\t\t\tariaLabel = 'aria-label=\"value is redacted\"';\r\n\t\t\t\t\t\tformattedValue = '******';\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn `<dt class=\"field-label\">${field._label}</dt><dd ${ariaLabel}>${formattedValue}</dd>`;\r\n\r\n\t\t\t\tcase 'readOnlyCredentials':\r\n\t\t\t\t\tif (field.config.readOnly != null && (field.config.populate == null || field.config.populate)) {\r\n\t\t\t\t\t\treturn `<span ng-if=\"field.primaryParticipant == null\">--</span><cmp-credentials-list ng-repeat=\"option in field.primaryParticipant.${field.config.readOnly}\" model=\"option\"></cmp-credentials-list>`;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn '--';\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\tcase 'super-select-list':\r\n\t\t\t\t\tif (field._options && field._options.length) {\r\n\t\t\t\t\t\t//\tRender custom drop-down & multi-select fields using the string value from the \"_options\" property of the field as the value for the select list item. Since at the time of this comment there is a disparity between saved form field values for these fields, we need to check the type of value and render it diifferently if its a STRING. (FC-3482)\r\n\t\t\t\t\t\tlet customFieldsWithOptions = [\r\n\t\t\t\t\t\t\t'977a2273-62c1-4eef-8d63-91f9d8d1e0bf',\r\n\t\t\t\t\t\t\t'10a88a23-f8f3-48eb-aa48-c466db06378b',\r\n\t\t\t\t\t\t];\r\n\t\t\t\t\t\tif(customFieldsWithOptions.includes(field._fieldDefId)) {\r\n\t\t\t\t\t\t\tif(field.step && typeof field.step.formFieldValues[field.id] === \"string\") {\r\n\t\t\t\t\t\t\t\treturn `<${field._fieldType}-item ng-repeat=\"option in field._options track by $index\" value=\"option\" label=\"option\"></${field._fieldType}-item>`;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Find the 'address.state' field using its 'fieldDefId' property and render it using the two-character state code string as the value of the option, rather than using an integer ($index)' \r\n\t\t\t\t\t\tif(field.step && field._fieldDefId === '07ebdcec-0ff6-46ad-92aa-121b8573b8a6') {\r\n\t\t\t\t\t\t\treturn `<${field._fieldType}-item ng-repeat=\"option in field._options track by $index\" value=\"field.optionValues[$index]\" label=\"option\"></${field._fieldType}-item>`;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn `<${field._fieldType}-item ng-repeat=\"option in field._options track by $index\" value=\"$index\" label=\"option\"></${field._fieldType}-item>`;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tssToastHlp.error(`The options for the \"${field._label}\" menu could not be found.`, 'Error');\r\n\t\t\t\t\t\treturn `<${field._fieldType}-item value=\"-1\" label=\"'--'\"></${field._fieldType}-item>`;\r\n\t\t\t\t\t}\r\n\t\t\t\tdefault: return '';\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Binds\r\n\t\t * @function bindConfigObject\r\n\t\t * @instance\r\n\t\t * @param  {Object} scope -\r\n\t\t * @param  {Object} jsonPropExp -\r\n\t\t * @param  {Object} configPropExp -\r\n\t\t */\r\n\t\tbindConfigObject: (scope, jsonPropExp, configPropExp) => {\r\n\t\t\tconst json = scope.$eval(jsonPropExp);\r\n\t\t\tconst cfgPathArr = configPropExp.split('.');\r\n\t\t\tconst cfgProp = cfgPathArr.pop();\r\n\t\t\tconst cfgPath = cfgPathArr.join('.');\r\n\t\t\tconst cfgParent = (cfgPath ? scope.$eval(cfgPath) : scope);\r\n\r\n\t\t\tif (typeof json === 'string'){\r\n\t\t\t\tcfgParent[cfgProp] = JSON.parse(json);\r\n\t\t\t}else{\r\n\t\t\t\tcfgParent[cfgProp] = json;\r\n\t\t\t}\r\n\r\n\t\t\tscope.$watch(jsonPropExp, jsonString => {\r\n\t\t\t\tif (JSON.stringify(cfgParent[cfgProp]) === jsonString) { return; }\r\n\t\t\t\tif (typeof json === 'string'){\r\n\t\t\t\t\tcfgParent[cfgProp] = JSON.parse(jsonString);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tcfgParent[cfgProp] = jsonString;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tscope.$watch(configPropExp, configObject => {\r\n\t\t\t\tscope.$eval(`${jsonPropExp} = jsonString`, {\r\n\t\t\t\t\tjsonString: JSON.stringify(configObject)\r\n\t\t\t\t});\r\n\t\t\t}, true);\r\n\t\t}\r\n\t};\r\n\t// #-- END Helper (fieldRendererHlp) --# //\r\n\t// #------------------------------# //\r\n}\r\n\r\nangular.module('ec-forms-helpers').factory('fieldRendererHlp', fieldRendererHlp);\r\n","const defaultFieldDef = {\r\n\t_active: true,\r\n\t_configJson: '{\"width\": \"100%\", \"mappable\": true}',\r\n\t_externalData: '',\r\n\t_fieldDefId: null, \r\n\t_fieldGroup: null,\r\n\t_fieldType: 'super-input-text',\r\n\t_label: '',\r\n\t_options: [],\r\n\t_permissions: [],\r\n\t_required: false,\r\n\t_sampleData: null,\r\n\t_sensitive: false,\r\n\t_step: {},\r\n\t_tokenFields: [],\r\n\t_updateEmployeeRecord: false,\r\n};\r\n\r\nconst fieldTypes = {\r\n\tcredentials:[\r\n\t\t{\r\n\t\t\t_fieldDefId: 'c9eefacc-9c52-4527-b942-eb870cedbf44',\r\n\t\t\t_label: \"Certificate/License(s)\",\r\n\t\t\t_fieldType: 'cmp-credential-group',\r\n\t\t\t_externalData: 'Employee.Credentials.CertificateLicense',\r\n\t\t\t_configJson: `{\r\n\t\t\t\t\"mappable\": false,\r\n\t\t\t\t\"fields\":[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"formFieldValueProperty\": \"CredentialType\",\r\n\t\t\t\t\t\t\"_label\": \"Certificate/License(s)\",\r\n\t\t\t\t\t\t\"_placeholderLabel\":\"Certificate/License(s)\",\r\n\t\t\t\t\t\t\"_fieldType\": \"heading\",\r\n\t\t\t\t\t\t\"_configJson\":{\"mappable\": false}\r\n\t\t\t\t\t},{\r\n\t\t\t\t\t\t\"formFieldValueProperty\": \"Name\",\r\n\t\t\t\t\t\t\"_label\": \"Credential Name\",\r\n\t\t\t\t\t\t\"_placeholderLabel\":\"Credential Name\",\r\n\t\t\t\t\t\t\"_fieldType\": \"readOnlyText\",\r\n\t\t\t\t\t\t\"_configJson\":{\"mappable\": false}\r\n\t\t\t\t\t},{ \r\n\t\t\t\t\t\t\"formFieldValueProperty\": \"Issuer\",\r\n\t\t\t\t\t\t\"_label\":\"Issuer\",\r\n\t\t\t\t\t\t\"_placeholderLabel\":\"Issuer\",\r\n\t\t\t\t\t\t\"_fieldType\":\"readOnlyText\",\r\n\t\t\t\t\t\t\"_configJson\":{\"mappable\": false}\r\n\t\t\t\t\t},{ \r\n\t\t\t\t\t\t\"formFieldValueProperty\": \"DocumentNumber\",\r\n\t\t\t\t\t\t\"_label\":\"Certification Number\",\r\n\t\t\t\t\t\t\"_placeholderLabel\":\"Certification Number\",\r\n\t\t\t\t\t\t\"_fieldType\":\"readOnlyText\",\r\n\t\t\t\t\t\t\"_configJson\":{\"width\": \"50%\", \"mappable\": false}\r\n\t\t\t\t\t},{ \r\n\t\t\t\t\t\t\"formFieldValueProperty\": \"IsVerified\",\r\n\t\t\t\t\t\t\"_label\":\"Verified by Admin\",\r\n\t\t\t\t\t\t\"_placeholderLabel\":\"Verified by Admin\",\r\n\t\t\t\t\t\t\"_fieldType\":\"readOnlyText\",\r\n\t\t\t\t\t\t\"_configJson\":{\"width\": \"50%\", \"mappable\": false}\r\n\t\t\t\t\t},{ \r\n\t\t\t\t\t\t\"formFieldValueProperty\": \"StateStartedDay\",\r\n\t\t\t\t\t\t \"_label\":\"Start Date\",\r\n\t\t\t\t\t\t \"_placeholderLabel\":\"Start Date\",\r\n\t\t\t\t\t\t \"_fieldType\":\"readOnlyDate\",\r\n\t\t\t\t\t\t \"_configJson\":{\"width\": \"50%\", \"mappable\": false}\r\n\t\t\t\t\t},{ \r\n\t\t\t\t\t\t\"formFieldValueProperty\": \"ExpirationDay\",\r\n\t\t\t\t\t\t\"_label\":\"Expiration Date\",\r\n\t\t\t\t\t\t\"_placeholderLabel\":\"Expiration Date\",\r\n\t\t\t\t\t\t\"_fieldType\":\"readOnlyDate\",\r\n\t\t\t\t\t\t\"_configJson\":{\"width\": \"50%\", \"mappable\": false}\r\n\t\t\t\t\t},{ \r\n\t\t\t\t\t\t\"formFieldValueProperty\": \"SubjectArea\",\r\n\t\t\t\t\t\t\"_label\":\"Subject Area(s)\",\r\n\t\t\t\t\t\t\"_placeholderLabel\":\"Subject Area(s)\",\r\n\t\t\t\t\t\t\"_fieldType\":\"readOnlyText\",\r\n\t\t\t\t\t\t\"_configJson\":{\"mappable\": false}\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}`\r\n\t\t}\r\n\t\t,{\r\n\t\t\t_fieldDefId: '4791944d-c33b-4cf7-9474-ca0d5d97a95f',\r\n\t\t\t_label: \"Clearance(s)\",\r\n\t\t\t_externalData: 'Employee.Credentials.Clearance',\r\n\t\t\t_fieldType: 'cmp-credential-group',\r\n\t\t\t_configJson: `{\r\n\t\t\t\t\"mappable\": false,\r\n\t\t\t\t\"fields\":[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"formFieldValueProperty\": \"CredentialType\",\r\n\t\t\t\t\t\t\"_label\": \"Clearance(s)\",\r\n\t\t\t\t\t\t\"_placeholderLabel\":\"Clearance(s)\",\r\n\t\t\t\t\t\t\"_fieldType\": \"heading\",\r\n\t\t\t\t\t\t\"_configJson\":{\"mappable\": false}\r\n\t\t\t\t\t},{\r\n\t\t\t\t\t\t\"formFieldValueProperty\": \"Name\",\r\n\t\t\t\t\t\t\"_label\": \"Credential Name\",\r\n\t\t\t\t\t\t\"_placeholderLabel\":\"Credential Name\",\r\n\t\t\t\t\t\t\"_fieldType\": \"readOnlyText\",\r\n\t\t\t\t\t\t\"_configJson\":{\"mappable\": false}\r\n\t\t\t\t\t},{ \r\n\t\t\t\t\t\t\"formFieldValueProperty\": \"Issuer\",\r\n\t\t\t\t\t\t\"_label\":\"Issuer\",\r\n\t\t\t\t\t\t\"_placeholderLabel\":\"Issuer\",\r\n\t\t\t\t\t\t\"_fieldType\":\"readOnlyText\",\r\n\t\t\t\t\t\t\"_configJson\":{\"mappable\": false}\r\n\t\t\t\t\t},{ \r\n\t\t\t\t\t\t\"formFieldValueProperty\": \"DocumentNumber\",\r\n\t\t\t\t\t\t\"_label\":\"Document Number\",\r\n\t\t\t\t\t\t\"_placeholderLabel\":\"Document Number\",\r\n\t\t\t\t\t\t\"_fieldType\":\"readOnlyText\",\r\n\t\t\t\t\t\t\"_configJson\":{\"width\": \"50%\", \"mappable\": false}\r\n\t\t\t\t\t},{ \r\n\t\t\t\t\t\t\"formFieldValueProperty\": \"IsVerified\",\r\n\t\t\t\t\t\t\"_label\":\"Verified by Admin\",\r\n\t\t\t\t\t\t\"_placeholderLabel\":\"Verified by Admin\",\r\n\t\t\t\t\t\t\"_fieldType\":\"readOnlyText\",\r\n\t\t\t\t\t\t\"_configJson\":{\"width\": \"50%\", \"mappable\": false}\r\n\t\t\t\t\t},{ \r\n\t\t\t\t\t\t\"formFieldValueProperty\": \"StateStartedDay\",\r\n\t\t\t\t\t\t \"_label\":\"Start Date\",\r\n\t\t\t\t\t\t \"_placeholderLabel\":\"Start Date\",\r\n\t\t\t\t\t\t \"_fieldType\":\"readOnlyDate\",\r\n\t\t\t\t\t\t \"_configJson\":{\"width\": \"50%\", \"mappable\": false}\r\n\t\t\t\t\t},{ \r\n\t\t\t\t\t\t\"formFieldValueProperty\": \"ExpirationDay\",\r\n\t\t\t\t\t\t\"_label\":\"Expiration Date\",\r\n\t\t\t\t\t\t\"_placeholderLabel\":\"Expiration Date\",\r\n\t\t\t\t\t\t\"_fieldType\":\"readOnlyDate\",\r\n\t\t\t\t\t\t\"_configJson\":{\"width\": \"50%\", \"mappable\": false}\r\n\t\t\t\t\t},{ \r\n\t\t\t\t\t\t\"formFieldValueProperty\": \"SubjectArea\",\r\n\t\t\t\t\t\t\"_label\":\"Subject Area(s)\",\r\n\t\t\t\t\t\t\"_placeholderLabel\":\"Subject Area(s)\",\r\n\t\t\t\t\t\t\"_fieldType\":\"readOnlyText\",\r\n\t\t\t\t\t\t\"_configJson\":{\"mappable\": false}\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}`\r\n\t\t},{\r\n\t\t\t_fieldDefId: '51c4735e-07b7-492b-a181-1b4aef352578',\r\n\t\t\t_label: \"Driver's License(s)\",\r\n\t\t\t_fieldType: 'cmp-credential-group',\r\n\t\t\t_externalData: 'Employee.Credentials.DriversLicense',\r\n\t\t\t_configJson: `{\r\n\t\t\t\t\"mappable\": false,\r\n\t\t\t\t\"fields\":[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"formFieldValueProperty\": \"CredentialType\",\r\n\t\t\t\t\t\t\"_label\": \"Driver's License(s)\",\r\n\t\t\t\t\t\t\"_placeholderLabel\":\"Driver's License(s)\",\r\n\t\t\t\t\t\t\"_fieldType\": \"heading\",\r\n\t\t\t\t\t\t\"_configJson\":{\"mappable\": false}\r\n\t\t\t\t\t},{\r\n\t\t\t\t\t\t\"formFieldValueProperty\": \"Name\",\r\n\t\t\t\t\t\t\"_label\": \"Credential Name\",\r\n\t\t\t\t\t\t\"_placeholderLabel\":\"Credential Name\",\r\n\t\t\t\t\t\t\"_fieldType\": \"readOnlyText\",\r\n\t\t\t\t\t\t\"_configJson\":{\"mappable\": false}\r\n\t\t\t\t\t},{ \r\n\t\t\t\t\t\t\"formFieldValueProperty\": \"Issuer\",\r\n\t\t\t\t\t\t\"_label\":\"Issuer\",\r\n\t\t\t\t\t\t\"_placeholderLabel\":\"Issuer\",\r\n\t\t\t\t\t\t\"_fieldType\":\"readOnlyText\",\r\n\t\t\t\t\t\t\"_configJson\":{\"mappable\": false}\r\n\t\t\t\t\t},{ \r\n\t\t\t\t\t\t\"formFieldValueProperty\": \"DocumentNumber\",\r\n\t\t\t\t\t\t\"_label\":\"Driver License Number\",\r\n\t\t\t\t\t\t\"_placeholderLabel\":\"Driver License Number\",\r\n\t\t\t\t\t\t\"_fieldType\":\"readOnlyText\",\r\n\t\t\t\t\t\t\"_configJson\":{\"width\": \"50%\",\"mappable\": false}\r\n\t\t\t\t\t},{ \r\n\t\t\t\t\t\t\"formFieldValueProperty\": \"IsVerified\",\r\n\t\t\t\t\t\t\"_label\":\"Verified by Admin\",\r\n\t\t\t\t\t\t\"_placeholderLabel\":\"Verified by Admin\",\r\n\t\t\t\t\t\t\"_fieldType\":\"readOnlyText\",\r\n\t\t\t\t\t\t\"_configJson\":{\"width\": \"50%\",\"mappable\": false}\r\n\t\t\t\t\t},{ \r\n\t\t\t\t\t\t\"formFieldValueProperty\": \"StateStartedDay\",\r\n\t\t\t\t\t\t \"_label\":\"Start Date\",\r\n\t\t\t\t\t\t \"_placeholderLabel\":\"Start Date\",\r\n\t\t\t\t\t\t \"_fieldType\":\"readOnlyDate\",\r\n\t\t\t\t\t\t \"_configJson\":{\"width\": \"50%\",\"mappable\": false}\r\n\t\t\t\t\t},{ \r\n\t\t\t\t\t\t\"formFieldValueProperty\": \"ExpirationDay\",\r\n\t\t\t\t\t\t\"_label\":\"Expiration Date\",\r\n\t\t\t\t\t\t\"_placeholderLabel\":\"Expiration Date\",\r\n\t\t\t\t\t\t\"_fieldType\":\"readOnlyDate\",\r\n\t\t\t\t\t\t\"_configJson\":{\"width\": \"50%\",\"mappable\": false}\r\n\t\t\t\t\t},{ \r\n\t\t\t\t\t\t\"formFieldValueProperty\": \"SubjectArea\",\r\n\t\t\t\t\t\t\"_label\":\"Subject Area(s)\",\r\n\t\t\t\t\t\t\"_placeholderLabel\":\"Subject Area(s)\",\r\n\t\t\t\t\t\t\"_fieldType\":\"readOnlyText\",\r\n\t\t\t\t\t\t\"_configJson\":{\"mappable\": false}\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}`\r\n\t\t},{\r\n\t\t\t_fieldDefId: '0dd5a6bb-852f-459c-9668-227dd4f813bd',\r\n\t\t\t_label: \"Other/Custom\",\r\n\t\t\t_fieldType: 'cmp-credential-group',\r\n\t\t\t_externalData: 'Employee.Credentials.Custom',\r\n\t\t\t_configJson: `{\r\n\t\t\t\t\"mappable\": false,\r\n\t\t\t\t\"fields\":[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"formFieldValueProperty\": \"CredentialType\",\r\n\t\t\t\t\t\t\"_label\": \"Other/Custom\",\r\n\t\t\t\t\t\t\"_placeholderLabel\":\"Other/Custom\",\r\n\t\t\t\t\t\t\"_fieldType\": \"heading\",\r\n\t\t\t\t\t\t\"_configJson\":{\"mappable\": false}\r\n\t\t\t\t\t},{\r\n\t\t\t\t\t\t\"formFieldValueProperty\": \"Name\",\r\n\t\t\t\t\t\t\"_label\": \"Credential Name\",\r\n\t\t\t\t\t\t\"_placeholderLabel\":\"Credential Name\",\r\n\t\t\t\t\t\t\"_fieldType\": \"readOnlyText\",\r\n\t\t\t\t\t\t\"_configJson\":{\"mappable\": false}\r\n\t\t\t\t\t},{ \r\n\t\t\t\t\t\t\"formFieldValueProperty\": \"Issuer\",\r\n\t\t\t\t\t\t\"_label\":\"Issuer\",\r\n\t\t\t\t\t\t\"_placeholderLabel\":\"Issuer\",\r\n\t\t\t\t\t\t\"_fieldType\":\"readOnlyText\",\r\n\t\t\t\t\t\t\"_configJson\":{\"mappable\": false}\r\n\t\t\t\t\t},{ \r\n\t\t\t\t\t\t\"formFieldValueProperty\": \"DocumentNumber\",\r\n\t\t\t\t\t\t\"_label\":\"Document Number\",\r\n\t\t\t\t\t\t\"_placeholderLabel\":\"Document Number\",\r\n\t\t\t\t\t\t\"_fieldType\":\"readOnlyText\",\r\n\t\t\t\t\t\t\"_configJson\":{\"width\": \"50%\",\"mappable\": false}\r\n\t\t\t\t\t},{ \r\n\t\t\t\t\t\t\"formFieldValueProperty\": \"IsVerified\",\r\n\t\t\t\t\t\t\"_label\":\"Verified by Admin\",\r\n\t\t\t\t\t\t\"_placeholderLabel\":\"Verified by Admin\",\r\n\t\t\t\t\t\t\"_fieldType\":\"readOnlyText\",\r\n\t\t\t\t\t\t\"_configJson\":{\"width\": \"50%\",\"mappable\": false}\r\n\t\t\t\t\t},{ \r\n\t\t\t\t\t\t\"formFieldValueProperty\": \"StateStartedDay\",\r\n\t\t\t\t\t\t \"_label\":\"Start Date\",\r\n\t\t\t\t\t\t \"_placeholderLabel\":\"Start Date\",\r\n\t\t\t\t\t\t \"_fieldType\":\"readOnlyDate\",\r\n\t\t\t\t\t\t \"_configJson\":{\"width\": \"50%\",\"mappable\": false}\r\n\t\t\t\t\t},{ \r\n\t\t\t\t\t\t\"formFieldValueProperty\": \"ExpirationDay\",\r\n\t\t\t\t\t\t\"_label\":\"Expiration Date\",\r\n\t\t\t\t\t\t\"_placeholderLabel\":\"Expiration Date\",\r\n\t\t\t\t\t\t\"_fieldType\":\"readOnlyDate\",\r\n\t\t\t\t\t\t\"_configJson\":{\"width\": \"50%\",\"mappable\": false}\r\n\t\t\t\t\t},{ \r\n\t\t\t\t\t\t\"formFieldValueProperty\": \"SubjectArea\",\r\n\t\t\t\t\t\t\"_label\":\"Subject Area(s)\",\r\n\t\t\t\t\t\t\"_placeholderLabel\":\"Subject Area(s)\",\r\n\t\t\t\t\t\t\"_fieldType\":\"readOnlyText\",\r\n\t\t\t\t\t\t\"_configJson\":{\"mappable\": false}\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}`\r\n\t\t}\r\n\t],\r\n\tlegalName: [\r\n\t\t{\r\n\t\t\t_configJson: '{\"mappable\": false}',\r\n\t\t\t_label: 'Legal Name',\r\n\t\t\t_placeholderLabel: 'Legal Name',\r\n\t\t\t_fieldType: 'heading'\r\n\t\t}, {\r\n\t\t\t_configJson: '{\"mappable\": false}',\r\n\t\t\t_fieldType: 'instructions',\r\n\t\t\t_label: ''\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '54c1e578-f3f5-4832-be7f-7e5abe48fb45',\r\n\t\t\t_label: 'Title',\r\n\t\t\t_placeholderLabel: 'Title',\r\n\t\t\t_configJson: '{\"width\":\"15%\", \"externalSourceType\": \"enum\", \"externalSource\": \"salutation\", \"readOnly\":\"_title\"}',\r\n\t\t\t_externalData: 'Employee.Title',\r\n\t\t\t_sampleData: 1,\r\n\t\t\t_fieldType: 'super-select-list',\r\n\t\t\t_fieldTypeOptions: {\r\n\t\t\t\tedit: 'super-select-list',\r\n\t\t\t\tview: 'readOnlyText'\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\t_fieldDefId: 'b2d3891a-9b39-4ea7-b00f-597a355c2bda',\r\n\t\t\t_label: 'First Name',\r\n\t\t\t_placeholderLabel: 'First Name',\r\n\t\t\t_configJson: '{\"width\":\"25%\", \"readOnly\":\"_firstName\"}',\r\n\t\t\t_externalData: 'Employee.FirstName',\r\n\t\t\t_sampleData: 'John',\r\n\t\t\t_fieldTypeOptions: {\r\n\t\t\t\tedit: 'super-input-text',\r\n\t\t\t\tview: 'readOnlyText'\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '72cdb2b4-6073-47fd-a4b3-70e1fffe5504',\r\n\t\t\t_label: 'Middle Name',\r\n\t\t\t_placeholderLabel: 'Middle Name',\r\n\t\t\t_configJson: '{\"width\":\"20%\", \"readOnly\":\"_middleName\"}',\r\n\t\t\t_externalData: 'Employee.MiddleName',\r\n\t\t\t_sampleData: 'Quincy',\r\n\t\t\t_fieldTypeOptions: {\r\n\t\t\t\tedit: 'super-input-text',\r\n\t\t\t\tview: 'readOnlyText'\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '14259f84-46e7-4b73-9558-8a225171e7e1',\r\n\t\t\t_label: 'Last Name',\r\n\t\t\t_placeholderLabel: 'Last Name',\r\n\t\t\t_configJson: '{\"width\":\"25%\", \"readOnly\":\"_lastName\"}',\r\n\t\t\t_externalData: 'Employee.LastName',\r\n\t\t\t_sampleData: 'Doe',\r\n\t\t\t_fieldTypeOptions: {\r\n\t\t\t\tedit: 'super-input-text',\r\n\t\t\t\tview: 'readOnlyText'\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\t_fieldDefId: 'f443473f-bf27-4421-96e3-78d2730b3fe9',\r\n\t\t\t_label: 'Suffix',\r\n\t\t\t_placeholderLabel: 'Suffix',\r\n\t\t\t_fieldType: 'super-select-list',\r\n\t\t\t_configJson: '{\"width\":\"15%\", \"externalSourceType\": \"enum\", \"externalSource\": \"suffix\", \"readOnly\":\"_suffix\"}',\r\n\t\t\t_externalData: 'Employee.Suffix',\r\n\t\t\t_sampleData: 2,\r\n\t\t\t_fieldTypeOptions: {\r\n\t\t\t\tedit: 'super-select-list',\r\n\t\t\t\tview: 'readOnlyText'\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\r\n\taliasName: [\r\n\t\t{\r\n\t\t\t_configJson: '{\"mappable\": false}',\r\n\t\t\t_label: 'Other Name',\r\n\t\t\t_placeholderLabel: 'Other Name',\r\n\t\t\t_fieldType: 'heading'\r\n\t\t}, {\r\n\t\t\t_configJson: '{\"mappable\": false}',\r\n\t\t\t_fieldType: 'instructions',\r\n\t\t\t_label: ''\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '8f4a60cd-548e-419b-bfd4-fdf92c3fbe60',\r\n\t\t\t_label: 'First Name',\r\n\t\t\t_placeholderLabel: 'Other First Name',\r\n\t\t\t_configJson: '{\"width\":\"33%\", \"readOnly\":\"_aliasFirstName\", \"uniqueLabel\":\"Other First Name\"}',\r\n\t\t\t_externalData: 'Employee.AliasFirstName',\r\n\t\t\t_sampleData: 'John',\r\n\t\t\t_fieldTypeOptions: {\r\n\t\t\t\tedit: 'super-input-text',\r\n\t\t\t\tview: 'readOnlyText'\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '37ef5ec9-6356-4d96-83c1-f184fcc93b08',\r\n\t\t\t_label: 'Middle Name',\r\n\t\t\t_placeholderLabel: 'Other Middle Name',\r\n\t\t\t_configJson: '{\"width\":\"33%\", \"readOnly\":\"_aliasMiddleName\", \"uniqueLabel\":\"Other Middle Name\"}',\r\n\t\t\t_externalData: 'Employee.AliasMiddleName',\r\n\t\t\t_sampleData: 'Quincy',\r\n\t\t\t_fieldTypeOptions: {\r\n\t\t\t\tedit: 'super-input-text',\r\n\t\t\t\tview: 'readOnlyText'\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\t_fieldDefId: 'fc7c530f-49e8-493a-ad8c-678675061cfc',\r\n\t\t\t_label: 'Last Name',\r\n\t\t\t_placeholderLabel: 'Other Last Name',\r\n\t\t\t_configJson: '{\"width\":\"33%\", \"readOnly\":\"_aliasLastName\", \"uniqueLabel\":\"Other Last Name\"}',\r\n\t\t\t_externalData: 'Employee.AliasLastName',\r\n\t\t\t_sampleData: 'Doe',\r\n\t\t\t_fieldTypeOptions: {\r\n\t\t\t\tedit: 'super-input-text',\r\n\t\t\t\tview: 'readOnlyText'\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\r\n\taddress: [\r\n\t\t{\r\n\t\t\t_configJson: '{\"mappable\": false}',\r\n\t\t\t_label: 'Address',\r\n\t\t\t_placeholderLabel: 'Address',\r\n\t\t\t_fieldType: 'heading'\r\n\t\t}, {\r\n\t\t\t_configJson: '{\"mappable\": false}',\r\n\t\t\t_fieldType: 'instructions',\r\n\t\t\t_label: ''\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '4429b708-0db0-4d8d-af45-baeb4ca01245',\r\n\t\t\t_label: 'Address 1',\r\n\t\t\t_placeholderLabel: 'Address 1',\r\n\t\t\t_configJson: '{\"readOnly\":\"address._street1\", \"uniqueLabel\":\"Address 1\"}',\r\n\t\t\t_externalData: 'Employee.Addresses.Primary.Street1',\r\n\t\t\t_sampleData: '123 Main St.',\r\n\t\t\t_fieldTypeOptions: {\r\n\t\t\t\tedit: 'super-input-text',\r\n\t\t\t\tview: 'readOnlyText'\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\t_fieldDefId: 'e4d6142e-8c45-4a81-8cf9-3740a6923382',\r\n\t\t\t_label: 'Address 2',\r\n\t\t\t_placeholderLabel: 'Address 2',\r\n\t\t\t_configJson: '{\"readOnly\":\"address._street2\", \"uniqueLabel\":\"Address 2\"}',\r\n\t\t\t_externalData: 'Employee.Addresses.Primary.Street2',\r\n\t\t\t_sampleData: 'Apt. 1',\r\n\t\t\t_fieldTypeOptions: {\r\n\t\t\t\tedit: 'super-input-text',\r\n\t\t\t\tview: 'readOnlyText'\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\t_fieldDefId: 'e5ecad6a-5193-48b2-be95-ebd7401a5cf5',\r\n\t\t\t_label: 'City',\r\n\t\t\t_placeholderLabel: 'City',\r\n\t\t\t_configJson: '{\"readOnly\":\"address._city\", \"uniqueLabel\":\"City\"}',\r\n\t\t\t_externalData: 'Employee.Addresses.Primary.City',\r\n\t\t\t_sampleData: 'Anytown',\r\n\t\t\t_fieldTypeOptions: {\r\n\t\t\t\tedit: 'super-input-text',\r\n\t\t\t\tview: 'readOnlyText'\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '07ebdcec-0ff6-46ad-92aa-121b8573b8a6',\r\n\t\t\t_label: 'State',\r\n\t\t\t_placeholderLabel: 'State',\r\n\t\t\t_configJson: '{\"width\":\"50%\", \"externalSourceType\": \"enum\", \"externalSource\": \"states\", \"readOnly\":\"address._state\", \"uniqueLabel\":\"State\"}',\r\n\t\t\t_externalData: 'Employee.Addresses.Primary.State',\r\n\t\t\t_sampleData: 'NY',\r\n\t\t\t_fieldType: 'super-select-list',\r\n\t\t\t_fieldTypeOptions: {\r\n\t\t\t\tedit: 'super-select-list',\r\n\t\t\t\tview: 'readOnlyText'\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '4dc761df-2ce8-498d-bb7d-27606480627b',\r\n\t\t\t_label: 'Zip Code',\r\n\t\t\t_placeholderLabel: 'Zip Code',\r\n\t\t\t_configJson: '{\"width\":\"50%\", \"readOnly\":\"address._zip\", \"uniqueLabel\":\"Zip Code\"}',\r\n\t\t\t_externalData: 'Employee.Addresses.Primary.Zip',\r\n\t\t\t_sampleData: '12345',\r\n\t\t\t_fieldTypeOptions: {\r\n\t\t\t\tedit: 'super-input-text',\r\n\t\t\t\tview: 'readOnlyText'\r\n\t\t\t},\r\n\t\t\t_validator: {\r\n\t\t\t\ttype: 'zip',\r\n\t\t\t\toptions: {}\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\tcontact: [\r\n\t\t{\r\n\t\t\t_configJson: '{\"mappable\": false}',\r\n\t\t\t_label: 'Contact Information',\r\n\t\t\t_placeholderLabel: 'Contact Information',\r\n\t\t\t_fieldType: 'heading'\r\n\t\t}, {\r\n\t\t\t_configJson: '{\"mappable\": false}',\r\n\t\t\t_fieldType: 'instructions',\r\n\t\t\t_label: ''\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '5e989212-29f0-43e4-8d02-1a6a047b7e48',\r\n\t\t\t_label: 'Work Phone',\r\n\t\t\t_placeholderLabel: 'Work Phone',\r\n\t\t\t_configJson: '{\"width\":\"50%\", \"readOnly\":\"phoneNumbers.work\"}',\r\n\t\t\t_externalData: 'Employee.PhoneNumbers.Work.Number',\r\n\t\t\t_sampleData: '123-456-7890',\r\n\t\t\t_fieldTypeOptions: {\r\n\t\t\t\tedit: 'super-input-text',\r\n\t\t\t\tview: 'readOnlyText'\r\n\t\t\t},\r\n\t\t\t_validator: {\r\n\t\t\t\ttype: 'phone',\r\n\t\t\t\toptions: {}\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '5c34865e-9e5b-4ece-96ca-d412254506a0',\r\n\t\t\t_label: 'Ext.',\r\n\t\t\t_placeholderLabel: 'Work Phone Ext.',\r\n\t\t\t_configJson: '{\"width\":\"50%\",\"readOnly\":\"phoneNumbers.workExt\", \"uniqueLabel\":\"Work Phone Ext.\"}',\r\n\t\t\t_externalData: 'Employee.PhoneNumbers.Work.Extension',\r\n\t\t\t_sampleData: '1234',\r\n\t\t\t_fieldTypeOptions: {\r\n\t\t\t\tedit: 'super-input-text',\r\n\t\t\t\tview: 'readOnlyText'\r\n\t\t\t},\r\n\t\t\t_validator: {\r\n\t\t\t\ttype: 'numeric',\r\n\t\t\t\toptions: {}\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '0977c048-185c-4eec-8800-74842a7fbb4f',\r\n\t\t\t_label: 'Personal Phone',\r\n\t\t\t_placeholderLabel: 'Personal Phone',\r\n\t\t\t_configJson: '{\"width\":\"50%\",\"readOnly\":\"phoneNumbers.personal\"}',\r\n\t\t\t_externalData: 'Employee.PhoneNumbers.Personal.Number',\r\n\t\t\t_sampleData: '123-456-7890',\r\n\t\t\t_fieldTypeOptions: {\r\n\t\t\t\tedit: 'super-input-text',\r\n\t\t\t\tview: 'readOnlyText'\r\n\t\t\t},\r\n\t\t\t_validator: {\r\n\t\t\t\ttype: 'phone',\r\n\t\t\t\toptions: {}\r\n\t\t\t}\r\n\t\t},{\r\n\t\t\t_fieldDefId: '7a2caf47-562c-4b28-90af-969357493586',\r\n\t\t\t_label: 'Type',\r\n\t\t\t_placeholderLabel: 'Personal Phone Type',\r\n\t\t\t_configJson: '{\"width\":\"30%\", \"externalSourceType\": \"enum\", \"externalSource\": \"phoneTypes\",\"readOnly\":\"phoneNumbers.personalPhoneType\", \"uniqueLabel\":\"Personal Phone Type\"}',\r\n\t\t\t_externalData: 'Employee.PhoneNumbers.Personal.PhoneType',\r\n\t\t\t_sampleData: 1,\r\n\t\t\t_fieldType: 'super-select-list',\r\n\t\t\t_fieldTypeOptions: {\r\n\t\t\t\tedit: 'super-select-list',\r\n\t\t\t\tview: 'readOnlyText'\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '2cedb2be-12d9-4958-9247-d2e974a22bbc',\r\n\t\t\t_label: 'Primary',\r\n\t\t\t_placeholderLabel: 'Primary',\r\n\t\t\t_configJson: '{\"width\":\"20%\",\"readOnly\":\"phoneNumbers.personalIsPrimary\", \"uniqueLabel\":\"primary phone (personal)\"}',\r\n\t\t\t_externalData: 'Employee.PhoneNumbers.Personal.IsPrimary',\r\n\t\t\t_sampleData: true,\r\n\t\t\t_fieldType: 'super-input-checkbox',\r\n\t\t\t_fieldTypeOptions: {\r\n\t\t\t\tedit: 'super-input-checkbox',\r\n\t\t\t\tview: 'readOnlyText'\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\t_fieldDefId: 'f658f159-910a-485f-89b7-f20559222f73',\r\n\t\t\t_label: 'Other Phone',\r\n\t\t\t_placeholderLabel: 'Other Phone',\r\n\t\t\t_configJson: '{\"width\":\"50%\",\"readOnly\":\"phoneNumbers.other\"}',\r\n\t\t\t_externalData: 'Employee.PhoneNumbers.Other.Number',\r\n\t\t\t_sampleData: '123-456-7890',\r\n\t\t\t_fieldTypeOptions: {\r\n\t\t\t\tedit: 'super-input-text',\r\n\t\t\t\tview: 'readOnlyText'\r\n\t\t\t},\r\n\t\t\t_validator: {\r\n\t\t\t\ttype: 'phone',\r\n\t\t\t\toptions: {}\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '9b7f605f-c5b4-46bd-8096-85acc8f358f6',\r\n\t\t\t_label: 'Type',\r\n\t\t\t_placeholderLabel: 'Other Phone Type',\r\n\t\t\t_configJson: '{\"width\":\"25%\", \"externalSourceType\": \"enum\", \"externalSource\": \"phoneTypes\",\"readOnly\":\"phoneNumbers.otherPhoneType\", \"uniqueLabel\":\"Other Phone Type\"}',\r\n\t\t\t_externalData: 'Employee.PhoneNumbers.Other.PhoneType',\r\n\t\t\t_sampleData: 2,\r\n\t\t\t_fieldType: 'super-select-list',\r\n\t\t\t_fieldTypeOptions: {\r\n\t\t\t\tedit: 'super-select-list',\r\n\t\t\t\tview: 'readOnlyText'\r\n\t\t\t},\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '9e32dbea-8575-478a-9b98-4f731d9c121d',\r\n\t\t\t_label: 'Primary',\r\n\t\t\t_placeholderLabel: 'Primary',\r\n\t\t\t_configJson: '{\"width\":\"25%\",\"readOnly\":\"phoneNumbers.otherIsPrimary\", \"uniqueLabel\":\"primary phone (other)\"}',\r\n\t\t\t_externalData: 'Employee.PhoneNumbers.Other.IsPrimary',\r\n\t\t\t_sampleData: false,\r\n\t\t\t_fieldType: 'super-input-checkbox',\r\n\t\t\t_fieldTypeOptions: {\r\n\t\t\t\tedit: 'super-input-checkbox',\r\n\t\t\t\tview: 'readOnlyText'\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\t_fieldDefId: 'f513faf6-fb0d-43c3-851c-178121015d29',\r\n\t\t\t_label: 'Work E-Mail',\r\n\t\t\t_placeholderLabel: 'Work E-mail',\r\n\t\t\t_configJson: '{\"width\":\"50%\",\"readOnly\":\"emails.work\"}',\r\n\t\t\t_externalData: 'Employee.Emails.Work.EmailAddress',\r\n\t\t\t_sampleData: 'work@email.com',\r\n\t\t\t_fieldTypeOptions: {\r\n\t\t\t\tedit: 'super-input-text',\r\n\t\t\t\tview: 'readOnlyText'\r\n\t\t\t},\r\n\t\t\t_validator: {\r\n\t\t\t\ttype: 'email',\r\n\t\t\t\toptions: {}\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '6172d8d3-cf07-41cf-b77d-2c0cf2e7bfd8',\r\n\t\t\t_label: 'Personal E-Mail',\r\n\t\t\t_placeholderLabel: 'Personal E-mail',\r\n\t\t\t_configJson: '{\"width\":\"50%\",\"readOnly\":\"emails.personal\"}',\r\n\t\t\t_externalData: 'Employee.Emails.Personal.EmailAddress',\r\n\t\t\t_sampleData: 'personal@email.com',\r\n\t\t\t_fieldTypeOptions: {\r\n\t\t\t\tedit: 'super-input-text',\r\n\t\t\t\tview: 'readOnlyText'\r\n\t\t\t},\r\n\t\t\t_validator: {\r\n\t\t\t\ttype: 'email',\r\n\t\t\t\toptions: {}\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\r\n\tpersonal: [\r\n\t\t{\r\n\t\t\t_configJson: '{\"mappable\": false}',\r\n\t\t\t_label: 'Personal',\r\n\t\t\t_placeholderLabel: 'Personal',\r\n\t\t\t_fieldType: 'heading'\r\n\t\t}, {\r\n\t\t\t_configJson: '{\"mappable\": false}',\r\n\t\t\t_fieldType: 'instructions',\r\n\t\t\t_label: ''\r\n\t\t}, {\r\n\t\t\t_fieldDefId: 'aa736224-2a09-490a-b069-7cc945a040ea',\r\n\t\t\t_label: 'Birth Date',\r\n\t\t\t_placeholderLabel: 'Birth Date',\r\n\t\t\t_configJson: '{\"width\":\"33%\",\"readOnly\":\"personalInfo.birthDate\"}',\r\n\t\t\t_externalData: 'Employee.BirthDateUtc',\r\n\t\t\t_sampleData: '01/01/0001',\r\n\t\t\t_fieldType: 'super-iso-org-date',\r\n\t\t\t_fieldTypeOptions: {\r\n\t\t\t\tedit: 'super-iso-org-date',\r\n\t\t\t\tview: 'readOnlyDate'\r\n\t\t\t},\r\n\t\t\t_sensitive: true\r\n\t\t}, {\r\n\t\t\t_fieldDefId: 'ba2d2021-59b6-45b9-9e4b-c501d064e012',\r\n\t\t\t_label: 'SSN',\r\n\t\t\t_placeholderLabel: 'SSN',\r\n\t\t\t_configJson: '{\"width\":\"33%\",\"readOnly\":\"personalInfo.ssn\"}',\r\n\t\t\t_externalData: 'Employee.SSN',\r\n\t\t\t_sampleData: '123-45-6789',\r\n\t\t\t_fieldTypeOptions: {\r\n\t\t\t\tedit: 'super-input-text',\r\n\t\t\t\tview: 'readOnlyText'\r\n\t\t\t},\r\n\t\t\t_sensitive: true,\r\n\t\t\t_validator: {\r\n\t\t\t\ttype: 'ssn',\r\n\t\t\t\toptions: {}\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '4b232b2d-aa7a-4578-b620-cf241caee9ce',\r\n\t\t\t_label: 'External ID',\r\n\t\t\t_placeholderLabel: 'External ID',\r\n\t\t\t_configJson: '{\"width\":\"33%\",\"readOnly\":\"personalInfo.externalId\"}',\r\n\t\t\t_externalData: 'Employee.ExternalId',\r\n\t\t\t_sampleData: '12345',\r\n\t\t\t_fieldTypeOptions: {\r\n\t\t\t\tedit: 'super-input-text',\r\n\t\t\t\tview: 'readOnlyText'\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\t_fieldDefId: 'b78df686-cfbf-463f-919b-26acee984abc',\r\n\t\t\t_label: 'Marital Status',\r\n\t\t\t_placeholderLabel: 'Marital Status',\r\n\t\t\t_configJson: '{\"width\":\"50%\", \"externalSourceType\": \"enum\", \"externalSource\": \"maritalStatus\",\"readOnly\":\"personalInfo.maritalStatus\"}',\r\n\t\t\t_externalData: 'Employee.MaritalStatus',\r\n\t\t\t_sampleData: 0,\r\n\t\t\t_fieldType: 'super-select-list',\r\n\t\t\t_fieldTypeOptions: {\r\n\t\t\t\tedit: 'super-select-list',\r\n\t\t\t\tview: 'readOnlyText'\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '3fe07f5a-f5b5-4c31-b975-b2d363b76240',\r\n\t\t\t_label: 'Gender',\r\n\t\t\t_placeholderLabel: 'Gender',\r\n\t\t\t_configJson: '{\"width\":\"50%\", \"externalSourceType\": \"enum\", \"externalSource\": \"gender\",\"readOnly\":\"personalInfo.gender\"}',\r\n\t\t\t_externalData: 'Employee.Gender',\r\n\t\t\t_sampleData: 0,\r\n\t\t\t_fieldType: 'super-select-list',\r\n\t\t\t_fieldTypeOptions: {\r\n\t\t\t\tedit: 'super-select-list',\r\n\t\t\t\tview: 'readOnlyText'\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\t_fieldDefId: 'c78acc62-5b6a-4401-a0fb-8c0cd8cd4ca1',\r\n\t\t\t_label: 'Ethnicity',\r\n\t\t\t_placeholderLabel: 'Ethnicity',\r\n\t\t\t_configJson: '{\"width\":\"50%\", \"externalSourceType\": \"enum\", \"externalSource\": \"ethnicity\",\"readOnly\":\"personalInfo.ethnicity\"}',\r\n\t\t\t_externalData: 'Employee.Ethnicity',\r\n\t\t\t_sampleData: 1,\r\n\t\t\t_fieldType: 'super-select-list',\r\n\t\t\t_fieldTypeOptions: {\r\n\t\t\t\tedit: 'super-select-list',\r\n\t\t\t\tview: 'readOnlyText'\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\t_fieldDefId: 'bd5cc16e-b1b5-4246-98da-8289bc24a451',\r\n\t\t\t_label: 'Race',\r\n\t\t\t_placeholderLabel: 'Race',\r\n\t\t\t_configJson: '{\"width\":\"50%\", \"externalSourceType\": \"enum\", \"externalSource\": \"race\",\"readOnly\":\"personalInfo.race\"}',\r\n\t\t\t_externalData: 'Employee.Race',\r\n\t\t\t_sampleData: 4,\r\n\t\t\t_fieldType: 'super-select-list',\r\n\t\t\t_fieldTypeOptions: {\r\n\t\t\t\tedit: 'super-select-list',\r\n\t\t\t\tview: 'readOnlyText'\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\r\n\temployment: [\r\n\t\t{\r\n\t\t\t_configJson: '{\"mappable\": false}',\r\n\t\t\t_label: 'Employment',\r\n\t\t\t_placeholderLabel: 'Employment',\r\n\t\t\t_fieldType: 'readOnlyHeading'\r\n\t\t}, {\r\n\t\t\t_configJson: '{\"mappable\": false}',\r\n\t\t\t_fieldType: 'instructions',\r\n\t\t\t_label: ''\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '8d33bb12-8ab6-476a-b306-91e82cbe30f4',\r\n\t\t\t_label: 'Hire Date',\r\n\t\t\t_placeholderLabel: 'Hire Date',\r\n\t\t\t_configJson: '{\"width\":\"33%\", \"readOnly\":\"_hireDate\"}',\r\n\t\t\t_externalData: 'Employee.HireDate',\r\n\t\t\t_sampleData: '01/01/0001',\r\n\t\t\t_fieldType: 'readOnlyDate'\r\n\t\t}, {\r\n\t\t\t_fieldDefId: 'e45f9c7a-4621-4b88-ae21-e3abd33ab366',\r\n\t\t\t_label: 'Seniority Date',\r\n\t\t\t_placeholderLabel: 'Seniority Date',\r\n\t\t\t_configJson: '{\"width\":\"33%\", \"readOnly\":\"_seniorityDate\"}',\r\n\t\t\t_externalData: 'Employee.SeniorityDate',\r\n\t\t\t_sampleData: '01/01/0001',\r\n\t\t\t_fieldType: 'readOnlyDate'\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '7e784681-a31e-4af3-9756-cb2d5077ea3c',\r\n\t\t\t_label: 'Tenure Date',\r\n\t\t\t_placeholderLabel: 'Tenure Date',\r\n\t\t\t_configJson: '{\"width\":\"33%\", \"readOnly\":\"_tenureDate\"}',\r\n\t\t\t_externalData: 'Employee.TenureDate',\r\n\t\t\t_sampleData: '01/01/0001',\r\n\t\t\t_fieldType: 'readOnlyDate',\r\n\t\t\t_hideForHRMS: true\r\n\t\t}\r\n\t],\r\n\r\n\tprimaryAssignment: [\r\n\t\t{\r\n\t\t\t_configJson: '{\"mappable\": false}',\r\n\t\t\t_label: 'Primary Assignment',\r\n\t\t\t_placeholderLabel: 'Primary Assignment',\r\n\t\t\t_fieldType: 'readOnlyHeading'\r\n\t\t}, {\r\n\t\t\t_configJson: '{\"mappable\": false}',\r\n\t\t\t_fieldType: 'instructions',\r\n\t\t\t_label: ''\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '5d3ebdb0-f907-4ec3-8886-f2bfe0ba66e9',\r\n\t\t\t_label: 'Start Date',\r\n\t\t\t_placeholderLabel: 'Start Date',\r\n\t\t\t_configJson: '{\"width\":\"50%\", \"readOnly\":\"primaryAssignment.formattedStartDateUtc\", \"uniqueLabel\": \"Primary Asgmt. Start Date\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Primary.StartDateTimeUTC',\r\n\t\t\t_sampleData: '01/01/0001',\r\n\t\t\t_fieldType: 'readOnlyDate'\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '76c6ac41-1b54-4f19-b768-4ecc8e71dce1',\r\n\t\t\t_label: 'End Date',\r\n\t\t\t_placeholderLabel: 'End Date',\r\n\t\t\t_configJson: '{\"width\":\"50%\", \"readOnly\":\"primaryAssignment.formattedEndDateUtc\", \"uniqueLabel\": \"Primary Asgmt. End Date\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Primary.EndDateTimeUTC',\r\n\t\t\t_sampleData: '01/01/0001',\r\n\t\t\t_fieldType: 'readOnlyDate'\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '1efc9ba2-4c12-4270-a353-4d828ac942de',\r\n\t\t\t_label: 'Employment Group',\r\n\t\t\t_placeholderLabel: 'Employment Group',\r\n\t\t\t_configJson: '{\"width\":\"50%\", \"readOnly\":\"primaryPosition.jobType.employmentGroup.name\", \"uniqueLabel\":\"Primary Asgmt. Employment Group\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Primary.JobType.EmploymentGroup.Name',\r\n\t\t\t_sampleData: 'District Employees',\r\n\t\t\t_fieldType: 'readOnlyText',\r\n\t\t\t_hideForHRMS: true\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '1515243d-d6e3-4707-84f5-1ed380a2f2ce',\r\n\t\t\t_label: 'Job Type',\r\n\t\t\t_placeholderLabel: 'Job Type',\r\n\t\t\t_configJson: '{\"width\":\"50%\", \"readOnly\":\"primaryPosition.jobType._name\", \"uniqueLabel\":\"Primary Asgmt. Job Type\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Primary.JobType.Name',\r\n\t\t\t_sampleData: 'Teacher',\r\n\t\t\t_fieldType: 'readOnlyText'\r\n\t\t}, {\r\n\t\t\t_fieldDefId: 'fc5d9260-2fe8-438a-bdc8-2e7e2784db7d',\r\n\t\t\t_label: 'Position Name',\r\n\t\t\t_placeholderLabel: 'Position Name',\r\n\t\t\t_configJson: '{\"readOnly\":\"primaryPosition.name\", \"uniqueLabel\":\"Primary Asgmt. Position\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Primary.Name',\r\n\t\t\t_sampleData: 'First Grade',\r\n\t\t\t_fieldType: 'readOnlyText'\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '1fd44d06-ddc0-48a8-89be-7373a3d724ca',\r\n\t\t\t_label: 'Location',\r\n\t\t\t_placeholderLabel: 'Location',\r\n\t\t\t_configJson: '{\"width\":\"50%\", \"readOnly\":\"primaryPosition.location._name\", \"uniqueLabel\":\"Primary Asgmt. Location\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Primary.Location.Name',\r\n\t\t\t_sampleData: 'ABC Elementary School',\r\n\t\t\t_fieldType: 'readOnlyText'\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '9c165824-f3d9-428e-b28e-4750ac27c1df',\r\n\t\t\t_label: 'Department',\r\n\t\t\t_placeholderLabel: 'Department',\r\n\t\t\t_configJson: '{\"width\":\"50%\", \"readOnly\":\"primaryPosition.department._name\", \"uniqueLabel\":\"Primary Asgmt. Dept.\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Primary.Department.Name',\r\n\t\t\t_sampleData: 'Elementary',\r\n\t\t\t_fieldType: 'readOnlyText'\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '94088ca8-de8a-4bcd-b87b-81dd67803367',\r\n\t\t\t_label: 'FTE',\r\n\t\t\t_placeholderLabel: 'FTE',\r\n\t\t\t_configJson: '{\"width\":\"33%\", \"readOnly\":\"(primaryAssignment.currentDetails._fTE != null) ? primaryAssignment.currentDetails._fTE : primaryPosition.jobType._currentJobTypeDetail.fte\", \"uniqueLabel\":\"Primary Asgmt. FTE\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Primary.FTE',\r\n\t\t\t_sampleData: '1',\r\n\t\t\t_fieldType: 'readOnlyText',\r\n\t\t\t_hideForHRMS: true\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '6cf4854a-9607-49e2-8b66-c550375bba10',\r\n\t\t\t_label: 'Hours Per Day',\r\n\t\t\t_placeholderLabel: 'Hours Per Day',\r\n\t\t\t_configJson: '{\"width\":\"33%\", \"readOnly\":\"(primaryAssignment.currentDetails._hoursPerDay != null) ? primaryAssignment.currentDetails._hoursPerDay : primaryPosition.jobType._currentJobTypeDetail.hoursPerDay\", \"uniqueLabel\":\"Primary Asgmt. Hours/Day\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Primary.HoursPerDay',\r\n\t\t\t_sampleData: '7.5',\r\n\t\t\t_fieldType: 'readOnlyText',\r\n\t\t\t_hideForHRMS: true\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '90adbdc6-f364-4a9e-b517-7fac47a74a22',\r\n\t\t\t_label: 'Work Days Per Year',\r\n\t\t\t_placeholderLabel: 'Work Days Per Year',\r\n\t\t\t_configJson: '{\"width\":\"33%\", \"readOnly\":\"(primaryAssignment.currentDetails._workDaysPerYear != null) ? primaryAssignment.currentDetails._workDaysPerYear : primaryPosition.jobType._currentJobTypeDetail.workDaysPerYear\", \"uniqueLabel\":\"Primary Asgmt. Work Days/Year\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Primary.WorkDays',\r\n\t\t\t_sampleData: '180',\r\n\t\t\t_fieldType: 'readOnlyText',\r\n\t\t\t_hideForHRMS: true\r\n\t\t}\r\n\t],\r\n\r\n\tprimaryAssignmentNew: [\r\n\t\t{\r\n\t\t\t_configJson: '{\"header\": \"Primary Assignment\", \"mappable\": false}',\r\n\t\t\t_label: 'Primary Assignment',\r\n\t\t\t_placeholderLabel: 'Primary Assignment',\r\n\t\t\t_fieldType: 'readOnlyHeading',\r\n\t\t}, {\r\n\t\t\t_configJson: '{\"mappable\": false}',\r\n\t\t\t_fieldType: 'instructions',\r\n\t\t\t_label: ''\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '5d3ebdb0-f907-4ec3-8886-f2bfe0ba66e9',\r\n\t\t\t_label: 'Start Date',\r\n\t\t\t_placeholderLabel: 'Start Date',\r\n\t\t\t_configJson: '{\"width\":\"50%\", \"readOnly\":\"primaryAssignment.formattedStartDateUtc\", \"header\": \"Primary Assignment\", \"uniqueLabel\": \"Primary Asgmt. Start Date\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Primary.StartDateTimeUTC',\r\n\t\t\t_sampleData: '01/01/0001',\r\n\t\t\t_fieldType: 'readOnlyDate',\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '76c6ac41-1b54-4f19-b768-4ecc8e71dce1',\r\n\t\t\t_label: 'End Date',\r\n\t\t\t_placeholderLabel: 'End Date',\r\n\t\t\t_configJson: '{\"width\":\"50%\", \"readOnly\":\"primaryAssignment.formattedEndDateUtc\", \"header\": \"Primary Assignment\", \"uniqueLabel\": \"Primary Asgmt. End Date\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Primary.EndDateTimeUTC',\r\n\t\t\t_sampleData: '01/01/0001',\r\n\t\t\t_fieldType: 'readOnlyDate',\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '1efc9ba2-4c12-4270-a353-4d828ac942de',\r\n\t\t\t_label: 'Employment Group',\r\n\t\t\t_placeholderLabel: 'Employment Group',\r\n\t\t\t_configJson: '{\"width\":\"50%\", \"readOnly\":\"primaryPosition.jobType.employmentGroup.name\", \"header\": \"Primary Assignment\", \"uniqueLabel\":\"Primary Asgmt. Employment Group\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Primary.JobType.EmploymentGroup.Name',\r\n\t\t\t_sampleData: 'District Employees',\r\n\t\t\t_fieldType: 'readOnlyText',\r\n\t\t\t_hideForHRMS: true,\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '1515243d-d6e3-4707-84f5-1ed380a2f2ce',\r\n\t\t\t_label: 'Job Type',\r\n\t\t\t_placeholderLabel: 'Job Type',\r\n\t\t\t_configJson: '{\"width\":\"50%\", \"readOnly\":\"primaryPosition.jobType._name\", \"header\": \"Primary Assignment\", \"uniqueLabel\":\"Primary Asgmt. Job Type\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Primary.JobType.Name',\r\n\t\t\t_sampleData: 'Teacher',\r\n\t\t\t_fieldType: 'readOnlyText',\r\n\t\t}, {\r\n\t\t\t_fieldDefId: 'fc5d9260-2fe8-438a-bdc8-2e7e2784db7d',\r\n\t\t\t_label: 'Position Name',\r\n\t\t\t_placeholderLabel: 'Position Name',\r\n\t\t\t_configJson: '{\"readOnly\":\"primaryPosition.name\", \"header\": \"Primary Assignment\", \"uniqueLabel\":\"Primary Asgmt. Position\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Primary.Name',\r\n\t\t\t_sampleData: 'First Grade',\r\n\t\t\t_fieldType: 'readOnlyText',\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '1fd44d06-ddc0-48a8-89be-7373a3d724ca',\r\n\t\t\t_label: 'Location',\r\n\t\t\t_placeholderLabel: 'Location',\r\n\t\t\t_configJson: '{\"width\":\"50%\", \"readOnly\":\"primaryPosition.location._name\", \"header\": \"Primary Assignment\", \"uniqueLabel\":\"Primary Asgmt. Location\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Primary.Location.Name',\r\n\t\t\t_sampleData: 'ABC Elementary School',\r\n\t\t\t_fieldType: 'readOnlyText',\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '9c165824-f3d9-428e-b28e-4750ac27c1df',\r\n\t\t\t_label: 'Department',\r\n\t\t\t_placeholderLabel: 'Department',\r\n\t\t\t_configJson: '{\"width\":\"50%\", \"readOnly\":\"primaryPosition.department._name\", \"header\": \"Primary Assignment\", \"uniqueLabel\":\"Primary Asgmt. Dept.\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Primary.Department.Name',\r\n\t\t\t_sampleData: 'Elementary',\r\n\t\t\t_fieldType: 'readOnlyText',\r\n\t\t}, {\r\n\t\t\t_fieldDefId: \"cdcc0683-5468-4a6b-883f-170d41c4e519\",\r\n\t\t\t_placeholderLabel: \"External ID\",\r\n\t\t\t_label: \"External ID\",\r\n\t\t\t_configJson: '{\"width\":\"50%\", \"readOnly\":\"primaryPosition.externalId\", \"header\":\"Primary Assignment\", \"uniqueLabel\":\"Primary Asgmt. External ID\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Primary.ExternalId',\r\n\t\t\t_sampleData: \"123ABC\",\r\n\t\t\t_fieldType: \"readOnlyText\"\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '94088ca8-de8a-4bcd-b87b-81dd67803367',\r\n\t\t\t_label: 'FTE',\r\n\t\t\t_placeholderLabel: 'FTE',\r\n\t\t\t_configJson: '{\"width\":\"33%\", \"readOnly\":\"(primaryAssignment.currentDetails._fTE != null) ? primaryAssignment.currentDetails._fTE : primaryPosition.jobType._currentJobTypeDetail.fte\", \"header\": \"Primary Assignment\", \"uniqueLabel\":\"Primary Asgmt. FTE\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Primary.FTE',\r\n\t\t\t_sampleData: '1',\r\n\t\t\t_fieldType: 'readOnlyText',\r\n\t\t\t_hideForHRMS: true,\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '6cf4854a-9607-49e2-8b66-c550375bba10',\r\n\t\t\t_label: 'Hours Per Day',\r\n\t\t\t_placeholderLabel: 'Hours Per Day',\r\n\t\t\t_configJson: '{\"width\":\"33%\", \"readOnly\":\"(primaryAssignment.currentDetails._hoursPerDay != null) ? primaryAssignment.currentDetails._hoursPerDay : primaryPosition.jobType._currentJobTypeDetail.hoursPerDay\", \"header\": \"Primary Assignment\", \"uniqueLabel\":\"Primary Asgmt. Hours/Day\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Primary.HoursPerDay',\r\n\t\t\t_sampleData: '7.5',\r\n\t\t\t_fieldType: 'readOnlyText',\r\n\t\t\t_hideForHRMS: true,\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '90adbdc6-f364-4a9e-b517-7fac47a74a22',\r\n\t\t\t_label: 'Work Days Per Year',\r\n\t\t\t_placeholderLabel: 'Work Days Per Year',\r\n\t\t\t_configJson: '{\"width\":\"33%\", \"readOnly\":\"(primaryAssignment.currentDetails._workDaysPerYear != null) ? primaryAssignment.currentDetails._workDaysPerYear : primaryPosition.jobType._currentJobTypeDetail.workDaysPerYear\", \"header\": \"Primary Assignment\", \"uniqueLabel\":\"Primary Asgmt. Work Days/Year\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Primary.WorkDays',\r\n\t\t\t_sampleData: '180',\r\n\t\t\t_fieldType: 'readOnlyText',\r\n\t\t\t_hideForHRMS: true,\r\n\t\t},{\r\n\t\t\t_label: 'Assignment Benefits',\r\n\t\t\t_placeholderLabel: 'Assignment Benefits',\r\n\t\t\t_fieldType: 'readOnlySubheading',\r\n\t\t\t_configJson: '{\"header\": \"Assignment Benefits\"}',\r\n\t\t\t_hideForHRMS: true\r\n\t\t}, {\r\n\t\t\t_fieldDefId: 'd3a593b5-6941-48f5-a48f-f4bcc498ddce',\r\n\t\t\t_label: 'Sick Days Per Year',\r\n\t\t\t_placeholderLabel: 'Sick Days Per Year',\r\n\t\t\t_configJson: '{\"width\":\"33%\", \"readOnly\":\"(primaryAssignment.currentDetails._sickDaysPerSchoolYear != null) ? primaryAssignment.currentDetails._sickDaysPerSchoolYear : primaryPosition.jobType._currentJobTypeDetail.sickDaysPerSchoolYear\", \"header\": \"Assignment Benefits\", \"uniqueLabel\":\"Primary Asgmt. Sick Days/Year\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Primary.SickDaysPerSchoolYear',\r\n\t\t\t_sampleData: '10',\r\n\t\t\t_fieldType: 'readOnlyText',\r\n\t\t\t_subHeader: 'Assignment Benefits',\r\n\t\t\t_hideForHRMS: true\r\n\t\t}, {\r\n\t\t\t_fieldDefId: 'e0a56083-d036-4c2c-a2f4-dcc63c7df27e',\r\n\t\t\t_label: 'Pers. Days Per Year',\r\n\t\t\t_placeholderLabel: 'Pers. Days Per Year',\r\n\t\t\t_configJson: '{\"width\":\"33%\", \"readOnly\":\"(primaryAssignment.currentDetails._personalDaysPerSchoolYear != null) ? primaryAssignment.currentDetails._personalDaysPerSchoolYear : primaryPosition.jobType._currentJobTypeDetail.personalDaysPerSchoolYear\", \"header\": \"Assignment Benefits\", \"uniqueLabel\":\"Primary Asgmt. Personal Days/Year\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Primary.PersonalDaysPerSchoolYear',\r\n\t\t\t_sampleData: '10',\r\n\t\t\t_fieldType: 'readOnlyText',\r\n\t\t\t_subHeader: 'Assignment Benefits',\r\n\t\t\t_hideForHRMS: true\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '19d93472-e7db-4773-bc0b-66a5c55d1e50',\r\n\t\t\t_label: 'Vacation Per Year',\r\n\t\t\t_placeholderLabel: 'Vacation Per Year',\r\n\t\t\t_configJson: '{\"width\":\"33%\", \"readOnly\":\"(primaryAssignment.currentDetails._vacationDaysPerSchoolYear != null) ? primaryAssignment.currentDetails._vacationDaysPerSchoolYear : primaryPosition.jobType._currentJobTypeDetail.vacationDaysPerSchoolYear\", \"header\": \"Assignment Benefits\", \"uniqueLabel\":\"Primary Asgmt. Vacation Days/Year\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Primary.VacationDaysPerSchoolYear',\r\n\t\t\t_sampleData: '10',\r\n\t\t\t_fieldType: 'readOnlyText',\r\n\t\t\t_subHeader: 'Assignment Benefits',\r\n\t\t\t_hideForHRMS: true\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '53c091a6-a674-4394-9b16-f21e88cd1a64',\r\n\t\t\t_label: 'Paid Holidays',\r\n\t\t\t_placeholderLabel: 'Paid Holidays',\r\n\t\t\t_configJson: '{\"width\":\"50%\", \"readOnly\":\"(primaryAssignment.currentDetails._paidHolidaysPerSchoolYear != null) ? primaryAssignment.currentDetails._paidHolidaysPerSchoolYear : primaryPosition.jobType._currentJobTypeDetail.paidHolidaysPerSchoolYear\", \"header\": \"Assignment Benefits\", \"uniqueLabel\":\"Primary Asgmt. Paid Holidays\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Primary.PaidHolidaysPerSchoolYear',\r\n\t\t\t_sampleData: '10',\r\n\t\t\t_fieldType: 'readOnlyText',\r\n\t\t\t_hideForHRMS: true\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '3d6c25e0-0ce5-4ad6-8246-99826b12329e',\r\n\t\t\t_label: 'Retirement System',\r\n\t\t\t_placeholderLabel: 'Retirement System',\r\n\t\t\t_configJson: '{\"width\":\"50%\", \"readOnly\":\"retirementSystem.name\", \"header\": \"Assignment Benefits\", \"uniqueLabel\":\"Primary Asgmt. Ret. System\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Primary.RetirementSystem.Name',\r\n\t\t\t_sampleData: 'ABCD',\r\n\t\t\t_fieldType: 'readOnlyText',\r\n\t\t\t_subHeader: 'Assignment Benefits',\r\n\t\t\t_hideForHRMS: true\r\n\t\t}, {\r\n\t\t\t_label: 'Assignment Compensation',\r\n\t\t\t_placeholderLabel: 'Assignment Compensation',\r\n\t\t\t_fieldType: 'readOnlySubheading',\r\n\t\t\t_configJson: '{\"header\": \"Assignment Compensation\"}',\r\n\t\t\t_hideForHRMS: true\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '92478956-3e85-4677-b409-99018c27890c',\r\n\t\t\t_label: 'Pay Schedule',\r\n\t\t\t_placeholderLabel: 'Pay Schedule',\r\n\t\t\t_configJson: '{\"width\":\"33%\", \"readOnly\":\"primaryPosition.jobType.paySchedule.name\", \"header\": \"Assignment Compensation\", \"uniqueLabel\":\"Primary Asgmt. Pay Schedule\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Primary.PaySchedule.Name',\r\n\t\t\t_sampleData: 'Teacher Pay Table',\r\n\t\t\t_fieldType: 'readOnlyText',\r\n\t\t\t_hideForHRMS: true\r\n\t\t}, {\r\n\t\t\t_fieldDefId: 'a721a2f1-fa2e-4a53-a556-23697f5fe1ce',\r\n\t\t\t_label: 'Pay Lane',\r\n\t\t\t_placeholderLabel: 'Pay Lane',\r\n\t\t\t_configJson: '{\"width\":\"33%\", \"readOnly\":\"payLane.name\", \"header\": \"Assignment Compensation\", \"uniqueLabel\":\"Primary Asgmt. Pay Lane\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Primary.PayLane.Name',\r\n\t\t\t_sampleData: '1',\r\n\t\t\t_fieldType: 'readOnlyText',\r\n\t\t\t_hideForHRMS: true\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '65f587b9-5060-4d4f-a5c3-0c311cb27ad4',\r\n\t\t\t_label: 'Pay Step',\r\n\t\t\t_placeholderLabel: 'Pay Step',\r\n\t\t\t_configJson: '{\"width\":\"33%\", \"readOnly\":\"payStep.name\", \"header\": \"Assignment Compensation\", \"uniqueLabel\":\"Primary Asgmt. Pay Step\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Primary.PayStep.Name',\r\n\t\t\t_sampleData: '1',\r\n\t\t\t_fieldType: 'readOnlyText',\r\n\t\t\t_hideForHRMS: true\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '1b48e58c-4d3a-4041-88b3-75042184334a',\r\n\t\t\t_label: 'Pay Per Year',\r\n\t\t\t_placeholderLabel: 'Pay Per Year',\r\n\t\t\t_configJson: '{\"width\":\"33%\", \"readOnly\":\"(primaryAssignment.currentDetails._payPeriodsPerYear != null) ? primaryAssignment.currentDetails._payPeriodsPerYear : primaryPosition.jobType._currentJobTypeDetail.payPeriodsPerYear\", \"header\": \"Assignment Compensation\", \"uniqueLabel\":\"Primary Asgmt. Pay/Year\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Primary.PayPeriodsPerYear',\r\n\t\t\t_sampleData: '24',\r\n\t\t\t_fieldType: 'readOnlyText',\r\n\t\t\t_hideForHRMS: true\r\n\t\t}, {\r\n\t\t\t_fieldDefId: 'ce98ea9c-5533-4acf-90f3-dbdc51cbef68',\r\n\t\t\t_label: 'Pay Per Period',\r\n\t\t\t_placeholderLabel: 'Pay Per Period',\r\n\t\t\t_configJson: '{\"width\":\"33%\", \"readOnly\":\"payPerPeriod | currency\", \"header\": \"Assignment Compensation\", \"uniqueLabel\":\"Primary Asgmt. Pay/Period\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Primary.PayPerPeriod',\r\n\t\t\t_sampleData: '$1000',\r\n\t\t\t_fieldType: 'readOnlyText',\r\n\t\t\t_hideForHRMS: true\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '19506ff5-6d04-48c9-9443-b380746b7e02',\r\n\t\t\t_label: 'Salary',\r\n\t\t\t_placeholderLabel: 'Salary',\r\n\t\t\t_configJson: '{\"width\":\"33%\", \"readOnly\":\"salary | currency\", \"header\": \"Assignment Compensation\", \"uniqueLabel\":\"Primary Asgmt. Salary\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Primary.Salary',\r\n\t\t\t_sampleData: '$24,000',\r\n\t\t\t_fieldType: 'readOnlyText',\r\n\t\t\t_hideForHRMS: true\r\n\t\t}\r\n\t],\r\n\r\n\tassignments: [\r\n\t\t{\r\n\t\t\t_fieldDefId: '54c1e578-f3f5-4832-be7f-7e5abe48fb45YYYY',\r\n\t\t\t_label: 'Secondary Assignment(s)',\r\n\t\t\t_placeholderLabel: 'Secondary Assignment(s)',\r\n\t\t\t_fieldType: 'cmp-secondary-assignments',\r\n\t\t\t_externalData: 'secondaryAssignments',\r\n\t\t\t_configJson: `{\r\n\t\t\t\t\"mappable\": false,\r\n\t\t\t\t\"fields\":[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"_fieldDefId\": \"5d3ebdb0-f907-4ec3-8886-f2bfe0ba6666\",\r\n\t\t\t\t\t\t\"_label\": \"Secondary Assignment\",\r\n\t\t\t\t\t\t\"_placeholderLabel\": \"Secondary Assignment\",\r\n\t\t\t\t\t\t\"_configJson\": {\"header\": \"Secondary Assignment\", \"mappable\": false},\r\n\t\t\t\t\t\t\"_fieldType\": \"readOnlyHeading\"\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\"_configJson\": {\"mappable\": false},\r\n\t\t\t\t\t\t\"_fieldType\": \"instructions\",\r\n\t\t\t\t\t\t\"_label\": \"\"\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\"_fieldDefId\": \"5d3ebdb0-f907-4ec3-8886-f2bfe0ba66e9\",\r\n\t\t\t\t\t\t\"_label\": \"Start Date\",\r\n\t\t\t\t\t\t\"_placeholderLabel\": \"Start Date\",\r\n\t\t\t\t\t\t\"_configJson\": {\"width\":\"50%\", \"readOnly\":\"secondaryAssignment.formattedStartDateUtc\",\"header\":\"Secondary Assignment\",\"mappable\": false},\r\n\t\t\t\t\t\t\"_formFieldValueProperty\": \"StartDateTimeUtc\",\r\n\t\t\t\t\t\t\"_sampleData\": \"01/01/0001\",\r\n\t\t\t\t\t\t\"_fieldType\": \"readOnlyDate\"\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\"_fieldDefId\": \"76c6ac41-1b54-4f19-b768-4ecc8e71dce1\",\r\n\t\t\t\t\t\t\"_label\": \"End Date\",\r\n\t\t\t\t\t\t\"_placeholderLabel\": \"End Date\",\r\n\t\t\t\t\t\t\"_configJson\": {\"width\":\"50%\", \"readOnly\":\"secondaryAssignment.formattedEndDateUtc\",\"header\":\"Secondary Assignment\", \"mappable\": false},\r\n\t\t\t\t\t\t\"_formFieldValueProperty\": \"EndDateTimeUtc\",\r\n\t\t\t\t\t\t\"_sampleData\": \"01/01/0001\",\r\n\t\t\t\t\t\t\"_fieldType\": \"readOnlyDate\"\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\"_fieldDefId\": \"fc5d9260-2fe8-438a-bdc8-2e7e2784db7d\",\r\n\t\t\t\t\t\t\"_label\": \"Employment Group\",\r\n\t\t\t\t\t\t\"_placeholderLabel\": \"Employment Group\",\r\n\t\t\t\t\t\t\"_configJson\": {\"width\":\"50%\", \"readOnly\":\"secondaryPosition.name\",\"header\":\"Secondary Assignment\",\"mappable\": false},\r\n\t\t\t\t\t\t\"_formFieldValueProperty\": \"EmploymentGroupName\",\r\n\t\t\t\t\t\t\"_sampleData\": \"First Grade\",\r\n\t\t\t\t\t\t\"_fieldType\": \"readOnlyText\",\r\n\t\t\t\t\t\t\"_hideForHRMS\": true\r\n\t\t\t\t\t}, {  \r\n\t\t\t\t\t\t\"_fieldDefId\": \"1515243d-d6e3-4707-84f5-1ed380a2f2ce\",\r\n\t\t\t\t\t\t\"_label\": \"Job Type\",\r\n\t\t\t\t\t\t\"_placeholderLabel\": \"Job Type\",\r\n\t\t\t\t\t\t\"_configJson\": {\"width\":\"50%\", \"readOnly\":\"secondaryPosition.jobType._name\",\"header\":\"Secondary Assignment\",\"mappable\": false},\r\n\t\t\t\t\t\t\"_formFieldValueProperty\": \"JobTypeName\",\r\n\t\t\t\t\t\t\"_sampleData\": \"Teacher\",\r\n\t\t\t\t\t\t\"_fieldType\": \"readOnlyText\"\r\n\t\t\t\t\t}, { \r\n\t\t\t\t\t\t\"_fieldDefId\": \"fc5d9260-2fe8-438a-bdc8-2e7e2784db7d\",\r\n\t\t\t\t\t\t\"_label\": \"Position Name\",\r\n\t\t\t\t\t\t\"_placeholderLabel\": \"Position Name\",\r\n\t\t\t\t\t\t\"_configJson\": {\"readOnly\":\"secondaryPosition.name\",\"header\":\"Secondary Assignment\",\"mappable\": false},\r\n\t\t\t\t\t\t\"_formFieldValueProperty\": \"PositionName\",\r\n\t\t\t\t\t\t\"_sampleData\": \"First Grade\",\r\n\t\t\t\t\t\t\"_fieldType\": \"readOnlyText\"\r\n\t\t\t\t\t}, {  \r\n\t\t\t\t\t\t\"_fieldDefId\": \"1fd44d06-ddc0-48a8-89be-7373a3d724ca\",\r\n\t\t\t\t\t\t\"_label\": \"Location\",\r\n\t\t\t\t\t\t\"_placeholderLabel\": \"Location\",\r\n\t\t\t\t\t\t\"_configJson\": {\"width\":\"50%\", \"readOnly\":\"secondaryPosition.location._name\",\"header\":\"Secondary Assignment\",\"mappable\": false},\r\n\t\t\t\t\t\t\"_formFieldValueProperty\": \"LocationName\",\r\n\t\t\t\t\t\t\"_sampleData\": \"ABC Elementary School\",\r\n\t\t\t\t\t\t\"_fieldType\": \"readOnlyText\"\r\n\t\t\t\t\t}, {  \r\n\t\t\t\t\t\t\"_fieldDefId\": \"9c165824-f3d9-428e-b28e-4750ac27c1df\",\r\n\t\t\t\t\t\t\"_label\": \"Department\",\r\n\t\t\t\t\t\t\"_placeholderLabel\": \"Department\",\r\n\t\t\t\t\t\t\"_configJson\": {\"width\":\"50%\", \"readOnly\":\"secondaryPosition.department._name\",\"header\":\"Secondary Assignment\",\"mappable\": false},\r\n\t\t\t\t\t\t\"_formFieldValueProperty\": \"DepartmentName\",\r\n\t\t\t\t\t\t\"_sampleData\": \"Elementary\",\r\n\t\t\t\t\t\t\"_fieldType\": \"readOnlyText\"\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\"_fieldDefId\": \"577f1424-fa35-4eeb-a9ba-05a738ea1370\",\r\n\t\t\t\t\t\t\"_placeholderLabel\": \"External ID\",\r\n\t\t\t\t\t\t\"_label\": \"External ID\",\r\n\t\t\t\t\t\t\"_formFieldValueProperty\": \"ExternalId\",\r\n\t\t\t\t\t\t\"_configJson\": {\"width\":\"50%\", \"readOnly\":\"secondaryAssignment.externalId\", \"header\":\"Secondary Assignment\"},\r\n\t\t\t\t\t\t\"_sampleData\": \"123ABC\",\r\n\t\t\t\t\t\t\"_fieldType\": \"readOnlyText\"\r\n\t\t\t\t\t}, {  \r\n\t\t\t\t\t\t\"_fieldDefId\": \"94088ca8-de8a-4bcd-b87b-81dd67803367\",\r\n\t\t\t\t\t\t\"_label\": \"FTE\",\r\n\t\t\t\t\t\t\"_placeholderLabel\": \"FTE\",\r\n\t\t\t\t\t\t\"_formFieldValueProperty\": \"Fte\",\r\n\t\t\t\t\t\t\"_configJson\": {\"width\":\"33%\", \"readOnly\":\"(secondaryAssignment.currentDetails._fTE != null) ? secondaryAssignment.currentDetails._fTE : secondaryPosition.jobType._currentJobTypeDetail.fte\",\"header\":\"Secondary Assignment\",\"mappable\": false},\r\n\t\t\t\t\t\t\"_sampleData\": \"1\",\r\n\t\t\t\t\t\t\"_fieldType\": \"readOnlyText\",\r\n\t\t\t\t\t\t\"_hideForHRMS\": true\r\n\t\t\t\t\t}, {  \r\n\t\t\t\t\t\t\"_fieldDefId\": \"6cf4854a-9607-49e2-8b66-c550375bba10\",\r\n\t\t\t\t\t\t\"_label\": \"Hours Per Day\",\r\n\t\t\t\t\t\t\"_placeholderLabel\": \"Hours Per Day\",\r\n\t\t\t\t\t\t\"_configJson\": {\"width\":\"33%\", \"readOnly\":\"(secondaryAssignment.currentDetails._hoursPerDay != null) ? secondaryAssignment.currentDetails._hoursPerDay : secondaryPosition.jobType._currentJobTypeDetail.hoursPerDay\", \"header\": \"Secondary Assignment\",\"mappable\": false},\r\n\t\t\t\t\t\t\"_formFieldValueProperty\": \"HoursPerDay\",\r\n\t\t\t\t\t\t\"_sampleData\": \"7.5\",\r\n\t\t\t\t\t\t\"_fieldType\": \"readOnlyText\",\r\n\t\t\t\t\t\t\"_hideForHRMS\": true\r\n\t\t\t\t\t}, {  \r\n\t\t\t\t\t\t\"_fieldDefId\": \"90adbdc6-f364-4a9e-b517-7fac47a74a22\",\r\n\t\t\t\t\t\t\"_label\": \"Work Days Per Year\",\r\n\t\t\t\t\t\t\"_placeholderLabel\": \"Work Days Per Year\",\r\n\t\t\t\t\t\t\"_configJson\": {\"width\":\"33%\", \"readOnly\":\"(secondaryAssignment.currentDetails._workDaysPerYear != null) ? secondaryAssignment.currentDetails._workDaysPerYear : secondaryPosition.jobType._currentJobTypeDetail.workDaysPerYear\", \"header\": \"Secondary Assignment\",\"mappable\": false},\r\n\t\t\t\t\t\t\"_formFieldValueProperty\": \"WorkDays\",\r\n\t\t\t\t\t\t\"_sampleData\": \"180\",\r\n\t\t\t\t\t\t\"_fieldType\": \"readOnlyText\",\r\n\t\t\t\t\t\t\"_hideForHRMS\": true\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\"_label\": \"Secondary Benefits\",\r\n\t\t\t\t\t\t\"_placeholderLabel\": \"Secondary Benefits\",\r\n\t\t\t\t\t\t\"_configJson\": {\"header\": \"Secondary Benefits\",\"mappable\": false},\r\n\t\t\t\t\t\t\"_fieldType\": \"readOnlySubheading\",\r\n\t\t\t\t\t\t\"_hideForHRMS\": true\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\"_fieldDefId\": \"9220e992-9832-405f-aae2-2e80419e6128\",\r\n\t\t\t\t\t\t\"_label\": \"Sick Days Per Year\",\r\n\t\t\t\t\t\t\"_placeholderLabel\": \"Sick Days Per Year\",\r\n\t\t\t\t\t\t\"_configJson\": {\"width\":\"33%\", \"readOnly\":\"(earliestOtherAssignment.currentDetails._sickDaysPerSchoolYear != null) ? earliestOtherAssignment.currentDetails._sickDaysPerSchoolYear : earliestOtherPosition.jobType._currentJobTypeDetail.sickDaysPerSchoolYear\", \"header\": \"Secondary Benefits\",\"mappable\": false},\r\n\t\t\t\t\t\t\"_formFieldValueProperty\": \"SickDaysPerSchoolYear\",\r\n\t\t\t\t\t\t\"_sampleData\": \"10\",\r\n\t\t\t\t\t\t\"_fieldType\": \"readOnlyText\",\r\n\t\t\t\t\t\t\"_hideForHRMS\": true\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\"_fieldDefId\": \"98fb9c91-ff03-4089-b028-844e407f39ec\",\r\n\t\t\t\t\t\t\"_label\": \"Pers. Days Per Year\",\r\n\t\t\t\t\t\t\"_placeholderLabel\": \"Pers. Days Per Year\",\r\n\t\t\t\t\t\t\"_configJson\": {\"width\":\"33%\", \"readOnly\":\"(earliestOtherAssignment.currentDetails._personalDaysPerSchoolYear != null) ? earliestOtherAssignment.currentDetails._personalDaysPerSchoolYear : earliestOtherPosition.jobType._currentJobTypeDetail.personalDaysPerSchoolYear\", \"header\": \"Secondary Benefits\",\"mappable\": false},\r\n\t\t\t\t\t\t\"_formFieldValueProperty\": \"PersonalDaysPerSchoolYear\",\r\n\t\t\t\t\t\t\"_sampleData\": \"10\",\r\n\t\t\t\t\t\t\"_fieldType\": \"readOnlyText\",\r\n\t\t\t\t\t\t\"_hideForHRMS\": true\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\"_fieldDefId\": \"9e674c8e-5347-42b5-8100-fad4edfbebc4\",\r\n\t\t\t\t\t\t\"_label\": \"Vacation Per Year\",\r\n\t\t\t\t\t\t\"_placeholderLabel\": \"Vacation Per Year\",\r\n\t\t\t\t\t\t\"_configJson\": {\"width\":\"33%\", \"readOnly\":\"(earliestOtherAssignment.currentDetails._vacationDaysPerSchoolYear != null) ? earliestOtherAssignment.currentDetails._vacationDaysPerSchoolYear : earliestOtherPosition.jobType._currentJobTypeDetail.vacationDaysPerSchoolYear\", \"header\": \"Secondary Benefits\",\"mappable\": false},\r\n\t\t\t\t\t\t\"_formFieldValueProperty\": \"VacationDaysPerSchoolYear\",\r\n\t\t\t\t\t\t\"_sampleData\": \"10\",\r\n\t\t\t\t\t\t\"_fieldType\": \"readOnlyText\",\r\n\t\t\t\t\t\t\"_hideForHRMS\": true\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\"_fieldDefId\": \"cf9ce02d-f7b1-455d-85ed-614e361f112a\",\r\n\t\t\t\t\t\t\"_label\": \"Paid Holidays\",\r\n\t\t\t\t\t\t\"_placeholderLabel\": \"Paid Holidays\",\r\n\t\t\t\t\t\t\"_configJson\": {\"width\":\"50%\", \"readOnly\":\"(earliestOtherAssignment.currentDetails._paidHolidaysPerSchoolYear != null) ? earliestOtherAssignment.currentDetails._paidHolidaysPerSchoolYear : earliestOtherPosition.jobType._currentJobTypeDetail.paidHolidaysPerSchoolYear\", \"header\": \"Secondary Benefits\",\"mappable\": false},\r\n\t\t\t\t\t\t\"_formFieldValueProperty\": \"PaidHolidaysPerSchoolYear\",\r\n\t\t\t\t\t\t\"_sampleData\": \"10\",\r\n\t\t\t\t\t\t\"_fieldType\": \"readOnlyText\",\r\n\t\t\t\t\t\t\"_hideForHRMS\": true\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\"_fieldDefId\": \"91bef119-7b9e-4c3d-9e09-360f32ce78ba\",\r\n\t\t\t\t\t\t\"_label\": \"Retirement System\",\r\n\t\t\t\t\t\t\"_placeholderLabel\": \"Retirement System\",\r\n\t\t\t\t\t\t\"_configJson\": {\"width\":\"50%\", \"readOnly\":\"retirementSystem.name\", \"header\": \"Secondary Benefits\",\"mappable\": false},\r\n\t\t\t\t\t\t\"_formFieldValueProperty\": \"RetirementSystemName\",\r\n\t\t\t\t\t\t\"_sampleData\": \"ABCD\",\r\n\t\t\t\t\t\t\"_fieldType\": \"readOnlyText\",\r\n\t\t\t\t\t\t\"_hideForHRMS\": true\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\"_label\": \"Secondary Compensation\",\r\n\t\t\t\t\t\t\"_placeholderLabel\": \"Secondary Compensation\",\r\n\t\t\t\t\t\t\"_configJson\": {\"header\": \"Secondary Compensation\",\"mappable\": false},\r\n\t\t\t\t\t\t\"_fieldType\": \"readOnlySubheading\",\r\n\t\t\t\t\t\t\"_hideForHRMS\": true\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\"_fieldDefId\": \"eec7acd5-4302-4b33-9014-364202832e3e\",\r\n\t\t\t\t\t\t\"_label\": \"Pay Schedule\",\r\n\t\t\t\t\t\t\"_placeholderLabel\": \"Pay Schedule\",\r\n\t\t\t\t\t\t\"_configJson\": {\"width\":\"33%\", \"readOnly\":\"earliestOtherPosition.jobType.paySchedule.name\", \"header\": \"Secondary Compensation\",\"mappable\": false},\r\n\t\t\t\t\t\t\"_sampleData\": \"Teacher Pay Table\",\r\n\t\t\t\t\t\t\"_formFieldValueProperty\": \"PayScheduleName\",\r\n\t\t\t\t\t\t\"_fieldType\": \"readOnlyText\",\r\n\t\t\t\t\t\t\"_hideForHRMS\": true\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\"_fieldDefId\": \"3211dabc-b9da-474a-89f6-de17d2446bbb\",\r\n\t\t\t\t\t\t\"_label\": \"Pay Lane\",\r\n\t\t\t\t\t\t\"_placeholderLabel\": \"Pay Lane\",\r\n\t\t\t\t\t\t\"_configJson\": {\"width\":\"33%\", \"readOnly\":\"otherPayLane.name\", \"header\": \"Secondary Compensation\",\"mappable\": false},\r\n\t\t\t\t\t\t\"_formFieldValueProperty\": \"PayLaneName\",\r\n\t\t\t\t\t\t\"_sampleData\": \"1\",\r\n\t\t\t\t\t\t\"_fieldType\": \"readOnlyText\",\r\n\t\t\t\t\t\t\"_hideForHRMS\": true\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\"_fieldDefId\": \"8031280b-27cb-4d0d-bbc6-ac3832947685\",\r\n\t\t\t\t\t\t\"_label\": \"Pay Step\",\r\n\t\t\t\t\t\t\"_placeholderLabel\": \"Pay Step\",\r\n\t\t\t\t\t\t\"_configJson\": {\"width\":\"33%\", \"readOnly\":\"otherPayStep.name\", \"header\": \"Secondary Compensation\",\"mappable\": false},\r\n\t\t\t\t\t\t\"_formFieldValueProperty\": \"PayStepName\",\r\n\t\t\t\t\t\t\"_sampleData\": \"1\",\r\n\t\t\t\t\t\t\"_fieldType\": \"readOnlyText\",\r\n\t\t\t\t\t\t\"_hideForHRMS\": true\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\"_fieldDefId\": \"be022480-b100-43ca-a47e-71be6b027e93\",\r\n\t\t\t\t\t\t\"_label\": \"Pay Per Year\",\r\n\t\t\t\t\t\t\"_placeholderLabel\": \"Pay Per Year\",\r\n\t\t\t\t\t\t\"_configJson\": {\"width\":\"33%\", \"readOnly\":\"(earliestOtherAssignment.currentDetails._payPeriodsPerYear != null) ? earliestOtherAssignment.currentDetails._payPeriodsPerYear : earliestOtherPosition.jobType._currentJobTypeDetail.payPeriodsPerYear\", \"header\": \"Secondary Compensation\",\"mappable\": false},\r\n\t\t\t\t\t\t\"_formFieldValueProperty\": \"PayPeriodsPerYear\",\r\n\t\t\t\t\t\t\"_sampleData\": \"24\",\r\n\t\t\t\t\t\t\"_fieldType\": \"readOnlyText\",\r\n\t\t\t\t\t\t\"_hideForHRMS\": true\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\"_fieldDefId\": \"adcd4aa2-58ed-4b5a-b8dc-31edfa043f58\",\r\n\t\t\t\t\t\t\"_label\": \"Pay Per Period\",\r\n\t\t\t\t\t\t\"_placeholderLabel\": \"Pay Per Period\",\r\n\t\t\t\t\t\t\"_configJson\": {\"width\":\"33%\", \"readOnly\":\"otherPayPerPeriod | currency\", \"header\": \"Secondary Compensation\",\"mappable\": false},\r\n\t\t\t\t\t\t\"_formFieldValueProperty\": \"PayPerPeriod\",\r\n\t\t\t\t\t\t\"_sampleData\": \"$1000\",\r\n\t\t\t\t\t\t\"_fieldType\": \"readOnlyText\",\r\n\t\t\t\t\t\t\"_hideForHRMS\": true\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\"_fieldDefId\": \"7ad63aae-4ccd-4551-b038-ad250dd6ea68\",\r\n\t\t\t\t\t\t\"_label\": \"Salary\",\r\n\t\t\t\t\t\t\"_placeholderLabel\": \"Salary\",\r\n\t\t\t\t\t\t\"_configJson\": {\"width\":\"33%\", \"readOnly\":\"otherSalary | currency\", \"header\": \"Secondary Compensation\",\"mappable\": false},\r\n\t\t\t\t\t\t\"_formFieldValueProperty\": \"Salary\",\r\n\t\t\t\t\t\t\"_sampleData\": \"$24,000\",\r\n\t\t\t\t\t\t\"_fieldType\": \"readOnlyText\",\r\n\t\t\t\t\t\t\"_hideForHRMS\": true\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}`\r\n\t\t}\r\n\t],\r\n\r\n\tassignmentsTotalSalary: [{\r\n\t\t\t_configJson: '{\"mappable\": false}',\r\n\t\t\t_label: 'Total Salary',\r\n\t\t\t_placeholderLabel: 'Total Salary',\r\n\t\t\t_fieldType: 'readOnlyHeading'\r\n\t\t},\t{\r\n\t\t\t_configJson: '{\"mappable\": false}',\r\n\t\t\t_fieldType: 'instructions',\r\n\t\t\t_label: ''\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '87bbcb2a-2e5d-4c92-ae93-d4345b91f806',\r\n\t\t\t_label: 'Total Salary',\r\n\t\t\t_placeholderLabel: 'Total Salary',\r\n\t\t\t_fieldType: 'readOnlyText',\r\n\t\t\t_externalData: 'AssignmentsTotalSalary',\r\n\t\t\t_configJson: '{\"width\":\"33%\"}',\r\n\t\t\t_sampleData: '$24,000'\r\n\t\t}\r\n\t],\r\n\r\n\tassignmentCompensation: [\r\n\t\t{\r\n\t\t\t_configJson: '{\"mappable\": false}',\r\n\t\t\t_label: 'Assignment Compensation',\r\n\t\t\t_placeholderLabel: 'Assignment Compensation',\r\n\t\t\t_fieldType: 'readOnlyHeading'\r\n\t\t}, {\r\n\t\t\t_configJson: '{\"mappable\": false}',\r\n\t\t\t_fieldType: 'instructions',\r\n\t\t\t_label: ''\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '92478956-3e85-4677-b409-99018c27890c',\r\n\t\t\t_label: 'Pay Schedule',\r\n\t\t\t_placeholderLabel: 'Pay Schedule',\r\n\t\t\t_configJson: '{\"width\":\"33%\", \"readOnly\":\"primaryPosition.jobType.paySchedule.name\", \"uniqueLabel\":\"Primary Asgmt. Pay Schedule\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Primary.PaySchedule.Name',\r\n\t\t\t_sampleData: 'Teacher Pay Table',\r\n\t\t\t_fieldType: 'readOnlyText'\r\n\t\t}, {\r\n\t\t\t_fieldDefId: 'a721a2f1-fa2e-4a53-a556-23697f5fe1ce',\r\n\t\t\t_label: 'Pay Lane',\r\n\t\t\t_placeholderLabel: 'Pay Lane',\r\n\t\t\t_configJson: '{\"width\":\"33%\", \"readOnly\":\"payLane.name\", \"uniqueLabel\":\"Primary Asgmt. Pay Lane\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Primary.PayLane.Name',\r\n\t\t\t_sampleData: '1',\r\n\t\t\t_fieldType: 'readOnlyText'\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '65f587b9-5060-4d4f-a5c3-0c311cb27ad4',\r\n\t\t\t_label: 'Pay Step',\r\n\t\t\t_placeholderLabel: 'Pay Step',\r\n\t\t\t_configJson: '{\"width\":\"33%\", \"readOnly\":\"payStep.name\", \"uniqueLabel\":\"Primary Asgmt. Pay Step\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Primary.PayStep.Name',\r\n\t\t\t_sampleData: '1',\r\n\t\t\t_fieldType: 'readOnlyText'\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '1b48e58c-4d3a-4041-88b3-75042184334a',\r\n\t\t\t_label: 'Pay Per Year',\r\n\t\t\t_placeholderLabel: 'Pay Per Year',\r\n\t\t\t_configJson: '{\"width\":\"33%\", \"readOnly\":\"(primaryAssignment.currentDetails._payPeriodsPerYear != null) ? primaryAssignment.currentDetails._payPeriodsPerYear : primaryPosition.jobType._currentJobTypeDetail.payPeriodsPerYear\", \"uniqueLabel\":\"Primary Asgmt. Pay/Year\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Primary.PayPeriodsPerYear',\r\n\t\t\t_sampleData: '24',\r\n\t\t\t_fieldType: 'readOnlyText'\r\n\t\t}, {\r\n\t\t\t_fieldDefId: 'ce98ea9c-5533-4acf-90f3-dbdc51cbef68',\r\n\t\t\t_label: 'Pay Per Period',\r\n\t\t\t_placeholderLabel: 'Pay Per Period',\r\n\t\t\t_configJson: '{\"width\":\"33%\", \"readOnly\":\"payPerPeriod | currency\", \"uniqueLabel\":\"Primary Asgmt. Pay/Period\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Primary.PayPerPeriod',\r\n\t\t\t_sampleData: '$1000',\r\n\t\t\t_fieldType: 'readOnlyText'\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '19506ff5-6d04-48c9-9443-b380746b7e02',\r\n\t\t\t_label: 'Salary',\r\n\t\t\t_placeholderLabel: 'Salary',\r\n\t\t\t_configJson: '{\"width\":\"33%\", \"readOnly\":\"salary | currency\", \"uniqueLabel\":\"Primary Asgmt. Salary\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Primary.Salary',\r\n\t\t\t_sampleData: '$24,000',\r\n\t\t\t_fieldType: 'readOnlyText'\r\n\t\t}\r\n\t],\r\n\r\n\tassignmentBenefits: [\r\n\t\t{\r\n\t\t\t_configJson: '{\"mappable\": false}',\r\n\t\t\t_label: 'Assignment Benefits',\r\n\t\t\t_placeholderLabel: 'Assignment Benefits',\r\n\t\t\t_fieldType: 'readOnlyHeading'\r\n\t\t}, {\r\n\t\t\t_configJson: '{\"mappable\": false}',\r\n\t\t\t_fieldType: 'instructions',\r\n\t\t\t_label: ''\r\n\t\t}, {\r\n\t\t\t_fieldDefId: 'd3a593b5-6941-48f5-a48f-f4bcc498ddce',\r\n\t\t\t_label: 'Sick Days Per Year',\r\n\t\t\t_placeholderLabel: 'Sick Days Per Year',\r\n\t\t\t_configJson: '{\"width\":\"33%\", \"readOnly\":\"(primaryAssignment.currentDetails._sickDaysPerSchoolYear != null) ? primaryAssignment.currentDetails._sickDaysPerSchoolYear : primaryPosition.jobType._currentJobTypeDetail.sickDaysPerSchoolYear\", \"uniqueLabel\":\"Primary Asgmt. Sick Days/Year\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Primary.SickDaysPerSchoolYear',\r\n\t\t\t_sampleData: '10',\r\n\t\t\t_fieldType: 'readOnlyText'\r\n\t\t}, {\r\n\t\t\t_fieldDefId: 'e0a56083-d036-4c2c-a2f4-dcc63c7df27e',\r\n\t\t\t_label: 'Pers. Days Per Year',\r\n\t\t\t_placeholderLabel: 'Pers. Days Per Year',\r\n\t\t\t_configJson: '{\"width\":\"33%\", \"readOnly\":\"(primaryAssignment.currentDetails._personalDaysPerSchoolYear != null) ? primaryAssignment.currentDetails._personalDaysPerSchoolYear : primaryPosition.jobType._currentJobTypeDetail.personalDaysPerSchoolYear\", \"uniqueLabel\":\"Primary Asgmt. Personal Days/Year\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Primary.PersonalDaysPerSchoolYear',\r\n\t\t\t_sampleData: '10',\r\n\t\t\t_fieldType: 'readOnlyText'\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '19d93472-e7db-4773-bc0b-66a5c55d1e50',\r\n\t\t\t_label: 'Vacation Per Year',\r\n\t\t\t_placeholderLabel: 'Vacation Per Year',\r\n\t\t\t_configJson: '{\"width\":\"33%\", \"readOnly\":\"(primaryAssignment.currentDetails._vacationDaysPerSchoolYear != null) ? primaryAssignment.currentDetails._vacationDaysPerSchoolYear : primaryPosition.jobType._currentJobTypeDetail.vacationDaysPerSchoolYear\", \"uniqueLabel\":\"Primary Asgmt. Vacation Days/Year\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Primary.VacationDaysPerSchoolYear',\r\n\t\t\t_sampleData: '10',\r\n\t\t\t_fieldType: 'readOnlyText'\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '53c091a6-a674-4394-9b16-f21e88cd1a64',\r\n\t\t\t_label: 'Paid Holidays',\r\n\t\t\t_placeholderLabel: 'Paid Holidays',\r\n\t\t\t_configJson: '{\"width\":\"50%\", \"readOnly\":\"(primaryAssignment.currentDetails._paidHolidaysPerSchoolYear != null) ? primaryAssignment.currentDetails._paidHolidaysPerSchoolYear : primaryPosition.jobType._currentJobTypeDetail.paidHolidaysPerSchoolYear\", \"uniqueLabel\":\"Primary Asgmt. Paid Holidays\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Primary.PaidHolidaysPerSchoolYear',\r\n\t\t\t_sampleData: '10',\r\n\t\t\t_fieldType: 'readOnlyText'\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '3d6c25e0-0ce5-4ad6-8246-99826b12329e',\r\n\t\t\t_label: 'Retirement System',\r\n\t\t\t_placeholderLabel: 'Retirement System',\r\n\t\t\t_configJson: '{\"width\":\"50%\", \"readOnly\":\"retirementSystem.name\", \"uniqueLabel\":\"Primary Asgmt. Ret. System\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Primary.RetirementSystem.Name',\r\n\t\t\t_sampleData: 'ABCD',\r\n\t\t\t_fieldType: 'readOnlyText'\r\n\t\t}\r\n\t],\r\n\r\n\tsecondaryAssignment: [\r\n\t\t{\r\n\t\t\t_configJson: '{\"mappable\": false}',\r\n\t\t\t_label: 'Secondary Assignment',\r\n\t\t\t_placeholderLabel: 'Secondary Assignment',\r\n\t\t\t_fieldType: 'readOnlyHeading'\r\n\t\t}, {\r\n\t\t\t_configJson: '{\"mappable\": false}',\r\n\t\t\t_fieldType: 'instructions',\r\n\t\t\t_label: ''\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '0aa59ea6-1e03-43ba-bb3d-a39d4f631966',\r\n\t\t\t_label: 'Start Date',\r\n\t\t\t_placeholderLabel: 'Start Date',\r\n\t\t\t_configJson: '{\"width\":\"50%\", \"readOnly\":\"earliestOtherAssignment.formattedStartDateUtc\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Secondary.StartDateTimeUTC',\r\n\t\t\t_sampleData: '01/01/0001',\r\n\t\t\t_fieldType: 'readOnlyDate'\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '40e1f8df-0c3f-4025-90bc-dfd0925a8eec',\r\n\t\t\t_label: 'End Date',\r\n\t\t\t_placeholderLabel: 'End Date',\r\n\t\t\t_configJson: '{\"width\":\"50%\", \"readOnly\":\"earliestOtherAssignment.formattedEndDateUtc\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Secondary.EndDateTimeUTC',\r\n\t\t\t_sampleData: '01/01/0001',\r\n\t\t\t_fieldType: 'readOnlyDate'\r\n\t\t}, {\r\n\t\t\t_fieldDefId: 'f0d303d6-1b9e-424f-8603-3232c60d50d5',\r\n\t\t\t_label: 'Employment Group',\r\n\t\t\t_placeholderLabel: 'Employment Group',\r\n\t\t\t_configJson: '{\"width\":\"50%\", \"readOnly\":\"earliestOtherPosition.jobType.employmentGroup.name\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Secondary.JobType.EmploymentGroup.Name',\r\n\t\t\t_sampleData: 'District Employees',\r\n\t\t\t_fieldType: 'readOnlyText',\r\n\t\t\t_hideForHRMS: true\r\n\t\t}, {\r\n\t\t\t_fieldDefId: 'd6c89711-c50b-4768-ae93-4718a9883b70',\r\n\t\t\t_label: 'Job Type',\r\n\t\t\t_placeholderLabel: 'Job Type',\r\n\t\t\t_configJson: '{\"width\":\"50%\", \"readOnly\":\"earliestOtherPosition.jobType._name\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Secondary.JobType.Name',\r\n\t\t\t_sampleData: 'Teacher',\r\n\t\t\t_fieldType: 'readOnlyText'\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '9e1542bf-afc0-43c0-b5b4-5a475fdcafd4',\r\n\t\t\t_label: 'Position Name',\r\n\t\t\t_placeholderLabel: '',\r\n\t\t\t_configJson: '{\"readOnly\":\"earliestOtherPosition.name\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Secondary.Name',\r\n\t\t\t_sampleData: 'First Grade',\r\n\t\t\t_fieldType: 'readOnlyText'\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '06a1ab47-ce04-4e88-981b-eccd889b978f',\r\n\t\t\t_label: 'Location',\r\n\t\t\t_placeholderLabel: 'Location',\r\n\t\t\t_configJson: '{\"width\":\"50%\", \"readOnly\":\"earliestOtherPosition.location._name\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Secondary.Location.Name',\r\n\t\t\t_sampleData: 'ABC Elementary School',\r\n\t\t\t_fieldType: 'readOnlyText'\r\n\t\t}, {\r\n\t\t\t_fieldDefId: 'f3f05928-02f5-41d8-8867-3af413bd5e08',\r\n\t\t\t_label: 'Department',\r\n\t\t\t_placeholderLabel: 'Department',\r\n\t\t\t_configJson: '{\"width\":\"50%\", \"readOnly\":\"earliestOtherPosition.department._name\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Secondary.Department.Name',\r\n\t\t\t_sampleData: 'Elementary',\r\n\t\t\t_fieldType: 'readOnlyText'\r\n\t\t}, {\r\n\t\t\t_fieldDefId: 'cfb8a867-c1a0-4c19-a72e-03909d699294',\r\n\t\t\t_label: 'FTE',\r\n\t\t\t_placeholderLabel: 'FTE',\r\n\t\t\t_configJson: '{\"width\":\"33%\", \"readOnly\":\"(earliestOtherAssignment.currentDetails._fTE != null) ? earliestOtherAssignment.currentDetails._fTE : earliestOtherPosition.jobType._currentJobTypeDetail.fte\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Secondary.FTE',\r\n\t\t\t_sampleData: '1',\r\n\t\t\t_fieldType: 'readOnlyText',\r\n\t\t\t_hideForHRMS: true\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '362bfdf7-f861-49eb-a839-79aeebc703be',\r\n\t\t\t_label: 'Hours Per Day',\r\n\t\t\t_placeholderLabel: 'Hours Per Day',\r\n\t\t\t_configJson: '{\"width\":\"33%\", \"readOnly\":\"(earliestOtherAssignment.currentDetails._hoursPerDay != null) ? earliestOtherAssignment.currentDetails._hoursPerDay : earliestOtherPosition.jobType._currentJobTypeDetail.hoursPerDay\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Secondary.HoursPerDay',\r\n\t\t\t_sampleData: '7.5',\r\n\t\t\t_fieldType: 'readOnlyText',\r\n\t\t\t_hideForHRMS: true\r\n\t\t}, {\r\n\t\t\t_fieldDefId: 'e4fcdc4b-2b30-4e81-a937-15f86951b88e',\r\n\t\t\t_label: 'Work Days Per Year',\r\n\t\t\t_placeholderLabel: 'Work Days Per Year',\r\n\t\t\t_configJson: '{\"width\":\"33%\", \"readOnly\":\"(earliestOtherAssignment.currentDetails._workDaysPerYear != null) ? earliestOtherAssignment.currentDetails._workDaysPerYear : earliestOtherPosition.jobType._currentJobTypeDetail.workDaysPerYear\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Secondary.WorkDays',\r\n\t\t\t_sampleData: '180',\r\n\t\t\t_fieldType: 'readOnlyText',\r\n\t\t\t_hideForHRMS: true\r\n\t\t}\r\n\t],\r\n\r\n\tsecondaryCompensation: [\r\n\t\t{\r\n\t\t\t_configJson: '{\"mappable\": false}',\r\n\t\t\t_label: 'Secondary Compensation',\r\n\t\t\t_placeholderLabel: 'Secondary Compensation',\r\n\t\t\t_fieldType: 'readOnlyHeading'\r\n\t\t}, {\r\n\t\t\t_configJson: '{\"mappable\": false}',\r\n\t\t\t_fieldType: 'instructions',\r\n\t\t\t_label: ''\r\n\t\t}, {\r\n\t\t\t_fieldDefId: 'eec7acd5-4302-4b33-9014-364202832e3e',\r\n\t\t\t_label: 'Pay Schedule',\r\n\t\t\t_placeholderLabel: 'Pay Schedule',\r\n\t\t\t_configJson: '{\"width\":\"33%\", \"readOnly\":\"earliestOtherPosition.jobType.paySchedule.name\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Secondary.PaySchedule.Name',\r\n\t\t\t_sampleData: 'Teacher Pay Table',\r\n\t\t\t_fieldType: 'readOnlyText'\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '3211dabc-b9da-474a-89f6-de17d2446bbb',\r\n\t\t\t_label: 'Pay Lane',\r\n\t\t\t_placeholderLabel: 'Pay Lane',\r\n\t\t\t_configJson: '{\"width\":\"33%\", \"readOnly\":\"otherPayLane.name\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Secondary.PayLane.Name',\r\n\t\t\t_sampleData: '1',\r\n\t\t\t_fieldType: 'readOnlyText'\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '8031280b-27cb-4d0d-bbc6-ac3832947685',\r\n\t\t\t_label: 'Pay Step',\r\n\t\t\t_placeholderLabel: 'Pay Step',\r\n\t\t\t_configJson: '{\"width\":\"33%\", \"readOnly\":\"otherPayStep.name\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Secondary.PayStep.Name',\r\n\t\t\t_sampleData: '1',\r\n\t\t\t_fieldType: 'readOnlyText'\r\n\t\t}, {\r\n\t\t\t_fieldDefId: 'be022480-b100-43ca-a47e-71be6b027e93',\r\n\t\t\t_label: 'Pay Per Year',\r\n\t\t\t_placeholderLabel: 'Pay Per Year',\r\n\t\t\t_configJson: '{\"width\":\"33%\", \"readOnly\":\"(earliestOtherAssignment.currentDetails._payPeriodsPerYear != null) ? earliestOtherAssignment.currentDetails._payPeriodsPerYear : earliestOtherPosition.jobType._currentJobTypeDetail.payPeriodsPerYear\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Secondary.PayPeriodsPerYear',\r\n\t\t\t_sampleData: '24',\r\n\t\t\t_fieldType: 'readOnlyText'\r\n\t\t}, {\r\n\t\t\t_fieldDefId: 'adcd4aa2-58ed-4b5a-b8dc-31edfa043f58',\r\n\t\t\t_label: 'Pay Per Period',\r\n\t\t\t_placeholderLabel: 'Pay Per Period',\r\n\t\t\t_configJson: '{\"width\":\"33%\", \"readOnly\":\"otherPayPerPeriod | currency\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Secondary.PayPerPeriod',\r\n\t\t\t_sampleData: '$1000',\r\n\t\t\t_fieldType: 'readOnlyText'\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '7ad63aae-4ccd-4551-b038-ad250dd6ea68',\r\n\t\t\t_label: 'Salary',\r\n\t\t\t_placeholderLabel: 'Salary',\r\n\t\t\t_configJson: '{\"width\":\"33%\", \"readOnly\":\"otherSalary | currency\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Secondary.Salary',\r\n\t\t\t_sampleData: '$24,000',\r\n\t\t\t_fieldType: 'readOnlyText'\r\n\t\t}\r\n\t],\r\n\r\n\tsecondaryBenefits: [\r\n\t\t{\r\n\t\t\t_configJson: '{\"mappable\": false}',\r\n\t\t\t_label: 'Secondary Benefits',\r\n\t\t\t_placeholderLabel: 'Secondary Benefits',\r\n\t\t\t_fieldType: 'readOnlyHeading'\r\n\t\t}, {\r\n\t\t\t_configJson: '{\"mappable\": false}',\r\n\t\t\t_fieldType: 'instructions',\r\n\t\t\t_label: ''\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '9220e992-9832-405f-aae2-2e80419e6128',\r\n\t\t\t_label: 'Sick Days Per Year',\r\n\t\t\t_placeholderLabel: 'Sick Days Per Year',\r\n\t\t\t_configJson: '{\"width\":\"33%\", \"readOnly\":\"(earliestOtherAssignment.currentDetails._sickDaysPerSchoolYear != null) ? earliestOtherAssignment.currentDetails._sickDaysPerSchoolYear : earliestOtherPosition.jobType._currentJobTypeDetail.sickDaysPerSchoolYear\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Secondary.SickDaysPerSchoolYear',\r\n\t\t\t_sampleData: '10',\r\n\t\t\t_fieldType: 'readOnlyText'\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '98fb9c91-ff03-4089-b028-844e407f39ec',\r\n\t\t\t_label: 'Pers. Days Per Year',\r\n\t\t\t_placeholderLabel: 'Pers. Days Per Year',\r\n\t\t\t_configJson: '{\"width\":\"33%\", \"readOnly\":\"(earliestOtherAssignment.currentDetails._personalDaysPerSchoolYear != null) ? earliestOtherAssignment.currentDetails._personalDaysPerSchoolYear : earliestOtherPosition.jobType._currentJobTypeDetail.personalDaysPerSchoolYear\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Secondary.PersonalDaysPerSchoolYear',\r\n\t\t\t_sampleData: '10',\r\n\t\t\t_fieldType: 'readOnlyText'\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '9e674c8e-5347-42b5-8100-fad4edfbebc4',\r\n\t\t\t_label: 'Vacation Per Year',\r\n\t\t\t_placeholderLabel: 'Vacation Per Year',\r\n\t\t\t_configJson: '{\"width\":\"33%\", \"readOnly\":\"(earliestOtherAssignment.currentDetails._vacationDaysPerSchoolYear != null) ? earliestOtherAssignment.currentDetails._vacationDaysPerSchoolYear : earliestOtherPosition.jobType._currentJobTypeDetail.vacationDaysPerSchoolYear\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Secondary.VacationDaysPerSchoolYear',\r\n\t\t\t_sampleData: '10',\r\n\t\t\t_fieldType: 'readOnlyText'\r\n\t\t}, {\r\n\t\t\t_fieldDefId: 'cf9ce02d-f7b1-455d-85ed-614e361f112a',\r\n\t\t\t_label: 'Paid Holidays',\r\n\t\t\t_placeholderLabel: 'Paid Holidays',\r\n\t\t\t_configJson: '{\"width\":\"50%\", \"readOnly\":\"(earliestOtherAssignment.currentDetails._paidHolidaysPerSchoolYear != null) ? earliestOtherAssignment.currentDetails._paidHolidaysPerSchoolYear : earliestOtherPosition.jobType._currentJobTypeDetail.paidHolidaysPerSchoolYear\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Secondary.PaidHolidaysPerSchoolYear',\r\n\t\t\t_sampleData: '10',\r\n\t\t\t_fieldType: 'readOnlyText'\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '91bef119-7b9e-4c3d-9e09-360f32ce78ba',\r\n\t\t\t_label: 'Retirement System',\r\n\t\t\t_placeholderLabel: 'Retirement System',\r\n\t\t\t_configJson: '{\"width\":\"50%\", \"readOnly\":\"retirementSystem.name\"}',\r\n\t\t\t_externalData: 'Employee.Assignments.Secondary.RetirementSystem.Name',\r\n\t\t\t_sampleData: 'ABCD',\r\n\t\t\t_fieldType: 'readOnlyText'\r\n\t\t}\r\n\t],\r\n\r\n\tfinancial: [\r\n\t\t{\r\n\t\t\t_configJson: '{\"mappable\": false}',\r\n\t\t\t_label: 'Financial Information',\r\n\t\t\t_placeholderLabel: 'Financial Information',\r\n\t\t\t_fieldType: 'heading'\r\n\t\t}, {\r\n\t\t\t_configJson: '{\"mappable\": false}',\r\n\t\t\t_fieldType: 'instructions',\r\n\t\t\t_label: ''\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '70593e5c-65cb-4f65-beab-7db5695715ea',\r\n\t\t\t_label: 'Primary Account Type',\r\n\t\t\t_placeholderLabel: 'Primary Account Type',\r\n\t\t\t_configJson: '{\"colwidth\": \"50%\", \"selectType\": \"super-input-radio\", \"multiple\": false, \"uniqueLabel\": \"Primary Bank Account Type\"}',\r\n\t\t\t_sampleData: 'Checking Account',\r\n\t\t\t_fieldType: 'cmp-checkbox-group',\r\n\t\t\t_options: ['Checking Account','Savings Account']\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '9dddd926-ac0c-4114-9b16-a6f0986ba97c',\r\n\t\t\t_label: 'Banking Name',\r\n\t\t\t_placeholderLabel: 'Banking Name',\r\n\t\t\t_configJson: '{\"width\":\"50%\", \"uniqueLabel\":\"Primary Bank Name\"}',\r\n\t\t\t_sampleData: 'ABC Bank',\r\n\t\t\t_fieldType: 'super-input-text'\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '720a8295-b742-47f3-a25c-cf77e3eb8fe7',\r\n\t\t\t_label: 'Routing/ABA Number',\r\n\t\t\t_placeholderLabel: 'Routing/ABA Number',\r\n\t\t\t_configJson: '{\"width\":\"50%\",\"uniqueLabel\":\"Primary Bank Routing/ABA Number\"}',\r\n\t\t\t_sampleData: '1234567',\r\n\t\t\t_fieldType: 'super-input-text',\r\n\t\t\t_validator: {\r\n\t\t\t\ttype: 'numeric',\r\n\t\t\t\toptions: {}\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '2b816a19-7aea-4bbf-a6d2-19c76f760643',\r\n\t\t\t_label: 'Account Number',\r\n\t\t\t_placeholderLabel: 'Account Number',\r\n\t\t\t_configJson: '{\"width\":\"50%\",\"uniqueLabel\":\"Primary Bank Account Number\"}',\r\n\t\t\t_sampleData: '1234567890',\r\n\t\t\t_fieldType: 'super-input-text',\r\n\t\t\t_validator: {\r\n\t\t\t\ttype: 'numeric',\r\n\t\t\t\toptions: {}\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '717836a3-4af7-41bd-8687-b6909370ecff',\r\n\t\t\t_label: 'Percentage of Pay Deposited',\r\n\t\t\t_placeholderLabel: 'Percentage of Pay Deposited',\r\n\t\t\t_configJson: '{\"width\":\"35%\", \"uniqueLabel\": \"% of pay deposited (primary)\"}',\r\n\t\t\t_sampleData: '50',\r\n\t\t\t_fieldType: 'super-input-text',\r\n\t\t\t_validator: {\r\n\t\t\t\ttype: 'numeric',\r\n\t\t\t\toptions: {}\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '16cb9a79-3e07-42f7-a5e9-a7d144bfc1cd',\r\n\t\t\t_label: 'Secondary Account Type',\r\n\t\t\t_placeholderLabel: 'Secondary Account Type',\r\n\t\t\t_configJson: '{\"colwidth\": \"50%\", \"selectType\": \"super-input-radio\", \"multiple\": false, \"uniqueLabel\":\"Secondary Bank Account Type\"}',\r\n\t\t\t_sampleData: 'Savings Account',\r\n\t\t\t_fieldType: 'cmp-checkbox-group',\r\n\t\t\t_options: ['Checking Account','Savings Account']\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '4d049d8c-bb64-463c-83c6-a86aa604c1ef',\r\n\t\t\t_label: 'Banking Name',\r\n\t\t\t_placeholderLabel: 'Banking Name',\r\n\t\t\t_configJson: '{\"width\":\"50%\", \"uniqueLabel\":\"Secondary Bank Name\"}',\r\n\t\t\t_sampleData: 'ABC Bank',\r\n\t\t\t_fieldType: 'super-input-text'\r\n\t\t}, {\r\n\t\t\t_fieldDefId: 'a5b2d3f6-ece4-46ca-b382-2323413400a2',\r\n\t\t\t_label: 'Routing/ABA Number',\r\n\t\t\t_placeholderLabel: 'Routing/ABA Number',\r\n\t\t\t_configJson: '{\"width\":\"50%\", \"uniqueLabel\": \"Secondary Bank Routing/ABA Number\"}',\r\n\t\t\t_sampleData: '1234567',\r\n\t\t\t_fieldType: 'super-input-text',\r\n\t\t\t_validator: {\r\n\t\t\t\ttype: 'numeric',\r\n\t\t\t\toptions: {}\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\t_fieldDefId: 'dcb0744d-d0e3-4a63-8ca5-1f1b05c4292b',\r\n\t\t\t_label: 'Account Number',\r\n\t\t\t_placeholderLabel: 'Account Number',\r\n\t\t\t_configJson: '{\"width\":\"50%\", \"uniqueLabel\": \"Secondary Bank Account Number\"}',\r\n\t\t\t_sampleData: '1234567890',\r\n\t\t\t_fieldType: 'super-input-text',\r\n\t\t\t_validator: {\r\n\t\t\t\ttype: 'numeric',\r\n\t\t\t\toptions: {}\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '33c2e577-2958-444b-a612-58c29733df50',\r\n\t\t\t_label: 'Percentage of Pay Deposited',\r\n\t\t\t_placeholderLabel: 'Percentage of Pay Deposited',\r\n\t\t\t_configJson: '{\"width\":\"35%\", \"uniqueLabel\": \"% of pay deposited (secondary)\"}',\r\n\t\t\t_sampleData: '50',\r\n\t\t\t_fieldType: 'super-input-text',\r\n\t\t\t_validator: {\r\n\t\t\t\ttype: 'numeric',\r\n\t\t\t\toptions: {}\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\r\n\temergency: [\r\n\t\t{\r\n\t\t\t_configJson: '{\"mappable\": false}',\r\n\t\t\t_label: 'Emergency Contacts',\r\n\t\t\t_placeholderLabel: 'Emergency Contacts',\r\n\t\t\t_fieldType: 'heading'\r\n\t\t}, {\r\n\t\t\t_configJson: '{\"mappable\": false}',\r\n\t\t\t_fieldType: 'instructions',\r\n\t\t\t_label: ''\r\n\t\t}, {\r\n\t\t\t_configJson: '{\"mappable\": false}',\r\n\t\t\t_fieldType: 'subheading',\r\n\t\t\t_label: 'Primary'\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '99df0167-ecea-405f-8192-a657cf2d0841',\r\n\t\t\t_label: 'Name',\r\n\t\t\t_placeholderLabel: 'Primary Contact Name',\r\n\t\t\t_configJson: '{\"width\":\"50%\",\"readOnly\":\"emergencyContacts.primaryContactName\", \"uniqueLabel\": \"Primary Contact Name\"}',\r\n\t\t\t_externalData: 'Employee.EmergencyContacts.Primary.ContactName',\r\n\t\t\t_sampleData: 'Jane Doe',\r\n\t\t\t_fieldTypeOptions: {\r\n\t\t\t\tedit: 'super-input-text',\r\n\t\t\t\tview: 'readOnlyText'\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '3ee27e1a-780f-4dd1-87b8-688ef3f9a4fd',\r\n\t\t\t_label: 'Relationship',\r\n\t\t\t_placeholderLabel: 'Primary Contact Relationship',\r\n\t\t\t_configJson: '{\"width\":\"50%\", \"externalSourceType\": \"enum\", \"externalSource\": \"relationshipTypes\",\"readOnly\":\"emergencyContacts.primaryContactRelationship\", \"uniqueLabel\": \"Primary Contact Relationship\"}',\r\n\t\t\t_externalData: 'Employee.EmergencyContacts.Primary.RelationshipType',\r\n\t\t\t_sampleData: 0,\r\n\t\t\t_fieldType: 'super-select-list',\r\n\t\t\t_fieldTypeOptions: {\r\n\t\t\t\tedit: 'super-select-list',\r\n\t\t\t\tview: 'readOnlyText'\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '4efae0cb-6d68-4eeb-8ce3-031b11678275',\r\n\t\t\t_label: 'Personal Phone',\r\n\t\t\t_placeholderLabel: 'Primary Contact Personal Phone',\r\n\t\t\t_configJson: '{\"width\":\"50%\",\"readOnly\":\"emergencyContacts.primaryContactPhone\", \"uniqueLabel\": \"Primary Contact Personal Phone\"}',\r\n\t\t\t_externalData: 'Employee.EmergencyContacts.Primary.PrimaryPhone',\r\n\t\t\t_sampleData: '123-456-7890',\r\n\t\t\t_fieldTypeOptions: {\r\n\t\t\t\tedit: 'super-input-text',\r\n\t\t\t\tview: 'readOnlyText'\r\n\t\t\t},\r\n\t\t\t_validator: {\r\n\t\t\t\ttype: 'phone',\r\n\t\t\t\toptions: {}\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\t_fieldDefId: 'e0ec2374-be6a-4d6f-9f12-5cbf58f5a5cc',\r\n\t\t\t_label: 'Work Phone',\r\n\t\t\t_placeholderLabel: 'Primary Contact Work Phone',\r\n\t\t\t_configJson: '{\"width\":\"50%\",\"readOnly\":\"emergencyContacts.primaryContactAltPhone\", \"uniqueLabel\": \"Primary Contact Work Phone\"}',\r\n\t\t\t_externalData: 'Employee.EmergencyContacts.Primary.AlternatePhone',\r\n\t\t\t_sampleData: '123-456-7890',\r\n\t\t\t_fieldTypeOptions: {\r\n\t\t\t\tedit: 'super-input-text',\r\n\t\t\t\tview: 'readOnlyText'\r\n\t\t\t},\r\n\t\t\t_validator: {\r\n\t\t\t\ttype: 'phone',\r\n\t\t\t\toptions: {}\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\t_configJson: '{\"mappable\": false}',\r\n\t\t\t_fieldType: 'subheading',\r\n\t\t\t_label: 'Secondary'\r\n\t\t}, {\r\n\t\t\t_fieldDefId: 'a924fcee-27f1-4e17-811d-45b3e11342da',\r\n\t\t\t_label: 'Name',\r\n\t\t\t_placeholderLabel: 'Secondary Contact Name',\r\n\t\t\t_configJson: '{\"width\":\"50%\",\"readOnly\":\"emergencyContacts.secondaryContactName\", \"uniqueLabel\": \"Secondary Contact Name\"}',\r\n\t\t\t_externalData: 'Employee.EmergencyContacts.Secondary.ContactName',\r\n\t\t\t_sampleData: 'Jane Doe',\r\n\t\t\t_fieldTypeOptions: {\r\n\t\t\t\tedit: 'super-input-text',\r\n\t\t\t\tview: 'readOnlyText'\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '007139ff-0690-4ae4-a8e0-4494ecaaf357',\r\n\t\t\t_label: 'Relationship',\r\n\t\t\t_placeholderLabel: 'Secondary Contact Relationship',\r\n\t\t\t_configJson: '{\"width\":\"50%\", \"externalSourceType\": \"enum\", \"externalSource\": \"relationshipTypes\",\"readOnly\":\"emergencyContacts.secondaryContactRelationship\", \"uniqueLabel\": \"Secondary Contact Relationship\"}',\r\n\t\t\t_externalData: 'Employee.EmergencyContacts.Secondary.RelationshipType',\r\n\t\t\t_sampleData: 0,\r\n\t\t\t_fieldType: 'super-select-list',\r\n\t\t\t_fieldTypeOptions: {\r\n\t\t\t\tedit: 'super-select-list',\r\n\t\t\t\tview: 'readOnlyText'\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '14827dc2-9d54-400d-a556-47656bc72f83',\r\n\t\t\t_label: 'Personal Phone',\r\n\t\t\t_placeholderLabel: 'Secondary Contact Personal Phone',\r\n\t\t\t_configJson: '{\"width\":\"50%\",\"readOnly\":\"emergencyContacts.secondaryContactPhone\", \"uniqueLabel\": \"Secondary Contact Personal Phone\"}',\r\n\t\t\t_externalData: 'Employee.EmergencyContacts.Secondary.PrimaryPhone',\r\n\t\t\t_sampleData: '123-456-7890',\r\n\t\t\t_fieldTypeOptions: {\r\n\t\t\t\tedit: 'super-input-text',\r\n\t\t\t\tview: 'readOnlyText'\r\n\t\t\t},\r\n\t\t\t_validator: {\r\n\t\t\t\ttype: 'phone',\r\n\t\t\t\toptions: {}\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\t_fieldDefId: '3a4799b5-168e-4f19-91a6-27299c543f69',\r\n\t\t\t_label: 'Work Phone',\r\n\t\t\t_placeholderLabel: 'Secondary Contact Work Phone',\r\n\t\t\t_configJson: '{\"width\":\"50%\",\"readOnly\":\"emergencyContacts.secondaryContactAltPhone\", \"uniqueLabel\": \"Secondary Contact Work Phone\"}',\r\n\t\t\t_externalData: 'Employee.EmergencyContacts.Secondary.AlternatePhone',\r\n\t\t\t_sampleData: '123-456-7890',\r\n\t\t\t_fieldTypeOptions: {\r\n\t\t\t\tedit: 'super-input-text',\r\n\t\t\t\tview: 'readOnlyText'\r\n\t\t\t},\r\n\t\t\t_validator: {\r\n\t\t\t\ttype: 'phone',\r\n\t\t\t\toptions: {}\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\r\n\tcustom_input: [\r\n\t\t{\r\n\t\t\t_fieldDefId: '951626b1-a422-46b4-9fa1-3b5acf7ee8fc',\r\n\t\t\t_label: '',\r\n\t\t\t_configJson: '{\"width\": \"50%\", \"uniqueLabel\": \"input\"}',\r\n\t\t\t_fieldType: 'super-input-text'\r\n\t\t}\r\n\t],\r\n\r\n\tcustom_dropdown: [\r\n\t\t{\r\n\t\t\t_fieldDefId: '977a2273-62c1-4eef-8d63-91f9d8d1e0bf',\r\n\t\t\t_label: 'Dropdown',\r\n\t\t\t_placeholderLabel: 'Dropdown',\r\n\t\t\t_configJson: '{\"width\":\"50%\", \"uniqueLabel\": \"dropdown\"}',\r\n\t\t\t_fieldType: 'super-select-list',\r\n\t\t\t_options: ['Option 1', 'Option 2', 'Option 3']\r\n\t\t}\r\n\t],\r\n\r\n\tcustom_selectGroup: [\r\n\t\t{\r\n\t\t\t_fieldDefId: '10a88a23-f8f3-48eb-aa48-c466db06378b',\r\n\t\t\t_label: 'Multiple Choice',\r\n\t\t\t_placeholderLabel: 'Multiple Choice',\r\n\t\t\t_configJson: '{\"colwidth\": \"25%\", \"selectType\": \"super-input-checkbox\", \"multiple\": true, \"uniqueLabel\": \"multiple choice\"}',\r\n\t\t\t_fieldType: 'cmp-checkbox-group',\r\n\t\t\t_options: ['Option 1','Option 2','Option 3','Option 4']\r\n\t\t}\r\n\t],\r\n\r\n\tcustom_signature: [\r\n\t\t{\r\n\t\t\t_fieldDefId: '17ff0b2c-4973-4181-92ce-b1c50c851165',\r\n\t\t\t_label: 'Please Sign',\r\n\t\t\t_placeholderLabel: 'Please Sign',\r\n\t\t\t_configJson: '{\"uniqueLabel\": \"signature\"}',\r\n\t\t\t_fieldType: 'super-digital-signature',\r\n\t\t\t_required: true,\r\n\t\t\t_validator: {\r\n\t\t\t\ttype: 'digitalSignature',\r\n\t\t\t\toptions: {},\r\n\t\t\t\tapplyOnRequired: true\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\r\n\tcustom_signatures: [\r\n\t\t{\r\n\t\t\t_fieldDefId: '17ff0b2c-4973-4181-92ce-b1c50c851166',\r\n\t\t\t_label: 'Please Sign',\r\n\t\t\t_placeholderLabel: 'Please Sign',\r\n\t\t\t_configJson: '{\"uniqueLabel\": \"signature\", \"signatureDisplay\": \"step-participant\", \"signatureIds\": [], \"orientation\": \"h\" }',\r\n\t\t\t_fieldType: 'super-digital-signature',\r\n\t\t\t_required: true,\r\n\t\t\t_validator: {\r\n\t\t\t\ttype: 'digitalSignature',\r\n\t\t\t\toptions: {},\r\n\t\t\t\tapplyOnRequired: true\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\r\n\tcustom_date: [\r\n\t\t{\r\n\t\t\t_fieldDefId: 'c2e31de2-09e8-4563-acb1-0e190a8e3b11',\r\n\t\t\t_label: 'Date',\r\n\t\t\t_placeholderLabel: 'Date',\r\n\t\t\t_configJson: '{\"width\":\"25%\", \"uniqueLabel\": \"date\"}',\r\n\t\t\t_fieldType: 'super-iso-org-date'\r\n\t\t}\r\n\t],\r\n\r\n\tcustom_fileUpload: [\r\n\t\t{\r\n\t\t\t_fieldDefId: '5299a28c-56d5-4dc3-81ae-6f9f741eb324',\r\n\t\t\t_label: 'Instructions for uploading files...',\r\n\t\t\t_placeholderLabel: 'Instructions for uploading files...',\r\n\t\t\t_configJson: '{\"uniqueLabel\": \"file upload\"}',\r\n\t\t\t_documentCategory: 0,\r\n\t\t\t_documentSubCategory: 8,\r\n\t\t\t_fieldType: 'super-file-upload',\r\n\t\t\t_validator: {\r\n\t\t\t\ttype: 'fileUpload',\r\n\t\t\t\toptions: {},\r\n\t\t\t\tapplyOnRequired: true\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\r\n\tcustom_fileLink: [\r\n\t\t{\r\n\t\t\t_fieldDefId: 'e215f04f-037a-479e-b5da-9bb3155b55d5',\r\n\t\t\t_label: 'Link',\r\n\t\t\t_placeholderLabel: 'Link',\r\n\t\t\t_configJson: '{\"isValid\": false, \"location\": \"\", \"name\":\"\", \"display\": \"Link will display here\", \"uniqueLabel\":\"File Link\" }',\r\n\t\t\t_fieldType: 'link'\r\n\t\t}\r\n\t],\r\n\r\n\tcustom_sectionHead: [\r\n\t\t{\r\n\t\t\t_fieldDefId: '9eabf24b-ae80-4488-a164-2a6f78a50cbd',\r\n\t\t\t_label: 'Section Heading',\r\n\t\t\t_placeholderLabel: 'Section Heading',\r\n\t\t\t_configJson: '{\"uniqueLabel\":\"Section Head\"}',\r\n\t\t\t_fieldType: 'heading'\r\n\t\t}\r\n\t],\r\n\r\n\tcustom_text: [\r\n\t\t{\r\n\t\t\t_fieldDefId: 'b6390770-0590-418c-b516-2080b243e9b7',\r\n\t\t\t_configJson: '{\"mappable\": false, \"uniqueLabel\": \"text\"}',\r\n\t\t\t_fieldType: 'text',\r\n\t\t\t_label: ''\r\n\t\t}\r\n\t],\r\n\r\n\tcustom_textEditor: [\r\n\t\t{\r\n\t\t\t_configJson: '{\"mappable\": false}',\r\n\t\t\t_fieldDefId: '62b743aa-c127-40cb-9574-1f2810a201c6',\r\n\t\t\t_fieldType: 'cmp-text-editor',\r\n\t\t\t_fieldTypeOptions: {\r\n\t\t\t\tedit: 'cmp-text-editor',\r\n\t\t\t\tview: 'readOnlyText'\r\n\t\t\t},\r\n\t\t\t_label: '',\r\n\t\t\t_tokenFields: []\r\n\t\t}\r\n\t],\r\n\r\n\tcustom_range: [\r\n\t\t{\r\n\t\t\t_fieldDefId: '2056c221-97c8-4994-962c-f4bfc319a9e4',\r\n\t\t\t_label: 'Range',\r\n\t\t\t_placeholderLabel: 'Range',\r\n\t\t\t_fieldType: 'super-select-text',\r\n\t\t\tfrom: 0,\r\n\t\t\tto: 100\r\n\t\t}\r\n\t]\r\n\r\n};\r\n\r\n/**\r\n * Prevents duplicated options\r\n * @param {Object} field\r\n * @return {String|Boolean} true if no error. Error message otherwise.\r\n */\r\nfunction dupeOptionCheck(field) {\r\n\tvar counts = [];\r\n\tfor(var i = 0; i <= field._options.length; i++) {\r\n\t\tif(counts[field._options[i]] === undefined) {\r\n\t\t\tcounts[field._options[i]] = 1;\r\n\t\t} else {\r\n\t\t\treturn 'Cannot have duplicate options.';\r\n\t\t}\r\n\t}\r\n\treturn true;\r\n}\r\n\r\n/**\r\n * Limits the text length of an option\r\n * @param {Object} field\r\n * @param {Number} limit Option character length limit\r\n * @return {String|Boolean} true if no error. Error message otherwise.\r\n */\r\nfunction optionLimitCheck(field, limit = 100) {\r\n\tlet options = field._options;\r\n\tif (options == null || options.length < 1) {\r\n\t\treturn true;\r\n\t}\r\n\tif (options.filter(f => f.length > limit).length > 0) {\r\n\t\treturn `Anything greater than ${limit} character${limit === 1 ? '' : 's' } cannot be mapped.`;\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nfunction textLimitCheck(field, limit = 100) {\r\n\tlet fieldConfig = field.config || JSON.parse(field._configJson);\r\n\tif (!fieldConfig.mappable || limit == null || limit === -1) { return true; }\r\n\treturn field._label.length <= limit || `Anything greater than ${limit} character${limit === 1 ? '' : 's'} cannot be mapped.`;\r\n}\r\n\r\nfunction validateAll(val, validators = []) {\r\n\tfor (let i = 0; i < validators.length; i += 1) {\r\n\t\tif (typeof validators[i] !== 'function') {\r\n\t\t\treturn `validator ${JSON.stringify(validators[i])} must be a function`;\r\n\t\t}\r\n\t\tlet result = validators[i].call(null, val);\r\n\t\tif (result === true) { continue; }\r\n\t\treturn result;\r\n\t}\r\n}\r\n\r\nconst validators = {\r\n\t'cmp-checkbox-group': field => {\r\n\t\treturn dupeOptionCheck(field);\r\n\t},\r\n\t'super-select-list': field => {\r\n\t\treturn dupeOptionCheck(field);\r\n\t},\r\n\t'text': field => {\r\n\t\treturn textLimitCheck(field);\r\n\t}\r\n};\r\n\r\nfunction fieldsHlp(ssEnum, ssObjectHlp) {\r\n\t// #----------------------------# //\r\n\t// #---- Helper (fieldsHlp) ----# //\r\n\r\n//\tput together an array of all the fields\r\n\tlet allFields = [];\r\n\tObject.keys(fieldTypes).forEach((key) => {\r\n\t\tallFields = [...allFields, ...fieldTypes[key]];\r\n\t});\r\n\r\n\tconst _hlp = {\r\n\r\n\t\tallFields,\r\n\r\n\t\tgetFieldById(field) {\r\n\t\t\treturn allFields.find((targetField) => {\r\n\t\t\t\treturn field._fieldDefId === targetField._fieldDefId;\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tgetFields(type, cmp) {\r\n\t\t\tif(fieldTypes[type]) {\r\n\t\t\t\treturn fieldTypes[type].map(function (f, idx, arr) {\r\n\r\n\t\t\t\t\tconst fieldDef = _hlp.mergeRecursive(angular.copy(defaultFieldDef), f);\r\n\r\n\t\t\t\t\tif(!type.startsWith('custom')) {\r\n\t\t\t\t\t\tObject.assign(fieldDef, { _fieldGroup: type });\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar config = JSON.parse(fieldDef._configJson);\r\n\r\n\t\t\t\t\tif (config.fields){\r\n\t\t\t\t\t\tconfig.fields.forEach(function(field, index){\r\n\t\t\t\t\t\t\tconfig.fields[index] = _hlp.mergeRecursive(angular.copy(defaultFieldDef), field);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tconfig.cmp = cmp;\r\n\r\n\t\t\t\t\tfieldDef._configJson = JSON.stringify(config);\r\n\r\n\t\t\t\t\t_hlp.updateFieldOptions(fieldDef);\r\n\r\n\t\t\t\t\treturn fieldDef;\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tconsole.error(`fields for the \"${type}\" field group could not be rendered.`)\r\n\t\t\t\treturn [];\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// update existing field objects with missing keys - handles keys with JSON strings as values (i.e.: \"_configJson\")\r\n\t\tupdateFieldAttributes(field) {\r\n\t\t\tlet updatedKeys = [];\r\n\t\t\tlet parentField = this.getFieldById(field);\r\n\t\t\tif (parentField != null) {\r\n\t\t\t\tlet updatedParent = Object.assign({}, defaultFieldDef, parentField);\r\n\t\t\t\tlet addKeys = function ak(source, target) {\r\n\t\t\t\t\tvar targetKeys = Object.keys(target);\r\n\t\t\t\t\tObject.keys(source).forEach(key => {\r\n\t\t\t\t\t\tif(typeof source[key] === \"string\" && source[key].startsWith('{\"')) {\r\n\t\t\t\t\t\t\tlet newsource = JSON.parse(source[key]);\r\n\t\t\t\t\t\t\tlet newtarget = JSON.parse(target[key]);\r\n\t\t\t\t\t\t\tak(newsource, newtarget);\r\n\t\t\t\t\t\t\ttarget[key] = JSON.stringify(newtarget);\r\n\t\t\t\t\t\t} else if(source[key] && source[key].length && typeof source[key] === \"object\" && !Array.isArray(source[key])) {\r\n\t\t\t\t\t\t\tak(source[key], target[key]);\r\n\t\t\t\t\t\t} else if(!targetKeys.includes(key)) {\r\n\t\t\t\t\t\t\ttarget[key] = source[key];\r\n\t\t\t\t\t\t\tupdatedKeys.push(key);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\taddKeys(updatedParent, field);\r\n\t\t\t}\r\n\t\t\treturn updatedKeys;\r\n\t\t},\r\n\r\n\t\t// This updates the \"_options\" array of any field that uses enums with the latest enums and returns that field (if updated).\r\n\t\tupdateFieldOptions(field) {\r\n\t\t\tconst config = JSON.parse(field._configJson);\r\n\t\t\tlet updatedOptions = [];\r\n\t\t\ttry {\r\n\t\t\t\tif (config.externalSource != null && ssEnum[config.externalSource] != null) {\r\n\t\t\t\t\tif(!field._options.length || field._options.length !== ssEnum[config.externalSource].enums.length ) {\r\n\t\t\t\t\t\tfield._options = ssEnum[config.externalSource].enums.map((item) => {\r\n\t\t\t\t\t\t\treturn item.name;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tupdatedOptions = [...field._options];\r\n\t\t\t\t\t} \r\n\t\t\t\t}\r\n\t\t\t\treturn updatedOptions;\r\n\t\t\t} catch(err) {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\taddStepIdToField: (steps) => {\r\n\t\t\tsteps.forEach((step) => {\r\n\t\t\t\tif(step.fieldGroups) {\r\n\t\t\t\t\tstep.fieldGroups.forEach(group => {\r\n\t\t\t\t\t\tgroup.forEach(f => {\r\n\t\t\t\t\t\t\tif (f._step == null) { f._step = {}; }\r\n\t\t\t\t\t\t\tf._step.id = step.id;\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tupdateActiveCredentialSelection(field, selectActive){\r\n\t\t\tvar externalDataVals = field._externalData.split('.')\r\n\r\n\t\t\t// Doesn't include active\r\n\t\t\tif (externalDataVals.length < 4) {\r\n\t\t\t\tif (selectActive) {externalDataVals.push('Active')} \r\n\t\t\t\tfield._externalData = externalDataVals.join('.')\r\n\t\t\t} else {\r\n\t\t\t\tif (!selectActive) {externalDataVals.pop()} \r\n\t\t\t\tfield._externalData = externalDataVals.join('.')\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tgetValidator(type) {\r\n\t\t\treturn validators[type];\r\n\t\t},\r\n\r\n\t\tmergeRecursive(to = {}, from = {}, override = true) {\r\n\r\n\t\t\tif(Object.prototype.toString.call(to) !== '[object Object]' || Object.prototype.toString.call(from) !== '[object Object]') {\r\n\t\t\t\tconsole.error('all arguments must be of type [object Object]');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\r\n\t\t\tfor(var p in from) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tif(from.hasOwnProperty(p)) {\r\n\t\t\t\t\t\tif(ssObjectHlp.isObject(from[p]) && ssObjectHlp.isObject(to[p])) {\r\n\t\t\t\t\t\t\tto[p] = _hlp.mergeRecursive(to[p], from[p], override);\r\n\t\t\t\t\t\t} else if(to[p] && Array.isArray(from[p]) && from[p].length && from[p].every(ssObjectHlp.isObject)) {\r\n\t\t\t\t\t\t\tto[p] = from[p].map((p, i) => {\r\n\t\t\t\t\t\t\t\treturn _hlp.mergeRecursive(to[p][i], p, override);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t} else if ( ssObjectHlp.isObject(JSON.parse(from[p])) ) {\r\n\t\t\t\t\t\t\tto[p] = JSON.stringify(_hlp.mergeRecursive(JSON.parse(to[p]), JSON.parse(from[p]), override));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif(to[p] && override || !to[p]) {\r\n\t\t\t\t\t\t\t\tto[p] = from[p];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch(e) {\r\n\t\t\t\t\tif(to[p] && override || !to[p]) {\r\n\t\t\t\t\t\tto[p] = from[p];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn to;\r\n\t\t}\r\n\t}\r\n\r\n\treturn _hlp;\r\n\r\n\t// #-- END Helper (fieldsHlp) --# //\r\n\t// #----------------------------# //\r\n\r\n};\r\n\r\nangular.module('ec-forms-helpers').factory('fieldsHlp', fieldsHlp);\r\n","function formsHlp(ssEnum, ssSaveInterrupterSvc, ssFormInstancesApi) {\r\n// #---- Helper (formsHlp) ----# //\r\n\r\n\tconst defaultPermissions = {\r\n\t\tparticipantType: null,\r\n\t\temployeeId: '',\r\n\t\tcanEdit: false,\r\n\t\tcanView: true,\r\n\t\tcanViewSensitive: false,\r\n\t\tcanEditSensitive: false,\r\n\t};\r\n\r\n\tconst _hlp = {\r\n\r\n\t\tinitSaveInterrupter(form) {\r\n\t\t\t// clear any registered models\r\n\t\t\tssSaveInterrupterSvc.clear();\r\n\t\t\t// reset & register form steps\r\n\t\t\tform._steps.forEach(step => {\r\n\t\t\t\tif (step.$$resetChangesDetected) {\r\n\t\t\t\t\tstep.$$resetChangesDetected();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tssSaveInterrupterSvc.register(form._steps);\r\n\t\t\t// reset & register form fields\r\n\t\t\tif(form._formFields) {\r\n\t\t\t\tform._formFields.forEach(field => {\r\n\t\t\t\t\tif (field.$$resetChangesDetected) {\r\n\t\t\t\t\t\tfield.$$resetChangesDetected();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tssSaveInterrupterSvc.register(form._formFields);\r\n\t\t\t}\r\n\t\t\t// reset & register the form\r\n\t\t\tform.$$resetChangesDetected();\r\n\t\t\tssSaveInterrupterSvc.register(form);\r\n\t\t},\r\n\r\n\t\tmakeStep: (config = {}) => {\r\n\t\t\tlet defaultStep = {\r\n\t\t\t\t_name: '',\r\n\t\t\t\t_fieldOrder: '',\r\n\t\t\t\tfieldGroups: [],\r\n\t\t\t\t_stepAction: null,\r\n\t\t\t\t_stepParticipant: {\r\n\t\t\t\t\tparticipantType: null,\r\n\t\t\t\t\temployeeIds: []\r\n\t\t\t\t},\r\n\t\t\t\t_stepEvents: [{\r\n\t\t\t\t\teventType: ssEnum.stepEventType.onSubmit,\r\n\t\t\t\t\teventActions: []\r\n\t\t\t\t}],\r\n\t\t\t\t_permissions: []\r\n\t\t\t};\r\n\t\t\treturn Object.assign({}, defaultStep, config);\r\n\t\t},\r\n\r\n\t\tupdateStepOrder: (form, steps) => {\r\n\t\t\tlet formReviewStep, formCompletedStep;\r\n\r\n\t\t\t// if 'steps' is not passed in, then derive that value from the form\r\n\t\t\tif(!steps) {\r\n\t\t\t\tsteps = form._steps.filter((step) => {\r\n\t\t\t\t\t\treturn step._stepAction !== ssEnum.stepAction.formCompleted && step._stepAction !== ssEnum.stepAction.employeeProfileReview;\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// look for an existing form complete step...\r\n\t\t\tformCompletedStep = form._steps.find((step) => {\r\n\t\t\t\treturn step._stepAction === ssEnum.stepAction.formCompleted;\r\n\t\t\t});\r\n\t\t\t// look for an exisitng employee review step...\t\r\n\t\t\tformReviewStep = form._steps.find((step) => {\r\n\t\t\t\treturn step._stepAction === ssEnum.stepAction.employeeProfileReview;\r\n\t\t\t});\r\n\t\t\t// reset the step order; don't forget the last step\r\n\t\t\tif (formReviewStep) {\r\n\t\t\t\treturn `${steps.map(s => s.id).join(',')},${formReviewStep.id},${formCompletedStep.id}`;\r\n\t\t\t} else {\r\n\t\t\t\treturn `${steps.map(s => s.id).join(',')},${formCompletedStep.id}`;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tupdateFieldOrder: (steps) => {\r\n\t\t\tsteps.forEach(step => {\r\n\t\t\t\tif(step.fieldGroups) {\r\n\t\t\t\t\tlet currentFieldOrder = step.fieldGroups\r\n\t\t\t\t\t.map(g => g.map(f => f.id).join(','))\r\n\t\t\t\t\t.join(',');\r\n\t\t\t\t\tif(step._fieldOrder.trim() !== currentFieldOrder.trim()) {\r\n\t\t\t\t\t\tstep._fieldOrder = currentFieldOrder;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tsortByOrderField(arr, order) {\r\n\t\t\tif (order == null) { return; }\r\n\t\t\tif (arr == null) { return; }\r\n\t\t\tconst orderArr = order.split(',');\r\n\t\t\tconst dataBucket = {};\r\n\r\n\t\t\t// drop all the data objects in the bucket\r\n\t\t\tfor (let idx = arr.length; idx--;) {\r\n\t\t\t\tlet obj = arr.pop();\r\n\t\t\t\tdataBucket[obj.id] = obj;\r\n\t\t\t}\r\n\r\n\t\t\t// push them back onto the array in the right order\r\n\t\t\torderArr.forEach(id => {\r\n\t\t\t\tif (id in dataBucket) {\r\n\t\t\t\t\tarr.push(dataBucket[id]);\r\n\t\t\t\t\tdelete dataBucket[id];\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// append anything that's left over\r\n\t\t\tObject.keys(dataBucket).forEach(id => {\r\n\t\t\t\tif (dataBucket[id] == null) { return; }\r\n\t\t\t\tarr.push(dataBucket[id]);\r\n\t\t\t});\r\n\r\n\t\t\treturn arr;\r\n\t\t},\r\n\r\n\t/** \r\n\t*\tBuilds an array of simplified step participant objects\r\n\t*\t@param {Object} steps : form steps array\r\n\t*/\r\n\t\tbuildParticipantList(steps) {\r\n\t\t\tlet parts = [];\r\n\t\t\tsteps.forEach(step => {\r\n\t\t\t//\tskip last step or steps without a participant\r\n\t\t\t\tif (step._stepAction === ssEnum.stepAction.formCompleted || step._stepParticipant.participantType == null) { return; }\r\n\t\t\t// Do not include specific participants with no employee ID\r\n\t\t\t\tif(step._stepParticipant.participantType === ssEnum.stepParticipantType.specificPerson && !step._stepParticipant.employeeIds.length) { return; }\r\n\t\t\t//\tmake sure the employee id is a valid value\r\n\t\t\t\tlet spEmpId = angular.isArray(step._stepParticipant.employeeIds) && step._stepParticipant.employeeIds.length ? step._stepParticipant.employeeIds[0] : '';\r\n\t\t\t//\tif we already added this step participant, return\r\n\t\t\t\tif(parts.find((part) => _hlp.matchByParticipant(part, step._stepParticipant))) { \r\n\t\t\t\t\treturn; \r\n\t\t\t\t};\r\n\t\t\t//\tif not, add a new one\r\n\t\t\t\tparts.push({\r\n\t\t\t\t\tparticipantType: step._stepParticipant.participantType,\r\n\t\t\t\t\temployeeId: spEmpId\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\treturn parts;\r\n\t\t},\r\n\r\n\r\n\t/**\r\n\t*\tMatch permission objects to step participants by participant type and/or employee ID\r\n\t*\t@param {Object} sourceA : object that should include either 'employeeID'(string) or 'employeeIds'(array) & 'participantType'(int) properties \r\n\t*\t@param {Object} sourceB : object that should include either 'employeeID'(string) or 'employeeIds'(array) & 'participantType'(int) properties \r\n\t*/\r\n\t\tmatchByParticipant(sourceA, sourceB){\r\n\t\t\tlet sourceAId = sourceA.employeeIds && sourceA.employeeIds.length ? sourceA.employeeIds[0] : sourceA.employeeId || ''\r\n\t\t\tlet sourceBId = sourceB.employeeIds && sourceB.employeeIds.length ? sourceB.employeeIds[0] : sourceB.employeeId || '';\r\n\t\t\treturn sourceA.participantType === sourceB.participantType && sourceAId === sourceBId;\r\n\t\t},\r\n\t/** \r\n\t*\tRemoves any step permission objects that dont match up to a step participant\r\n\t*\t@param {Object} step : form steps array\r\n\t*\t@param {Array} participants : an array of step participant objects\r\n\t*/\r\n\t\tremovePermissions(step, participants) {\r\n\t\t\tlet removed = [];\r\n\r\n\t\t\tif(step._permissions.length) {\r\n\t\t\t\tfor (let i = 0; i <= step._permissions.length - 1; i++) {\r\n\t\t\t\t\tlet perm = step._permissions[i];\r\n\t\t\t\t//\tdetermine if there is a participant that matches the permission object\r\n\t\t\t\t\tlet item = participants.find(part => _hlp.matchByParticipant(part, perm));\r\n\t\t\t\t//\tif not, splice it out\r\n\t\t\t\t\tif (!item || item === undefined) {\r\n\t\t\t\t\t\tremoved = step._permissions.splice(i, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn removed;\r\n\t\t},\r\n\r\n\t/**\r\n\t*\tAssign step permissions\r\n\t*\t@param {Object} permObj : step permission object to update\r\n\t*\t@param {Object} partObj : step participant object used to match step permission object\r\n\t*/\r\n\t\tassignStepAccess(permObj, partObj, options = {}) {\r\n\t\t\tlet keysToAssign = ['canEdit', 'canViewSensitive', 'canEditSensitive'];\r\n\t\t\tif(!permObj.canView) {\r\n\t\t\t\tpermObj.canView = true;\r\n\t\t\t}\r\n\t\t\tObject.keys(permObj).forEach((key) => {\r\n\t\t\t\tif(keysToAssign.includes(key)) {\r\n\t\t\t\t\tpermObj[key] = _hlp.matchByParticipant(permObj, partObj);\r\n\t\t\t\t\t// disable 'canEditSensitive' for HRMS orgs\r\n\t\t\t\t\tif(options.isHRMS && key === 'canEditSensitive') {\r\n\t\t\t\t\t\tpermObj[key] = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn permObj;\r\n\t\t},\r\n\r\n\t/**\r\n\t*\tCopies step permission settings from one object to another\r\n\t*\t@param {Object} target : step permission object to update\r\n\t*\t@param {Object} source : step permission object to copy \r\n\t*/\r\n\t\tcopyStepAccess(target, source) {\r\n\t\t\treturn Object.assign(target, {\r\n\t\t\t\tcanView: source.canView,\r\n\t\t\t\tcanEdit: source.canEdit, \r\n\t\t\t\tcanViewSensitive: source.canViewSensitive,\r\n\t\t\t\tcanEditSensitive: source.canEditSensitive,\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tupdatePermissions({steps, currentStep, newStepParticipant = {}, oldStepParticipant = {}, options = {}}) {\r\n\r\n\t\t\tconst participants = _hlp.buildParticipantList(steps);\r\n\r\n\t\t\tsteps.forEach((step, i) => {\r\n\t\t\t// skip last step\r\n\t\t\t\tif (step._stepAction === ssEnum.stepAction.formCompleted) { return; }\r\n\r\n\t\t\t// skip employee profile review step\r\n\t\t\t\tif (step._stepAction === ssEnum.stepAction.employeeProfileReview) { return; }\r\n\r\n\t\t\t//\tremove permissions that dont match up to a participant\r\n\t\t\t\tlet removed = _hlp.removePermissions(step, participants);\r\n\t\t\t\t\r\n\t\t\t//\tprocess the permissions objects based on the updated participant list\r\n\t\t\t\tparticipants.forEach(part => {\r\n\t\t\t\t//\tLook for a permission object that matches a participant...\r\n\t\t\t\t\tlet matchingPerm = step._permissions.find(perm => _hlp.matchByParticipant(part, perm));\r\n\t\t\t\t//\t...we found a matching permission object...\r\n\t\t\t\t\tif (matchingPerm) {\r\n\t\t\t\t\t//\t...and we're on the currently selected step...\r\n\t\t\t\t\t\tif(currentStep === step) {\r\n\t\t\t\t\t\t\tif(_hlp.matchByParticipant(matchingPerm, newStepParticipant)) {\r\n\t\t\t\t\t\t\t\t_hlp.assignStepAccess(matchingPerm, step._stepParticipant, options);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(_hlp.matchByParticipant(matchingPerm, oldStepParticipant)) {\r\n\t\t\t\t\t\t\t\t_hlp.assignStepAccess(matchingPerm, step._stepParticipant, options);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t//\tDo nothing if we're not on the current step\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t//\twe haven't found a matching permission object, so create a new one for this participant and set its properties\r\n\t\t\t\t\tlet newPerm = Object.assign({}, defaultPermissions, {\r\n\t\t\t\t\t\tparticipantType: part.participantType,\r\n\t\t\t\t\t\temployeeId: part.employeeId\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif (step._stepAction === ssEnum.stepAction.employeeProfileReview) { \r\n\t\t\t\t\t\tnewPerm.canView = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t//\tIf new permission object is replacing an existing one, copy the existing one to the new one, otherwise we assume it's a unique step participant, and assign step access rights based on whether or not the new participant matches the current step participant\r\n\t\t\t\t\tif(removed.length) {\r\n\t\t\t\t\t\tnewPerm = _hlp.copyStepAccess(newPerm, removed[0])\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnewPerm = _hlp.assignStepAccess(newPerm, step._stepParticipant, options);\r\n\t\t\t\t\t}\r\n\t\t\t\t//\tinsert the new step permission object at the same index as the matching participant object\r\n\t\t\t\t\tstep._permissions.splice(participants.indexOf(part), 0, newPerm);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tgeneratePDFOverlay(formInstance, showSensitiveFields) {\r\n\t\t\treturn Promise.resolve()\r\n\t\t\t.then(() => {\r\n\t\t\t\tlet formFieldValues = formInstance._steps.filter((step) => {\r\n\t\t\t\t\treturn step._stepAction !== ssEnum.stepAction.formCompleted\r\n\t\t\t\t}).map((step) => {\r\n\t\t\t\t\treturn step._formFieldValues;\r\n\t\t\t\t}).reduce((a, c) => {\r\n\t\t\t\t\ta = typeof a === 'string' ? JSON.parse(a) : a;\r\n\t\t\t\t\treturn Object.assign(a, JSON.parse(c));\r\n\t\t\t\t});\r\n\t\t\t\treturn formFieldValues;\r\n\t\t\t})\r\n\t\t\t.then((formFieldValues) => {\r\n\t\t\t\treturn ssFormInstancesApi.generatePDFOverlay({\r\n\t\t\t\t\tformInstanceid: formInstance.id,\r\n\t\t\t\t\tformFieldValues: formFieldValues,\r\n\t\t\t\t\tshowSensitive: showSensitiveFields\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn _hlp;\r\n\r\n// #-- END Helper (formsHlp) --# //\r\n// #---------------------------# //\r\n};\r\n\r\n// function formsHlp() { return _hlp; }\r\nangular.module('ec-forms-helpers').factory('formsHlp', formsHlp);\r\n","// #---------------------------------# //\r\n// #---- Helper (statusLabelHlp) ----# //\r\n\r\nfunction statusLabelHlp(ssDateByOrgHlp, enumFormTemplateStatus) {\r\n\r\n\tfunction getLabel(obj, org) {\r\n\t\tvar status,\r\n\t\t\tstatusLabel;\r\n\r\n\t\tif (obj._statusId == null) {\r\n\t\t\tstatusLabel = enumFormTemplateStatus.byValue(0);\r\n\t\t} else {\r\n\t\t\tstatusLabel = enumFormTemplateStatus.byValue(obj._statusId);\r\n\t\t}\r\n\r\n\t\tstatus = statusLabel.toLowerCase();\r\n\r\n\t\tif (obj._statusHistory) {\r\n\t\t\tfor (let i = 0; i < obj._statusHistory.length; i++) {\r\n\t\t\t\tlet from = ssDateByOrgHlp.utcIsoToRelativeMoment(obj._statusHistory[i]._from, org);\r\n\t\t\t\tlet statusId = obj._statusHistory[i]._statusId;\r\n\r\n\t\t\t\tlet nowUTC = ssDateByOrgHlp.utcIsoToRelativeMoment(moment().utc().toISOString(), org);\r\n\r\n\t\t\t\tif (nowUTC < from && statusLabel === 'Inactive') {\r\n\t\t\t\t\tif (statusId === enumFormTemplateStatus.active) {\r\n\t\t\t\t\t\tlet formattedDate = from.format('L');\r\n\t\t\t\t\t\tstatusLabel = `Inactive until ${formattedDate}`;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn { status, statusLabel };\r\n\t}\r\n\r\n\treturn {\r\n\t\tgetLabel\r\n\t};\r\n}\r\n\r\n// #-- END Helper (statusLabelHlp) --# //\r\n// #---------------------------------# //\r\n\r\nangular.module('ec-forms-helpers').factory('statusLabelHlp', statusLabelHlp);\r\n","const _hlp = {\r\n// #------------------------------------# //\r\n// #---- Helper (viewportOffsetHlp) ----# //\r\n\r\n\tformatText(text) {\r\n\t\treturn text;\r\n\t},\r\n\t/**\r\n\t * Calculates the current \"window\" position taking into account your scroll position\r\n\t * @param {Any} win - The browser window object\r\n\t * @returns {Any} lt - Object containing the left and top of the current viewport.\r\n\t */\r\n\tgetViewportOffsets(win) {\r\n\t\t// Default case, likely to never happen, -1 to help differentiate the code paths in unit tests\r\n\t\tvar lt = { left: -1, top: -1 };\r\n\r\n\t\tif (win == null) { return lt; }\r\n\r\n\t\t// If when we try to figure out the position and it fails,\r\n\t\t//\tdefault to 0.  Probably the safe bet, so that we can still draw a box\r\n\t\ttry {\r\n\t\t\tlt.left = win.pageXOffset ||\r\n\t\t\t\twin.document.documentElement.scrollLeft ||\r\n\t\t\t\twin.document.body.scrollLeft ||\r\n\t\t\t\t0;\r\n\t\t}\r\n\t\tcatch(err) {\r\n\t\t\tlt.left = 0;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tlt.top = win.pageYOffset ||\r\n\t\t\t\twin.document.documentElement.scrollTop ||\r\n\t\t\t\twin.document.body.scrollTop ||\r\n\t\t\t\t0;\r\n\t\t}\r\n\t\tcatch(err) {\r\n\t\t\tlt.top = 0;\r\n\t\t}\r\n\r\n\t\treturn lt;\r\n\t}\r\n// #-- END Helper (viewportOffsetHlp) --# //\r\n// #------------------------------------# //\r\n};\r\n\r\nfunction viewportOffsetHlp() { return _hlp; }\r\nangular.module('ec-forms-helpers').factory('viewportOffsetHlp', viewportOffsetHlp);\r\n","import './components/cmp-attachments/attachments.js';\nimport './components/cmp-box-creator/box-creator.js';\nimport './components/cmp-box-date-options/box-date-options.js';\nimport './components/cmp-box-resizer/box-resizer.js';\nimport './components/cmp-checkbox-group/checkbox-group.js';\nimport './components/cmp-credential-group/credential-group.js';\nimport './components/cmp-credential/credential.js';\nimport './components/cmp-dnd-options/dnd-options.js';\nimport './components/cmp-emp-initiated-template/emp-initiated-template.js';\nimport './components/cmp-field-renderer/field-renderer.js';\nimport './components/cmp-fl-share-form/fl-share-form.js';\nimport './components/cmp-form-list-group/form-list-group.js';\nimport './components/cmp-form-send-status/form-send-status.js';\nimport './components/cmp-multiple-employee-search/multiple-employee-search.js';\nimport './components/cmp-overlay-builder-toolbox/overlay-builder-toolbox.js';\nimport './components/cmp-properties-credentials/properties-credentials.js';\nimport './components/cmp-properties-custom-common/properties-custom-common.js';\nimport './components/cmp-properties-custom-date/properties-custom-date.js';\nimport './components/cmp-properties-custom-dropdown/properties-custom-dropdown.js';\nimport './components/cmp-properties-custom-filelink/properties-custom-filelink.js';\nimport './components/cmp-properties-custom-fileupload/properties-custom-fileupload.js';\nimport './components/cmp-properties-custom-input/properties-custom-input.js';\nimport './components/cmp-properties-custom-sectionhead/properties-custom-sectionhead.js';\nimport './components/cmp-properties-custom-selectbox/properties-custom-selectbox.js';\nimport './components/cmp-properties-custom-signature/properties-custom-signature.js';\nimport './components/cmp-properties-custom-text/properties-custom-text.js';\nimport './components/cmp-properties-emp-record/properties-emp-record.js';\nimport './components/cmp-properties-form-complete/properties-form-complete.js';\nimport './components/cmp-properties-notifications/properties-notifications.js';\nimport './components/cmp-properties-primary-assignment/properties-primary-assignment.js';\nimport './components/cmp-properties-profile-review/properties-profile-review.js';\nimport './components/cmp-properties-salary/properties-salary.js';\nimport './components/cmp-properties-secondary-assignments/properties-secondary-assignments.js';\nimport './components/cmp-properties-smart/properties-smart.js';\nimport './components/cmp-properties-step-permissions/properties-step-permissions.js';\nimport './components/cmp-properties-step/properties-step.js';\nimport './components/cmp-properties-text-editor/properties-text-editor.js';\nimport './components/cmp-secondary-assignment/secondary-assignment.js';\nimport './components/cmp-secondary-assignments/secondary-assignments.js';\nimport './components/cmp-step-checkbox-display/step-checkbox-display.js';\nimport './components/cmp-step-date-display/step-date-display.js';\nimport './components/cmp-step-renderer/step-renderer.js';\nimport './components/cmp-step-text-display/step-text-display.js';\nimport './components/cmp-template-field-renderer/template-field-renderer.js';\nimport './components/cmp-template-list-form/template-list-form.js';\nimport './components/cmp-template-list-packet/template-list-packet.js';\nimport './components/cmp-text-editor/ckeditorConfig.js';\nimport './components/cmp-text-editor/placeholders.js';\nimport './components/cmp-text-editor/text-editor.js';\nimport './components/cmp-tracked-form-group/tracked-form-group.js';\nimport './components/cmp-tracked-form/tracked-form.js';\nimport './helpers/fieldRendererHlp/field-renderer.js';\nimport './helpers/fieldsHlp/fields.js';\nimport './helpers/formsHlp/forms.js';\nimport './helpers/statusLabelHlp/status-label.js';\nimport './helpers/viewportOffsetHlp/viewport-offset.js';\nimport './routes/form-builder/builder/builder.state.js';\nimport './routes/form-builder/builder/segment-builder/builder.js';\nimport './routes/form-builder/builder/segment-builder/builder.logic.js';\nimport './routes/form-builder/builder/segment-fields/fields.js';\nimport './routes/form-builder/builder/segment-fields/fields.logic.js';\nimport './routes/form-builder/builder/segment-properties/properties.js';\nimport './routes/form-builder/builder/segment-properties/properties.logic.js';\nimport './routes/form-builder/form-builder.state.js';\nimport './routes/form-builder/overlay-builder/overlay-builder.state.js';\nimport './routes/form-builder/overlay-builder/segment-data-panel/data-panel.js';\nimport './routes/form-builder/overlay-builder/segment-data-panel/data-panel.logic.js';\nimport './routes/form-builder/overlay-builder/segment-overlay/overlay.js';\nimport './routes/form-builder/overlay-builder/segment-overlay/overlay.logic.js';\nimport './routes/form-builder/preview/preview.state.js';\nimport './routes/form-builder/preview/segment-attachments/attachments.js';\nimport './routes/form-builder/preview/segment-attachments/attachments.logic.js';\nimport './routes/form-builder/preview/segment-form-workflow/form-workflow.js';\nimport './routes/form-builder/preview/segment-form-workflow/form-workflow.logic.js';\nimport './routes/form-builder/preview/segment-page-header/page-header.js';\nimport './routes/form-builder/preview/segment-page-header/page-header.logic.js';\nimport './routes/form-builder/preview/segment-steps-summary/steps-summary.js';\nimport './routes/form-builder/preview/segment-steps-summary/steps-summary.logic.js';\nimport './routes/form-builder/segment-content/content.js';\nimport './routes/form-builder/segment-content/content.logic.js';\nimport './routes/form-builder/segment-header/header.js';\nimport './routes/form-builder/segment-header/header.logic.js';\nimport './routes/form-builder/settings/segment-settings/settings.js';\nimport './routes/form-builder/settings/segment-settings/settings.logic.js';\nimport './routes/form-builder/settings/settings.state.js';\nimport './routes/form-instance/form-instance.state.js';\nimport './routes/form-instance/segment-attachments/attachments.js';\nimport './routes/form-instance/segment-attachments/attachments.logic.js';\nimport './routes/form-instance/segment-form/form.js';\nimport './routes/form-instance/segment-form/form.logic.js';\nimport './routes/form-instance/segment-header/header.js';\nimport './routes/form-instance/segment-header/header.logic.js';\nimport './routes/form-instance/segment-steps-summary/steps-summary.js';\nimport './routes/form-instance/segment-steps-summary/steps-summary.logic.js';\nimport './routes/form-templates/form-templates.state.js';\nimport './routes/form-templates/segment-content/content.js';\nimport './routes/form-templates/segment-content/content.logic.js';\nimport './routes/form-templates/segment-header/header.js';\nimport './routes/form-templates/segment-header/header.logic.js';\nimport './routes/form-tracking/form-tracking.state.js';\nimport './routes/form-tracking/segment-content/content.js';\nimport './routes/form-tracking/segment-content/content.logic.js';\nimport './routes/form-tracking/segment-header/header.js';\nimport './routes/form-tracking/segment-header/header.logic.js';\nimport './routes/inbox/form-instance/form-instance.state.js';\nimport './routes/inbox/form-instance/segment-attachments/attachments.js';\nimport './routes/inbox/form-instance/segment-attachments/attachments.logic.js';\nimport './routes/inbox/form-instance/segment-close/close.js';\nimport './routes/inbox/form-instance/segment-close/close.logic.js';\nimport './routes/inbox/form-instance/segment-form/form.js';\nimport './routes/inbox/form-instance/segment-form/form.logic.js';\nimport './routes/inbox/form-instance/segment-header/header.js';\nimport './routes/inbox/form-instance/segment-header/header.logic.js';\nimport './routes/inbox/form-instance/segment-steps/steps.js';\nimport './routes/inbox/form-instance/segment-steps/steps.logic.js';\nimport './routes/inbox/inbox.state.js';\nimport './routes/inbox/segment-content/content.js';\nimport './routes/inbox/segment-content/content.logic.js';\nimport './routes/inbox/segment-header/header.js';\nimport './routes/inbox/segment-header/header.logic.js';\nimport './routes/index/index.state.js';\nimport './routes/index/segment-content/content.js';\nimport './routes/index/segment-content/content.logic.js';\nimport './routes/index/segment-header/header.js';\nimport './routes/index/segment-header/header.logic.js';\nimport './routes/my-forms/my-forms.state.js';\nimport './routes/my-forms/segment-content/content.js';\nimport './routes/my-forms/segment-content/content.logic.js';\nimport './routes/my-forms/segment-header/header.js';\nimport './routes/my-forms/segment-header/header.logic.js';\nimport './routes/packet-builder/builder/builder.state.js';\nimport './routes/packet-builder/builder/segment-builder/builder.js';\nimport './routes/packet-builder/builder/segment-builder/builder.logic.js';\nimport './routes/packet-builder/packet-builder.state.js';\nimport './routes/packet-builder/segment-content/content.js';\nimport './routes/packet-builder/segment-content/content.logic.js';\nimport './routes/packet-builder/segment-header/header.js';\nimport './routes/packet-builder/segment-header/header.logic.js';\nimport './routes/packet-builder/settings/segment-settings/settings.js';\nimport './routes/packet-builder/settings/segment-settings/settings.logic.js';\nimport './routes/packet-builder/settings/settings.state.js';\nimport './routes/send/segment-content/content.js';\nimport './routes/send/segment-content/content.logic.js';\nimport './routes/send/segment-header/header.js';\nimport './routes/send/segment-header/header.logic.js';\nimport './routes/send/send.state.js';\nimport './config/load-config.js';\nimport './config/router.js';\n","angular.module('ec-forms', [\r\n\t'super-suit',\r\n\t'ec-forms-segments',\r\n\t'ec-forms-segment-logic',\r\n\t'ec-forms-templates',\r\n\t'dndLists',\r\n\t'ec-forms-helpers',\r\n\t'ec-forms-components',\r\n\t'ec-forms-decorators',\r\n\t'ec-forms-filters',\r\n\t'ec-forms-services'\r\n]);\r\n\r\nangular.module('ec-forms-segments', []);\r\nangular.module('ec-forms-segment-logic', []);\r\nangular.module('ec-forms-helpers', []);\r\nangular.module('ec-forms-components', []);\r\nangular.module('ec-forms-decorators', []);\r\nangular.module('ec-forms-filters', []);\r\nangular.module('ec-forms-services', []);\r\n","!function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-attachments/attachments.html\",'<div class=\"cmp-attachments\"> <div class=\"fb-step\"> <div class=\"fb-step-header secondary\"> <h4 class=\"fb-step-title\">Attachments</h4> </div> <div class=\"content\"> <p id=\"attachment-instructions\">Include files and attachments with this template. Attachments will be accessible to all workflow participants. <em>(Max file size: 50 MB)</em></p> <div class=\"file-list-container\"> <ul id=\"attachment-upload-list-{{::$id}}\" class=\"attachments-list\" ng-class=\"{\\'addHeight\\': vm.processing}\"> <li ng-repeat=\"attachment in vm.files\" class=\"form-attachment\"> <i class=\"file-icon\" ss-icon=\"{{ attachment.icon }}\" aria-hidden=\"true\"></i> <a href=\"\" class=\"document\" ng-bind=\"attachment.filename\" ng-click=\"go.download(attachment._fileId)\" title=\"Open {{attachment.filename}}\" target=\"_blank\"></a> <div class=\"attachment-actions-group\" role=\"group\"> <i ss-icon=\"trash-o\" aria-hidden=\"true\"></i> <a role=\"button\" href=\"\" class=\"trash\" ng-click=\"go.delete(attachment)\" aria-label=\"Delete {{ attachment.filename }}\" title=\"Delete {{attachment.filename}}\" aria-controls=\"attachment-status-indicator-{{::$id}}, attachment-upload-list-{{::$id}}, attachment-status-alert-{{::$id}}\">Delete</a> </div> </li> </ul> <super-loader id=\"attachment-status-indicator-{{::$id}}\" is-loading=\"vm.processing\" status-text=\"vm.processingStatus\" fill role=\"status\"></super-loader> </div> <div class=\"uploader-group\" role=\"group\"> <i id=\"attachment-status-alert-{{::$id}}\" class=\"attachment-status-alert\" role=\"alert\" aria-live=\"polite\" aria-atomic=\"true\"></i> <super-button class=\"upload\" label=\"Add Attachment\" aria-hidden=\"true\" tabindex=\"-1\"></super-button> <input id=\"fileUpload\" type=\"file\" nv-file-select name=\"fileUpload\" uploader=\"uploader\" filters=\"validExt,fileSize,fileDupe\" aria-label=\"Select files to attach to the form\" aria-describedby=\"attachment-instructions\" aria-controls=\"attachment-status-indicator-{{::$id}}, attachment-upload-list-{{::$id}}, attachment-status-alert-{{::$id}}\"> </div> </div> </div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-box-creator/box-creator.html\",'<div class=\"cmp-box-creator\" ng-show=\"startingPoint.x && startingPoint.y\" ng-style=\"vm.styles\"> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-box-date-options/box-date-options.html\",'<div class=\"cmp-box-date-options\"> <ul> <li ng-repeat=\"dateOption in vm.dateOptions\"> <super-input-checkbox model=\"dateOption.selected\" label=\"{{ dateOption.name }}\" name=\"{{ dateOption.name }}\" ng-click=\"go.update()\"> </super-input-checkbox> <div> <super-input-radio ng-repeat=\"option in dateOption.options\" is-disabled=\"!dateOption.selected\" label=\"{{ option.name }}\" model=\"dateOption.selectedVal\" name=\"{{ dateOption.guid }}\" value=\"{{ option.jsFormat }}\" ng-click=\"go.update()\"> </super-input-radio> </div> </li> </ul> <div class=\"example-string\"> <label>Example:</label> {{ vm.displayString }} </div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-box-resizer/box-resizer.html\",'<div class=\"cmp-box-resizer\"> <super-button smp ss-icon=\"times\" ng-click=\"onDelete()\"></super-button> <span class=\"handle-N-S\"></span> <span class=\"handle-E-W\"></span> <span class=\"handle-NW\"></span> <span class=\"handle-NE\"></span> <span class=\"handle-SW\"></span> <span class=\"handle-SE\"></span> <div class=\"box-options\" ng-if=\"box.type != \\'text\\' && box.type != \\'checkbox\\'\" ss-bind-html=\"vm.optionsTemplate\" ng-mousedown=\"$event.stopPropagation()\"></div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-credential/credential.html\",'<div ng-class=\"vm.formfieldvalues ? \\'cmp-credential\\' : \\'\\'\" ng-show=\"vm.visibility\"> <dl ng-if=\"!vm.formfieldvalues\"> <dt ng-bind=\"field._label\" class=\"field-label\"></dt> <dd>--</dd> </dl> <dl ng-if=\"vm.formfieldvalues\"> <div ng-repeat=\"subField in field.config.fields | filter: go.hideHeadingsAndInactive\" ng-style=\"{\\'width\\': subField.config.width}\" class=\"credential-property\"> <dt class=\"field-label\" ng-bind=\"subField._label\"></dt> <dd ng-if=\"subField.formFieldValueProperty !== \\'IsVerified\\' && subField.formFieldValueProperty !== \\'ExpirationDay\\'\" class=\"field-value\" ng-bind=\"formfieldvalues[subField.formFieldValueProperty] ? formfieldvalues[subField.formFieldValueProperty] : \\'--\\'\"></dd> <dd ng-if=\"subField.formFieldValueProperty === \\'IsVerified\\'\"> <i ng-if=\"formfieldvalues[subField.formFieldValueProperty]\" class=\"shield fa-shield-before\" aria-label=\"Credential is verified.\" ss-icon=\"shield\"></i> <i ng-if=\"!formfieldvalues[subField.formFieldValueProperty]\" aria-label=\"Credential is un-verified\">--</i> </dd> <dd ng-if=\"subField.formFieldValueProperty === \\'ExpirationDay\\'\" ng-bind=\"formfieldvalues[subField.formFieldValueProperty] !== \\'9999-12-31\\' ? formfieldvalues[subField.formFieldValueProperty] : \\'Lifetime\\'\"></dd> </div> </dl> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-checkbox-group/checkbox-group.html\",'<div class=\"cmp-checkbox-group\" ss-validate=\"field.ignoreValidations || vm.validate(field.step.formFieldValues, field._label)\"> <label ng-bind=\"field._label\" class=\"field-label\" ng-class=\"{\\'required\\': field._required}\"></label> <div ss-bind-html=\"vm.template\"></div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-credential-group/credential-group.html\",'<fieldset class=\"cmp-credential-group\"> <legend ng-if=\"go.showGroupLabel()\">{{field._label}} <em>Read-only</em></legend> <div ng-if=\"!vm.formFieldValues\" ng-class=\"!vm.formfieldvalues ? \\'credential-group\\' : \\'\\'\"> <cmp-credential ng-repeat=\"field in field.config.fields | filter: go.hideHeadings\" field=\"field\" ng-style=\"{\\'width\\': field.config.width}\" class=\"credential-property\"></cmp-credential> </div> <cmp-credential ng-if=\"vm.formFieldValues\" ng-repeat=\"ffv in vm.formFieldValues\" formfieldvalues=\"ffv\" field=\"field\"></cmp-credential> </fieldset> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-dnd-options/dnd-options.html\",'<div class=\"cmp-dnd-options\"> <dl class=\"option-list\" ng-class=\"{\\'overflow\\': vm.options.length > 5}\" dnd-list=\"vm.options\" dnd-allowed-types=\"[\\'optionType\\']\" dnd-drop=\"go.dropOption(event, index, item)\" ss-validate=\"go.validate(field)\"> <dt>Options</dt> <dd class=\"option-list-item\" ng-repeat=\"option in vm.options track by $index\"> <span ss-icon=\"navicon\" dnd-effect-allowed=\"move\" dnd-draggable=\"option\" dnd-moved=\"go.moveOption($index, option)\" dnd-type=\"\\'optionType\\'\"></span> <super-input-text model=\"option.value\"></super-input-text> <button type=\"button\" ng-if=\"vm.options.length > 1\" class=\"option-remove\" ss-icon=\"minus-circle\" ng-click=\"go.removeOption($index)\"></button> </dd> </dl> <super-button std label=\"Add New Option\" ss-icon=\"plus\" ng-click=\"go.addOption()\"></super-button> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-emp-initiated-template/emp-initiated-template.html\",'<div class=\"cmp-emp-initiated-template\"> <div class=\"gd-row form-list-header-group\"> <div class=\"sort-by-filter\"> <super-select-list type=\"filter\" label=\"Sort by\" model=\"vm.sortBy\" is-disabled=\"vm.isLoading || vm.isSorting || vm.isSearching\"> <super-select-list-item ng-repeat=\"sort in vm.sortCriteria\" value=\"sort.value\" label=\"sort.name\"></super-select-list-item> </super-select-list> </div> </div> <div class=\"gd-row gd-100p\" ss-pending=\"vm.isSorting || vm.isSearching\"> <ul class=\"ss-form-panel-list\"> <li class=\"ss-panel-list-item\" ng-class=\"{\\'no-left-margin\\': {{$index}} % 5 === 0}\" ng-show=\"vm.formsAndPackets.length > 0\" ng-repeat=\"form in vm.formsAndPackets track by form.id\"> <div class=\"form-list-item-wrapper\"> <div class=\"form-item-details\"> <div class=\"form-icon-group\"> <figure class=\"form-icon\" ss-icon-before=\"{{form._isEmployeeInitiated ? \\'li-form-e-large\\' : \\'li-form-large\\'}}\" role=\"img\" aria-hidden=\"true\"></figure> </div> <div class=\"form-info-group\"> <h3 class=\"form-name\"> <a href=\"/ec-forms/form-builder/{{form.id}}/preview?returnTo=/ec-forms/my-forms?activeTab=initiate\" title=\"click to preview \\'{{::form._name}}\\'\\'\">{{::form._name}}</a> </h3> <div class=\"form-meta\"> <ul class=\"ss-pipe-children items-2\"> <li class=\"form-meta-item\"><label>Category: </label><span ng-bind=\"form._category.name\"></span></li> <li class=\"form-meta-item\"><label>Form Administrator: </label><span ng-bind=\"form.adminName\"></span></li> </ul> </div> </div> <div class=\"form-actions-group\"> <super-button label=\"Start this form\" ss-icon-before=\"{{form.initiating ? \\'spinner\\':\\'mail-forward\\'}}\" ng-click=\"go.initiateForm(form)\" ng-class=\"{\\'initiating\\': form.initiating}\" ng-disabled=\"form.initiating\"></super-button> </div> </div> </div> </li> </ul> <p ng-if=\"vm.formsAndPackets.length < 1 && !vm.isLoading && !vm.isSorting && !vm.isSearching\">No Forms or Packets found</p> <div ng-if=\"vm.showInfScroll\" ss-pending=\"vm.isLoading\" infinite-scroll=\"scrollData()\"></div> </div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-field-renderer/field-renderer.html\",'<div class=\"cmp-field-renderer auto-{{ field.id }}\" ng-show=\"vm.visibility\" ng-class=\"{\\'hide\\': !vm.visibility}\" ss-bind-html=\"vm.template\"></div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-fl-share-form/fl-share-form.html\",'<div class=\"cmp-fl-share-form modal\"> <button type=\"button\" ng-click=\"go.cancel()\" class=\"button flat modal-close\" ss-icon-before=\"times\"></button> <div class=\"title\">Share Template</div> <div class=\"content\"> <ul class=\"gd-row org\"> <li class=\"gd-100p\"> <super-org-search model=\"vm.org\" label=\"Organization or ID\" limit=\"1\"></super-org-search> </li> </ul> <ul class=\"gd-row form-name\"> <li class=\"gd-100p\"> <super-input-text label=\"Form Template Name\" name=\"formName\" model=\"vm.formName\"></super-input-text> </li> </ul> </div> <div class=\"modal-button\"> <super-button label=\"Cancel\" ng-click=\"go.cancel()\" is-disabled=\"vm.saving\"></super-button> <super-button pri class=\"save-button\" ng-class=\"{\\'saving\\': vm.saving}\" label=\"Share Template\" ng-click=\"go.share()\" is-disabled=\"!vm.org.length || !vm.formName.length || vm.saving\" ss-icon=\"spinner\"></super-button> </div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-form-list-group/form-list-group.html\",'<div class=\"cmp-form-list-group\" ng-class=\"{\\'{{type}}\\' : type}\"> <div class=\"gd-row form-list-header-group\"> <super-select-list ng-if=\"vm.formsAndPackets.length > 1\" class=\"gd-100p sort-by-filter\" type=\"filter\" label=\"Sort by\" model=\"vm.sortBy\"> <super-select-list-item ng-repeat=\"sort in vm.sortCriteria\" value=\"sort.value\" label=\"sort.name\"></super-select-list-item> </super-select-list> </div> <ul class=\"ss-form-panel-list\"> <li class=\"ss-panel-list-item\" ng-show=\"vm.formsAndPackets.length > 0\" ng-class=\"{\\'pending\\': form.isPending && !form.isPacket}\" ng-repeat=\"form in vm.formsAndPackets track by $index\"> <div class=\"form-list-item-wrapper\" ng-class=\"{\\'rejected\\': form.isRejected, \\'{{form.dueDateStatus.class}}\\' : form.dueDateStatus && !form.isRejected}\"> <div class=\"form-item-details\" ng-if=\"!form.isPacket\" data-auto-date-modified=\"{{form._createdUtc}}\" data-auto-due-date=\"{{form._dueDateUtc}}\"> <div class=\"form-icon-group\"> <figure class=\"form-icon\" ss-icon-before=\"{{form._isEmployeeInitiated ? \\'li-form-e-large\\' : \\'li-form-large\\'}}\" role=\"img\" aria-hidden=\"true\"></figure> </div> <div class=\"form-info-group\"> <h3 class=\"form-name\"> <a ng-bind=\"form.name\" ng-if=\"!form.isPending && !form.rejectedByUser\" title=\"Open {{form.name}}\" data-test=\"form-instance\" href=\"/ec-forms/form-instance/{{form.id}}?returnUrl=%2Fec-forms%2Fmy-forms&target=_blank\" target=\"_blank\" onclick=\"window.open(this.href, this.target); return false;\"></a> <span ng-if=\"form.isPending || form.rejectedByUser\">{{form.name}}</span> <small class=\"form-user-name\" ng-if=\"!form.userIsPrimary\" ss-icon=\"user\" ng-bind=\"form._employee.name\"></small> </h3> <div class=\"form-meta\" data-auto-due-date=\"{{ form._dueDateUtc }}\"> <ul class=\"ss-pipe-children\" ng-class=\"{\\'items-2\\': form.dueDateStatus}\"> <li class=\"form-meta-item\" ng-bind=\"form.stepActionName\"></li> <li class=\"form-meta-item\" ng-if=\"form.dueDateStatus\"> <strong class=\"form-due-date\" ng-class=\"{\\'{{form.dueDateStatus.class}}\\': form.dueDateStatus}\" ng-bind=\"form.dueDateStatus.statusFriendly\"></strong> </li> </ul> </div> </div> <div class=\"form-workflow-status-group\"> <p><strong ng-bind=\"form.formStatus\" ng-class=\"{\\'denied\\':form.isRejected && form.isUserStep}\" ss-icon=\"{{form.isRejected && form.isUserStep ? \\'thumbsdown-stripes\\' : \\'\\' }}\"></strong></p> </div> <div class=\"form-actions-group\"> <super-button ng-if=\"!form.isPending && !form.isSubmitted\" label=\"{{form.stepActionLabel}}\" ng-click=\"go.complete(form)\" ng-disabled=\"form.rejectedByUser\"></super-button> </div> </div> <div class=\"form-item-details\" ng-if=\"form.isPacket\"> <div class=\"form-icon-group\"> <figure class=\"form-icon\" ss-icon-before=\"{{form._isEmployeeInitiated ? \\'li-packet-e-large\\' : \\'li-packet-large\\'}}\" role=\"img\" aria-hidden=\"true\"></figure> </div> <div class=\"form-info-group\"> <h3 class=\"form-name\"> <a ng-click=\"go.toggleDetails(form)\">{{form.name}}&nbsp;<small>-&nbsp;Packet</small></a> </h3> <button type=\"button\" class=\"packet-toggle\" ss-icon-after=\"{{form.showDetails === false ? \\'angle-down\\': \\'angle-up\\'}}\" ng-click=\"go.toggleDetails(form)\">{{form.showDetails === false ? \\'Show\\' : \\'Hide\\'}} Details</button> </div> <div class=\"form-workflow-status-group\"> <p><strong ng-bind=\"form.formStatus\" ng-class=\"{\\'denied\\':form.isRejected}\" ss-icon=\"{{form.isRejected ? \\'thumbsdown-stripes\\' : \\'\\' }}\"></strong></p> </div> <div class=\"form-actions-group\"> <super-button label=\"{{form.showDetails ? \\'Hide\\' : \\'Show\\'}} Details\" ng-click=\"go.toggleDetails(form)\"></super-button> </div> </div> </div> <div ng-if=\"form.isPacket\" ng-show=\"form.showDetails\" class=\"form-packet-details\"> <ul class=\"form-packet-list\"> <li class=\"form-packet-list-item\" ng-if=\"form.content.length < 1\"> <p>No Forms are associated with this Package</p> </li> <li class=\"form-packet-list-item\" ng-if=\"form.content.length > 0\" ng-repeat=\"Pform in form.content | orderBy: \\'_packetInstance.sortOrder\\'\" ng-class=\"{\\'pending\\': Pform.isPending}\"> <div class=\"form-list-item-wrapper\" ng-class=\"{\\'rejected\\': Pform.isRejected, \\'{{Pform.dueDateStatus.class}}\\' : Pform.dueDateStatus && !Pform.isRejected}\"> <div class=\"form-item-details\" data-auto-date-modified=\"{{ Pform._createdUtc }}\" data-auto-due-date=\"{{ Pform._dueDateUtc }}\"> <div class=\"form-icon-group\"> <figure class=\"form-icon\" ss-icon-before=\"{{Pform._isEmployeeInitiated ? \\'li-form-e-large\\' : \\'li-form-large\\'}}\" role=\"img\" aria-label=\"form icon\"></figure> </div> <div class=\"form-info-group\"> <h3 class=\"form-name\"> <a ng-bind=\"Pform.name\" ng-if=\"!Pform.isPending && !Pform.rejectedByUser\" title=\"Open {{Pform.name}}\" data-test=\"form-instance\" href=\"/ec-forms/form-instance/{{Pform.id}}?returnUrl=%2Fec-forms%2Fmy-forms&target=_blank\" target=\"_blank\" onclick=\"window.open(this.href, this.target); return false;\"></a> <span ng-if=\"Pform.isPending || Pform.rejectedByUser\">{{Pform.name}}</span> <small class=\"form-user-name\" ng-if=\"!Pform.userIsPrimary\" class=\"form-user-name\" ss-icon=\"user\" ng-bind=\"Pform._employee.name\"></small> </h3> <div class=\"form-meta\"> <ul class=\"gd-row items-2 ss-pipe-children\"> <li class=\"form-meta-item\" ng-bind=\"Pform.stepActionName\"></li> <li class=\"form-meta-item\" ng-if=\"Pform._dueDateUtc\"> <strong class=\"form-due-date\" ng-class=\"{\\'{{Pform.dueDateStatus.class}}\\': Pform.dueDateStatus}\" ng-bind=\"Pform.dueDateStatus.statusFriendly\"></strong> </li> </ul> </div> </div> <div class=\"form-workflow-status-group\"> <p><strong ng-bind=\"Pform.formStatus\" ng-class=\"{\\'denied\\':Pform.isRejected && Pform.isUserStep}\" ss-icon=\"{{Pform.isRejected && Pform.isUserStep ? \\'thumbsdown-stripes\\' : \\'\\' }}\"></strong></p> </div> <div class=\"form-actions-group\"> <super-button ng-if=\"!Pform.isPending\" ng-disabled=\"Pform.rejectedByUser\" label=\"{{Pform.stepActionLabel}}\" ng-click=\"go.complete(Pform)\"></super-button> </div> </div> </div> </li> </ul> </div> </li> <li ng-if=\"vm.showInfScroll\" ss-pending=\"vm.loading\" infinite-scroll=\"scrollData()\" infinite-scroll-distance=\"0.5\" infinite-scroll-listen-for-event=\"forms-inbox.data-loaded\"></li> <li class=\"\" ng-if=\"vm.formsAndPackets.length < 1 && !vm.loading\">No Forms or Packets found</li> </ul> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-form-send-status/form-send-status.html\",'<div class=\"cmp-form-send-status\" ss-pending=\"vm.loading\" ss-pending-status=\"\\'{{vm.loadingMessage}}\\'\"> <div class=\"gd-row batch-status-wrapper\"> <div class=\"batch-info-group\"> <p><span ng-bind=\"vm.sendStatusText\"></span>&nbsp;<span ng-if=\"!vm.hasFailures\" ng-pluralize count=\"batch._includedEmployeeIds.length\" when=\"{\\'one\\' : \\'employee\\', \\'other\\' : \\'employees\\'}\"></span>&nbsp;|&nbsp;Sent by <span ng-bind=\"batch._creator.name\"></span></p> <p class=\"status-helper-text\" ng-if=\"vm.status._status !== 0\" ng-bind-html=\"vm.statusHelperText\"></p> </div> <div class=\"batch-progress-group\"> <div class=\"batch-progress-wrapper\"> <div class=\"progress-text\"> <p ng-if=\"vm.status._status === 0\" role=\"status\">{{vm.numInBatch || 0}}&nbsp;of&nbsp;{{vm.formattedRecipientLength}}&nbsp;prepared</p> <p ng-if=\"vm.status._status !== 0\" role=\"status\">{{vm.numComplete}}&nbsp;of&nbsp;{{vm.formattedRecipientLength}}&nbsp;sent</p> </div> <div class=\"progress-bar-group\"> <div class=\"progress-bar-container\" ng-show=\"vm.inProgress\"><div class=\"progress-bar\" ng-style=\"{\\'width\\': vm.percentComplete, \\'transition\\': \\'width 3s\\'}\" role=\"progressBar\" aria-valuemin=\"0\" aria-valuemax=\"100\" aria-valuenow=\"{{vm.percentComplete}}\" aria-label=\"batch progress bar\"></div></div> <em class=\"progress-message\" ng-show=\"!vm.inProgress\"><span ng-class=\"[vm.progressMessageClass]\" ng-bind=\"vm.progressMessage\"></span></em> </div> </div> </div> </div> <button type=\"button\" class=\"hide-batch-control\" ng-if=\"vm.hasFailures\" ng-click=\"go.archiveBatch()\" ss-icon=\"times\" aria-label=\"clear status message for {{form._name}}\" title=\"clear status message for {{form._name}}\"></button> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-multiple-employee-search/multiple-employee-search.html\",'<div class=\"cmp-multiple-employee-search\"> <super-button ss-icon=\"users\" smp ng-click=\"go.toggleFilter()\" label=\"{{label}}\" is-disabled=\"model.length > 0\" data-qa=\"add-group-control\"></super-button> <div class=\"multiple-employee-search\" ng-class=\"{\\'ss-menu-open\\' : vm.formOpened}\"> <div class=\"form-error\" ng-if=\"!model.length && vm.attempted && !vm.filtering\" role=\"alert\"><p ss-icon=\"exclamation-circle\">These parameters returned 0 results. Please update and try again.</p></div> <form ng-submit=\"go.add()\"> <div class=\"form-header\"> <h5>Define A Group <span class=\"effective-date-subheading\">Employee information effective as of {{vm.asOf}}</span></h5> <button class=\"close fa-times-before\" ss-icon=\"times\" ng-click=\"go.toggleFilter()\"></button> </div> <div class=\"gd-row\"> <div class=\"gd-50p\" data-qa=\"auto-job-type\"> <super-multi-filter-list label=\"With this Job Type\" selected=\"vm.selected.jobType\"> <super-multi-filter-list-item ng-repeat=\"jobType in vm.jobTypes | orderBy:\\'_name\\'\" option=\"jobType\"></super-multi-filter-list-item> </super-multi-filter-list> </div> <div class=\"gd-50p\" data-qa=\"auto-location\"> <super-multi-filter-list label=\"At this Location\" selected=\"vm.selected.location\"> <super-multi-filter-list-item ng-repeat=\"location in vm.locations | orderBy:\\'_name\\'\" option=\"location\"></super-multi-filter-list-item> </super-multi-filter-list> </div> </div> <div class=\"gd-row\"> <div class=\"gd-50p\" data-qa=\"auto-employment-group\"> <super-multi-filter-list ng-if=\"!routeVm.isHRMSEnabled\" label=\"In this Employment Group\" selected=\"vm.selected.employmentGroup\" is-disabled=\"vm.employmentGroupDisabled\"> <super-multi-filter-list-item ng-repeat=\"group in vm.employmentGroups | orderBy:\\'_name\\'\" option=\"group\"></super-multi-filter-list-item> </super-multi-filter-list> </div> <div class=\"gd-50p\" data-qa=\"auto-department\"> <super-multi-filter-list label=\"In this Department\" selected=\"vm.selected.department\"> <super-multi-filter-list-item ng-repeat=\"department in vm.departments | orderBy:\\'_name\\'\" option=\"department\"></super-multi-filter-list-item> </super-multi-filter-list> </div> </div> <div class=\"gd-row\"> <div class=\"gd-50p\" data-qa=\"auto-status\"> <super-multi-filter-list label=\"With this Status\" selected=\"vm.selected.status\"> <super-multi-filter-list-item ng-repeat=\"status in vm.status | orderBy:\\'_name\\' track by $index\" option=\"status\"></super-multi-filter-list-item> </super-multi-filter-list> </div> <div class=\"gd-50p\"> <div class=\"main-label\"> <label>Hired within this Date Range</label> </div> <super-input-datepicker class=\"gd-50p hireDateStart\" options=\"\" model=\"vm.selected.hireDateStart\"></super-input-datepicker><span class=\"gd-5p\">–</span> <super-input-datepicker id=\"hireEndDate\" class=\"gd-45p hireDateEnd\" options=\"vm.endDateOptions\" model=\"vm.selected.hireDateEnd\" is-disabled=\"vm.noStartDate\"></super-input-datepicker> </div> </div> <div class=\"gd-row exclusions\"> <div class=\"main-label\"> <label>Exclude these Employees</label> </div> <div> <super-employee-search class=\"exclusions-search\" model=\"exclusions\" use-pill=\"true\"></super-employee-search> </div> </div> <div class=\"gd-row actions-group\"> <div class=\"gd-50p\"> <button type=\"button\" class=\"clear-all-btn\" ng-click=\"go.clearAllFilters()\">Clear All Filters</button> </div> <div class=\"gd-50p flr\"> <super-button data-qa=\"auto-cancel\" label=\"Cancel\" ng-click=\"go.cancel()\" class=\"close-button\" ng-disabled=\"vm.filtering\"></super-button> <super-button data-qa=\"auto-add-group\" ng-if=\"!model.length\" pri class=\"save-button\" ss-pending=\"vm.filtering\" ng-click=\"go.addGroup()\" label=\"Add Group\"></super-button> <super-button data-qa=\"auto-update-group\" ng-if=\"model.length\" pri class=\"save-button\" ss-pending=\"vm.filtering\" ng-click=\"go.addGroup()\" label=\"Update Group\"></super-button> </div> </div> </form> </div> <div> <div class=\"employee-group\" ng-show=\"model.length > 0\"> <span ss-icon=\"users\"> <a ng-click=\"go.toggleFilter()\">Employee Group&nbsp;(<span class=\"users-count\" ng-bind=\"model.length\" data-qa=\"group-total\"></span>)</a> <button type=\"button\" class=\"remove\" ss-icon-after=\"times\" ng-click=\"routeVm.removeGroup()\"></button> </span> </div> </div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-overlay-builder-toolbox/overlay-builder-toolbox.html\",'<div class=\"cmp-overlay-builder-toolbox\" aria-label=\"overlay builder tools\"> <ul class=\"tools\" ng-show=\"routeVm.formTemplate._printPreviewDefinition && routeVm.formTemplate._printPreviewDefinition.templateFileId\"> <li ng-repeat=\"t in vm.tools\" ng-click=\"routeVm.selectedTool = t\" ng-class=\"{selected: routeVm.selectedTool === t}\" ss-tool-tip=\"{{t.title}}\"><span ss-icon=\"{{t.icon}}\"></span></li> </ul> </div>')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-properties-credentials/properties-credentials.html\",'<div class=\"cmp-properties-credentials\"> <h4 class=\"title-properties\">Credential Properties</h4> <div> <super-input-checkbox model=\"vm.showActive\" label=\"Show only active credentials\"></super-input-checkbox> <div class=\"separator\"></div> </div> <div class=\"gd-row fields\" data-qa=\"property-panel-fields\" ng-repeat=\"f in vm.fields\"> <div> <super-input-checkbox model=\"f._active\" ng-click=\"f._required = false\" aria-label=\"click to {{f._active ? \\'hide\\':\\'show\\'}} the {{f._label ?  f._label : f._placeholderLabel}} field\" data-qa=\"{{f._label ?  f._label : f._placeholderLabel}}-field-visibility-control\"></super-input-checkbox> <label class=\"sub-title-properties\" ng-bind=\"f._label\"> </div> <table class=\"active-fld-ctrl-list\" ng-if=\"f._active\"> <thead> <tr> <th class=\"fld-ctrl-active\" width=\"13%\"><i ss-icon=\"eye\" aria-label=\"show or hide fields\" title=\"show or hide fields\"></i></th> <th class=\"fld-ctrl-required\" width=\"13%\"><i ss-icon=\"asterisk\" aria-label=\"is field required?\" title=\"make field required\"></i></th> <th class=\"fld-ctrl-label\" width=\"74%\">Field Label</th> </tr> </thead> <tbody> <tr ng-repeat=\"subF in f.config.fields | filter: go.hideHeadings\"> <td class=\"fld-ctrl-active\"> <super-input-checkbox model=\"subF._active\" ng-click=\"subF._required = false\" aria-label=\"click to {{subF._active ? \\'hide\\':\\'show\\'}} the {{subF._label ?  subF._label : subF._placeholderLabel}} field\" data-qa=\"{{subF._label ?  subF._label : subF._placeholderLabel}}-field-visibility-control\"></super-input-checkbox> </td> <td class=\"fld-ctrl-required\"> <super-input-checkbox model=\"subF._required\" is-disabled=\"subF._fieldType.startsWith(\\'readOnly\\') || !subF._active\" aria-label=\"click to make the {{subF._label ?  subF._label : subF._placeholderLabel}} field {{subF._required ? \\'not \\' : null}}required\" data-qa=\"{{subF._label ?  subF._label : subF._placeholderLabel}}-field-requiredness-control\"></super-input-checkbox> </td> <td class=\"fld-ctrl-label\"> <i ss-icon=\"warning\" ng-if=\"subF._sensitive\" data-qa=\"sensitive-field-icon\" aria-label=\"this is a sensitive field\"></i> <super-input-text model=\"subF._label\" edit-mode=\"vm.editableFieldLabels\" ss-validate=\"validator.label(subF._label)\" ss-validate-message=\"Labels must be 25 characters or less\" is-disabled=\"!subF._active\" placeholder=\"{{subF._placeholderLabel}}\" aria-label=\"{{subF._label ? \\'edit the\\' : \\'enter a\\'}} value for the label of the {{subF._label ?  subF._label : subF._placeholderLabel}} field\" data-qa=\"{{subF._label ?  subF._label : subF._placeholderLabel}}-field-label-control\"></super-input-text> </td> </tr> </tbody> </table> </div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-properties-custom-common/properties-custom-common.html\",'<div class=\"cmp-properties-custom-common\"> <div class=\"gd-row\" ng-if=\"vm.showLabel\"> <super-input-text label=\"Label\" model=\"vm.field._label\" placeholder=\"Enter label text...\"></super-input-text> </div> <div class=\"gd-row\" ng-if=\"vm.showRequired\"> <super-input-checkbox label=\"This is a required field\" model=\"vm.field._required\"></super-input-checkbox> </div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-properties-custom-date/properties-custom-date.html\",'<div class=\"cmp-properties-custom-date\"> <h4 class=\"title-properties\">Date Properties</h4> <div class=\"gd-row\"> <cmp-properties-custom-common fields=\"fields\"></cmp-properties-custom-common> </div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-properties-custom-fileupload/properties-custom-fileupload.html\",'<div class=\"cmp-properties-custom-fileupload\"> <h4 class=\"title-properties\">File Upload Properties</h4> <div class=\"gd-row\"> <cmp-properties-custom-common fields=\"fields\"></cmp-properties-custom-common> </div> <super-input-textarea label=\"Instructions\" model=\"vm.field._label\" initial-height=\"90\"></super-input-textarea> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-properties-custom-filelink/properties-custom-filelink.html\",'<div class=\"cmp-properties-custom-filelink\"> <h4 class=\"title-properties\">Link Properties</h4> <div class=\"gd-row\"><super-input-text label=\"Insert a Link\" model=\"field.config.location\" ss-validate=\"vm.validator.requiredUrl(field.config.location)\">www.link.com</super-input-text></div> <div class=\"gd-row\"><super-input-text label=\"Link Name (optional)\" model=\"field.config.name\"></super-input-text></div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-properties-custom-dropdown/properties-custom-dropdown.html\",'<div class=\"cmp-properties-custom-dropdown\"> <h4 class=\"title-properties\">Dropdown Properties</h4> <div class=\"gd-row\"> <cmp-properties-custom-common fields=\"fields\"></cmp-properties-custom-common> </div> <div class=\"gd-row\"> <super-select-list label=\"Width\" model=\"vm.field.config.width\"> <super-select-list-item ng-repeat=\"option in vm.widths\" value=\"option.value\" label=\"option.name\"></super-select-list-item> </super-select-list> </div> <div class=\"gd-row\"> <cmp-dnd-options field=\"vm.field\" options=\"vm.field._options\"></cmp-dnd-options> </div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-properties-custom-sectionhead/properties-custom-sectionhead.html\",'<div class=\"cmp-properties-custom-sectionhead\"> <h4 class=\"title-properties\">Section Head Properties</h4> <div class=\"gd-row\"> <cmp-properties-custom-common fields=\"fields\" show-required=\"false\" show-instructions=\"false\"></cmp-properties-custom-common> </div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){\ne.put(\"components/cmp-properties-custom-input/properties-custom-input.html\",'<div class=\"cmp-properties-custom-input\"> <h4 class=\"title-properties\">Input Text Properties</h4> <div class=\"gd-row\"> <cmp-properties-custom-common fields=\"fields\"></cmp-properties-custom-common> </div> <div class=\"gd-row\"> <super-select-list label=\"Height\" model=\"vm.field._fieldType\"> <super-select-list-item ng-repeat=\"option in vm.heights\" value=\"option.value\" label=\"option.name\"></super-select-list-item> </super-select-list> <div ng-show=\"vm.field._fieldType === \\'super-input-textarea\\'\">Multi-line text cannot be added to a PDF overlay.</div> </div> <div class=\"gd-row\"> <super-select-list label=\"Width\" model=\"vm.field.config.width\"> <super-select-list-item ng-repeat=\"option in vm.widths\" value=\"option.value\" label=\"option.name\"></super-select-list-item> </super-select-list> </div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-properties-custom-selectbox/properties-custom-selectbox.html\",'<div class=\"cmp-properties-custom-selectbox\"> <h4 class=\"title-properties\">Select Box Properties</h4> <div class=\"gd-row\"> <cmp-properties-custom-common fields=\"fields\"></cmp-properties-custom-common> </div> <div class=\"gd-row\"> <super-input-checkbox label=\"Allow user to select multiple choices\" model=\"vm.field.config.multiple\"></super-input-checkbox> </div> <div class=\"gd-row\"> <super-select-list label=\"Columns\" model=\"vm.field.config.colwidth\"> <super-select-list-item ng-repeat=\"option in vm.cols\" value=\"option.value\" label=\"option.name\"></super-select-list-item> </super-select-list> </div> <cmp-dnd-options field=\"vm.field\" options=\"vm.field._options\"></cmp-dnd-options> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-properties-custom-signature/properties-custom-signature.html\",'<div class=\"cmp-properties-custom-signature\"> <h4 class=\"title-properties\">Signature Properties</h4> <div class=\"gd-row\" ng-if=\"!vm.fcEnableSignatures\"> <cmp-properties-custom-common fields=\"fields\" show-required=\"false\"></cmp-properties-custom-common> </div> <div class=\"gd-row\" ng-if=\"vm.fcEnableSignatures\"> <p>Whose signature do you need on the form?</p> <ul> <li> <super-input-radio is-disabled=\"!vm.canAssociateSignatures && vm.signatureDisplay !== \\'step-participant\\'\" data-ng-attr-title=\"{{!vm.canAssociateSignatures && vm.signatureDisplay !== \\'step-participant\\' ? \\'You do not have permission to select this option, contact your admin if you need access.\\': \\'\\'}}\" name=\"signature-type\" label=\"Step Participant\" model=\"vm.signatureDisplay\" value=\"step-participant\" data-test=\"step-participant\"> </super-input-radio> </li> <li> <super-input-radio is-disabled=\"!vm.canAssociateSignatures\" data-ng-attr-title=\"{{!vm.canAssociateSignatures ? \\'You do not have permission to select this option, contact your admin if you need access.\\': \\'\\'}}\" name=\"signature-type\" label=\"Add from saved signatures\" model=\"vm.signatureDisplay\" value=\"saved-signatures\" data-test=\"saved-signatures\"> </super-input-radio> </li> </ul> <cmp-properties-custom-common fields=\"fields\" ng-if=\"vm.signatureDisplay === \\'step-participant\\'\" show-required=\"false\"></cmp-properties-custom-common> <div ng-if=\"vm.signatureDisplay === \\'saved-signatures\\' && vm.canAssociateSignatures\"> <super-multi-filter-list label=\"Signatures\" selected=\"vm.selectedSignatures\" is-disabled=\"vm.loadingDropdown\"> <super-multi-filter-list-item ng-repeat=\"signature in vm.allSignatures track by $index\" option=\"signature\"></super-multi-filter-list-item> </super-multi-filter-list> <h4>Layout</h4> <button type=\"button\" class=\"orientation\" ng-class=\"{\\'selected\\': vm.orientation === \\'h\\'}\" ng-click=\"vm.orientation = \\'h\\'\" ss-icon=\"ellipsis-h\" ng-disabled=\"!vm.selectedSignatures.length\"></button> <button type=\"button\" class=\"orientation\" ng-class=\"{\\'selected\\': vm.orientation === \\'v\\'}\" ng-click=\"vm.orientation = \\'v\\'\" ss-icon=\"ellipsis-v\" ng-disabled=\"!vm.selectedSignatures.length\"></button> <h4>Reorder</h4> <ul class=\"signature-list-added\" dnd-list=\"vm.selectedSignatures\" dnd-drop=\"go.dropSignature(event, index, type, item)\"> <li ng-if=\"vm.selectedSignatures.length < 1\">There are no signatures selected yet</li> <li class=\"gd-row auto-{{ signature.id }}\" ng-repeat=\"signature in vm.selectedSignatures\"> <span ss-icon=\"navicon\" dnd-effect-allowed=\"move\" dnd-draggable=\"signature\" dnd-moved=\"go.moveOption($index, option)\" dnd-type=\"\\'addedType\\'\">{{signature._name}} ({{signature._title}})</span> </li> </ul> </div> </div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-properties-custom-text/properties-custom-text.html\",'<div class=\"cmp-properties-custom-text\"> <h4 class=\"title-properties\">Text Properties</h4> <super-input-textarea placeholder=\"Enter text...\" model=\"vm.field._label\" ss-validate=\"go.validate(vm.field)\"></super-input-textarea> <super-select-list label=\"Width\" model=\"vm.field.config.width\"> <super-select-list-item ng-repeat=\"option in vm.widths\" value=\"option.value\" label=\"option.name\"></super-select-list-item> </super-select-list> <super-input-checkbox label=\"Map Text in Overlay Builder\" model=\"vm.field.config.mappable\"></super-input-checkbox> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-properties-emp-record/properties-emp-record.html\",'<div class=\"cmp-properties-emp-record\"> <button type=\"button\" class=\"smp\" ss-toggle=\"emp-record-content\" ss-toggle-start-expanded=\"{{vm.commit}}\" data-qa=\"employee-record-toggle\">Employee Profile</button> <div class=\"emp-record-content\"> <super-input-checkbox is-disabled=\"!vm.hasExternalData || !canEdit\" model=\"vm.commit\" label=\"Commit submitted data to Employee\\'s profile.\" data-qa=\"employee-record-toggle-checkbox\"></super-input-checkbox> <super-popover>If enabled, this will overwrite any existing data in the Employee\\'s profile. This control will be disabled for for read-only fields and for fields that do not have corresponding fields in the employee record.</super-popover> </div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-properties-primary-assignment/properties-primary-assignment.html\",'<div class=\"cmp-properties-primary-assignment\"> <h4 class=\"title-properties\">Primary Assignment Properties</h4> <div class=\"gd-row\"><super-input-text label=\"Instructions\" model=\"fields[1]._label\"></super-input-text></div> <table> <tbody class=\"active-fld-ctrl-list\" ng-repeat=\"f in fields | filter: go.showActionableFields\" ng-class=\"{\\'header-body\\': f._fieldType == \\'readOnlyHeading\\' || f._fieldType == \\'readOnlySubheading\\'}\"> <tr ng-if=\"f._fieldType == \\'readOnlyHeading\\' || f._fieldType == \\'readOnlySubheading\\'\"> <td class=\"fld-ctrl-active\"> <div> <super-input-checkbox model=\"f._active\" aria-label=\"click to {{f._active ? \\'hide\\':\\'show\\'}} the {{f._label ?  f._label : f._placeholderLabel}} field\" data-qa=\"{{f._label ?  f._label : f._placeholderLabel}}-field-visibility-control\"></super-input-checkbox> </div> </td> <td class=\"fld-ctrl-label\"> <label class=\"sub-title-properties\" ng-bind=\"f._label\"> </td> </tr> <tr ng-if=\"(f._fieldType == \\'readOnlyHeading\\' || f._fieldType == \\'readOnlySubheading\\')\"> <th class=\"fld-ctrl-active\" width=\"13%\"><i ss-icon=\"eye\" aria-label=\"show or hide fields\" title=\"show or hide fields\"></i></th> <th class=\"fld-ctrl-label\" width=\"87%\">Field Label</th> </tr> <tr ng-if=\"go.checkIfHeadingOrInstructions(f)\" class=\"active-fld-ctrl-item\" tabindex=\"0\" aria-label=\"configure the {{f._label ?  f._label : f._placeholderLabel}} field\"> <td class=\"fld-ctrl-active\" ng-if=\"go.checkIfHeadingOrInstructions(f)\"> <super-input-checkbox model=\"f._active\" ng-click=\"f._required = false\" aria-label=\"click to {{f._active ? \\'hide\\':\\'show\\'}} the {{f._label ?  f._label : f._placeholderLabel}} field\" data-qa=\"{{f._label ?  f._label : f._placeholderLabel}}-field-visibility-control\"></super-input-checkbox> </td> <td class=\"fld-ctrl-label\" ng-if=\"go.checkIfHeadingOrInstructions(f)\"> <i ss-icon=\"warning\" ng-if=\"f._sensitive\" data-qa=\"sensitive-field-icon\" aria-label=\"this is a sensitive field\"></i> <super-input-text model=\"f._label\" edit-mode=\"vm.editableFieldLabels\" ss-validate=\"validator.label(f._label)\" ss-validate-message=\"Labels must be 30 characters or less\" is-disabled=\"!f._active\" placeholder=\"{{f._placeholderLabel}}\" aria-label=\"{{f._label ? \\'edit the\\' : \\'enter a\\'}} value for the label of the {{f._label ?  f._label : f._placeholderLabel}} field\" data-qa=\"{{f._label ?  f._label : f._placeholderLabel}}-field-label-control\"></super-input-text> </td> </tr> </tbody> </table> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-properties-form-complete/properties-form-complete.html\",'<div class=\"cmp-properties-form-complete\"> <h4 class=\"title-properties\">{{step._name}} - Properties</h4> <div class=\"gd-row\"> <super-input-checkbox label=\"Add completed form to recipient\\'s Employee Profile (will appear in Personnel File)\" model=\"vm.addToEmpRecord\"></super-input-checkbox> </div> <div class=\"gd-row\" ng-if=\"vm.addToEmpRecord\"> <super-select-list model=\"vm.webFormSubCategory\"> <li class=\"select-category\"><h5>Personnel Documents</h5></li> <super-select-list-item ng-repeat=\"item in vm.personnel.enums\" value=\"\\'0-\\' + item.value\" label=\"item.name\"></super-select-list-item> <li class=\"select-category\"><h5>Medical Documents</h5></li> <super-select-list-item ng-repeat=\"item in vm.medical.enums\" value=\"\\'1-\\' + item.value\" label=\"item.name\"></super-select-list-item> </super-select-list> </div> <div class=\"gd-row\"> <h5><em>On Complete</em></h5> <ul class=\"actions\"> <li class=\"fld-ctrl-item\"><super-input-checkbox label=\"Email Employee\" model=\"actions.emailEmployee\"></super-input-checkbox></li> <li class=\"fld-ctrl-item\"><super-input-checkbox label=\"Email Form Sender\" model=\"actions.emailFormSender\"></super-input-checkbox></li> <li class=\"fld-ctrl-item\"><super-input-checkbox label=\"Email Employee\\'s Supervisor\" model=\"actions.emailSupervisor\"></super-input-checkbox></li> <li class=\"fld-ctrl-item\"><super-input-checkbox label=\"Email Others\" model=\"actions.emailOthers\"></super-input-checkbox></li> </ul> <super-employee-search model=\"actions.emailIds\" ng-if=\"actions.emailOthers\" use-pill=\"true\" placeholder=\"Search by name\"></super-employee-search> </div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-properties-notifications/properties-notifications.html\",'<div class=\"cmp-properties-notifications\"> <button type=\"button\" class=\"smp\" ss-toggle-start-expanded=\"true\" ng-disabled=\"step._stepAction == null\" ss-toggle=\"step-action-content\" aria-controls=\"properties-step-action-content\">Step Actions</button> <div id=\"properties-step-action-content\" class=\"step-action-content\"> <div ng-repeat=\"event in vm.stepEvents\"> <div ng-if=\"step._stepAction === event.eventActionEnum\"> <h5><em ng-bind=\"event.title\"></em></h5> <ul class=\"submit-fld-ctrl-list\" data-auto=\"{{event.dataAuto}}\"> <li ng-repeat=\"action in event.eventActions\" class=\"fld-ctrl-item\" data-auto=\"{{action.dataAuto}}\"> <super-input-checkbox label=\"{{:: action.title }}\" model=\"action.checked\" ng-click=\"go.eventClicked(event, action)\" is-disabled=\"action.isDisabled()\"></super-input-checkbox> <super-employee-search ng-if=\"action.checked && action.emails\" model=\"action.emails\" use-pill=\"true\" placeholder=\"Search by name\"> </super-employee-search> </li> </ul> </div> </div> </div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-properties-profile-review/properties-profile-review.html\",'<div class=\"cmp-properties-profile-review\"> <h4 class=\"title-properties\">Review Profile Updates</h4> <div class=\"gd-row auto-step-participants\"> <div class=\"super-select-list\"> <div class=\"main-label\"><label>Main Step Participant</label></div> <button type=\"button\" class=\"super-button std\" ss-menu=\"select-menu\" hide-on-select> <label ss-icon-after=\"caret-down\" ng-bind=\"vm.buttonLabel\"></label> </button> <div class=\"select-menu\"> <ul class=\"select-menu-list\"> <li class=\"super-select-list-item select-menu-list-item\" ng-repeat=\"option in vm.stepParticipant\" ng-click=\"go.selectParticipant(option)\"> {{option.name}} <small ng-if=\"option.desc\" ng-bind=\"option.desc\"></small> </li> </ul> </div> </div> <super-employee-search id=\"step-participant-search\" model=\"vm.specificParticipant\" ss-validate=\"vm.validator.required(vm.specificParticipant[0], \\'Step Participant\\')\" limit=\"1\" ng-if=\"step._stepParticipant.participantType === vm.stepParticipantType.specificPerson\" placeholder=\"Search by name\"></super-employee-search> </div> <div class=\"gd-row auto-action-performed\"> <div class=\"main-label\"> <label>Action Performed</label> </div> <p>Review Employee Profile Updates</p> </div> <cmp-properties-notifications step=\"step\"></cmp-properties-notifications> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-properties-secondary-assignments/properties-secondary-assignments.html\",'<div class=\"cmp-properties-secondary-assignments\"> <div class=\"main-header\"> <h4 class=\"title-properties\">Secondary Assignment(s) Properties</h4> <super-popover class=\"header-popover\">Secondary assignment fields cannot be mapped within the PDF Overlay Builder.</super-popover> </div> <div class=\"gd-row\"><super-input-text label=\"Instructions\" model=\"vm.fields[0].config.fields[1]._label\"></super-input-text></div> <div class=\"gd-row fields\" data-qa=\"property-panel-fields\"> <table class=\"active-fld-ctrl-list\"> <tbody ng-repeat=\"subF in vm.fields[0].config.fields | filter: go.hideInstructions | filter: go.hideIfHrms\" ng-class=\"{\\'header-body\\': subF._fieldType == \\'readOnlyHeading\\' || subF._fieldType == \\'readOnlySubheading\\'}\"> <tr ng-if=\"subF._fieldType == \\'readOnlyHeading\\' || subF._fieldType == \\'readOnlySubheading\\'\"> <td class=\"fld-ctrl-active\"> <div> <super-input-checkbox model=\"subF._active\" aria-label=\"click to {{subF._active ? \\'hide\\':\\'show\\'}} the {{subF._label ?  subF._label : subF._placeholderLabel}} field\" data-qa=\"{{subF._label ?  subF._label : subF._placeholderLabel}}-field-visibility-control\"></super-input-checkbox> </div> </td> <td class=\"fld-ctrl-label\"> <label class=\"sub-title-properties\" ng-bind=\"subF._label\"> </td> </tr> <tr ng-if=\"(subF._fieldType == \\'readOnlyHeading\\' || subF._fieldType == \\'readOnlySubheading\\')\"> <th class=\"fld-ctrl-active\" width=\"13%\"><i ss-icon=\"eye\" aria-label=\"show or hide fields\" title=\"show or hide fields\"></i></th> <th class=\"fld-ctrl-label\" width=\"87%\">Field Label</th> </tr> <tr ng-if=\"go.checkIfHeadingOrInstructions(subF)\"> <td class=\"fld-ctrl-active\" ng-if=\"go.checkIfHeadingOrInstructions(subF)\"> <super-input-checkbox model=\"subF._active\" ng-click=\"subF._required = false\" aria-label=\"click to {{subF._active ? \\'hide\\':\\'show\\'}} the {{subF._label ?  subF._label : subF._placeholderLabel}} field\" data-qa=\"{{subF._label ?  subF._label : subF._placeholderLabel}}-field-visibility-control\"></super-input-checkbox> </td> <td class=\"fld-ctrl-label\"> <i ss-icon=\"warning\" ng-if=\"subF._sensitive\" data-qa=\"sensitive-field-icon\" aria-label=\"this is a sensitive field\"></i> <super-input-text model=\"subF._label\" edit-mode=\"vm.editableFieldLabels\" ss-validate=\"validator.label(subF._label)\" ss-validate-message=\"Labels must be 25 characters or less\" is-disabled=\"!subF._active\" placeholder=\"{{subF._placeholderLabel}}\" aria-label=\"{{subF._label ? \\'edit the\\' : \\'enter a\\'}} value for the label of the {{subF._label ?  subF._label : subF._placeholderLabel}} field\" data-qa=\"{{subF._label ?  subF._label : subF._placeholderLabel}}-field-label-control\"></super-input-text> </td> </tr> </tbody> </table> </div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-properties-salary/properties-salary.html\",'<div class=\"cmp-properties-salary\"> <div class=\"main-header\"> <h4 class=\"title-properties\">Total Salary Properties</h4> <super-popover class=\"header-popover\">This form field summarizes salary amounts for the Primary Assignment, Secondary Assignment(s), or both.</super-popover> </div> <div class=\"gd-row\"><super-input-checkbox label=\"Display section label\" model=\"fields[0]._active\"></super-input-checkbox></div> <div class=\"gd-row\"><super-input-text label=\"Instructions\" model=\"fields[1]._label\"></super-input-text></div> <div class=\"gd-row fields\" data-qa=\"property-panel-fields\"> <table> <thead> <tr> <th class=\"fld-ctrl-label\">Field Label</th> </tr> </thead> <tbody class=\"active-fld-ctrl-list\"> <tr class=\"active-fld-ctrl-item\" ng-repeat=\"f in fields | filter: go.showActionableFields\" tabindex=\"0\" aria-label=\"configure the {{f._label ?  f._label : f._placeholderLabel}} field\"> <td class=\"fld-ctrl-label\"> <super-input-text model=\"f._label\" edit-mode=\"vm.editableFieldLabels\" ss-validate=\"validator.label(f._label)\" ss-validate-message=\"Labels must be 30 characters or less\" is-disabled=\"!f._active\" placeholder=\"{{f._placeholderLabel}}\" aria-label=\"{{f._label ? \\'edit the\\' : \\'enter a\\'}} value for the label of the {{f._label ?  f._label : f._placeholderLabel}} field\" data-qa=\"{{f._label ?  f._label : f._placeholderLabel}}-field-label-control\"></super-input-text> </td> </tr> </tbody> </table> </div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-properties-smart/properties-smart.html\",'<div class=\"cmp-properties-smart\"> <h4 class=\"title-properties\">{{fields[0]._label}} Properties</h4> <div class=\"gd-row\"><super-input-checkbox label=\"Display section label\" model=\"fields[0]._active\"></super-input-checkbox></div> <div class=\"gd-row\"><super-input-text label=\"Instructions\" model=\"fields[1]._label\"></super-input-text></div> <div class=\"gd-row\"> <super-input-checkbox label=\"fields are editable\" model=\"vm.canEdit\" ng-click=\"go.switchFieldTypes(vm.canEdit)\" is-disabled=\"!vm.canToggleFieldTypes\" data-qa=\"toggle-field-type\"></super-input-checkbox> </div> <div class=\"gd-row fields\" data-qa=\"property-panel-fields\"> <table> <thead> <tr> <th class=\"fld-ctrl-active\" width=\"13%\"><i ss-icon=\"eye\" aria-label=\"show or hide fields\" title=\"show or hide fields\"></i></th> <th class=\"fld-ctrl-required\" width=\"13%\"><i ss-icon=\"asterisk\" aria-label=\"is field required?\" title=\"make field required\"></i></th> <th class=\"fld-ctrl-label\" width=\"74%\">Field Label</th> </tr> </thead> <tfoot ng-if=\"vm.hasSensitiveFields\"> <tr> <td colspan=\"3\"> <p class=\"sensitive-field-label\" ss-icon=\"warning\" aria-describedby=\"sensitive-field-description\">Sensitive Fields</p> <super-popover aria-label=\"click here for more information regaridng sensitive fields\"> <p id=\"sensitive-field-description\">If \"view\" access for any sensitive field is not enabled, that field will display as redacted</p> </super-popover> </td> </tr> </tfoot> <tbody class=\"active-fld-ctrl-list\"> <tr class=\"active-fld-ctrl-item\" ng-repeat=\"f in fields | filter: go.showActionableFields\" tabindex=\"0\" aria-label=\"configure the {{f._label ?  f._label : f._placeholderLabel}} field\"> <td class=\"fld-ctrl-active\"> <super-input-checkbox model=\"f._active\" ng-click=\"f._required = false\" aria-label=\"click to {{f._active ? \\'hide\\':\\'show\\'}} the {{f._label ?  f._label : f._placeholderLabel}} field\" data-qa=\"{{f._label ?  f._label : f._placeholderLabel}}-field-visibility-control\"></super-input-checkbox> </td> <td class=\"fld-ctrl-required\"> <super-input-checkbox model=\"f._required\" is-disabled=\"f._fieldType.startsWith(\\'readOnly\\') || !f._active\" aria-label=\"click to make the {{f._label ?  f._label : f._placeholderLabel}} field {{f._required ? \\'not \\' : null}}required\" data-qa=\"{{f._label ?  f._label : f._placeholderLabel}}-field-requiredness-control\"></super-input-checkbox> </td> <td class=\"fld-ctrl-label\"> <i ss-icon=\"warning\" ng-if=\"f._sensitive\" data-qa=\"sensitive-field-icon\" aria-label=\"this is a sensitive field\"></i> <super-input-text model=\"f._label\" edit-mode=\"vm.editableFieldLabels\" ss-validate=\"validator.label(f._label)\" ss-validate-message=\"Labels must be 30 characters or less\" is-disabled=\"!f._active\" placeholder=\"{{f._placeholderLabel}}\" aria-label=\"{{f._label ? \\'edit the\\' : \\'enter a\\'}} value for the label of the {{f._label ?  f._label : f._placeholderLabel}} field\" data-qa=\"{{f._label ?  f._label : f._placeholderLabel}}-field-label-control\"></super-input-text> </td> </tr> </tbody> </table> </div> <cmp-properties-emp-record ng-if=\"!routeVm.isHRMSEnabled\" fields=\"fields\" can-edit=\"vm.canEdit\"></cmp-properties-emp-record> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-properties-step/properties-step.html\",'<div class=\"cmp-properties-step\"> <h4 class=\"title-properties\">Workflow Step {{step.index}} - Properties</h4> <div class=\"gd-row auto-step-name\"> <super-input-text label=\"Name\" model=\"step._name\"></super-input-text> </div> <div class=\"gd-row auto-step-instructions\"> <super-input-text label=\"Instructions\" model=\"step._instructions\"></super-input-text> </div> <div class=\"gd-row auto-step-participants\"> <div class=\"super-select-list\"> <div class=\"main-label\"><label>Step Participant</label></div> <button type=\"button\" class=\"super-button std\" ss-menu=\"select-menu\" hide-on-select> <label ss-icon-after=\"caret-down\" ng-bind=\"vm.buttonLabel\"></label> </button> <div class=\"select-menu\"> <ul class=\"select-menu-list\"> <li class=\"super-select-list-item select-menu-list-item\" ng-repeat=\"option in vm.stepParticipant.getEnums()\" ng-click=\"go.selectParticipant(option)\"> {{option.name}} <small ng-if=\"option.desc\" ng-bind=\"option.desc\"></small> </li> </ul> </div> </div> <p class=\"support-text\" ng-if=\"step._stepParticipant.participantType === vm.stepParticipant.primaryRecipientChosenWhenSent\">Employee is the \"main actor\" around which the form revolves</p> <super-employee-search model=\"vm.specificParticipant\" ss-validate=\"vm.validator.required(vm.specificParticipant[0], \\'Step Participant\\')\" limit=\"1\" ng-if=\"step._stepParticipant.participantType === vm.stepParticipant.specificPerson\" placeholder=\"Search by name\"></super-employee-search> </div> <div class=\"gd-row auto-action-performed\"> <super-select-list label=\"Action Performed\" model=\"step._stepAction\"> <super-select-list-item ng-repeat=\"option in vm.stepActions\" value=\"option.value\" label=\"option.name\"></super-select-list-item> </super-select-list> </div> <cmp-properties-step-permissions step=\"step\" form=\"form\"></cmp-properties-step-permissions> <cmp-properties-notifications step=\"step\"></cmp-properties-notifications> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-properties-step-permissions/properties-step-permissions.html\",'<div class=\"cmp-properties-step-permissions\"> <button class=\"smp\" type=\"button\" ss-toggle=\"permissions-content-toggle\" ss-toggle-start-expanded>Step Access</button> <div class=\"permissions-content-toggle\"> <table> <thead> <tr> <th class=\"participant\">Participant can...</th> <th class=\"edit\"><span ng-if=\"!routeVm.isHRMSEnabled\">Edit</span></th> <th class=\"view\">View</th> </tr> </thead> <tfoot ng-if=\"vm.hasSensitiveFields\"> <tr> <td colspan=\"3\"> <i class=\"fa-warning\"></i><strong>Sensitive Fields</strong> <super-popover> <p>If \"view\" is not enabled, sensitive fields (i.e. SSN) will be redacted</p> </super-popover> </td> </tr> </tfoot> <tbody ng-repeat=\"p in step._permissions\" ng-class=\"{\\'selected\\': go.matchByParticipant(p, step._stepParticipant)}\" data-auto=\"{{p.display}}\"> <tr class=\"permissions-content\"> <td valign=\"middle\" class=\"name\" ng-bind=\"p.display || \\'None added\\'\"></td> <td valign=\"middle\" class=\"edit\"> <super-input-checkbox ng-if=\"!routeVm.isHRMSEnabled\" model=\"p.canEdit\" ng-click=\"go.adjustStepAccess(\\'canEdit\\', p)\" is-disabled=\"go.matchByParticipant(p, step._stepParticipant)\"> </super-input-checkbox> </td> <td valign=\"middle\" class=\"view\"> <super-input-checkbox model=\"p.canView\" ng-click=\"go.adjustStepAccess(\\'canView\\', p)\" is-disabled=\"go.matchByParticipant(p, step._stepParticipant)\"> </super-input-checkbox> </td> </tr> <tr ng-if=\"vm.hasSensitiveFields\" class=\"sensitive-field-access\"> <td valign=\"middle\" class=\"\"> <i class=\"fa-warning\"></i>Sensitive Fields </td> <td valign=\"middle\" class=\"edit\"> <super-input-checkbox ng-if=\"!routeVm.isHRMSEnabled\" model=\"p.canEditSensitive\" ng-click=\"go.adjustStepAccess(\\'canEditSensitive\\', p)\" is-disabled=\"!p.canView\"> </super-input-checkbox> </td> <td valign=\"middle\" class=\"view\"> <super-input-checkbox model=\"p.canViewSensitive\" ng-click=\"go.adjustStepAccess(\\'canViewSensitive\\', p)\" is-disabled=\"!p.canView\"> </super-input-checkbox> </td> </tr> </tbody> <tbody ng-if=\"!step._permissions || !step._permissions.length\"> <tr> <td class=\"name\">None added</td> <td class=\"edit\"> <super-input-checkbox ng-if=\"!routeVm.isHRMSEnabled\" is-disabled=\"true\"> </super-input-checkbox> </td> <td class=\"view\"> <super-input-checkbox is-disabled=\"true\"></super-input-checkbox> </td> </tr> </tbody> </table> </div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-secondary-assignment/secondary-assignment.html\",'<div ng-class=\"vm.formfieldvalues ? \\'cmp-secondary-assignment\\' : \\'\\'\" ng-show=\"vm.visibility\"> <dl ng-if=\"!vm.formfieldvalues\"> <h4 ng-if=\"field._fieldType == \\'readOnlyHeading\\'\" class=\"field-header\"> {{field._label}} <em>Read-only</em> </h4> <h5 ng-if=\"field._fieldType == \\'readOnlySubheading\\'\" class=\"field-header\"> {{field._label}} <em>Read-only</em> </h5> <p ng-if=\"field._fieldType == \\'instructions\\'\" ng-bind=\"field._label\"></p> <div ng-if=\"go.checkIfHeadingOrInstructions(field)\"> <dt ng-bind=\"field._label\" class=\"field-label\"></dt> <dd ng-if=\"field._fieldType == \\'readOnlyDate\\'\">--/--/--</dd> <dd ng-if=\"field._fieldType != \\'readOnlyDate\\'\">--</dd> </div> </dl> <dl ng-if=\"vm.formfieldvalues\"> <div ng-repeat=\"subField in field.config.fields | filter: go.hideIfHrms\" ng-style=\"{\\'width\\': subField.config.width}\" class=\"assignment-property\" ng-show=\"subField._active\"> <h4 ng-if=\"subField._fieldType == \\'readOnlyHeading\\'\" class=\"field-header\"> {{subField._label}} <em>Read-only</em> </h4> <p ng-if=\"field._fieldType == \\'instructions\\'\" ng-bind=\"field._label\"></p> <h5 ng-if=\"subField._fieldType == \\'readOnlySubheading\\'\" class=\"sub-field-header\"> {{field._label}} <em>Read-only</em> </h5> <dt ng-if=\"go.checkIfHeadingOrInstructions(subField)\" class=\"field-label\" ng-bind=\"subField._label\"></dt> <dd ng-if=\"go.checkIfHeadingOrInstructions(subField) && subField._fieldType != \\'readOnlyDate\\'\" class=\"field-value\" ng-bind=\"formfieldvalues[subField._formFieldValueProperty] ? formfieldvalues[subField._formFieldValueProperty] : \\'--\\'\"></dd> <dd ng-if=\"go.checkIfHeadingOrInstructions(subField) && subField._fieldType == \\'readOnlyDate\\'\" class=\"field-value\" ng-bind=\"formfieldvalues[subField._formFieldValueProperty] ? formfieldvalues[subField._formFieldValueProperty] : \\'--/--/--\\'\"></dd> </div> </dl> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-properties-text-editor/properties-text-editor.html\",'<div class=\"cmp-properties-text-editor\"> <p ng-click=\"go.click()\">this is great {{ vm.test }}</p> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-secondary-assignments/secondary-assignments.html\",'<fieldset class=\"cmp-secondary-assignments\"> <div ng-if=\"!vm.formFieldValues\" ng-class=\"!vm.formfieldvalues ? \\'assignment-group\\' : \\'\\'\"> <cmp-secondary-assignment ng-repeat=\"field in field.config.fields | filter: go.hideIfHrms\" field=\"field\" ng-style=\"{\\'width\\': field.config.width}\" class=\"assignment-property\"></cmp-secondary-assignment> </div> <cmp-secondary-assignment ng-if=\"vm.formFieldValues\" ng-repeat=\"ffv in vm.formFieldValues\" formfieldvalues=\"ffv\" field=\"field\"></cmp-secondary-assignment> </fieldset> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-step-renderer/step-renderer.html\",'<section class=\"fb-step cmp-step-renderer\" ng-class=\"{\\'is-hover\\': step.hoverState, \\'is-selected\\': routeVm.vm.selectedFormObject === step}\"> <header class=\"fb-step-header\" ng-mouseenter=\"step.hoverState = true\" ng-mouseleave=\"step.hoverState = false\"> <h4 class=\"fb-step-title\">Workflow Step {{vm.stepIndex + 1}} <span ng-if=\"step._name\">-</span> {{step._name}}</h4> <p class=\"fb-step-instructions\" ng-if=\"step._instructions\" ng-bind=\"step._instructions\"></p> <div class=\"fb-step-meta\"> <ul class=\"ss-pipe-children\"> <li ss-icon=\"user\" ng-bind=\"vm.participantLabel\" data-qa=\"step-participant-assignee\"></li> <li ss-icon=\"wrench\">{{step._stepAction | enumByValue: \\'stepAction\\'}}</li> </ul> </div> <div class=\"fb-actions fb-step-actions\"> <i class=\"drag-handle\" ss-icon=\"navicon\" role=\"presentation\"></i> <b role=\"presentation\">Properties</b> <button type=\"button\" class=\"ctrl-remove\" ss-icon-after=\"trash-o\" ng-if=\"routeVm.vm.steps.length > 1\" ng-click=\"go.removeStep($event, vm.stepIndex, routeVm.vm.steps)\"></button> </div> </header> <ul class=\"fb-field-groups\" dnd-list=\"step.fieldGroups\" dnd-drop=\"go.dropFieldGroup(event, index, item, type, step)\" dnd-allowed-types=\"[\\'fieldType\\', \\'fieldGroup\\']\"> <li class=\"fb-field-group-empty\" ng-if=\"!step.fieldGroups.length\"> <i>Drag a field from the left column to add to this workflow step.</i> </li> <li class=\"fb-field-group\" ng-repeat=\"group in step.fieldGroups\" dnd-draggable=\"group\" dnd-moved=\"go.movedFieldGroup($index, group, step)\" dnd-type=\"\\'fieldGroup\\'\" dnd-effect-allowed=\"move\" ng-click=\"go.fieldGroupSettings($event, group)\" ng-class=\"{\\'is-selected\\': routeVm.vm.selectedFormObject === group}\"> <dnd-nodrag> <div class=\"fb-actions fb-field-actions\" dnd-handle> <i class=\"drag-handle\" ss-icon=\"navicon\"></i> <b role=\"presentation\">Properties</b> <button type=\"button\" class=\"ctrl-remove\" ss-icon-after=\"trash-o\" ng-click=\"go.removeFieldGroup(group, step)\"></button> </div> <cmp-template-field-renderer ng-if=\"!vm.mifd.isHRMSEnabled() || !field._hideForHRMS\" ng-repeat=\"field in group\" field=\"field\" group=\"group\"></cmp-template-field-renderer> </dnd-nodrag> </li> </ul> </section> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){\ne.put(\"components/cmp-step-checkbox-display/step-checkbox-display.html\",'<div class=\"cmp-step-checkbox-display\"> <section class=\"fieldgroup\" ng-if=\"go.showGroup(group)\" ng-repeat=\"group in step.fieldGroups\"> <h5 ng-bind=\"group.fieldGroupName\" class=\"fieldgroup-title\" ss-toggle=\"fields-container\" ss-toggle-start-expanded=\"{{onLoad({group: group})}}\"></h5> <div class=\"fields-container\"> <div ng-repeat=\"field in group.fields | orderBy:group.config.orderBy:false\"> <h6 ng-bind=\"go.numerateLabel(field, group.fields)\" class=\"title\" ng-if=\"field._options.length > 0\"></h6> <ol class=\"fields-list\"> <li ng-repeat=\"opt in field._options\" class=\"field\"> <div class=\"truncation-wrapper\"> <div class=\"super-input-radio\"> <input id=\"chk-{{field.id}}-{{opt}}\" type=\"radio\" ng-checked=\"go.isSelected(field, opt)\" ng-click=\"go.selectOption(field, opt)\"> <label ng-bind=\"opt\" for=\"chk-{{field.id}}-{{opt}}\" id=\"chk-{{field.id}}-{{opt}}-label\" class=\"fa\" title=\"{{:: opt}}\"></label> </div> </div> </li> </ol> </div> </div> </section> </div>')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-step-date-display/step-date-display.html\",'<div class=\"cmp-step-date-display\"> <section class=\"fieldgroup\" ng-repeat=\"group in step.fieldGroups\"> <h5 ng-bind=\"group.fieldGroupName\" class=\"fieldgroup-title\" ss-toggle=\"fields-container\" ss-toggle-start-expanded=\"{{onLoad({group: group})}}\"></h5> <div class=\"fields-container\"> <ol class=\"fields-list\"> <li ng-repeat=\"field in group.fields | orderBy:group.config.orderBy:false\" class=\"field\"> <div class=\"super-input-radio\"> <input id=\"chk-{{field.id}}-{{opt}}\" type=\"radio\" ng-checked=\"field.isAdded\" ng-click=\"go.selectOption(field)\"> <label ng-bind=\"go.numerateLabel(field, group.fields)\" for=\"chk-{{field.id}}-{{opt}}\" id=\"chk-{{field.id}}-{{opt}}-label\" class=\"fa\" title=\"{{:: opt}}\"></label> </div> </li> </ol> </div> </section> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-template-field-renderer/template-field-renderer.html\",'<div class=\"cmp-template-field-renderer\" ng-show=\"vm.visibility\" ng-style=\"vm.style\" ng-class=\"{\\'hide\\': !vm.visibility}\" ss-validate=\"go.validate(field)\" ss-bind-html=\"vm.template\"></div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-step-text-display/step-text-display.html\",'<div class=\"cmp-step-text-display\"> <section class=\"fieldgroup\" ng-repeat=\"group in step.fieldGroups\"> <h5 ng-bind=\"group.fieldGroupName\" class=\"fieldgroup-title\" ss-toggle=\"fields-container\" ss-toggle-start-expanded=\"{{onLoad({group: group})}}\"></h5> <div class=\"fields-container\"> <ol class=\"fields-list\"> <li ng-repeat=\"field in group.fields | filter:go.filterUnmappable | orderBy:group.config.orderBy:false\" class=\"field\"> <div class=\"truncation-wrapper\"> <super-input-checkbox title=\"{{:: field._label }}\" label=\"{{go.numerateLabel(field, group.fields)}}\" model=\"field.isAdded\" ng-click=\"go.selectField(field)\"></super-input-checkbox> </div> </li> </ol> </div> </section> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-template-list-form/template-list-form.html\",'<div class=\"cmp-template-list-form\" ss-pending=\"template.isPending\" ss-pending-status=\"vm.pendingMessage\" ng-class=\"{\\'highlight\\': template.isHighlighted}\"> <div class=\"template-details\"> <div class=\"template-icon\" ng-if=\"!template._isEmployeeInitiated\"><i ss-icon-before=\"li-form-large\"></i></div> <div class=\"template-icon\" ng-if=\"template._isEmployeeInitiated\"><i ss-icon-before=\"li-form-e-large\"></i></div> <div class=\"template-info\"> <h3 class=\"template-name\"><a ng-href=\"\" ng-click=\"go.preview(template)\" ng-bind=\"template._name\"></a></h3> <div class=\"form-meta\" data-auto-due-date=\"{{ template._modifiedDt }}\"> <ul class=\"ss-pipe-children\"> <li ng-if=\"template._fromFrontlineLibrary\" class=\"frontline-template\" ss-icon=\"logo-frontline-small\">Frontline</li><li ng-if=\"template._category.name.length > 0\" class=\"form-meta-item\" ng-bind=\"template._category.name\"></li><li class=\"form-meta-item\" ng-if=\"template._steps.length\"> Workflow (<span ng-bind=\"template._steps.length\"></span> <ng-pluralize count=\"template._steps.length\" when=\"{\\'1\\': \\'Step\\', \\'other\\': \\'Steps\\'}\"></ng-pluralize>) <super-popover> <div> <h6>Workflow Steps</h6> <ul class=\"popover-step-list\" ng-if=\"template._steps.length\"> <li ng-repeat=\"step in template._steps track by $index\"> <span ng-bind=\"{{$index + 1}}\"></span>) <span class=\"ss-pipe-right\" ng-bind=\"step.participantLabel\"></span><span ng-bind=\"step.stepActionLabel\"></span> </li> </ul> <p ng-if=\"!template._steps.length\">No Workflow Steps</p> </div> </super-popover> </li><li class=\"form-meta-item\"> <span>Modified {{template.modifiedText}}</span><span ng-if=\"template._modifier.name\">&nbsp;by&nbsp;<span ng-bind=\"template._modifier.name\"></span></span> </li><li class=\"form-meta-item\" ng-if=\"template._hasPrintPreviewDefinition\" ss-icon=\"file-pdf-o\">PDF Overlay available</li> </ul> </div> </div> <div class=\"template-status\" ng-if=\"template.status\"> <strong ng-class=\"{\\'{{template.status}}\\': template.status}\" ng-bind=\"template.statusLabel\"></strong> </div> <div class=\"template-actions\"> <ul> <li class=\"template-action-list-item template-primary-action\"> <super-button label=\"Send\" ng-if=\"template.status === \\'active\\'\" ng-click=\"go.send(template)\" ss-permitted-route=\"/ec-forms/send/FormTemplate/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"></super-button> <super-button label=\"Edit\" ng-if=\"template.status === \\'inactive\\'\" ng-click=\"go.edit(template)\" ss-permitted=\"formTemplates.edit\"></super-button> </li> <li class=\"template-action-list-item template-action-menu\"> <super-button ss-icon-after=\"angle-down\"> <item ng-click=\"go.preview(template)\">Preview Form</item> <item ss-permitted=\"formTemplates.startForMyself\" ng-if=\"template._isEmployeeInitiated && template.status === \\'active\\'\" ng-click=\"go.sendToSelf(template)\">Start Form (about myself)</item> <item class=\"menu-separator\"></item> <item ng-click=\"go.edit(template)\" ss-permitted=\"formTemplates.edit\">Edit Template</item> <item ng-click=\"go.copy(template)\" ss-permitted=\"formTemplates.create\">Create Copy</item> <item ng-click=\"go.share()\" ng-if=\"go.canShare(template)\">Share Template</item> <item ng-click=\"go.deactivate(template)\" ng-if=\"template.status === \\'active\\'\" ss-permitted=\"formTemplates.edit\">Deactivate Template</item> <item ng-click=\"go.archive(template)\" ss-permitted=\"formTemplates.archive\">Archive Template</item> <item ng-click=\"go.delete(template)\" ss-permitted=\"formTemplates.delete\">Delete Template</item> </super-button> </li> </ul> </div> </div> <cmp-fl-share-form ss-modal-view ng-if=\"vm.showShare\" template=\"template\"></cmp-fl-share-form> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-text-editor/text-editor.html\",'<div class=\"cmp-text-editor\" ng-class=\"{\\'hide\\': !field._active}\"> <div class=\"top\" id=\"{{vm.editorId}}-top\"> </div> <div ng-model=\"field._label\" contenteditable=\"{{!field.step}}\" id=\"{{vm.editorId}}\"></div> </div>')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-template-list-packet/template-list-packet.html\",'<div class=\"cmp-template-list-packet\"> <div class=\"template-details\"> <div class=\"template-icon\"><i ss-icon-before=\"li-packet-large\"></i></div> <div class=\"template-info\"> <h3 class=\"template-name\"> <a ng-bind=\"template._name\" ng-click=\"go.toggleDetails(template)\"></a> <small> - Packet</small> </h3> <div class=\"form-meta\"> <ul class=\"ss-pipe-children\"> <li ng-if=\"template._category.name.length > 0\" class=\"form-meta-item\" ng-bind=\"template._category.name\"></li> <li class=\"form-meta-item\" ng-if=\"template.packetCount\">{{template.packetCount}}&nbsp; <ng-pluralize count=\"template.packetCount\" when=\"{\\'1\\': \\'form\\', \\'other\\': \\'forms\\'}\"></ng-pluralize> </li> <li class=\"form-meta-item\"> <span>Modified {{template.modifiedText}}</span><span ng-if=\"template._modifier.name\">&nbsp;by&nbsp;<span ng-bind=\"template._modifier.name\"></span></span> </li> </ul> </div> <super-button smp class=\"details-toggle\" label=\"{{template.detailsOpen === false ? \\'Show\\' : \\'Hide\\'}} Details\" ss-icon-after=\"{{template.detailsOpen === false ? \\'angle-down\\': \\'angle-up\\'}}\" ng-click=\"go.toggleDetails(template)\"></super-button> </div> <div class=\"template-status\"> <strong ng-class=\"{\\'{{template.status}}\\': template.status}\" ng-bind=\"template.statusLabel\"></strong> </div> <div class=\"template-actions\"> <ul> <li class=\"template-action-list-item template-primary-action\"> <super-button label=\"Send\" ng-if=\"template.status === \\'active\\'\" ng-click=\"go.send(template)\" ss-permitted-route=\"/ec-forms/send/Packet/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"></super-button> <super-button label=\"Edit\" ng-if=\"template.status === \\'inactive\\'\" ng-click=\"go.editPacket(template)\" ss-permitted=\"packets.edit\"></super-button> </li> <li class=\"template-action-list-item template-action-menu\" ng-if=\"template.status !== \\'inactive\\'\" ss-permitted=\"packets.edit\"> <super-button ss-icon-after=\"angle-down\"> <item ng-click=\"go.editPacket(template)\">Edit Packet</item> </super-button> </li> </ul> </div> </div> <div ng-if=\"template.detailsOpen\" ss-pending=\"template.loading\" class=\"packet-details\"> <ul> <li class=\"packet-details-item\" ng-show=\"template.contents.forms.length < 1 && !template.loading\"> <p>No Forms are associated with this Package</p> </li> <li class=\"packet-details-item\" ng-show=\"template.contents.forms.length > 0 && !template.loading\" ng-repeat=\"form in template.contents.forms\" ss-pending=\"form.isPending\" ss-pending-status=\"form.pendingMessage\"> <div class=\"template-details\"> <div class=\"template-icon\" ng-if=\"!form._isEmployeeInitiated\"><i ss-icon-before=\"li-form-large\"></i></div> <div class=\"template-icon\" ng-if=\"form._isEmployeeInitiated\"><i ss-icon-before=\"li-form-e-large\"></i></div> <div class=\"template-info\"> <h3 class=\"template-name\"><a ng-href=\"\" ng-click=\"go.preview(form)\" ng-bind=\"form._name\"></a></h3> <div class=\"form-meta\"> <ul class=\"ss-pipe-children\"> <li class=\"form-meta-item\" ng-if=\"form._category.name.length > 0\" ng-bind=\"form._category.name\"></li> <li class=\"form-meta-item\" ng-if=\"form._steps.length\"> Workflow (<span ng-bind=\"form._steps.length\"></span> <ng-pluralize count=\"form._steps.length\" when=\"{\\'1\\': \\'Step\\', \\'other\\': \\'Steps\\'}\"></ng-pluralize>) <super-popover> <div> <h6>Workflow <ng-pluralize count=\"form._steps.length\" when=\"{\\'1\\': \\'Step\\', \\'other\\': \\'Steps\\'}\"></ng-pluralize> </h6> <ul class=\"popover-step-list\"> <li ng-repeat=\"step in form._steps track by $index\"> <span ng-bind=\"{{$index + 1}}\"></span>) <span class=\"ss-pipe-right\" ng-bind=\"step.participantLabel\"></span> <span ng-bind=\"step.stepActionLabel\"></span> </li> </ul> </div> </super-popover> </li> <li class=\"form-meta-item\"> <span>Modified {{form.modifiedText}}</span><span ng-if=\"form._modifier.name\">&nbsp;by&nbsp;<span ng-bind=\"form._modifier.name\"></span></span> </li> <li class=\"form-meta-item\" ng-if=\"form._hasPrintPreviewDefinition\" ss-icon=\"file-pdf-o\">PDF Overlay available</li> </ul> </div> </div> <div class=\"template-action-list-item template-status template-status-packet\"> <strong ng-class=\"{\\'{{form.status}}\\': form.status}\" ng-bind=\"form.statusLabel\"></strong> </div> <div class=\"template-actions\"> <ul> <li class=\"template-action-list-item template-primary-action\"> <super-button label=\"Edit\" ng-click=\"go.editForm(form)\" ss-permitted=\"formTemplates.edit\"></super-button> </li> </ul> </div> </div> </li> </ul> </div> </div>')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-tracked-form/tracked-form.html\",'<div class=\"cmp-tracked-form\" data-auto-due-date=\"{{ form._dueDateUtc }}\" data-auto-create-date=\"{{ form._createdUtc }}\"> <div class=\"form-list-item-wrapper\" ng-class=\"{\\'rejected\\': form.isRejected, \\'{{form.dueDateStatus.class}}\\' : form.dueDateStatus && !form.isComplete && !form.isRejected}\"> <div class=\"form-item-details\"> <div class=\"form-recipient-group\" data-qa=\"form-recipient-group\"> <h4 ng-if=\"!vm.showContactToggle && form._employee.meta.permissions.permittedActions.view\"><a href=\"\" ng-click=\"go.resolveEmpRecordPath()\" ng-bind=\"form.primaryRecipient.name || \\'N/A\\'\"></a></h4> <h4 ng-if=\"!vm.showContactToggle && !form._employee.meta.permissions.permittedActions.view\" ng-bind=\"form.primaryRecipient.name || \\'N/A\\'\"></h4> <div class=\"contact-toggle-group\" ng-if=\"vm.showContactToggle\" data-qa=\"contact-toggle-group\"> <h4 ss-menu=\"contact-details\"><a class=\"toggle-ctrl\" ng-click=\"go.toggleContact()\" ng-bind=\"form.primaryRecipient.name || \\'N/A\\'\"></a></h4> <div class=\"select-menu contact-details\" ss-pending=\"vm.loadingContact\"> <h4 data-auto=\"contact-name\"><strong ng-bind=\"\\'Contact \\' + form.primaryRecipient.name\"></strong></h4> <p data-auto=\"contact-phone\" ng-if=\"form._employee.meta.permissions.permittedActualProperties.phoneNumbers\" ss-icon=\"phone\" ng-bind=\"vm.empPhone\"></p> <p data-auto=\"contact-email\" ng-if=\"form._employee.meta.permissions.permittedActualProperties.emails\" ss-icon=\"envelope\" ng-bind=\"vm.empEmail\"></p> <a ng-if=\"form._employee.meta.permissions.permittedActions.view\" href=\"\" ng-click=\"go.resolveEmpRecordPath()\">View Employee Profile</a> </div> </div> </div> <div class=\"form-name-group\"> <h4 class=\"form-name\" ss-icon-before=\"{{go.resolveFormIcon()}}\" ng-if=\"!form.isPacket\"> <a ng-bind=\"form.name\" title=\"Open {{form.name}}\" data-test=\"form-instance\" href=\"/ec-forms/form-instance/{{form.id}}?returnUrl=%2Fec-forms%2Fform-tracking&target=_blank\" target=\"_blank\" onclick=\"window.open(this.href, this.target); return false;\"></a> </h4> <h4 class=\"form-name\" ng-if=\"form.isPacket\" ss-icon-before=\"li-packet-large\"><a ng-click=\"vm.openDetails = !vm.openDetails\" ng-bind=\"form.name\"></a></h4> <button ng-if=\"form.isPacket\" smp class=\"details-toggle\" ss-icon-after=\"{{vm.openDetails === false ? \\'angle-down\\': \\'angle-up\\'}}\" ng-click=\"vm.openDetails = !vm.openDetails\">{{vm.openDetails === false ? \\'Show\\' : \\'Hide\\'}} Details</button> </div> <div class=\"form-due-group\" data-auto-due-date=\"{{form._dueDateUtc}}\"> <ul> <li class=\"form-meta-item\" ng-if=\"form._dueDateUtc && !form.isComplete\"> <strong class=\"form-due-date\" ng-bind=\"form.dueDateStatus.statusFriendly\" ng-class=\"{\\'{{form.dueDateStatus.class}}\\': form.dueDateStatus}\"></strong> </li> <li class=\"form-meta-item form-sent-date\">Sent {{form.sentDate}}</li> </ul> </div> <div class=\"form-step-status-group\"> <div ng-if=\"!form.isPacket && !form.isComplete\"> <ul class=\"step-status-chart total-steps-{{form.totalSteps}}\"> <li ng-repeat=\"step in form._steps | limitTo: form.totalSteps\" ng-class=\"{\\'{{step.stepStatus}}\\' : step.stepStatus}\"></li> </ul> <super-popover> <h6>Workflow Steps</h6> <ul class=\"popover-step-list\"> <li class=\"workflow-step-item\" ng-repeat=\"step in form._steps | limitTo: form.totalSteps\"> <span ng-bind=\"{{$index + 1}}\"></span>) <span class=\"ss-pipe-right\" ng-bind=\"step._stepParticipant.name\"></span><span ng-bind=\"step._stepAction | enumByValue:\\'stepAction\\'\"></span> </li> </ul> </super-popover> </div> <p ng-if=\"!form.isPacket && form.isComplete\" class=\"form-complete\" ss-icon=\"check\">complete</p> <p ng-if=\"form.isPacket\" ng-bind=\"form.packetCount\" ng-class=\"{\\'form-complete\\' : form.isComplete}\" ss-icon=\"{{form.isComplete ? \\'check\\' : \\'\\'}}\"></p> </div> <div class=\"form-step-action-group\"> <p ng-if=\"!form.isComplete\" ng-bind=\"form.currentStepMeta\" ng-class=\"{\\'denied\\':form.isRejected}\" ss-icon=\"{{form.isRejected ? \\'thumbsdown-stripes\\' : \\'\\' }}\"></p> <p ng-if=\"form._lastReminderSentUtc != null && !form.isComplete && !form.isPacket\"> <em>Reminder sent {{form.reminderSentDate}}</em> </p> </div> <div class=\"file-attachments\"> <super-popover ng-if=\"form.filesOnInstance.length\" link=\"{{ form.filesOnInstance.length }}\" ss-icon=\"paperclip\"> <h6>UPLOADED FILES</h6> <ul class=\"popover-step-list\" ng-repeat=\"file in form.filesOnInstance\"> <li ss-icon-before=\"{{ file.icon }}\" ng-bind=\"file.filename\"></li> </ul> <h6>These files were uploaded by a user as part of a workflow step.</h6> </super-popover> </div> <div class=\"form-actions-group\" ng-if=\"!form.isPacket\"> <super-button ng-if=\"!form.isComplete\" ss-icon-after=\"angle-down\"> <item class=\"no-select\" ng-if=\"!form.isUser && !form.isRejected\"><h6><em>Send Reminder to</em></h6></item> <item class=\"divided-bottom\" ng-if=\"!form.isUser && !form.isRejected\" ng-click=\"go.sendReminder(form)\">{{form.currentStepParticipantName}}</item> <item ng-if=\"form.isRejected\" class=\"no-select\"><h6><em>Resend workflow step to</em></h6></item> <item ng-if=\"form.isRejected\" class=\"divided-bottom\"><span ng-click=\"go.updateWorkflowStep(form)\">Step {{form.prevStepNum}}- {{form.prevStep._stepParticipant.name}}</span></item> <item ss-permitted=\"formInstances.delete\" ng-click=\"go.remove(form)\">Delete Form</item> <item ng-if=\"form.filesOnInstance.length\" class=\"divided-top no-select\"><h6><em>Uploaded files</em></h6></item> <item ng-if=\"form.filesOnInstance.length\" ng-click=\"go.download(form.filesOnInstance)\">Download ({{ form.filesOnInstance.length }}) <ng-pluralize count=\"form.filesOnInstance.length\" when=\"{\\'1\\': \\'file\\', \\'other\\': \\'files\\'}\"></ng-pluralize> </item> </super-button> <super-button ng-if=\"form.isComplete && (form._employee.meta.permissions.permittedActions.createEmployeeFile || $root.isPermitted.formInstances.archive)\" ss-icon-after=\"angle-down\"> <item ng-if=\"form._employee.meta.permissions.permittedActions.createEmployeeFile\" ng-click=\"form._sentToEmployeeRecord || go.updateEmpRecord(form)\" ng-disabled=\"form._sentToEmployeeRecord\">Move to Employee Record</item> <item ss-permitted=\"formInstances.archive\" ng-click=\"go.updateFormStatus(form, \\'archived\\')\">Archive Form</item> <item ng-if=\"form.filesOnInstance.length\" class=\"divided-top no-select\"><h6><em>Uploaded files</em></h6></item> <item ng-if=\"form.filesOnInstance.length\" ng-click=\"go.download(form.filesOnInstance)\">Download ({{ form.filesOnInstance.length }}) <ng-pluralize count=\"form.filesOnInstance.length\" when=\"{\\'1\\': \\'file\\', \\'other\\': \\'files\\'}\"></ng-pluralize> </item> </super-button> </div> </div> </div> <div class=\"form-packet-details\" ng-if=\"form.isPacket\" ng-show=\"vm.openDetails\"> <ul class=\"form-packet-list\"> <li ng-show=\"!routeVm.loading && form.content.length > 0\" ng-repeat=\"Pform in form.content | orderBy: \\'_packetInstance.sortOrder\\'\" class=\"form-packet-list-item\"> <div class=\"form-list-item-wrapper\" ng-class=\"{\\'rejected\\': Pform.isRejected, \\'{{Pform.dueDateStatus.class}}\\' : Pform.dueDateStatus && !Pform.isComplete && !Pform.isRejected}\"> <div class=\"form-item-details\" data-auto-create-date=\"{{Pform._createdUtc}}\" data-auto-due-date=\"{{Pform._dueDateUtc}}\"> <div class=\"form-name-group\"> <h4 class=\"form-name\" ss-icon-before=\"li-form-large\"> <a ng-bind=\"Pform.name\" title=\"Open {{Pform.name}}\" data-test=\"form-instance\" href=\"/ec-forms/form-instance/{{Pform.id}}?returnUrl=%2Fec-forms%2Fform-tracking&target=_blank\" target=\"_blank\" onclick=\"window.open(this.href, this.target); return false;\"></a> </h4> </div> <div class=\"form-due-group\"> <ul> <li class=\"form-meta-item\" ng-if=\"Pform._dueDateUtc && !Pform.isComplete\"> <strong class=\"form-due-date\" ng-class=\"{\\'{{Pform.dueDateStatus.class}}\\': Pform.dueDateStatus}\" ng-bind=\"Pform.dueDateStatus.statusFriendly\"></strong> </li> <li class=\"form-meta-item form-sent-date\">Sent {{Pform.sentDate}}</li> </ul> </div> <div class=\"form-step-status-group\"> <div ng-if=\"!Pform.isComplete\"> <ul class=\"step-status-chart total-steps-{{Pform.totalSteps}}\"> <li ng-repeat=\"step in Pform._steps | limitTo: Pform.totalSteps\" ng-class=\"{\\'{{step.stepStatus}}\\' : step.stepStatus}\"></li> </ul> <super-popover> <h6>Workflow Steps</h6> <ul class=\"popover-step-list\"> <li class=\"workflow-step-item\" ng-repeat=\"step in Pform._steps | limitTo: Pform.totalSteps\"> <span ng-bind=\"{{$index + 1}}\"></span>) <span class=\"ss-pipe-right\" ng-bind=\"step._stepParticipant.name\"></span><span ng-bind=\"step._stepAction | enumByValue:\\'stepAction\\'\"></span> </li> </ul> </super-popover> </div> <p class=\"form-complete\" ng-if=\"Pform.isComplete\" ss-icon=\"check\">complete</p> </div> <div class=\"form-step-action-group\"> <p ng-if=\"!Pform.isComplete\" ng-bind=\"Pform.currentStepMeta\" ng-class=\"{\\'denied\\':Pform.isRejected}\" ss-icon=\"{{Pform.isRejected ? \\'thumbsdown-stripes\\' : \\'\\' }}\"></p> <p ng-if=\"Pform._lastReminderSentUtc != null && !Pform.isComplete\"> <em>Reminder sent {{Pform.reminderSentDate}}</em> </p> </div> <div class=\"file-attachments\"> <super-popover ng-if=\"Pform.filesOnInstance.length\" link=\"{{ Pform.filesOnInstance.length }}\" ss-icon=\"paperclip\"> <h6>UPLOADED FILES</h6> <ul class=\"popover-step-list\" ng-repeat=\"file in Pform.filesOnInstance\"> <li ss-icon-before=\"{{ file.icon }}\" ng-bind=\"file.filename\"></li> </ul> <h6>These files were uploaded by a user as part of a workflow step.</h6> </super-popover> </div> <div class=\"form-actions-group\"> <super-button ng-if=\"!Pform.isComplete\" ss-icon-after=\"angle-down\"> <item class=\"no-select\" ng-if=\"!Pform.isUser && !Pform.isRejected\"><h6><em>Send Reminder to</em></h6></item> <item class=\"divided-bottom\" ng-if=\"!Pform.isUser && !Pform.isRejected\" ng-click=\"go.sendReminder(Pform)\">{{Pform.currentStepParticipantName}}</item> <item ng-if=\"Pform.isRejected\" class=\"no-select\"><h6><em>Resend workflow step to</em></h6></item> <item ng-if=\"Pform.isRejected\" class=\"divided\"><span ng-click=\"go.updateWorkflowStep(Pform)\">Step {{Pform.prevStepNum}}- {{Pform.prevStep._stepParticipant.name}}</span></item> <item ng-if=\"Pform.$permitted.actions.delete\" ng-click=\"go.remove(Pform)\">Delete Form</item> <item ng-if=\"Pform.filesOnInstance.length\" class=\"divided-top no-select\"><h6><em>Uploaded files</em></h6></item> <item ng-if=\"Pform.filesOnInstance.length\" ng-click=\"go.download(Pform.filesOnInstance)\">Download ({{ Pform.filesOnInstance.length }}) <ng-pluralize count=\"Pform.filesOnInstance.length\" when=\"{\\'1\\': \\'file\\', \\'other\\': \\'files\\'}\"></ng-pluralize> </item> </super-button> <super-button ng-if=\"Pform.isComplete && (Pform._employee.meta.permissions.permittedActions.createEmployeeFile || $root.isPermitted.formInstances.archive)\" ss-icon-after=\"angle-down\"> <item ng-if=\"Pform._employee.meta.permissions.permittedActions.createEmployeeFile\" ng-click=\"Pform._sentToEmployeeRecord || go.updateEmpRecord(Pform)\" ng-disabled=\"Pform._sentToEmployeeRecord\">Move to Employee Record</item> <item ss-permitted=\"formInstances.archive\" ng-click=\"go.updateFormStatus(Pform, \\'archived\\')\">Archive Form</item> <item ng-if=\"Pform.filesOnInstance.length\" class=\"divided-top no-select\"><h6><em>Uploaded files</em></h6></item> <item ng-if=\"Pform.filesOnInstance.length\" ng-click=\"go.download(Pform.filesOnInstance)\">Download ({{ Pform.filesOnInstance.length }}) <ng-pluralize count=\"Pform.filesOnInstance.length\" when=\"{\\'1\\': \\'file\\', \\'other\\': \\'files\\'}\"></ng-pluralize> </item> </super-button> </div> </div> </div> </li> </ul> </div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"components/cmp-tracked-form-group/tracked-form-group.html\",'<div class=\"cmp-tracked-form-group\"> <div ss-pending=\"vm.loading && !vm.scrolling\" ss-pending-status=\"\\'Loading Form Instances...\\'\"> <ul class=\"ss-form-panel-list\"> <li class=\"ss-panel-list-item\" ng-if=\"vm.formsAndPackets.length\" ng-repeat=\"form in vm.formsAndPackets track by $index\"> <cmp-tracked-form form=\"form\" type=\"type\" status-updated=\"go.refreshData()\"></cmp-tracked-form> </li> <li class=\"ss-panel-list-item\" ng-if=\"!vm.loading && !vm.formsAndPackets.length\"> <div class=\"form-list-item-wrapper\">No Forms or Packets found</div> </li> </ul> </div> <div class=\"scroller\" ng-if=\"vm.showInfScroll\" ss-pending=\"vm.scrolling\" ss-pending-status=\"\\'Loading more results...\\'\" infinite-scroll=\"scrollData()\" infinite-scroll-distance=\"1\"></div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/form-builder/form-builder.html\",'<route folder=\"/form-builder\"> <form id=\"form-controls\" class=\"route-wrapper form-controls\" ng-submit=\"routeVm.submitForm()\" ss-validate-form> <segment name=\"header\"></segment> <div class=\"gd-row\" ss-pending=\"routeVm.loading || routeVm.saving\" ss-pending-status=\"routeVm.loadingMsg\"> <segment name=\"content\"></segment> </div> </form> </route>')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/form-templates/form-templates.html\",'<route folder=\"/form-templates\"> <div class=\"route-wrapper\"> <segment name=\"header\"></segment> <segment name=\"content\"></segment> </div> </route>')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/form-instance/form-instance.html\",'<route folder=\"/form-instance\"> <div class=\"full-screen\" data-qa=\"form-instance\" ss-pending=\"routeVm.isLoading\" ss-pending-status=\"routeVm.loadingStatus\"> <segment name=\"header\"></segment> <main class=\"full-screen-content\"> <div class=\"full-screen-content-wrapper\"> <div ng-show=\"!routeVm.showPDFOverlay\" class=\"gd-row\"> <section class=\"gd-65p content\"> <segment name=\"form\"></segment> </section> <aside class=\"gd-35p sidebar\" ss-window-anchor window-anchor-top=\"10\"> <segment name=\"attachments\"></segment> <segment name=\"steps-summary\"></segment> </aside> </div> <div ng-show=\"routeVm.showPDFOverlay\"> <iframe id=\"form-overlay-frame\" src=\"\" title=\"PDF overlay for {{routeVm.formInstance.name}}\"></iframe> </div> </div> </main> </div> </route>\\t')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/inbox/inbox.html\",'<route folder=\"/inbox\"> <div class=\"route-wrapper\"> <segment name=\"header\"></segment> <segment name=\"content\"></segment> </div> </route>')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/form-tracking/form-tracking.html\",'<route folder=\"/form-tracking\"> <div class=\"route-wrapper\"> <segment name=\"header\"></segment> <segment name=\"content\"></segment> </div> </route>')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/index/index.html\",'<route folder=\"/index\"> <div class=\"route-wrapper\"> <segment name=\"header\"></segment> <segment name=\"content\"></segment> </div> </route> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/my-forms/my-forms.html\",'<route folder=\"/my-forms\"> <div class=\"route-wrapper\"> <segment name=\"header\"></segment> <segment name=\"content\"></segment> </div> </route>')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/send/send.html\",'<route folder=\"/send\"> <div class=\"route-wrapper\" ss-pending=\"routeVm.retryLoading\" ss-pending-status=\"\\'Please wait...\\'\"> <form ss-validate-form ng-submit=\"routeVm.go.send()\" autocomplete=\"off\"> <segment name=\"header\"></segment> <segment name=\"content\"></segment> </form> </div> </route> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/packet-builder/packet-builder.html\",'<route folder=\"/packet-builder\"> <form id=\"form-controls\" class=\"form-controls\" ng-submit=\"routeVm.saveFormTemplate()\" ss-validate-form> <div class=\"route-wrapper\"> <segment name=\"header\"></segment> <segment name=\"content\"></segment> </div> </form> </route>')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/form-builder/builder/builder.html\",'<route folder=\"/form-builder/builder\"> <div class=\"gd-row\"> <aside class=\"panel fields-panel\"><segment name=\"fields\"></segment></aside> <section class=\"panel builder-panel\"><segment name=\"builder\"></segment></section> <aside class=\"panel properties-panel\"><segment name=\"properties\"></segment></aside> </div> </route>')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/form-builder/overlay-builder/overlay-builder.html\",'<route folder=\"/form-builder/overlay-builder\"> <form id=\"form-controls\" class=\"gd-row route-wrapper form-controls\" ng-submit=\"routeVm.saveFormTemplate()\" ss-validate-form> <section class=\"overlay-builder-overlay\"> <segment name=\"overlay\"></segment> </section> <aside class=\"overlay-builder-data-panel\"> <segment name=\"data-panel\"></segment> </aside> </form> </route>')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/form-builder/preview/preview.html\",'<route folder=\"/form-builder/preview\" id=\"form-preview\"> <segment name=\"page-header\"></segment> <section class=\"full-screen-content\"> <div ng-show=\"!routeVm.showPDFOverlay\" class=\"gd-row\"> <section class=\"gd-60p content\"> <segment name=\"form-workflow\"></segment> </section> <aside class=\"gd-40p sidebar\" ss-window-anchor> <segment name=\"attachments\"></segment> <segment name=\"steps-summary\"></segment> </aside> </div> <div ng-show=\"routeVm.showPDFOverlay\"> <iframe id=\"form-overlay-frame\" src=\"{{routeVm.PDFOverlayUrl}}\"></iframe> </div> </section> </route>')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/form-builder/segment-content/content.html\",'<section class=\"segment-form-builder-content\" aria-label=\"form builder section\"> <ui-view id=\"formBuilder-builder\" aria-controlled-by=\"content-nav\"></ui-view> </section> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){\ne.put(\"routes/form-builder/segment-header/header.html\",'<header class=\"segment-form-builder-header\" ss-window-anchor> <div class=\"form-title-group\" aria-label=\"form title section\" role=\"region\" tabindex=\"0\"> <i ss-icon-before=\"{{routeVm.formData._isEmployeeInitiated ? \\'li-form-e-large\\' : \\'li-form-large\\'}}\" role=\"presentation\"></i> <div class=\"form-title-ctrl\" ng-class=\"{\\'is-editing\\' : vm.editTitle}\"> <span class=\"locked-state\" title=\"{{ routeVm.formData._name }}\" ng-bind=\"routeVm.formData._name\"></span> <span class=\"non-locked-stated\" ng-if=\"!vm.editTitle\" ng-bind=\"routeVm.formData._name\"></span> <super-input-text id=\"formTitle\" model=\"routeVm.formData._name\" ng-if=\"vm.editTitle\" ss-validate=\"validator.required(routeVm.formData._name, \\'Form Name\\')\" ;> </super-input-text> <p class=\"form-status\" ng-bind=\"vm.formStatusLabel\"></p> </div> <div class=\"form-title-edit-actions\"> <button type=\"button\" ng-if=\"!vm.editTitle\" class=\"edit\" ss-icon=\"pencil\" ng-click=\"go.editTitle()\" aria-label=\"edit the form name\"></button> <button type=\"button\" ng-if=\"vm.editTitle\" class=\"save\" ss-icon=\"check-circle\" ng-click=\"vm.editTitle = false\" ng-disabled=\"!routeVm.formData._name.length\" aria-label=\"confirm form name change\"></button> <button type=\"button\" ng-if=\"vm.editTitle\" class=\"cancel\" ss-icon=\"times\" ng-click=\"go.cancelTitleEdit()\" aria-label=\"cancel edit for form name\"></button> </div> </div><div class=\"form-control-actions\" role=\"region\"> <div class=\"status-messages\" role=\"status\"> <strong class=\"auto-saved\" ng-show=\"vm.autoSaved\">Auto-Saved</strong> </div> <ul> <li class=\"form-save\"> <super-button class=\"save-button\" pri label=\"{{routeVm.saving ? \\'Saving\\' : \\'Save\\'}}\" type=\"submit\" ng-class=\"{\\'saving\\': routeVm.saving}\" ng-disabled=\"routeVm.saving\" ss-icon=\"spinner\" ng-click=\"go.setActivationConfig(false)\"></super-button> </li> <li class=\"form-activate\"> <super-button label=\"Activate\" ss-icon-after=\"angle-down\" ss-menu=\"activate-menu\" ng-disabled=\"routeVm.saving\"></super-button> <div class=\"activate-menu\" data-qa=\"form-activation-menu\"> <ul class=\"select-menu-list\"> <li class=\"select-menu-list-item\" data-qa=\"activate-immediately\"> <button type=\"submit\" class=\"activation-btn\" ng-click=\"go.setActivationConfig(true, false)\">Activate immediately<small>Will become sendable</small></button> </li> <li class=\"select-menu-list-item gd-row\"> <div class=\"gd-55p\"> <button type=\"submit\" class=\"activation-btn\" ng-click=\"go.setActivationConfig(true)\" data-qa=\"activate-on-date\">Activate on<small>Set a future \\'active\\' date</small> </button> </div> <div class=\"gd-45p\"> <super-input-datepicker model=\"vm.activationDate\"></super-input-datepicker> </div> </li> </ul> </div> </li> <li class=\"form-preview\"> <super-button label=\"Preview\" ng-click=\"go.preview()\" is-disabled=\"routeVm.saving\"></super-button> </li> </ul> </div> <nav id=\"content-nav\" aria-controls=\"formBuilder-builder\"> <super-tab-list class=\"flat\"> <super-tab-list-item label=\"Form Builder\" state=\"base.formBuilder.builder\"></super-tab-list-item> <super-tab-list-item label=\"Form Settings\" state=\"base.formBuilder.settings\" params=\"\"></super-tab-list-item> <super-tab-list-item ng-if=\"vm.printViewBuilderEnabled\" label=\"Overlay Builder\" state=\"base.formBuilder.overlayBuilder\" params=\"\"></super-tab-list-item> </super-tab-list> </nav> </header> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/form-builder/settings/settings.html\",'<route folder=\"/form-builder/settings\"> <segment name=\"settings\"></segment> </route>')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/form-templates/segment-content/content.html\",'<div class=\"segment-form-templates-content\"> <div class=\"gd-row content-header\"> <div class=\"gd-35p\"> <super-input-text size=\"large\" ss-icon-before=\"search\" model=\"vm.search\" name=\"search\" debounce=\"400\">Find Form or Packet</super-input-text> </div> <div class=\"filter-group\"> <super-select-list type=\"filter\" label=\"Filter Status\" model=\"vm.selectedStatus\"> <super-select-list-item label=\"\\'All\\'\" value=\"\\'All\\'\"></super-select-list-item> <super-select-list-item ng-repeat=\"status in vm.statuses\" value=\"status.value\" label=\"status.name\"></super-select-list-item> </super-select-list> <super-select-list type=\"filter\" label=\"Filter Category\" model=\"vm.selectedCategory\"> <super-select-list-item label=\"\\'All\\'\" value=\"\\'All\\'\"></super-select-list-item> <super-select-list-item ng-repeat=\"category in routeVm.categories\" value=\"category.value\" label=\"category.name\"></super-select-list-item> </super-select-list> <super-select-list type=\"filter\" label=\"Sort by\" model=\"vm.sortBy\"> <super-select-list-item ng-repeat=\"sort in vm.sortCriteria\" value=\"sort.value\" label=\"sort.label\"></super-select-list-item> </super-select-list> </div> </div> <div ss-pending=\"routeVm.loading && !vm.scrolling\" ss-pending-status=\"routeVm.loadingMessage\"> <ul class=\"ss-form-panel-list\"> <li class=\"ss-panel-list-item\" ng-if=\"routeVm.displayTemplates.length \" ng-repeat=\"template in routeVm.displayTemplates track by $index\"> <cmp-template-list-form template=\"template\" org=\"routeVm.org\" ng-if=\"template.isForm\"></cmp-template-list-form> <cmp-template-list-packet template=\"template\" ng-if=\"template.isPacket\"></cmp-template-list-packet> </li> <li ng-if=\"!routeVm.displayTemplates.length && !routeVm.loading\">No Forms or Packets found</li> </ul> </div> <div class=\"scroller\" ng-if=\"vm.showInfScroll\" ss-pending=\"vm.scrolling\" ss-pending-status=\"\\'Loading more results...\\'\" infinite-scroll=\"scrollData()\" infinite-scroll-distance=\"1\"></div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/form-instance/segment-attachments/attachments.html\",'<article class=\"segment-form-instance-attachments\" role=\"complimentary\"> <header class=\"sidebar-article-header\"> <h4 class=\"\">Attachments</h4> </header> <div class=\"sidebar-article-content\" ss-pending=\"vm.loading\"> <div class=\"main-content\"> <ul class=\"form-attachment-list\" ng-if=\"vm.files.length && !vm.loading\"> <li class=\"list-item form-attachment-item\" ng-repeat=\"attachment in vm.files\"> <i ss-icon=\"{{ attachment.icon }}\"></i> <a class=\"document\" ng-bind=\"attachment._filename\" ng-click=\"go.download(attachment)\" title=\"Open {{attachment._filename}}\" target=\"_blank\"></a> </li> </ul> <p ng-if=\"!vm.files.length && !vm.loading\">No attachments</p> </div> </div> </article> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/form-templates/segment-header/header.html\",'<header class=\"gd-row segment-index-header\"> <div> <h1 class=\"gd-70p page-title\">Form Templates</h1> <div class=\"gd-30p form-create-menu-group\" ss-permitted=\"formTemplates.create,packets.create\"> <button class=\"super-button std\" ng-click=\"go.toggleMenu()\"> <label ss-icon-after=\"angle-down\">Create Template or Packet</label> </button> <form ng-submit=\"go.create()\" ss-validate-form class=\"form-create-menu\" ng-class=\"{\\'ss-menu-open\\': vm.openMenu}\"> <fieldset> <h4 class=\"form-create-heading\"><em>Are you creating a Form Template or a Packet?</em></h4> <button type=\"button\" class=\"close\" ss-icon=\"times\" ng-click=\"go.cancel()\"></button> <div class=\"gd-row\"> <div class=\"gd-50p create-form-control\"><super-input-radio label=\"Form Template\" model=\"vm.form.instanceType\" name=\"formTypeGroup\" value=\"form\"></super-input-radio></div> <div class=\"gd-50p create-packet-control\"><super-input-radio label=\"Packet\" model=\"vm.form.instanceType\" name=\"formTypeGroup\" value=\"packet\"></super-input-radio></div> </div> </fieldset> <div ng-if=\"vm.form.instanceType !== null\"> <hr class=\"divider\"> <fieldset> <div class=\"field-group form-name-field\"> <super-input-text model=\"vm.form.instanceTitle\" label=\"{{vm.form.instanceType}} {{vm.altLabel}} name\" label-weight=\"heavy\" ss-validate=\"validator.required(vm.form.instanceTitle, \\'Name\\')\" placeholder=\"This will be the title of the {{vm.form.instanceType}} {{vm.altLabel}}\" required=\"true\"></super-input-text> </div> <div class=\"field-group emp-initiate-control-field\" ng-if=\"vm.form.instanceType === \\'form\\'\"> <super-input-checkbox model=\"vm.form.isEmployeeInitiated\" label=\"Employees can start this {{vm.form.instanceType}} {{vm.altLabel}} without admin assistance\"></super-input-checkbox> <p ng-if=\"vm.form.instanceType === \\'form\\'\" class=\"help-text emp-initiate-help-text\"><em>This {{vm.form.instanceType}} {{vm.altLabel}} will be available for employees to start (complete and/or submit) without admin assistance.</em></p> </div> </fieldset> <hr class=\"divider\"> <fieldset> <div class=\"field-group form-category-field\"> <super-select-list default-option-label=\"Select Category\" label=\"Category\" label-weight=\"heavy\" model=\"vm.form.category.id\" ss-validate=\"validator.required(vm.form.category.id,\\'Category\\')\" required=\"true\"> <super-select-list-item ng-repeat=\"category in routeVm.categories\" value=\"category.value\" label=\"category.name\"></super-select-list-item> </super-select-list> </div> <div ng-if=\"vm.form.instanceType === \\'form\\'\" class=\"field-group form-admin-field\"> <super-select-list label=\"{{vm.form.instanceType}} administrator\" default-option-label=\"Select Form Administrator\" label-weight=\"heavy\" model=\"vm.form.formAdministrator.formAdministratorType\" ss-validate=\"validator.required(vm.form.formAdministrator.formAdministratorType,\\'form administrator\\')\" required=\"true\"> <super-select-list-item ng-repeat=\"type in vm.formAdminTypes\" value=\"type.value\" label=\"type.name\"></super-select-list-item> </super-select-list> <p class=\"help-text form-admin-help-text\"><em>The Form Administrator can track the progress of the form.</em></p> <super-employee-search class=\"emp-search-field\" ng-if=\"vm.form.formAdministrator.formAdministratorType === formAdminEnums.specificPerson\" model=\"vm.specificAdmin\" ss-validate=\"validator.required(vm.form.formAdministrator.employeeId, \\'Employee\\')\" limit=\"1\" placeholder=\"Find Employee\"></super-employee-search> </div> </fieldset> <hr class=\"divider\"> <fieldset> <p class=\"help-text form-help-text\">These selections can also be managed through the Form Settings tab.</p> <fieldset class=\"form-create-controls\"> <super-button class=\"cancel\" label=\"Cancel\" ng-click=\"go.cancel()\" data-qa=\"form-create-cancel-btn\"></super-button> <super-button class=\"submit\" pri label=\"Create\" type=\"submit\" ss-pending=\"vm.isCreating\" ng-disabled=\"vm.invalidConfig\" data-qa=\"form-create-confirm-btn\"></super-button> </fieldset> </fieldset> </div> </form> </div> </div> <p class=\"gd-100p\" ng-if=\"routeVm.isHRMSEnabled\"><strong>Note:</strong>&nbsp;Details collected in <em>Frontline Central</em> forms will not appear in other applications.</p> </header> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/form-instance/segment-form/form.html\",'<div class=\"segment-form-instance-form\"> <form autocomplete=\"off\" ss-validate-form ng-submit=\"go.submitForm(vm.selectedStep)\" ss-pending=\"vm.loading\"> <section class=\"fb-step\" ng-class=\"{\\'is-hover\\': step.hoverState,\\'is-selected\\': vm.selectedStep.id === step.id}\" ng-repeat=\"step in vm.steps track by $id(step)\" ng-click=\"go.selectStep(step)\" ng-if=\"!vm.loading && vm.steps\" data-qa=\"step-{{ step.id }}\" ng-keypress=\"$event.stopPropagation()\" id=\"fb-step-{{$index}}\" tabindex=\"0\"> <span ng-disabled=\"step.disabled\" ng-if=\"step._stepAction !== vm.employeeProfileReview\"> <header class=\"fb-step-header\"> <h3 class=\"fb-step-title\" data-qa=\"step-title\">Workflow Step {{$index + 1}} <span ng-if=\"step._name\">- {{step._name}}</span></h3> <p ng-if=\"step._instructions\" ng-bind=\"step._instructions\" data-qa=\"step-instructions\"></p> </header> <ul> <li class=\"field-group\" ng-repeat=\"group in step.fieldGroups\" ss-hide-when-empty tabindex=\"0\"> <cmp-field-renderer ng-repeat=\"field in group\" field=\"field\" group=\"group\" org=\"routeVm.org\" ng-style=\"{width: field.config.width}\" ss-hide-when-empty></cmp-field-renderer> </li> </ul> <footer class=\"fb-step-footer\"> <super-input-textarea label=\"Comments - Visible to all participants\" model=\"step.instance._stepComments\" edit-mode=\"step.editMode\" is-disabled=\"step.disabled\"></super-input-textarea> <div ng-if=\"step.showFormEntry\" class=\"form-entry step-action\"> <div class=\"buttons\"> <super-button pri label=\"Submit Form\" type=\"submit\" ng-click=\"go.submitStep(step)\" data-qa=\"submit-step-button\"></super-button> </div> </div> <div ng-if=\"step.showReviewForm\" class=\"review-form step-action\"> <div class=\"buttons\"> <super-button pri label=\"Form Has Been Reviewed\" type=\"submit\" ng-click=\"go.acknowledgeStep(step)\" data-qa=\"review-step-button\"></super-button> </div> </div> <div ng-if=\"step.showReviewApproveOrDeny\" class=\"approve-deny step-action\"> <div class=\"buttons\"> <super-button pri label=\"Approve Form\" type=\"submit\" ng-click=\"go.approveStep(step)\" data-qa=\"approve-step-button\"></super-button> <super-button neg label=\"Deny Form\" type=\"button\" ng-click=\"go.denyStep($event,step)\" data-qa=\"deny-step-button\"></super-button> </div> </div> </footer> </span> <span ng-disabled=\"step.disabled\" ng-if=\"step._stepAction === vm.employeeProfileReview\"> <header class=\"fb-step-header\"> <h4 class=\"fb-step-title\">Review Employee Profile Updates</h4> <p data-qa=\"step-instructions\">The following will be updated in <b>{{routeVm.formInstance._employee.name}}\\'s</b> employee profile:</p> </header> <table class=\"form-review-fields fb-fields\" ng-if=\"step.instance._employeeProfileReviewStepFieldValues.length > 0\"> <thead class=\"form-review-fields-head\"> <tr> <th>&nbsp;</th> <th class=\"current\">Current</th> <th class=\"will-change-to\">Will Change To</th> <th class=\"update-profile\">Update Profile</th> </tr> </thead> <tbody class=\"form-review-fields-body\"> <tr ng-repeat=\"employeeProfileReviewStepField in step.instance._employeeProfileReviewStepFieldValues track by $id(employeeProfileReviewStepField)\"> <td class=\"step-field\"> <p ng-bind=\"employeeProfileReviewStepField.sourceField.step._name\"></p> <p class=\"field-label\" ng-bind=\"employeeProfileReviewStepField.sourceField._label\"></p> </td> <td class=\"current\" data-qa=\"profile-value-{{ employeeProfileReviewStepField.formFieldId}}\" ng-bind=\"go.profileValueDisplay(employeeProfileReviewStepField, step)\"></td> <td class=\"will-change-to\"> <cmp-field-renderer field=\"employeeProfileReviewStepField.sourceField\" org=\"routeVm.org\"></cmp-field-renderer> </td> <td class=\"update-profile\"><super-input-checkbox data-qa=\"{{ employeeProfileReviewStepField.sourceFormFieldId }}\" is-disabled=\"step._stepAction !== vm.employeeProfileReview || routeVm.formInstance._statusId === vm.formComplete\" model=\"employeeProfileReviewStepField.updateEmployeeProfile\"></super-input-checkbox></td> </tr> </tbody> </table> <footer class=\"fb-step-footer\"> <super-input-textarea label=\"Comments - Visible to all participants\" model=\"step.instance._stepComments\" edit-mode=\"step.editMode\" is-disabled=\"step.disabled\"></super-input-textarea> <div ng-if=\"routeVm.formInstance._statusId !== vm.formComplete\" class=\"form-entry step-action\"> <div class=\"buttons\"> <super-button pri label=\"Submit Form\" type=\"submit\" ng-click=\"go.reviewProfile(step)\"></super-button> </div> </div> </footer> </span> </section> <section class=\"fb-step\" ng-if=\"!vm.loading && !vm.steps.length\"> <header class=\"fb-step-header\"> <h4 class=\"fb-step-title\">No Steps Found</h4> </header> <p>Either there was a problem retrieving workflow steps for this form, or you do not have permission to see any steps.</p> </section>  </form> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/inbox/form-instance/form-instance.html\",'<route folder=\"/inbox/form-instance\"> <div class=\"full-screen\"> <header class=\"full-screen-header\"> <segment name=\"close\"></segment> <segment name=\"header\"></segment> </header> <section class=\"full-screen-content\" ss-pending=\"routeVm.isLoading\" ss-pending-status=\"routeVm.loadingStatus\"> <div class=\"full-screen-content-wrapper\"> <div ng-show=\"!routeVm.showPDFOverlay\" class=\"gd-row\"> <div class=\"gd-65p content\"> <segment name=\"form\"></segment> </div> <div class=\"gd-35p sidebar\"> <segment name=\"attachments\"></segment> <segment name=\"steps\"></segment> </div> </div> <div ng-show=\"routeVm.showPDFOverlay\"> <iframe id=\"form-overlay-frame\" src=\"\" title=\"PDF overlay for {{routeVm.formInstance.name}}\"></iframe> </div> </div> </section> </div> </route> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/form-instance/segment-header/header.html\",'<header class=\"segment-form-instance-header\"> <div class=\"page-header\"> <div class=\"app-title\"><h1>Frontline Central</h1></div> <div class=\"actions\"> <super-button class=\"delete-button\" neg ng-if=\"go.showDelete()\" label=\"Delete\" ng-click=\"go.deleteForm()\" ng-class=\"{\\'saving\\': vm.deleting}\" ss-icon=\"spinner\" ng-disabled=\"vm.deleting\" data-qa=\"form-instance-delete-button\"></super-button> <super-button class=\"print-button\" label=\"print form\" is-disabled=\"routeVm.showPDFOverlay\" ng-click=\"go.print()\" data-qa=\"form-instance-print-button\"></super-button> <super-button class=\"save-button\" label=\"save progress\" ng-if=\"!vm.formIsComplete && vm.fromView !== \\'sent\\'\" ng-click=\"go.save()\" data-qa=\"form-instance-save-button\"></super-button> <button type=\"button\" aria-label=\"close this page\" class=\"close-x\" ng-click=\"go.close()\" ss-tooltip=\"close\" data-qa=\"form-instance-close-button\"></button> </div> </div> <div class=\"form-header\"> <div class=\"form-header-group form-info-group\"> <h2 ss-icon=\"{{routeVm.formTemplate._isEmployeeInitiated ? \\'li-form-e-large\\' : \\'li-form-large\\'}}\" class=\"form-instance-title\" ng-bind=\"routeVm.formInstance.name\" data-qa=\"form-instance-title\"></h2> <ul class=\"form-meta ss-pipe-children\"> <li class=\"form-meta-item\"><abbr class=\"form-instance-version\" title=\"version {{routeVm.formTemplate._templateVersion || 1}}\">v{{routeVm.formTemplate._templateVersion || 1}}</abbr></li> <li class=\"form-meta-item\">sent {{routeVm.formInstance.sentDate}} by {{routeVm.formInstance._creator.name}}</li> </ul> <p ng-if=\"routeVm.formTemplate._instructions\" ng-bind=\"routeVm.formTemplate._instructions\"></p> </div> <div class=\"form-header-group form-controls-group\"> <div class=\"form-control-group sensitive-field-toggle-control-group\" data-qa=\"sensitive-field-toggle-control-group\" ng-if=\"routeVm.showToggle\"> <label for=\"sensitive-field-toggle\">display sensitive info</label> <fluid-toggle label=\"\\'this control will toggle the visibility of sensitive fields\\'\" checked=\"false\" warning=\"\" on:checked-change=\"go.toggleSensitiveFields($event)\" is-disabled=\"routeVm.isLoading\"></fluid-toggle> </div> <div class=\"form-control-group form-display-control-group\" ng-if=\"routeVm.hasPDFOverlay\"> <super-button ng-class=\"{active: !routeVm.showPDFOverlay}\" ng-click=\"go.toggleFormView(showPDF = false)\" label=\"Web Form\" smp></super-button><super-button ng-class=\"{active: routeVm.showPDFOverlay}\" ng-click=\"go.toggleFormView(showPDF = true)\" label=\"PDF Overlay\" smp></super-button> </div> </div> </div> </header> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/form-instance/segment-steps-summary/steps-summary.html\",'<article class=\"segment-form-instance-steps-summary\"> <header class=\"sidebar-article-header\"> <h4 class=\"\">Form Workflow</h4> </header> <div class=\"sidebar-article-content\" ng-if=\"!vm.loading && vm.steps.length\" ss-pending=\"vm.loading\"> <section class=\"fb-summary-step\" ng-class=\"{\\n\\t\\t\\t\\t\\'is-hover\\': step.hoverState,\\n\\t\\t\\t\\t\\'is-selected\\': vm.selectedStep === step,\\n\\t\\t\\t\\t\\'is-disabled\\': step.disabled\\n\\t\\t\\t}\" ng-repeat=\"step in vm.steps\" ng-mouseenter=\"step.hoverState = true\" ng-mouseleave=\"step.hoverState = false\" ng-click=\"go.selectStep(step)\" role=\"region\"> <header class=\"fb-step-header\"> <h4 class=\"fb-step-title\">Workflow Step {{$index + 1}} <span ng-if=\"step._name\">- {{step._name}}</span></h4> </header> <div class=\"main-content\" ng-show=\"vm.selectedStep === step\" ng-cloak> <dl class=\"step-summary-list\"> <dt>main participant</dt> <dd> <ul class=\"fb-step-meta\"> <li class=\"list-item-row\" ss-icon=\"user\" ng-if=\"step.instance._stepParticipant.name\" ng-bind=\"step.instance._stepParticipant.name\"></li> <li class=\"list-item-row\" ng-if=\"step.stepActionName\"> <ul class=\"ss-pipe-children\"> <li class=\"item\" ss-icon=\"wrench\" ng-if=\"step.stepActionName\" ng-bind=\"step.stepActionName\"></li> <li class=\"item\" ss-icon=\"key\" ng-if=\"step.participantPermission.length\" ng-bind=\"step.participantPermission\"> </li> </ul> </li> </ul> </dd> <dt>other participants</dt> <dd ng-if=\"step.otherParticipants.length\"> <ul class=\"fb-step-meta\"> <li class=\"list-item-row\" ng-repeat=\"other in step.otherParticipants\"> <ul class=\"ss-pipe-children\"> <li ss-icon=\"user\" ng-bind=\"other.name\" title=\"{{other.name}}\"></li> <li ss-icon=\"key\" ng-bind=\"other.permissions\" title=\"{{other.name}}\"></li> </ul> </li> </ul> </dd> <dd ng-if=\"!step.otherParticipants.length\">No additional participants</dd> </dl> </div> </section> <section class=\"fb-summary-step\" ng-if=\"!vm.loading && !vm.steps.length\"> <div class=\"pad-box\"><p>No Workflow Steps found</p></div> </section> </div> </article> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/form-tracking/segment-content/content.html\",'<div class=\"segment-form-tracking-content\"> <cmp-tracked-form-group type=\"urgent\" search=\"routeVm.search\" endpoint=\"go.urgent()\" sent-by-sort=\"routeVm.sentByParticipant\" sort-by=\"routeVm.sortBy\" category=\"routeVm.selectedCategory\" location=\"routeVm.sentToLocation\" count=\"routeVm.counts._urgent\" empl-id=\"vm.emplId\" ng-if=\"routeVm.selectedCategory === \\'urgent\\'\"></cmp-tracked-form-group> <cmp-tracked-form-group type=\"denied\" search=\"routeVm.search\" endpoint=\"go.denied()\" sent-by-sort=\"routeVm.sentByParticipant\" sort-by=\"routeVm.sortBy\" category=\"routeVm.selectedCategory\" location=\"routeVm.sentToLocation\" count=\"routeVm.counts._denied\" empl-id=\"vm.emplId\" ng-if=\"routeVm.selectedCategory === \\'denied\\'\"></cmp-tracked-form-group> <cmp-tracked-form-group type=\"not-started\" search=\"routeVm.search\" endpoint=\"go.notStarted()\" sent-by-sort=\"routeVm.sentByParticipant\" sort-by=\"routeVm.sortBy\" category=\"routeVm.selectedCategory\" location=\"routeVm.sentToLocation\" count=\"routeVm.counts._notStarted\" empl-id=\"vm.emplId\" ng-if=\"routeVm.selectedCategory === \\'not-started\\'\"></cmp-tracked-form-group> <cmp-tracked-form-group type=\"in-progress\" search=\"routeVm.search\" endpoint=\"go.inProgress()\" sent-by-sort=\"routeVm.sentByParticipant\" sort-by=\"routeVm.sortBy\" category=\"routeVm.selectedCategory\" location=\"routeVm.sentToLocation\" count=\"routeVm.counts._inProgress\" empl-id=\"vm.emplId\" ng-if=\"routeVm.selectedCategory === \\'in-progress\\'\"></cmp-tracked-form-group> <cmp-tracked-form-group type=\"complete\" search=\"routeVm.search\" endpoint=\"go.complete()\" sent-by-sort=\"routeVm.sentByParticipant\" sort-by=\"routeVm.sortBy\" category=\"routeVm.selectedCategory\" location=\"routeVm.sentToLocation\" count=\"routeVm.counts._complete\" empl-id=\"vm.emplId\" , ng-if=\"routeVm.selectedCategory === \\'complete\\'\"></cmp-tracked-form-group> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/inbox/segment-content/content.html\",'<div class=\"segment-inbox-content\"> <div class=\"gd-row forms-list-filter-group\"> <div class=\"forms-list-filter-tabs\"> <ul> <li ng-class=\"{\\'is-selected\\': vm.selectedFilter === \\'current\\'}\" ng-click=\"go.filter(\\'current\\')\">current forms <span class=\"count-display filter-count\" ng-bind=\"vm.currentCount\"></span></li> <li ng-class=\"{\\'is-selected\\': vm.selectedFilter === \\'sent\\'}\" ng-click=\"go.filter(\\'sent\\')\">sent forms</li> <li ng-class=\"{\\'is-selected\\': vm.selectedFilter === \\'completed\\'}\" ng-click=\"go.filter(\\'completed\\')\">completed Forms</li> </ul> <ul> <li ss-permitted=\"formTemplates.startForMyself\" ss-icon-before=\"mail-forward\" ng-class=\"{\\'is-selected\\': vm.selectedFilter === \\'initiate\\'}\" ng-click=\"go.filter(\\'initiate\\')\">forms i can start</li> </ul> </div> </div> <cmp-form-list-group ng-if=\"vm.selectedFilter === \\'current\\'\" type=\"current\" search=\"routeVm.search\" endpoint=\"go.getCurrentForms()\" count=\"vm.currentCount\" filter=\"vm.selectedFilter\"></cmp-form-list-group> <cmp-form-list-group ng-if=\"vm.selectedFilter === \\'sent\\'\" type=\"sent\" search=\"routeVm.search\" endpoint=\"go.getSentForms()\" count=\"null\" filter=\"vm.selectedFilter\"></cmp-form-list-group> <cmp-form-list-group ng-if=\"vm.selectedFilter === \\'completed\\'\" type=\"completed\" search=\"routeVm.search\" endpoint=\"go.getCompletedForms()\" count=\"null\" filter=\"vm.selectedFilter\"></cmp-form-list-group> <cmp-emp-initiated-template ng-if=\"vm.selectedFilter === \\'initiate\\'\" type=\"initiate\" search=\"routeVm.search\" endpoint=\"go.getInitiatedForms()\" filter=\"vm.selectedFilter\"></cmp-emp-initiated-template> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/inbox/segment-header/header.html\",'<div class=\"segment-inbox-header\"> <div class=\"gd-70p\"> <h1 class=\"page-title\">My Forms</h1> </div> <div class=\"gd-30p\"> <super-input-text size=\"large\" debounce=\"750\" ss-icon=\"search\" model=\"routeVm.search\">Find Form or Packet</super-input-text> </div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/form-tracking/segment-header/header.html\",'<header class=\"segment-form-tracking-header\"> <h1>Track Forms</h1> <div class=\"gd-row form-list-filters\"> <div class=\"gd-40p\"> <div class=\"form-search-filter\"> <label for=\"search-filter\">Filter by Form, Packet or Employee</label> <super-input-text id=\"search-filter\" debounce=\"750\" ss-icon=\"search\" model=\"routeVm.search\" is-disabled=\"vm.disableFilters\">Type here to filter</super-input-text> </div> </div> <div class=\"gd-20p\"> <super-select-list label=\"Date Sent\" label-weight=\"heavy\" model=\"vm.dateSentIdx\" is-disabled=\"vm.disableFilters\"> <super-select-list-item ng-repeat=\"dateSent in vm.dateSentOptions\" label=\"dateSent.title\" value=\"$index\"></super-select-list-item> </super-select-list> </div> <div class=\"gd-20p\"> <super-select-list label=\"Results (Sender/Admin)\" label-weight=\"heavy\" model=\"routeVm.sentByParticipant\" is-disabled=\"vm.disableFilters\"> <super-select-list-item ng-repeat=\"sent in vm.sentByCriteria\" value=\"sent.value\" label=\"sent.name\"></super-select-list-item> </super-select-list> </div> <div class=\"gd-20p\"> <super-select-list label=\"Employee location\" label-weight=\"heavy\" model=\"routeVm.sentToLocation\" is-disabled=\"vm.disableFilters\"> <super-select-list-item ng-repeat=\"loc in vm.locations\" value=\"loc.id\" label=\"loc._name\"></super-select-list-item> </super-select-list> </div> </div> <div class=\"forms-list-filter-header\"> <ul class=\"forms-list-filter-tabs\"> <li ss-icon-before=\"calendar-o\" ng-class=\"{\\'is-selected\\': routeVm.selectedCategory === \\'urgent\\'}\" ng-click=\"go.filter(\\'urgent\\')\">Urgent <abbr title=\"urgent forms count\" class=\"count-display\" ng-bind=\"routeVm.counts._urgent || \\'0\\'\"></abbr></li> <li ss-icon-before=\"thumbsdown-stripes\" ng-class=\"{\\'is-selected\\': routeVm.selectedCategory === \\'denied\\'}\" ng-click=\"go.filter(\\'denied\\')\">Denied <abbr title=\"denied forms count\" class=\"count-display\" ng-bind=\"routeVm.counts._denied || \\'0\\'\"></abbr></li> <li ss-icon-before=\"square-o\" ng-class=\"{\\'is-selected\\': routeVm.selectedCategory === \\'not-started\\'}\" ng-click=\"go.filter(\\'not-started\\')\">Not Started <abbr title=\"not started forms count\" class=\"count-display\" ng-bind=\"routeVm.counts._notStarted || \\'0\\'\"></abbr></li> <li ss-icon-before=\"pencil\" ng-class=\"{\\'is-selected\\': routeVm.selectedCategory === \\'in-progress\\'}\" ng-click=\"go.filter(\\'in-progress\\')\">In-Progress <abbr title=\"in progress forms count\" class=\"count-display\" ng-bind=\"routeVm.counts._inProgress || \\'0\\'\"></abbr></li> <li ss-icon-before=\"check\" ng-class=\"{\\'is-selected\\': routeVm.selectedCategory === \\'complete\\'}\" ng-click=\"go.filter(\\'complete\\')\">Complete <abbr title=\"complete forms count\" class=\"count-display\" ng-bind=\"routeVm.counts._complete || \\'0\\'\"></abbr></li> </ul> </div> <div class=\"sort-by-filter\"> <super-select-list type=\"filter\" label=\"Sort by\" model=\"routeVm.sortBy\" is-disabled=\"vm.disableFilters\"> <super-select-list-item ng-repeat=\"sort in vm.sortOptions\" ng-if=\"sort.categories.includes(routeVm.selectedCategory)\" value=\"sort.value\" label=\"sort.name\"></super-select-list-item> </super-select-list> </div> </header> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/index/segment-content/content.html\",'<section class=\"segment-index-content\"> <div class=\"gd-row content-header\"> <div class=\"gd-35p\"> <super-input-text size=\"large\" ss-icon-before=\"search\" model=\"vm.search\" name=\"search\">Find Form or Packet</super-input-text> </div> <div class=\"filter-group\"> <super-select-list type=\"filter\" label=\"Filter Status\" model=\"vm.selectedStatus\"> <super-select-list-item label=\"\\'All\\'\" value=\"\\'All\\'\"></super-select-list-item> <super-select-list-item ng-repeat=\"status in vm.statuses\" value=\"status.value\" label=\"status.name\"></super-select-list-item> </super-select-list> <super-select-list type=\"filter\" label=\"Filter Category\" model=\"vm.selectedCategory\"> <super-select-list-item label=\"\\'All\\'\" value=\"\\'All\\'\"></super-select-list-item> <super-select-list-item ng-repeat=\"category in routeVm.categories\" value=\"category.value\" label=\"category.name\"></super-select-list-item> </super-select-list> <super-select-list type=\"filter\" label=\"Sort by\" model=\"vm.sortBy\"> <super-select-list-item ng-repeat=\"sort in vm.sortCriteria\" value=\"sort.value\" label=\"sort.label\"></super-select-list-item> </super-select-list> </div> </div> <div ss-pending=\"routeVm.loading && !vm.scrolling\" ss-pending-status=\"routeVm.loadingMessage\"> <ul class=\"ss-form-panel-list\"> <li class=\"ss-panel-list-item\" ng-if=\"routeVm.displayTemplates.length \" ng-repeat=\"template in routeVm.displayTemplates\"> <cmp-template-list-form template=\"template\" org=\"routeVm.org\" ng-if=\"template.isForm\"></cmp-template-list-form> <cmp-template-list-packet template=\"template\" ng-if=\"template.isPacket\"></cmp-template-list-packet> </li> <li ng-if=\"!routeVm.displayTemplates.length && !routeVm.loading\">No Forms or Packets found</li> </ul> </div> <div class=\"scroller\" ng-if=\"vm.showInfScroll\" ss-pending=\"vm.scrolling\" ss-pending-status=\"\\'Loading more results...\\'\" infinite-scroll=\"scrollData()\" infinite-scroll-distance=\"1\"></div> </section> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){\ne.put(\"routes/index/segment-header/header.html\",'<section class=\"gd-row segment-index-header\"> <h1 class=\"gd-70p page-title\">Form Templates</h1> <div class=\"gd-30p form-create-menu-group\" ss-permitted=\"formTemplates.create,packets.create\"> <button class=\"super-button std\" ng-click=\"go.toggleMenu()\"> <label ss-icon-after=\"angle-down\">Create Template or Packet</label> </button> <form ng-submit=\"go.create()\" ss-validate-form class=\"form-create-menu\" ng-class=\"{\\'ss-menu-open\\': vm.openMenu}\"> <fieldset> <h4 class=\"form-create-heading\"><em>Are you creating a Form Template or a Packet?</em></h4> <button type=\"button\" class=\"close\" ss-icon=\"times\" ng-click=\"go.cancel()\"></button> <div class=\"gd-row\"> <div class=\"gd-50p create-form-control\"><super-input-radio label=\"Form Template\" model=\"vm.form.instanceType\" name=\"formTypeGroup\" value=\"form\"></super-input-radio></div> <div class=\"gd-50p create-packet-control\"><super-input-radio label=\"Packet\" model=\"vm.form.instanceType\" name=\"formTypeGroup\" value=\"packet\"></super-input-radio></div> </div> </fieldset> <div ng-if=\"vm.form.instanceType !== null\"> <hr class=\"divider\"> <fieldset> <div class=\"field-group form-name-field\"> <super-input-text model=\"vm.form.instanceTitle\" label=\"{{vm.form.instanceType}} {{vm.altLabel}} name\" label-weight=\"heavy\" ss-validate=\"validator.required(vm.form.instanceTitle, \\'Name\\')\" placeholder=\"This will be the title of the {{vm.form.instanceType}} {{vm.altLabel}}\" required=\"true\"></super-input-text> </div> <div class=\"field-group emp-initiate-control-field\" ng-if=\"vm.form.instanceType === \\'form\\'\"> <super-input-checkbox model=\"vm.form.isEmployeeInitiated\" label=\"Employees can start this {{vm.form.instanceType}} {{vm.altLabel}} without admin assistance\"></super-input-checkbox> <p ng-if=\"vm.form.instanceType === \\'form\\'\" class=\"help-text emp-initiate-help-text\"><em>This {{vm.form.instanceType}} {{vm.altLabel}} will be available for employees to start (complete and/or submit) without admin assistance.</em></p> </div> </fieldset> <hr class=\"divider\"> <fieldset> <div class=\"field-group form-category-field\"> <super-select-list default-option-label=\"Select Category\" label=\"Category\" label-weight=\"heavy\" model=\"vm.form.category.id\" ss-validate=\"validator.required(vm.form.category.id,\\'Category\\')\" required=\"true\"> <super-select-list-item ng-repeat=\"category in routeVm.categories\" value=\"category.value\" label=\"category.name\"></super-select-list-item> </super-select-list> </div> <div ng-if=\"vm.form.instanceType === \\'form\\'\" class=\"field-group form-admin-field\"> <super-select-list label=\"{{vm.form.instanceType}} administrator\" default-option-label=\"Select Form Administrator\" label-weight=\"heavy\" model=\"vm.form.formAdministrator.formAdministratorType\" ss-validate=\"validator.required(vm.form.formAdministrator.formAdministratorType,\\'form administrator\\')\" required=\"true\"> <super-select-list-item ng-repeat=\"type in vm.formAdminTypes\" value=\"type.value\" label=\"type.name\"></super-select-list-item> </super-select-list> <p class=\"help-text form-admin-help-text\"><em>The Form Administrator can track the progress of the form.</em></p> <super-employee-search class=\"emp-search-field\" ng-if=\"vm.form.formAdministrator.formAdministratorType === formAdminEnums.specificPerson\" model=\"vm.specificAdmin\" ss-validate=\"validator.required(vm.form.formAdministrator.employeeId, \\'Employee\\')\" limit=\"1\" placeholder=\"Find Employee\"></super-employee-search> </div> </fieldset> <hr class=\"divider\"> <fieldset> <p class=\"help-text form-help-text\">These selections can also be managed through the Form Settings tab.</p> <fieldset class=\"form-create-controls\"> <super-button class=\"cancel\" label=\"Cancel\" ng-click=\"go.cancel()\"></super-button> <super-button class=\"submit\" pri label=\"Create\" type=\"submit\" ss-pending=\"vm.isCreating\" ng-disabled=\"vm.invalidConfig\"></super-button> </fieldset> </fieldset> </div> </form> </div> </section> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/my-forms/segment-content/content.html\",'<div class=\"segment-my-forms-content\"> <div class=\"gd-row forms-list-filter-group\"> <div class=\"forms-list-filter-tabs\"> <ul> <li ng-class=\"{\\'is-selected\\': vm.selectedFilter === \\'current\\'}\" ng-click=\"go.filter(\\'current\\')\">current forms <span class=\"count-display filter-count\" ng-bind=\"vm.currentCount\"></span></li> <li ng-class=\"{\\'is-selected\\': vm.selectedFilter === \\'sent\\'}\" ng-click=\"go.filter(\\'sent\\')\">sent forms</li> <li ng-class=\"{\\'is-selected\\': vm.selectedFilter === \\'completed\\'}\" ng-click=\"go.filter(\\'completed\\')\">completed Forms</li> </ul> <ul> <li ss-permitted=\"formTemplates.startForMyself\" ss-icon-before=\"mail-forward\" ng-class=\"{\\'is-selected\\': vm.selectedFilter === \\'initiate\\'}\" ng-click=\"go.filter(\\'initiate\\')\">forms i can start</li> </ul> </div> </div> <cmp-form-list-group ng-if=\"vm.selectedFilter === \\'current\\'\" type=\"current\" search=\"routeVm.search\" endpoint=\"go.getCurrentForms()\" count=\"vm.currentCount\" filter=\"vm.selectedFilter\"></cmp-form-list-group> <cmp-form-list-group ng-if=\"vm.selectedFilter === \\'sent\\'\" type=\"sent\" search=\"routeVm.search\" endpoint=\"go.getSentForms()\" count=\"null\" filter=\"vm.selectedFilter\"></cmp-form-list-group> <cmp-form-list-group ng-if=\"vm.selectedFilter === \\'completed\\'\" type=\"completed\" search=\"routeVm.search\" endpoint=\"go.getCompletedForms()\" count=\"null\" filter=\"vm.selectedFilter\"></cmp-form-list-group> <cmp-emp-initiated-template ng-if=\"vm.selectedFilter === \\'initiate\\'\" type=\"initiate\" search=\"routeVm.search\" endpoint=\"go.getInitiatedForms()\" filter=\"vm.selectedFilter\"></cmp-emp-initiated-template> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/my-forms/segment-header/header.html\",'<div class=\"segment-my-forms-header\"> <div class=\"gd-70p\"> <h1 class=\"page-title\">My Forms</h1> </div> <div class=\"gd-30p\"> <super-input-text size=\"large\" debounce=\"750\" ss-icon=\"search\" model=\"routeVm.search\">Find Form or Packet</super-input-text> </div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/send/segment-content/content.html\",'<div class=\"segment-send-content\"> <section class=\"gd-row\"> <header class=\"gd-25p\"> <h3>FORM DETAILS</h3> </header> <div class=\"gd-60p\"> <div class=\"gd-50p form-sender\"> <div class=\"label\">Form Sender</div> <div ng-class=\"{\\'pending\\' : vm.loadingFormSender}\" ng-bind=\"vm.resolvedFormSender\" data-cy=\"form-sender\"></div> </div> <div class=\"gd-50p form-administrator\" ng-if=\"vm.isForm\"> <div class=\"label\">Form Administrator</div> <div ng-bind=\"vm.formAdministrator\"></div> </div> </div> </section> <section class=\"gd-row\"> <header class=\"gd-25p\"> <h3>EFFECTIVE DATE</h3> </header> <div class=\"gd-60p\"> <p class=\"effective-date-instruction\">You can use an ‘as-of’ date to determine an employee’s information on a form.<br><em>Example: Employee information (assignment, etc.) for this form should be based on employee record data as of August 1.</em></p> <super-input-checkbox label=\"Select an effective date to determine employee information\" model=\"vm.useEffectiveDating\"></super-input-checkbox> <p><super-input-datepicker model=\"vm.asOf\" ng-if=\"vm.useEffectiveDating\"></super-input-datepicker></p> <super-button pri label=\"Export\" ng-disabled=\"!routeVm.postData.recipients.length && !routeVm.postData.bulkRecipients.length\" ng-click=\"go.export()\" ss-pending=\"vm.exporting\"></super-button> </div> </section> <section class=\"gd-row\"> <header class=\"gd-25p\"> <h3>EMPLOYEE(S)</h3> </header> <div class=\"gd-60p\"> <p>\"Who\" the form is about; information from their employee record will auto-populate certain form fields.</p> <super-employee-search placeholder=\"Add an employee by name\" model=\"routeVm.postData.recipients\" status-types=\"1\" use-pill=\"true\" query-limit=\"50\" data-qa=\"add-employee-single\" include-active-only-status-filter=\"true\">Add an employee by name</super-employee-search> <cmp-multiple-employee-search model=\"routeVm.postData.bulkRecipients\" exclusions=\"routeVm.postData.exclusions\" label=\"Need to send to a group of employees?\"></cmp-multiple-employee-search> </div> </section> <section class=\"gd-row\"> <header class=\"gd-25p\"> <h3>DUE DATE FOR EMPLOYEE(S)</h3> </header> <div class=\"gd-60p\"> <p ng-if=\"vm.isForm\">This date applies to the <em>Workflow Step </em>assigned to the Employee (whom the form is about). This is not a due date for the form as a whole.</p> <p ng-if=\"vm.isPacket\">This date applies to the <em>Workflow Step</em>(in each form) assigned to Employee (whom the forms are about). This is not a due date for the packet as a whole.</p> <ul> <li> <super-input-radio model=\"vm.hasSubmissionDueDate\" value=\"false\" label=\"No Due Date\"></super-input-radio> </li> <li> <super-input-radio model=\"vm.hasSubmissionDueDate\" value=\"true\" label=\"Employee submission due by\"> </super-input-radio> <super-input-datepicker name=\"submissionDueDate\" options=\"vm.datePickerOptions\" model=\"routeVm.postData.submissionDueDate\" is-disabled=\"vm.hasSubmissionDueDate === \\'false\\'\"> </super-input-datepicker> </li> </ul> </div> </section> <section class=\"gd-row packet-email-preview\" ng-if=\"vm.isPacket\"> <header class=\"gd-25p\"> <h3>PACKET EMAIL PREVIEW</h3> </header> <div class=\"gd-60p\"> <dl class=\"packet-email-meta\"> <div> <dt>From:&nbsp;</dt> <dd>do-not-reply@frontlineed.com</dd> </div> <div> <dt>Subject:&nbsp;</dt> <dd ng-bind=\"vm.item._startupEmail.subject || \\'A packet is ready for you\\'\"></dd> </div> </dl> <div class=\"step-notification-message-group\"> <p class=\"message-preview-header\"><i>\"Packet Ready\"</i> email message preview:</p> <div class=\"message-preview-body\"> <p class=\"message-prefix\"><i ng-bind=\"vm.item._startupEmail.notificationPrefix\"></i></p> <div class=\"form-list-wrapper\" ss-pending=\"vm.loadingPacket\" ng-class=\"{\\'add-height\\' : vm.loadingPacket}\"> <ul class=\"forms-list\"> <li class=\"forms-list-item\" ng-repeat=\"form in vm.item.forms\"><i ng-bind=\"form._name\"></i></li> </ul> </div> <p ng-if=\"vm.item._startupEmail.useStartupEmail\"><i ng-bind=\"vm.item._startupEmail.message\"></i></p> <small class=\"message-suffix\"><i ng-bind=\"vm.item._startupEmail.notificationSuffix\"></i></small> </div> </div> </div> </section> <section class=\"gd-row\" ng-if=\"vm.isForm\"> <header class=\"gd-25p\"> <h3><strong>Form Workflow & Notifications</strong></h3> </header> <div class=\"gd-60p details\"> <ul class=\"form-step-list\"> <li class=\"form-step\" ng-repeat=\"step in vm.item._steps track by $index\"> <div class=\"form-step-group\"> <h4 ng-if=\"!$last\">Workflow Step {{$index + 1}}<span ng-if=\"step._name\">&nbsp;-&nbsp;{{::step._name}}</span></h4> <h4 ng-if=\"$last\">Form & Workflow Complete Step</h4> </div> <div class=\"form-step-group\" ng-if=\"!$last\"> <dl class=\"form-step-meta\"> <div> <dt>Step Participant</dt> <dd ng-bind=\"step.resolvedParticipant\" data-cy=\"step-meta-step-participant\"></dd> </div> <div> <dt>Step Action</dt> <dd data-cy=\"step-meta-step=-action\">{{step._stepAction | enumByValue: \\'stepAction\\'}}</dd> </div> </dl> </div> <div class=\"form-step-group step-notification-message-group\" ng-if=\"!$last\"> <p class=\"message-preview-header\"><i>\"Step Ready\"</i> email message preview:</p> <div class=\"message-preview-body\"> <p class=\"message-prefix\"><i ng-bind=\"step._notificationPrefix\"></i></p> <p ng-if=\"step._notificationBody.length\"><i ng-bind=\"step._notificationBody\"></i></p> <small class=\"message-suffix\"><i ng-bind=\"step._notificationSuffix\"></i></small> </div> </div> <div ng-if=\"!$last && step.showResendMessage\" class=\"form-step-group step-notification-message-group\"> <p class=\"message-preview-header\"><i>\"Step Resent\"</i> email message preview:</p> <div class=\"message-preview-body\"> <p class=\"message-prefix\"><i ng-bind=\"step._notificationPrefix\"></i></p> <p ng-if=\"step._resendNotificationBody.length\"><i ng-bind=\"step._resendNotificationBody\"></i></p> <small class=\"message-suffix\"><i ng-bind=\"step._notificationSuffix\"></i></small> </div> </div> <div class=\"form-step-group\" ng-if=\"!$last && step._stepParticipant.participantType === vm.recipient && vm.hasSubmissionDueDate && routeVm.postData.submissionDueDate != null\"> <p class=\"gd-100p due-date\" ss-icon=\"calendar-o\">This step due on {{routeVm.postData.submissionDueDate | date:\\'MM/dd/yyyy\\'}}</p> </div> <div class=\"form-step-group\" ng-if=\"$last\"> <p>Sender will be notified</p> </div> </li> </ul> </div> </section> <section class=\"gd-row packet-detail-preview\" ng-if=\"vm.isPacket\" data-qa=\"forms-in-packet\"> <header class=\"gd-25p\"> <h3><strong>packet detail review </strong><em>\"Form Complete\" emails to sender are suppressed for forms in packets.</em></h3> </header> <div class=\"gd-60p packet-detail-preview-wrapper\" ss-pending=\"vm.loadingPacket\" ss-pending-status=\"\\'loading packet...\\'\"> <ul class=\"gd-70p forms-list\"> <li class=\"forms-list-item\" ng-repeat=\"form in vm.item.forms\" data-qa=\"form-{{ form.id }}\"> <h4><a href=\"/ec-forms/form-builder/{{form.id}}/preview\" ng-bind=\"form._name\"></a></h4> <ul class=\"form-meta-info ss-pipe-children\"> <li class=\"form-meta-item\">Workflow ({{form.steps.length}} Steps) <super-popover> <div> <h6>Workflow <ng-pluralize count=\"form.steps.length\" when=\"{\\'1\\': \\'Step\\', \\'other\\': \\'Steps\\'}\"></ng-pluralize></h6> <ul class=\"popover-step-list\"> <li ng-repeat=\"step in form.steps\"> <span ng-bind=\"{{$index + 1}}\"></span>) <span class=\"ss-pipe-right\" ng-bind=\"step._stepParticipant.participantType | enumByValue:\\'stepParticipantType\\'\"></span><span ng-bind=\"step._stepAction | enumByValue:\\'stepAction\\'\"></span> </li> </ul> </div> </super-popover> </li> <li class=\"form-meta-item\">Modified {{form._modifiedDt | date:\\'MM/dd/yyyy\\'}} <span ng-if=\"form._modifier.name\">by {{form._modifier.name}}</span></li> </ul> </li> <li class=\"forms-list-item final-step\" ng-if=\"!vm.loadingPacket\"> <h4>Packet Complete</h4> <p>Sender will be notified</p> </li> </ul> </div> </section> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/send/segment-header/header.html\",'<div class=\"segment-send-header gd-row\"> <div class=\"batch-status-group ss-panel\"> <ul class=\"batch-list\" ng-style=\"vm.batchStyles\"> <li class=\"batch-list-item\" ng-repeat=\"batch in vm.batches\"> <cmp-form-send-status org=\"routeVm.org\" form=\"vm.item\" batch=\"batch\" on-complete=\"go.removeBatch(batch)\" data-qa=\"batch-list-item\"></cmp-form-send-status> </li> </ul> </div> <div class=\"send-control-group\"> <div class=\"form-control-title gd-70p\"> <h2 class=\"form-title\" ng-bind=\"vm.item._name\" data-qa=\"form-name-page-title\"></h2> </div> <div class=\"form-control-actions\"> <super-button pri label=\"Preview Form &amp; Workflow\" ng-click=\"go.preview(vm.item)\" ng-if=\"vm.isForm\" ng-disabled=\"vm.isSending\" data-qa=\"form-preview-button\"></super-button> <super-button pri label=\"{{vm.isPacket?\\'Send Packet\\':\\'Send Form\\'}}\" type=\"submit\" ng-disabled=\"(!routeVm.postData.recipients.length && !routeVm.postData.bulkRecipients.length) || vm.isSending\" ss-pending=\"vm.sending\" data-qa=\"send-form-button\"></super-button> </div> </div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/packet-builder/builder/builder.html\",'<route folder=\"/packet-builder/builder\"> <segment name=\"builder\"></segment> </route>')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/packet-builder/segment-content/content.html\",'<div class=\"segment-packet-builder-content\" aria-label=\"packet builder section\"> <ui-view id=\"packet-builder\" aria-controlled-by=\"content-nav\"></ui-view> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/packet-builder/segment-header/header.html\",'<header class=\"segment-packet-builder-header\"> <div class=\"gd-row form-title-actions-group\"> <div class=\"gd-85p form-title-group\" aria-label=\"packet name section\"> <div class=\"icon\"><i ss-icon-before=\"li-packet-large\" role=\"presentation\"></i></div> <div class=\"form-name\"> <fieldset> <div class=\"form-title-ctrl\" ng-class=\"{\\'is-editing\\' : vm.editTitle}\"> <span ng-if=\"!vm.editTitle\" class=\"title\" ng-bind=\"vm.formTitle\" title=\"{{vm.formTitle}}\"></span> <super-input-text title=\"{{vm.formTitle}}\" id=\"formTitle\" model=\"vm.formTitle\" ng-if=\"vm.editTitle\" ss-validate=\"validator.required(vm.formTitle, \\'packet name\\')\" required=\"true\"></super-input-text> </div> </fieldset> <div class=\"form-title-edit-actions\"> <button type=\"button\" ng-if=\"!vm.editTitle\" class=\"edit\" ss-icon=\"pencil\" ng-click=\"go.editTitle()\" aria-label=\"edit the form name\"></button> <button type=\"button\" ng-if=\"vm.editTitle\" class=\"save\" ss-icon=\"check-circle\" ng-click=\"go.confirmTitleEdit()\" ng-disabled=\"!vm.formTitle.length\" aria-label=\"save the form name\"></button> <button type=\"button\" ng-if=\"vm.editTitle\" class=\"cancel\" ss-icon=\"times\" ng-click=\"go.cancelTitleEdit()\" aria-label=\"cancel edit for form name\"></button> </div> <div class=\"form-status\"><strong ng-bind=\"vm.packetStatusLabel\"></strong></div> </div> </div> <div class=\"gd-15p form-control-actions\" aria-label=\"packet save amd activate section\"> <fieldset> <div class=\"form-save\"> <strong ng-if=\"vm.autoSaved\" class=\"auto-saved\">Auto Saved</strong> <super-button class=\"save-button\" pri label=\"{{routeVm.saving ? \\'Saving\\' : \\'Save Packet\\'}}\" type=\"submit\" ng-class=\"{\\'saving\\': routeVm.saving}\" ng-disabled=\"vm.nothingToSave || routeVm.saving\" ss-icon=\"spinner\"></super-button> </div> </fieldset> </div> </div> <nav id=\"content-nav\" aria-controls=\"packet-builder\"> <super-tab-list class=\"flat\"> <super-tab-list-item label=\"Packet Builder\" state=\"base.packetBuilder.Builder\"></super-tab-list-item> <super-tab-list-item label=\"Packet Settings\" state=\"base.packetBuilder.Settings\"></super-tab-list-item> </super-tab-list> </nav> </header> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/packet-builder/settings/settings.html\",'<route folder=\"/packet-builder/settings\"> <segment name=\"settings\"></segment> </route>')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/form-builder/builder/segment-builder/builder.html\",'<div class=\"segment-form-builder-builder-builder\"> <ol ng-if=\"!formVm.loading\" class=\"fb-form-list\"> <li class=\"fb-form-list-item\"> <ol class=\"fb-step-list\" ng-class=\"{\\'fb-dragging-fields\\': routeVm.draggingFields}\" dnd-list=\"vm.steps\" dnd-allowed-types=\"[\\'stepType\\']\" dnd-drop=\"go.dropStep(event, index, item)\" ng-if=\"vm.steps.length\"> <li class=\"fb-step-list-item\" ng-click=\"go.stepSettings(step, $index)\" ng-repeat=\"step in vm.steps\" dnd-draggable=\"step\" dnd-type=\"\\'stepType\\'\" dnd-moved=\"go.movedStep($index, step)\" dnd-effect-allowed=\"move\"> <cmp-step-renderer step=\"step\" step-index=\"$index\"></cmp-step-renderer> </li> </ol> </li> <li class=\"fb-form-list-item\"> <div class=\"fb-step-add\"> <super-button ss-icon=\"plus-circle\" smp class=\"\" label=\"Add new workflow step\" ng-click=\"go.addStep()\"></super-button> </div> </li> <li class=\"fb-form-list-item fb-step-review\" ng-click=\"go.reviewStep()\" ng-mouseenter=\"vm.reviewStep.hoverState = true\" ng-mouseleave=\"vm.reviewStep.hoverState = false\" ng-if=\"vm.reviewStep\"> <div class=\"fb-step\" ng-class=\"{\\'is-hover\\': vm.reviewStep.hoverState, \\'is-selected\\': vm.selectedFormObject === vm.reviewStep}\"> <div class=\"fb-step-header\"> <h4 class=\"fb-step-title\" ng-bind=\"vm.reviewStep._name\"></h4> <div class=\"fb-actions fb-step-actions\"> <span>Properties</span> </div> </div> <ul class=\"fb-field-groups\"> <li class=\"fb-field-group fb-field-group-review\"> <i>A summary of potential employee profile updates will display here for final review when the form is sent.</i> </li> </ul> </div> </li> <li class=\"fb-form-list-item fb-step-final\" ng-click=\"go.formComplete()\" ng-mouseenter=\"vm.lastStep.hoverState = true\" ng-mouseleave=\"vm.lastStep.hoverState = false\"> <div class=\"fb-step\" ng-class=\"{\\'is-hover\\': vm.lastStep.hoverState, \\'is-selected\\': vm.selectedFormObject === vm.lastStep}\"> <div class=\"fb-step-header\"> <h4 class=\"fb-step-title\" ng-bind=\"vm.lastStep._name\"></h4> <div class=\"fb-actions fb-step-actions\"> <span>Properties</span> </div> </div> <div class=\"fb-field-groups\"> <p class=\"fb-field-group-empty\">Define what happens when the form\\'s workflow is complete.</p> </div> </div> </li> <li class=\"fb-form-list-item\"><cmp-attachments label=\"Add Attachments\"></cmp-attachments></li> </ol> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/form-builder/builder/segment-fields/fields.html\",'<div class=\"segment-form-builder-builder-fields\" ss-window-anchor window-anchor-top=\"140\"> <section class=\"form-builder-field-item\" data-qa=\"template-employee-record-fields\"> <h4 ss-toggle=\"emp-fields\" ss-toggle-start-expanded aria-controls=\"emp-fields\">Employee Record Tools<em>of who the form is about</em></h4> <ul id=\"emp-fields\" class=\"emp-fields\"> <li id=\"employee-field-{{field.fields}}\" class=\"fb-field auto-{{ field.fields }}\" ng-repeat=\"field in vm.fields.employee | filter: go.filterEmployeeRecordTools\" dnd-draggable=\"field\" dnd-effect-allowed=\"copy\" dnd-type=\"\\'fieldType\\'\" dnd-disable-if=\"!field.allowMultiple && routeVm.added[field.fields]\" dnd-dragstart=\"routeVm.draggingFields = true\" dnd-dragend=\"routeVm.draggingFields = false\" ng-class=\"{disabled: !field.allowMultiple && routeVm.added[field.fields]}\">{{field.label}}</li> </ul> </section> <section class=\"form-builder-field-item\" data-qa=\"template-custom-fields\"> <h4 ss-toggle=\"custom-fields\" ss-toggle-start-expanded aria-controls=\"custom-fields\">Custom Tools</h4> <ul id=\"custom-fields\" class=\"custom-fields\"> <li id=\"custom-field-{{field.fields}}\" class=\"fb-field auto-{{ field.fields }}\" ng-repeat=\"field in vm.fields.custom | filter: go.filterEmployeeRecordTools | orderBy: \\'label\\'\" dnd-draggable=\"field\" dnd-dragstart=\"routeVm.draggingFields = true\" dnd-dragend=\"routeVm.draggingFields = false\" dnd-effect-allowed=\"copy\" dnd-type=\"\\'fieldType\\'\">{{field.label}}</li> </ul> </section> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/form-builder/builder/segment-properties/properties.html\",'<div class=\"segment-form-builder-builder-properties\" ss-window-anchor> <div class=\"view-props sidebar\"></div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/form-builder/overlay-builder/segment-overlay/overlay.html\",'<div class=\"segment-form-builder-overlay-builder-overlay\" aria-label=\"overlay builder\"> <header class=\"gd-row\"> <div class=\"gd-75p uploader\"> <div ng-if=\"!vm.processing && !routeVm.formTemplate._hasPrintPreviewDefinition\"> <h4>Add a file to the builder:</h4> <div class=\"upload-action-group\"> <button class=\"add-attachment super-button std upload\" value=\"\" title=\"Upload PDF\"><label>Upload PDF</label></button> <input class=\"btn\" id=\"underlay-uploader\" type=\"file\" nv-file-select name=\"fileUpload\" uploader=\"uploader\"> </div> </div> <div ng-if=\"!vm.processing && routeVm.formTemplate._hasPrintPreviewDefinition\"> <label class=\"file-name\" ng-bind=\"vm.file._filename\" title=\"{{ vm.file._filename }}\"></label> <super-button label=\"Remove\" ss-icon=\"trash-o\" ng-click=\"go.remove()\" ng-show=\"vm.explodedImageUrls.length\"> </super-button> </div> </div> <div ng-show=\"!vm.processing && routeVm.formTemplate._hasPrintPreviewDefinition\" class=\"gd-25p pager\"> <button class=\"prev\" type=\"button\" value=\"Previous\" ng-click=\"go.previousPage()\" ng-disabled=\"vm.currentPage === 1\" ss-icon=\"chevron-left\"></button> <span class=\"page\">Page {{ vm.currentPage }} of {{ vm.explodedImageUrls.length; }}</span> <button class=\"next\" type=\"button\" value=\"Next\" ng-click=\"go.nextPage()\" ng-disabled=\"vm.currentPage === vm.explodedImageUrls.length\" ss-icon=\"chevron-right\"></button> </div> </header> <div class=\"mapping-canvas\" ng-class=\"{\\'box-selected\\': routeVm.selectedBox != null}\" ng-click=\"routeVm.selectedBox = null\" ss-pending=\"vm.processing\" ss-pending-status=\"vm.processingStatus\"> <div ng-show=\"!vm.processing && routeVm.formTemplate._hasPrintPreviewDefinition\"> <cmp-overlay-builder-toolbox ss-window-anchor> </cmp-overlay-builder-toolbox> <cmp-box-resizer ng-repeat=\"data in vm.data\" box=\"data\" text=\"data.templateString\" is-active=\"data === routeVm.selectedBox\" is-drawing=\"data === vm.drawingBox\" ng-class=\"{selected: data === routeVm.selectedBox}\" ng-mousedown=\"go.selectBox(data, $event)\" ng-click=\"go.selectBox(data, $event)\" on-delete=\"go.removeBox(data)\" title=\"{{ data.templateString || data.matchValue }}\"></cmp-box-resizer> <cmp-box-creator starting-point=\"vm.newBoxStartingPoint\" box-created=\"go.createdBox($box)\"> </cmp-box-creator> <canvas ng-style=\"{{ go.calculateImageWidth() }}\"></canvas> <ul class=\"pages\"> <li ng-repeat=\"img in vm.explodedImageUrls\" ng-class=\"{\\'visible\\': vm.currentPage === $index+1}\"> <img ng-show=\"vm.currentPage === $index+1\" cross-origin=\"anonymous\" ng-src=\"{{ img }}\" class=\"bg-image\" ng-style=\"{{ go.calculateImageWidth() }}\"> </li> </ul> </div> </div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/form-builder/overlay-builder/segment-data-panel/data-panel.html\",'<div class=\"segment-form-builder-overlay-builder-data-panel\" aria-label=\"print view builder data\"> <div class=\"steps\" ng-show=\"routeVm.formTemplate._printPreviewDefinition && routeVm.formTemplate._printPreviewDefinition.templateFileId\"> <section class=\"step-panel\" ng-repeat=\"step in vm.steps\"> <div class=\"step-panel-header\"> <h4 class=\"step-title\" ng-bind=\"step._name || \\'Workflow Step \\' + ($index + 1)\"></h4> <super-popover ng-if=\"step.hasUnmappableFields\">Some fields in this step are not displayed because they cannot be mapped to a PDF.</super-popover> </div> <cmp-step-text-display step=\"step\" on-load=\"go.startExpanded(group)\" ng-if=\"routeVm.selectedBox.type === \\'text\\'\"></cmp-step-text-display> <cmp-step-date-display step=\"step\" on-load=\"go.startExpanded(group)\" ng-if=\"routeVm.selectedBox.type === \\'date\\'\"></cmp-step-date-display> <cmp-step-checkbox-display step=\"step\" on-load=\"go.startExpanded(group)\" ng-if=\"routeVm.selectedBox.type === \\'checkbox\\'\"></cmp-step-checkbox-display> </section> </div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/form-builder/preview/segment-attachments/attachments.html\",'<section class=\"segment-form-builder-preview-attachments\"> <header class=\"\"> <h4 class=\"\">Attachments</h4> </header> <div class=\"main-content\"> <div class=\"pad-12\" ss-pending=\"vm.isLoading\"> <ul class=\"form-attachment-list\"> <li class=\"list-item form-attachment-item\" ng-if=\"vm.files.length && !vm.isLoading\" ng-repeat=\"attachment in vm.files\"> <i ss-icon=\"{{ attachment.icon }}\"></i> <a class=\"document\" ng-bind=\"attachment._filename\" ng-click=\"go.download(attachment._url)\" title=\"Open {{attachment._filename}}\" target=\"_blank\"></a> </li> <li class=\"list-item form-attachment-item\" ng-if=\"!vm.files.length && !vm.isLoading\">No attachments</li> </ul> </div> </div> </section> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/form-builder/preview/segment-form-workflow/form-workflow.html\",'<div class=\"segment-form-builder-preview-form-workflow\" ss-pending=\"vm.loading\"> <ul class=\"fb-step-list\"> <li class=\"fb-step-list-item\" ng-repeat=\"step in vm.steps\" ng-click=\"go.selectStep($index, step)\" id=\"fb-step-{{$index}}\" ng-mouseenter=\"step.hoverState = true\" ng-mouseleave=\"step.hoverState = false\"> <section class=\"fb-step\" ng-class=\"{\\'is-hover\\': step.hoverState, \\'is-selected\\': vm.selectedStepId === step.id}\"> <header class=\"fb-step-header\"> <h4 class=\"fb-step-title\"> <span ng-if=\"step._stepAction !== vm.stepAction.formCompleted && step._stepAction !== vm.stepAction.employeeProfileReview\">Workflow Step {{$index + 1}}</span> <span ng-if=\"step._name && step._stepAction !== vm.stepAction.formCompleted && step._stepAction !== vm.stepAction.employeeProfileReview\">&nbsp;-&nbsp;</span> <span ng-if=\"step._name\">{{step._name}}</span> </h4> <div ng-if=\"step._stepAction !== vm.stepAction.formCompleted && step._stepAction !== vm.stepAction.employeeProfileReview\"> <p class=\"fb-step-instructions\" ng-if=\"step._instructions\" ng-bind=\"step._instructions\"></p> <div class=\"fb-step-meta\"> <ul class=\"ss-pipe-children\"> <li ss-icon=\"user\" ng-bind=\"step.participantLabel\" title=\"{{step.participantLabel}}\"></li> <li ss-icon=\"wrench\">{{step._stepAction | enumByValue: \\'stepAction\\'}}</li> </ul> </div> </div> </header> <div ng-if=\"step._stepAction !== vm.stepAction.formCompleted && step._stepAction !== vm.stepAction.employeeProfileReview\"> <ul class=\"fb-field-groups\"> <li class=\"fb-field-group\" ng-repeat=\"group in step.fieldGroups\" ss-hide-when-empty> <cmp-template-field-renderer ng-repeat=\"field in group\" field=\"field\" group=\"group\" ss-hide-when-empty></cmp-template-field-renderer> </li> </ul> <footer class=\"fb-step-footer\"> <div class=\"fb-comments\"> <super-input-textarea model=\"\" label=\"Comments (visible to all participants)\"></super-input-textarea> </div> <div ng-if=\"step._stepAction === vm.stepAction.formEntry\" class=\"form-entry step-action\"> <super-button pri label=\"Submit Form\"></super-button> </div> <div ng-if=\"step._stepAction === vm.stepAction.reviewForm\" class=\"review-form step-action\"> <super-button pri label=\"Form Has Been Reviewed\"></super-button> </div> <div ng-if=\"step._stepAction === vm.stepAction.reviewApproveOrDeny\" class=\"approve-deny step-action\"> <super-button pri label=\"Approve Form\"></super-button> <super-button neg label=\"Deny Form\"></super-button> </div> </footer> </div> </section> </li> </ul> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){\ne.put(\"routes/form-builder/preview/segment-page-header/page-header.html\",'<header class=\"segment-form-builder-preview-page-header\"> <div class=\"page-header-group\"> <div class=\"app-title\"><h1>Frontline Central</h1></div> <div class=\"title\"><h2>Form Preview</h2></div> <div class=\"close\"> <super-button label=\"Close Preview\" ng-click=\"go.close()\"></super-button> </div> </div> <div class=\"form-header-group\"> <div class=\"form-meta-group\"> <h2 ss-icon=\"li-form-large\" class=\"form-name\" ng-bind=\"vm.form._name\" data-qa=\"form-template-title\"></h2> <ul class=\"form-meta ss-pipe-children\"> <li class=\"form-meta-item status\" ng-bind=\"vm.formStatusLabel\"></li> <li class=\"form-meta-item\"><abbr class=\"form-instance-version\" title=\"version {{routeVm.formTemplate._templateVersion || 1}}\">v{{routeVm.formTemplate._templateVersion || 1}}</abbr></li> <li class=\"form-meta-item modified\">{{vm.modifiedDate}}</li> </ul> </div> <div class=\"form-display-toggle-group\" ng-if=\"routeVm.hasPDFOverlay\"> <div class=\"form-display-toggle-control-group\"> <super-button ng-class=\"{active: !routeVm.showPDFOverlay}\" ng-click=\"go.toggleFormView(showPDF = false)\" label=\"Web Form\" smp></super-button> <super-button ng-class=\"{active: routeVm.showPDFOverlay}\" ng-click=\"go.toggleFormView(showPDF = true)\" label=\"PDF Overlay\" smp></super-button> </div> </div> </div> </header> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/form-builder/preview/segment-steps-summary/steps-summary.html\",'<section class=\"segment-form-builder-preview-steps-summary\"> <header class=\"\"> <h4 class=\"\">Form Workflow</h4> </header> <div class=\"main-content\"> <div ss-pending=\"vm.loading\"> <ul class=\"fb-steps-summary\"> <li class=\"fb-summary-step\" ng-class=\"{\\'is-hover\\': step.hoverState, \\'is-selected\\': vm.selectedStepId === step.id}\" ng-repeat=\"step in vm.steps\" ng-mouseenter=\"step.hoverState = true\" ng-mouseleave=\"step.hoverState = false\" ng-click=\"go.selectStep($index, step)\" ng-if=\"!vm.loading\"> <h4 class=\"step-heading\">Workflow Step {{$index + 1}}<span ng-if=\"step._name\">&nbsp;-&nbsp;{{step._name}}</span></h4> <dl class=\"step-summary-list pad-12\" ng-show=\"vm.selectedStepId === step.id\"> <dt>main participant:</dt> <dd> <ul class=\"fb-step-meta\"> <li class=\"list-row\" ss-icon=\"user\"> <span ng-if=\"step.participantLabel.length\" title=\"{{step.participantLabel}}\">{{step.participantLabel}}</span> <em ng-if=\"!step.participantLabel.length\">no participant selected</em> </li> <li class=\"list-row\"> <ul class=\"ss-pipe-children\"> <li class=\"\" ss-icon=\"wrench\"> <span ng-if=\"step.stepActionLabel.length\">{{step.stepActionLabel}}</span> <em ng-if=\"!step.stepActionLabel.length\">no action chosen</em> </li> <li class=\"\" ss-icon=\"key\" ng-if=\"step.participantPermission.length\" ng-bind=\"step.participantPermission\"> </li> </ul> </li> </ul> </dd> <dt>other participants:</dt> <dd> <ul class=\"fb-step-meta\"> <li ng-if=\"step.otherParticipants.length\" class=\"list-row\" ng-repeat=\"others in step.otherParticipants\"> <ul class=\"ss-pipe-children\"> <li ss-icon=\"user\" ng-show=\"others.name.length\" ng-bind=\"others.name\" title=\"{{others.name}}\"></li> <li ss-icon=\"key\" ng-bind=\"others.permissions.length ? others.permissions : \\'No Access\\'\"></li> </ul> </li> <li ng-if=\"!step.otherParticipants.length\"><em>no additional participants</em></li> </ul> </dd> <dt>Actions:</dt> <dd ng-if=\"step.eventDetails.length\" ng-repeat=\"event in step.eventDetails\"> <dl class=\"step-summary-sub-list\"> <dt ss-icon=\"envelope-o\">{{ event.title }}</dt> <dd ng-repeat=\"action in event.actions track by $index\">- {{ action }}</dd> </dl> </dd> <dd class=\"event-actions\" ng-if=\"!step.eventDetails.length\"><em>no additional actions</em></dd> </dl> </li> <li class=\"fb-summary-step fb-step-review\" ng-class=\"{\\'is-hover\\': vm.reviewStep.hoverState, \\'is-selected\\': vm.selectedStepId === vm.reviewStep.id}\" ng-if=\"vm.reviewStep\" ng-mouseenter=\"vm.reviewStep.hoverState = true\" ng-mouseleave=\"vm.reviewStep.hoverState = false\" ng-click=\"go.selectStep(\\'review\\', vm.reviewStep)\"> <h4 class=\"step-heading\">Review Profile Updates</h4> <dl class=\"step-summary-list pad-12\" ng-show=\"vm.selectedStepId === vm.reviewStep.id\"> <dt>main participant:</dt> <dd> <ul class=\"fb-step-meta\"> <li class=\"list-row\" ss-icon=\"user\"> <span ng-if=\"vm.reviewStep.participantLabel.length\">{{vm.reviewStep.participantLabel}}</span> <em ng-if=\"!vm.reviewStep.participantLabel.length\">no participant selected</em> </li> <li class=\"list-row\"> <ul class=\"ss-pipe-children\"> <li class=\"\" ss-icon=\"wrench\"> <span ng-if=\"vm.reviewStep.stepActionLabel.length\">{{vm.reviewStep.stepActionLabel}}</span> <em ng-if=\"!vm.reviewStep.stepActionLabel.length\">no action chosen</em> </li> <li class=\"\" ss-icon=\"key\" ng-if=\"vm.reviewStep.participantPermission.length\" ng-bind=\"vm.reviewStep.participantPermission\"> </li> </ul> </li> </ul> </dd> <dt>Actions:</dt> <dd ng-if=\"vm.reviewStep.eventDetails.length\" ng-repeat=\"event in vm.reviewStep.eventDetails\"> <dl class=\"step-summary-sub-list\"> <dt ss-icon=\"envelope-o\">{{ event.title }}</dt> <dd ng-repeat=\"action in event.actions track by $index\">- {{ action }}</dd> </dl> </dd> <dd class=\"event-actions\" ng-if=\"!vm.reviewStep.eventDetails.length\"><em>no additional actions</em></dd> </dl> </li> <li class=\"fb-summary-step fb-step-final\" ng-class=\"{\\'is-hover\\': vm.finalStep.hoverState, \\'is-selected\\': vm.selectedStepId === vm.finalStep.id}\" ng-mouseenter=\"vm.finalStep.hoverState = true\" ng-mouseleave=\"vm.finalStep.hoverState = false\" ng-click=\"go.selectStep(\\'final\\', vm.finalStep)\"> <h4 class=\"step-heading\">Form &amp; Workflow Complete</h4> <div ng-show=\"vm.selectedStepId === vm.finalStep.id\"> <dl class=\"step-summary-list pad-12\"> <dt ng-if=\"vm.finalStep.employeeRecord\" ss-icon=\"copy\">copy to personnel document category:</dt> <dd ng-if=\"vm.finalStep.employeeRecord\" ng-bind=\"vm.finalStep.employeeRecord\"></dd> <dt ng-if=\"vm.finalStep.eventDetails.length\" ss-icon=\"envelope-o\">{{ vm.finalStep.eventDetails[0].title }}</dt> <dd ng-if=\"vm.finalStep.eventDetails.length\" ng-repeat=\"action in vm.finalStep.eventDetails[0].actions\">- {{ action }}</dd> <dt ng-if=\"!vm.finalStep.employeeRecord && !vm.finalStep.eventDetails.length\">Actions: </dt> <dd ng-if=\"!vm.finalStep.employeeRecord && !vm.finalStep.eventDetails.length\"><em>no additional actions</em></dd> </dl> </div> </li> </ul> </div> </div> </section> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/form-builder/settings/segment-settings/settings.html\",'<div class=\"segment-form-builder-settings-settings\"> <section class=\"gd-row template-details\"> <header class=\"gd-25p\"> <h4>Template Details</h4> </header> <div class=\"gd-60p\"> <div class=\"gd-row\"> <p>This information determines who can access the form template as well as track a form after it has been sent.</p> </div> <div class=\"gd-row settings-allow-employee-initiate\"> <super-input-checkbox label=\"Allow employees to initiate this form template\" required model=\"vm.form._isEmployeeInitiated\"></super-input-checkbox> <small class=\"inset\">This template will be available for employees to start (complete and/or submit) without admin assistance.</small> </div> <div class=\"gd-row settings-category\"> <super-select-list model=\"vm.form._category.id\" label=\"Category\" required=\"true\" ss-validate=\"validator.required(vm.form._category.id, \\'Category\\')\"> <super-select-list-item ng-repeat=\"category in vm.categories\" value=\"category.value\" label=\"category.name\"></super-select-list-item> </super-select-list> </div> <div class=\"gd-row settings-form-administrator\"> <super-select-list label=\"Form Administrator (can track progress of the form)\" model=\"vm.form._formAdministrator.formAdministratorType\" default-option-label=\"Select Form Administrator\" required=\"true\" ss-validate=\"validator.required(vm.form._formAdministrator.formAdministratorType, \\'Form Administrator\\')\"> <super-select-list-item ng-repeat=\"item in vm.formAdminList\" value=\"item.value\" label=\"item.name\"></super-select-list-item> </super-select-list> </div> <div class=\"gd-row settings-specific-employee\" ng-if=\"vm.form._formAdministrator.formAdministratorType === 3\"> <super-employee-search id=\"form-admin-employee-search\" model=\"vm.specificEmployeeHolder\" limit=\"1\" use-pill=\"false\" placeholder=\"Find Employee\" ss-validate=\"validator.required(vm.form._formAdministrator.employeeId, \\'Specific person\\')\"> </super-employee-search> </div> </div> </section> <section class=\"gd-row step\" ng-repeat=\"step in vm.steps\"> <header class=\"gd-25p\"> <h4 data-qa=\"step-name\"><span class=\"step-name-prefix\">Workflow Step {{$index+1}}</span><span ng-if=\"step._name\" class=\"step-name-custom\"> - {{::step._name}}</span></h4> </header> <div class=\"gd-60p\"> <dl class=\"gd-row step-properties-group\"> <div class=\"gd-50p\"> <dt>Step Participant</dt> <dd data-qa=\"step-participant\" ng-bind=\"step.participantLabel\" title=\"{{step.participantLabel}}\"></dd> </div> <div class=\"gd-50p\"> <dt>Step Action</dt> <dd data-qa=\"step-action\">{{step._stepAction | enumByValue: \\'stepAction\\'}}</dd> </div> </dl> <div class=\"step-notification-message-group\" data-qa=\"step-ready-message-group\"> <p class=\"message-preview-header\"><i>\"Step Ready\"</i> Email Message Preview:</p> <div class=\"message-preview-body\"> <p class=\"message-prefix\"><i ng-bind=\"step._notificationPrefix\"></i></p> <super-input-textarea ng-if=\"step._useCustomNotification\" model=\"step._notificationBody\" placeholder=\"Type optional custom message here\" id=\"step-ready-message-{{step.id}}\"></super-input-textarea> <div><small class=\"message-suffix\"><i ng-bind=\"step._notificationSuffix\"></i></small></div> </div> <super-input-checkbox class=\"add-step-message\" model=\"step._useCustomNotification\" aria-controls=\"step-ready-message-{{step.id}}\"></super-input-checkbox><label>Add Custom Message</label> </div> <div ng-if=\"step.showResendMessage\" class=\"step-notification-message-group\" data-qa=\"step-resent-message-group\"> <hr class=\"divider\"> <p class=\"message-preview-header\"><i>\"Step Resent\"</i> Email Message Preview:</p> <div class=\"message-preview-body\"> <p class=\"message-prefix\"><i ng-bind=\"step._notificationPrefix\"></i></p> <super-input-textarea ng-if=\"step._useCustomResendNotification\" model=\"step._resendNotificationBody\" placeholder=\"Type optional custom message here\" id=\"step-resent-message-{{step.id}}\"></super-input-textarea> <div><small class=\"message-suffix\"><i ng-bind=\"step._notificationSuffix\"></i></small></div> </div> <super-input-checkbox class=\"add-step-message\" model=\"step._useCustomResendNotification\" aria-controls=\"step-resent-message-{{step.id}}\"></super-input-checkbox><label>Add Custom Message</label> </div> </div> </section> <section ng-if=\"vm.lastStepText.length\"> <h4>Form Complete</h4> <p>{{vm.lastStepText}}</p> </section> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/inbox/form-instance/segment-attachments/attachments.html\",'<section class=\"segment-inbox-form-instance-attachments\"> <header class=\"\"> <h4 class=\"\">Attachments</h4> </header> <main class=\"main-content\" ss-pending=\"vm.loading\"> <div class=\"pad-12\"> <ul class=\"form-attachment-list\" ng-if=\"vm.files.length && !vm.loading\"> <li class=\"list-item form-attachment-item\" ng-repeat=\"attachment in vm.files\"> <i ss-icon=\"{{ attachment.icon }}\"></i> <a class=\"document\" ng-bind=\"attachment._filename\" ng-click=\"go.download(attachment)\" title=\"Open {{attachment._filename}}\" target=\"_blank\"></a> </li> </ul> <p class=\"\" ng-if=\"!vm.files.length && !vm.loading\">No attachments</p> </div> </main> </section>')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/inbox/form-instance/segment-form/form.html\",'<div class=\"segment-inbox-form-instance-form\" ss-pending=\"vm.loading\"> <form autocomplete=\"off\" ss-validate-form ng-submit=\"go.submitForm(vm.selectedStep)\"> <ul class=\"fb-steps\"> <li class=\"fb-step\" ng-class=\"{\\'is-hover\\': step.hoverState,\\'is-selected\\': vm.selectedStep === step}\" ng-repeat=\"step in vm.steps\" ng-click=\"go.selectFormObject($index, step)\" ng-if=\"!vm.loading && vm.steps\" data-qa=\"step-{{ step.id }}\" ng-keypress=\"$event.stopPropagation()\" id=\"fb-step-{{$index}}\"> <fieldset ng-disabled=\"step.disabled\" ng-if=\"step._stepAction !== vm.employeeProfileReview\"> <div class=\"fb-step-header\"> <h4 class=\"fb-step-title\" data-qa=\"step-title\">Workflow Step {{$index + 1}} <span ng-if=\"step._name\">- {{step._name}}</span></h4> <p ng-if=\"step._instructions\" ng-bind=\"step._instructions\" data-qa=\"step-instructions\"></p> </div> <ul class=\"fb-fields\"> <li class=\"fb-field\" ng-repeat=\"group in step.fieldGroups\" ng-click=\"go.fieldGroupSettings($event, group)\"> <ul><li> <cmp-field-renderer ng-repeat=\"field in group\" field=\"field\" group=\"group\" org=\"routeVm.org\" ignore-validations=\"go.ignoreValidations(step, vm.selectedStep)\" ng-style=\"{width: field.config.width}\"></cmp-field-renderer> </li></ul> </li> </ul> <div class=\"actions\"> <super-input-textarea label=\"Comments - Visible to all participants\" model=\"step.instance._stepComments\" edit-mode=\"step.editMode\" is-disabled=\"step.disabled\"></super-input-textarea> <div ng-if=\"step.showFormEntry\" class=\"form-entry step-action\"> <div class=\"buttons\"> <super-button pri label=\"Submit Form\" type=\"submit\" ng-click=\"go.submitStep(step)\" data-qa=\"submit-step-button\"></super-button> </div> </div> <div ng-if=\"step.showReviewForm\" class=\"review-form step-action\"> <div class=\"buttons\"> <super-button pri label=\"Form Has Been Reviewed\" type=\"submit\" ng-click=\"go.acknowledgeStep(step)\" data-qa=\"review-step-button\"></super-button> </div> </div> <div ng-if=\"step.showReviewApproveOrDeny\" class=\"approve-deny step-action\"> <div class=\"buttons\"> <super-button pri label=\"Approve Form\" type=\"submit\" ng-click=\"go.approveStep(step)\" data-qa=\"approve-step-button\"></super-button> <super-button neg label=\"Deny Form\" type=\"submit\" ng-click=\"go.denyStep(step)\" data-qa=\"deny-step-button\"></super-button> </div> </div> </div> </fieldset> <fieldset ng-disabled=\"step.disabled\" ng-if=\"step._stepAction === vm.employeeProfileReview\"> <div class=\"fb-step-header\"> <h4 class=\"fb-step-title\">Review Employee Profile Updates</h4> <p data-qa=\"step-instructions\">The following will be updated in <b>{{routeVm.formInstance._employee.name}}\\'s</b> employee profile:</p> </div> <table class=\"form-review-fields fb-fields\" ng-if=\"step.instance._employeeProfileReviewStepFieldValues.length > 0\"> <thead class=\"form-review-fields-head\"> <tr> <th>&nbsp;</th> <th class=\"current\">Current</th> <th class=\"will-change-to\">Will Change To</th> <th class=\"update-profile\">Update <br>Profile</th> </tr> </thead> <tbody class=\"form-review-fields-body\"> <tr ng-repeat=\"employeeProfileReviewStepField in step.instance._employeeProfileReviewStepFieldValues\"> <td class=\"step-field\"> <div ng-bind=\"employeeProfileReviewStepField.sourceField.step._name\"></div> <div class=\"field-label\" ng-bind=\"employeeProfileReviewStepField.sourceField._label\"></div> </td> <td class=\"current\" data-qa=\"{{ employeeProfileReviewStepField.sourceFormFieldId }}\" ng-bind=\"go.profileValueDisplay(employeeProfileReviewStepField, step)\"></td> <td class=\"will-change-to\"> <cmp-field-renderer field=\"employeeProfileReviewStepField.sourceField\" ignore-validations=\"ignoreValidations\"></cmp-field-renderer></td> <td class=\"update-profile\"><super-input-checkbox data-qa=\"{{ employeeProfileReviewStepField.sourceFormFieldId }}\" is-disabled=\"step._stepAction !== vm.employeeProfileReview || routeVm.formInstance._statusId === vm.formComplete\" model=\"employeeProfileReviewStepField.updateEmployeeProfile\"></super-input-checkbox></td> </tr> </tbody> </table> <div class=\"actions\"> <super-input-textarea label=\"Comments - Visible to all participants\" model=\"step.instance._stepComments\" edit-mode=\"step.editMode\" is-disabled=\"step.disabled\"></super-input-textarea> <div ng-if=\"step._stepAction === vm.employeeProfileReview && routeVm.formInstance._statusId !== vm.formComplete\" class=\"form-entry step-action\"> <div class=\"buttons\"> <super-button pri label=\"Submit Form\" type=\"submit\" ng-click=\"go.reviewProfile(step)\"></super-button> </div> </div> </div> </fieldset> </li> <li class=\"fb-step\" ng-if=\"!vm.loading && !vm.steps.length\"> <div class=\"fb-step-header\"> <h4 class=\"fb-step-title\">No Steps Found</h4> </div> <ul class=\"fb-fields\"> <li class=\"fb-field\">Either there was a problem retrieving workflow steps for this form, or you do not have permission to see any steps.</li> </ul> </li> </ul> </form> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/inbox/form-instance/segment-header/header.html\",'<div class=\"segment-inbox-form-instance-header\"> <div class=\"gd-row form-header-wrapper\"> <div class=\"form-header-group form-info-group\"> <h2 ss-icon=\"{{routeVm.formTemplate._isEmployeeInitiated ? \\'li-form-e-large\\' : \\'li-form-large\\'}}\" class=\"form-instance-title\" ng-bind=\"routeVm.formInstance.name\" data-qa=\"form-instance-title\"></h2> <ul class=\"form-meta ss-pipe-children\"> <li class=\"form-meta-item\"><abbr class=\"form-instance-version\" title=\"version {{routeVm.formTemplate._templateVersion || 1}}\">v{{routeVm.formTemplate._templateVersion || 1}}</abbr></li> <li class=\"form-meta-item\">sent {{routeVm.formInstance.sentDate}} by {{routeVm.formInstance._creator.name}}</li> </ul> <p ng-if=\"routeVm.formTemplate._instructions\" ng-bind=\"routeVm.formTemplate._instructions\"></p> </div> <div class=\"form-header-group form-controls-group\"> <div class=\"form-control-group sensitive-field-toggle-control-group\" data-qa=\"sensitive-field-toggle-control-group\" ng-if=\"vm.hasSensitiveFields\"> <label for=\"sensitive-field-toggle\">display sensitive info</label> <fluid-toggle label=\"\\'this control will toggle the visibility of sensitive fields\\'\" checked=\"false\" warning=\"\" on:checked-change=\"go.toggleSensitiveFields($event)\" is-disabled=\"vm.loading\"></fluid-toggle> </div> <div class=\"form-control-group form-display-control-group\" ng-if=\"routeVm.hasPDFOverlay\"> <super-button ng-class=\"{active: !routeVm.showPDFOverlay}\" ng-click=\"go.toggleFormView(showPDF = false)\" label=\"Web Form\" smp></super-button><super-button ng-class=\"{active: routeVm.showPDFOverlay}\" ng-click=\"go.toggleFormView(showPDF = true)\" label=\"PDF Overlay\" smp></super-button> </div> </div> </div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/inbox/form-instance/segment-steps/steps.html\",'<section class=\"segment-inbox-form-instance-steps\"> <header class=\"\"> <h4 class=\"\">Form Workflow</h4> </header> <main class=\"main-content\" ss-pending=\"vm.loading\"> <ul class=\"fb-steps-summary\" ng-if=\"!vm.loading && vm.steps.length\"> <li class=\"fb-summary-step\" ng-class=\"{\\n\\t\\t\\t\\t\\t\\'is-hover\\': step.hoverState,\\n\\t\\t\\t\\t\\t\\'is-selected\\': vm.selectedStep === step,\\n\\t\\t\\t\\t\\t\\'is-disabled\\': step.disabled\\n\\t\\t\\t\\t}\" ng-repeat=\"step in vm.steps\" ng-mouseenter=\"step.hoverState = true\" ng-mouseleave=\"step.hoverState = false\" ng-click=\"go.selectStep($index, step)\"> <h4 class=\"step-heading\">Workflow Step {{$index + 1}} <span ng-if=\"step._name\">- {{step._name}}</span></h4> <dl class=\"step-summary-list pad-12\" ng-show=\"vm.selectedStep === step\" ng-cloak> <dt>main participant</dt> <dd> <ul class=\"fb-step-meta\"> <li class=\"list-item-row\" ss-icon=\"user\" ng-if=\"step.instance._stepParticipant.name\" ng-bind=\"step.instance._stepParticipant.name\"></li> <li class=\"list-item-row\" ng-if=\"step.stepActionName\"> <ul class=\"ss-pipe-children\"> <li class=\"item\" ss-icon=\"wrench\" ng-if=\"step.stepActionName\" ng-bind=\"step.stepActionName\"></li> <li class=\"item\" ss-icon=\"key\" ng-if=\"step.participantPermission.length\" ng-bind=\"step.participantPermission\"> </li> </ul> </li> </ul> </dd> <dt>other participants</dt> <dd ng-if=\"step.otherParticipants.length\"> <ul class=\"fb-step-meta\"> <li class=\"list-item-row\" ng-repeat=\"other in step.otherParticipants\"> <ul class=\"ss-pipe-children\"> <li ss-icon=\"user\" ng-bind=\"other.name\" title=\"{{other.name}}\"></li> <li ss-icon=\"key\" ng-bind=\"other.permissions\" title=\"{{other.name}}\"></li> </ul> </li> </ul> </dd> <dd ng-if=\"!step.otherParticipants.length\">No additional participants</dd> </dl> </li> <li class=\"fb-summary-step\" ng-if=\"!vm.loading && !vm.steps.length\"> <div class=\"pad-box\"><p>No Workflow Steps found</p></div> </li> </ul> </main> </section> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/inbox/form-instance/segment-close/close.html\",'<div class=\"segment-inbox-form-instance-close\"> <div class=\"app-title\"><h1>Frontline Central</h1></div> <div class=\"close\"> <super-button class=\"delete-button\" neg ng-if=\"go.showDelete()\" label=\"Delete\" ng-click=\"go.deleteForm()\" ng-class=\"{\\'saving\\': vm.deleting}\" ss-icon=\"spinner\" ng-disabled=\"vm.deleting\" data-qa=\"form-instance-delete-button\"></super-button> <super-button class=\"print-button\" label=\"print form\" is-disabled=\"routeVm.showPDFOverlay\" ng-click=\"go.print()\" data-qa=\"form-instance-print-button\"></super-button> <super-button class=\"save-button\" label=\"save progress\" ng-if=\"!vm.formIsComplete && vm.fromView !== \\'sent\\'\" ng-click=\"go.save()\" data-qa=\"form-instance-save-button\"></super-button> <button type=\"button\" class=\"close-x\" ng-click=\"go.close()\" ss-tooltip=\"close\" data-qa=\"form-instance-close-button\"></button> </div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/packet-builder/builder/segment-builder/builder.html\",'<div class=\"segment-packet-builder-builder-builder\" ss-pending=\"packetVm.saving\"> <div class=\"gd-row\"> <section class=\"gd-55p\"> <div class=\"filters\"> <div class=\"search-form\"> <super-input-text model=\"vm.search\" ss-icon=\"li-search\" data-qa=\"packet-template-search-form\">Find Form</super-input-text> </div> <div class=\"gd-row\"> <div class=\"gd-50p select-filter-category\"> <super-select-list label=\"Filter Category\" type=\"filter\" model=\"vm.selectedCategory\"> <super-select-list-item label=\"\\'All\\'\" value=\"\\'All\\'\"></super-select-list-item> <super-select-list-item ng-repeat=\"category in vm.categories\" value=\"category.value\" label=\"category.name\"></super-select-list-item> </super-select-list> </div> <div class=\"gd-50p select-filter-sortby\"> <super-select-list label=\"Sort By\" type=\"filter\" model=\"vm.sortBy\"> <super-select-list-item ng-repeat=\"option in vm.sortCriteria\" label=\"option.name\" value=\"option.field\"></super-select-list-item> </super-select-list> </div> </div> </div> <div ss-pending=\"vm.loading\" ss-pending-status=\"\\'Loading form templates...\\'\"> <ul class=\"gd-row ss-panel-list form-list-full\"> <li ng-if=\"!vm.loading && !vm.forms.length\">No forms found</li> <li class=\"gd-row auto-{{ form.id }}\" ng-repeat=\"form in vm.forms\" dnd-draggable=\"form\" dnd-type=\"\\'formType\\'\" dnd-effect-allowed=\"copyMove\" dnd-disable-if=\"form.inPacket\"> <div class=\"form-icon\"><i class=\"icon\" ss-icon=\"li-form-large\"></i> </div> <div class=\"form-info\"> <h4><a href=\"\" ng-click=\"go.preview(form)\" ng-bind=\"form._name\"></a>&nbsp;<strong class=\"form-status\" ng-if=\"form.status !== \\'active\\'\" ng-class=\"{\\'{{form.status}}\\': form.status}\" ng-bind=\"form.statusLabel\"></strong></h4> <ul class=\"form-meta-info ss-pipe-children\"> <li class=\"form-meta-item\" ng-if=\"form._steps.length\"> Workflow ({{form._steps.length - 1}} <ng-pluralize count=\"form._steps.length - 1\" when=\"{\\'1\\': \\'Step\\', \\'other\\': \\'Steps\\'}\"></ng-pluralize>) <super-popover ng-if=\"form._steps.length > 0\"> <h6>Workflow <ng-pluralize count=\"form._steps.length - 1\" when=\"{\\'1\\': \\'Step\\', \\'other\\': \\'Steps\\'}\"></ng-pluralize> </h6> <ol class=\"popover-step-list\"> <li ng-repeat=\"step in form._steps\" ng-if=\"step._stepAction !== vm.stepAction.formCompleted\" title=\"{{step.participantLabel}} | {{step.stepActionLabel}}\"><span>{{step.participantLabel}} | {{step.stepActionLabel}}</span></li> </ol> </super-popover> </li> <li class=\"form-meta-item\" ng-if=\"form._modifiedDt\">Modified {{form._modifiedDt | date:\\'MM/dd/yyyy\\'}} by {{form._modifier.name}}</li> <li class=\"form-meta-item\" ng-if=\"form._hasPrintPreviewDefinition\" ss-icon=\"file-pdf-o\">PDF Overlay available</li> </ul> </div> <div class=\"action\"> <p id=\"form-added-status\" class=\"form-added\" ng-if=\"form.inPacket\" ss-icon=\"check\" role=\"status\" aria-label=\"form has been added\">Added</p> <super-button ng-if=\"!form.inPacket\" ng-click=\"go.add($index, form)\" label=\"Add\" aria-controls=\"form-added-status\"></super-button> </div> </li> </ul> </div> <div class=\"infinite-scrolling\" ng-if=\"vm.showInfScroll\" infinite-scroll=\"go.scrollData()\" ss-pending=\"vm.scrolling\" ss-pending-status=\"\\'Loading form templates...\\'\" infinite-scroll-distance=\"0.5\"></div> </section> <section class=\"added-packets gd-45p\" ss-window-anchor> <h3 ss-icon=\"li-packet-large\">Packet</h3> <div ss-pending=\"vm.loadingPacket\" ss-pending-status=\"\\'Loading packet...\\'\"> <ul class=\"form-list-added\" dnd-list=\"added\" dnd-drop=\"go.dropForm(event, index, type, item)\" dnd-allowed-types=\"[\\'formType\\', \\'addedType\\']\"> <li ng-if=\"!vm.loadingPacket && !added.length\">There are no forms in this packet</li> <li class=\"gd-row auto-{{ form.id }}\" ng-repeat=\"form in added\" dnd-draggable=\"form\" dnd-type=\"\\'addedType\\'\" dnd-moved=\"go.moveForm($index, form)\" dnd-effect-allowed=\"move\"> <h4><a href=\"\" ng-click=\"go.preview(form)\" ng-bind=\"form._name\"></a>&nbsp;<strong class=\"form-status\" ng-if=\"form.status !== \\'active\\'\" ng-class=\"{\\'{{form.status}}\\': form.status}\" ng-bind=\"form.statusLabel\"></strong></h4> <ul class=\"gd-85p form-meta-info ss-pipe-children\"> <li class=\"form-meta-item\" ng-if=\"form._steps.length\"> Workflow ({{form._steps.length - 1}} <ng-pluralize count=\"form._steps.length - 1\" when=\"{\\'1\\': \\'Step\\', \\'other\\': \\'Steps\\'}\"></ng-pluralize>) <super-popover> <h6>Workflow <ng-pluralize count=\"form._steps.length - 1\" when=\"{\\'1\\': \\'Step\\', \\'other\\': \\'Steps\\'}\"></ng-pluralize></h6> <ol class=\"popover-step-list\"> <li ng-repeat=\"step in form._steps\" ng-if=\"step._stepAction !== vm.stepAction.formCompleted\" title=\"{{step.participantLabel}} | {{step.stepActionLabel}}\"><span>{{step.participantLabel}} | {{step.stepActionLabel}}</span></li> </ol> </super-popover> </li> <li class=\"form-meta-item\" ng-if=\"form._modifiedDt\">Modified {{form._modifiedDt | date:\\'MM/dd/yyyy\\'}} by {{form._modifier.name}}</li> <li class=\"form-meta-item\" ng-if=\"form._hasPrintPreviewDefinition\" ss-icon=\"file-pdf-o\"> PDF Overlay available</li> </ul> <div class=\"form-remove gd-15p\" ng-click=\"go.remove($index, form)\"> <button class=\"action\" ss-icon=\"minus-circle\" aria-controls=\"form-added-status\" aria-label=\"remove {{form._name}}\"></button> </div> </li> </ul> </div> </section> </div> </div> ')}])}(),function(e){try{e=angular.module(\"ec-forms-templates\")}catch(t){e=angular.module(\"ec-forms-templates\",[])}e.run([\"$templateCache\",function(e){e.put(\"routes/packet-builder/settings/segment-settings/settings.html\",'<div class=\"segment-packet-builder-settings-settings\"> <section class=\"gd-row category\"> <div class=\"gd-25p\"> <h4>Category<em class=\"required\" aria-label=\"category is required\"></em></h4> </div> <div class=\"gd-75p\"> <super-select-list model=\"vm.packet._category.id\"> <super-select-list-item ng-repeat=\"category in vm.categories\" value=\"category.value\" label=\"category.name\"></super-select-list-item> </super-select-list> </div> </section> <section class=\"gd-row\"> <div class=\"gd-25p\"> <h4><i>\"Packet Ready\"</i> Message</h4> <em class=\"section-subhead\">Initial step ready notifications for forms in this packet will be suppressed when this packet is sent.</em> </div> <div class=\"gd-55p\"> <div class=\"step-notification-message-group\" data-qa=\"packet-ready-message-group\"> <p class=\"message-preview-header\"><i>\"packet ready\"</i> email message preview:</p> <div class=\"message-preview-body\"> <p class=\"message-prefix\"><i ng-bind=\"vm.packet._startupEmail.notificationPrefix\"></i></p> <ul class=\"forms-list\" ss-pending=\"vm.loading\" ss-pending-status=\"\\'loading forms in packet...\\'\" aria-busy=\"vm.loading\"> <li ng-repeat=\"form in vm.forms\"><i ng-bind=\"form._name\"></i></li> </ul> <p><super-input-textarea id=\"message-textarea\" model=\"vm.packet._startupEmail.message\" ng-if=\"vm.packet._startupEmail.useStartupEmail\" placeholder=\"Type optional custom message here\"></super-input-textarea></p> <div><small class=\"message-suffix\"><i ng-bind=\"vm.packet._startupEmail.notificationSuffix\"></i></small></div> </div> <super-input-checkbox class=\"add-step-message\" label=\"Customize Packet Message\" model=\"vm.packet._startupEmail.useStartupEmail\" aria-controls=\"message-textarea\"></super-input-checkbox> </div> </div> </section> <section class=\"gd-row workflow\"> <div class=\"gd-25p\"> <h4>Packet Workflow &amp; Notifications</h4> <em class=\"section-subhead\"><i>\"Step Ready\"</i> email notifications to the primary recipient of the first step and <i>\"Form Complete\"</i> email notifications to sender are suppressed for any form in a packet</em> </div> <div class=\"gd-75p\"> <ul class=\"packet-forms-list\" ss-pending=\"vm.loading\" ss-pending-status=\"\\'loading forms in packet...\\'\" aria-busy=\"vm.loading\"> <li class=\"form\" ng-repeat=\"form in vm.forms\"> <p class=\"form-name\" ng-bind=\"form._name\" ss-icon-before=\"li-form-large\"></p> <div class=\"form-meta-info\"> <span ng-if=\"form._steps.length > 0\"> Workflow ({{form._steps.length - 1}} <ng-pluralize count=\"form._steps.length - 1\" when=\"{\\'1\\': \\'Step\\', \\'other\\': \\'Steps\\'}\"></ng-pluralize>) <super-popover> <div> <p>Workflow <ng-pluralize count=\"form._steps.length - 1\" when=\"{\\'1\\': \\'Step\\', \\'other\\': \\'Steps\\'}\"></ng-pluralize></p> <ul class=\"popover-step-list\"> <li ng-repeat=\"step in form.steps\"> <span ng-bind=\"{{$index + 1}}\"></span>) <span class=\"ss-pipe-right\" ng-bind=\"step._stepParticipant.participantType | enumByValue:\\'stepParticipantType\\'\"></span><span ng-bind=\"step._stepAction | enumByValue:\\'stepAction\\'\"></span> </li> </ul> </div> </super-popover> | </span> <span>Modified {{form._modifiedDt | date:\\'MM/dd/yyyy\\'}} by {{form._modifier.name}}</span> </div> </li> </ul> </div> </section> </div> ')}])}();","import { State } from 'base-state';\r\n// #---------------------------------------# //\r\n// #---- State (/form-builder/builder) ----# //\r\n\r\n\r\n// view model that is shared by all segments on this route,\r\n// used for segment coordination. Define initial state here.\r\nconst routeVm = {\r\n\tadded: [],\r\n\tprops: false,\r\n\taddingFields: false\r\n};\r\n\r\nconst stateName = 'formBuilder.builder';\r\n\r\n// config object for ui-router\r\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\r\nconst stateConfig = {\r\n\turl: '/builder?deactivate',\r\n\ttemplateUrl: 'routes/form-builder/builder/builder.html',\r\n\tresolve: {\r\n\t\t$title: ['$title', $title => {\r\n\t\t\treturn $title + ' (Form Builder)';\r\n\t\t}],\r\n\t\tisHRMSEnabled: /*@ngInject*/ function(ssMultiInitiativeFeatureDetectorSvc) {\r\n\t\t\trouteVm.isHRMSEnabled = ssMultiInitiativeFeatureDetectorSvc.isHRMSEnabled();\r\n\t\t}\r\n\t},\r\n\t$permissions: (permissionSvc) => permissionSvc.isPermittedAction('formTemplates', 'create') || permissionSvc.isPermittedAction('formTemplates', 'edit')\r\n};\r\n\r\n\r\n\r\n// #-- END State (/form-builder/builder) --# //\r\n// #---------------------------------------# //\r\n\r\nangular.module('ec-forms').config( /*@ngInject*/ ($stateProvider) => {\r\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\r\n});\r\n","import {Segment} from 'base-segment';\r\n// #---------------------------------------------------------# //\r\n// #---- Segment (/form-builder/builder/segment-builder) ----# //\r\n\r\nclass Builder extends Segment {\r\n\t/*@ngInject*/\r\n\t\tcontroller($injector, $scope, $state, $stateParams, $location, ssAsync, ssFormTemplatesApi, ssEventSvc, ssEnum, formsHlp, fieldsHlp, ssArrayHlp, ssToastHlp, ssModalSvc) {\r\n\t\t// used for segment coordination\r\n\t\tconst routeVm = $scope.routeVm;\r\n\t\tlet formVm = $scope.formVm;\r\n\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentFormBuilderBuilderBuilderLogic'); // eslint-disable-line\r\n\r\n\t\tlet moveTarget = null;\r\n\t\tlet commitToEmployeeRecord = [];\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = routeVm.vm = {\r\n\t\t\tform: formVm.formData,\r\n\t\t\tsteps: [],\r\n\t\t\tselectedFormObject: null,\r\n\t\t\tstepAction: ssEnum.stepAction,\r\n\t\t\tstepEventType: ssEnum.stepEventType,\r\n\t\t\tstepParticipant: ssEnum.stepParticipantType\r\n\t\t};\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = {\r\n\t\t\tstepSettings(step, index) {\r\n\t\t\t\tvm.selectedFormObject = step;\r\n\t\t\t\tstep.index = index + 1; // used to display current step on properties\r\n\t\t\t\t$scope.$emit('component-properties', 'cmp-properties-step', step);\r\n\t\t\t},\r\n\t\t\tformComplete() {\r\n\t\t\t\tvm.selectedFormObject = vm.lastStep;\r\n\t\t\t\t$scope.$emit('component-properties', 'cmp-properties-form-complete', vm.lastStep);\r\n\t\t\t},\r\n\t\t\treviewStep() {\r\n\t\t\t\tvm.selectedFormObject = vm.reviewStep;\r\n\t\t\t\t$scope.$emit('component-properties', 'cmp-properties-profile-review', vm.reviewStep);\r\n\t\t\t},\r\n\t\t\taddStep() {\r\n\t\t\t\tconst stepCount = vm.form._steps.length;\r\n\t\t\t\tconst newStep = formsHlp.makeStep();\r\n\t\t\t\tvm.form._steps.splice(stepCount-1, 0, newStep);\r\n\t\t\t\tvm.steps.push(newStep);\r\n\t\t\t\tformVm.modelChanged();\r\n\t\t\t\tgo.stepSettings(newStep, vm.steps.length - 1);\r\n\t\t\t},\r\n\t\t\tmovedStep(index, step) {\r\n\t\t\t\tvm.steps[moveTarget] = step;\r\n\t\t\t\tvm.steps.splice(index, 1);\r\n\t\t\t},\r\n\t\t\tdropStep(event, index, item) {\r\n\t\t\t\tformVm.modelChanged();\r\n\t\t\t\tmoveTarget = index;\r\n\t\t\t\treturn {};\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tformVm.updateStepOrder = function() {\r\n\t\t\treturn formsHlp.updateStepOrder(vm.form, vm.steps);\r\n\t\t}\r\n\r\n\t\tformVm.updateFieldOrder = function() {\r\n\t\t\treturn formsHlp.updateFieldOrder(vm.steps);\r\n\t\t}\r\n\r\n\t\tformVm.addStepIdToField = function() {\r\n\t\t\treturn fieldsHlp.addStepIdToField(vm.steps);\r\n\t\t}\r\n\r\n\t\tformVm.updateFormFields = function() {\r\n\t\t\tlet fieldGroups = vm.steps.reduce((acc, cur) => {\r\n\t\t\t\treturn [].concat.apply(acc, cur.fieldGroups);\r\n\t\t\t}, []);\r\n\t\t\t// Because we are completing reassigning the '_formFields' collection here, we have to make sure we dont overwrite any existing token fields\r\n\t\t\tlet tokenFields = vm.form._formFields.filter((f) => f._tokenField && f._tokenField === true);\r\n\t\t\tlet allFields = [...fieldGroups, ...tokenFields];\r\n\t\t\tvm.form._formFields.splice(0, vm.form._formFields.length, ...allFields);\r\n\t\t}\r\n\r\n\t\tssEventSvc.on('ss-json-api.addedRecord.formFields', (obj, model) => {\r\n\t\t\tconst step = vm.steps.find(s => s.id === obj._step.id);\r\n\t\t\tif (step == null) { return; }\r\n\t\t\tconst groupIdx = step.fieldGroups.findIndex(g => g.includes(obj));\r\n\t\t\tif (groupIdx === -1) { return; }\r\n\t\t\tconst fieldIdx = step.fieldGroups[groupIdx].indexOf(obj);\r\n\t\t\tif (fieldIdx === -1) { return; }\r\n\t\t\tstep.fieldGroups[groupIdx][fieldIdx] = model;\r\n\t\t}, $scope);\r\n\r\n\t\tssEventSvc.on('ss-json-api.addedRecord.steps', (obj, model) => {\r\n\t\t\tconst stepIdx = vm.steps.indexOf(obj);\r\n\t\t\tif (stepIdx === -1) { return; }\r\n\t\t\tvm.steps[stepIdx] = model;\r\n\t\t}, $scope);\r\n\r\n\t\tssEventSvc.on('emp-record-commit', (val, data) => {\r\n\t\t\tupdateStepsThatCommitToRecord(val, data);\r\n\t\t\ttoggleReviewStep(val);\r\n\t\t}, $scope);\r\n\r\n\t\tformVm.processTemplate = function() {\r\n\t\t\treturn ssAsync(function* () {\r\n\r\n\t\t\t\tyield vm.form.$refresh();\r\n\r\n\t\t\t\tlet updatedFields = [];\r\n\t\t\t\tvm.steps = [];\r\n\r\n\t\t\t\tformsHlp.sortByOrderField(vm.form._steps, vm.form._stepOrder);\r\n\r\n\t\t\t\tvm.form._steps.forEach(step => {\r\n\t\t\t\t\tstep.fields = [];\r\n\t\t\t\t\tvm.steps.push(step);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tvm.steps.forEach((step) => {\r\n\r\n\t\t\t\t\tstep.fieldGroups = [];\r\n\r\n\t\t\t\t\tstep.fields = vm.form._formFields.filter((field) => {\r\n\t\t\t\t\t\treturn !field._tokenField && field._step && field._step.id === step.id;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tformsHlp.sortByOrderField(step.fields, step._fieldOrder);\r\n\r\n\t\t\t\t\tstep.fields.forEach(field => {\r\n\r\n\t\t\t\t\t//\ttrack existing field groups\r\n\t\t\t\t\t\tif (field._fieldGroup != null) {\r\n\t\t\t\t\t\t\trouteVm.added[field._fieldGroup] = true;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//\tTEMP - remove the '_fieldGroup' property from the custom field objects\r\n\t\t\t\t\t\tlet customFieldIds = [\r\n\t\t\t\t\t\t\t'951626b1-a422-46b4-9fa1-3b5acf7ee8fc',\r\n\t\t\t\t\t\t\t'977a2273-62c1-4eef-8d63-91f9d8d1e0bf',\r\n\t\t\t\t\t\t\t'10a88a23-f8f3-48eb-aa48-c466db06378b',\r\n\t\t\t\t\t\t\t'17ff0b2c-4973-4181-92ce-b1c50c851165',\r\n\t\t\t\t\t\t\t'c2e31de2-09e8-4563-acb1-0e190a8e3b11',\r\n\t\t\t\t\t\t\t'5299a28c-56d5-4dc3-81ae-6f9f741eb324',\r\n\t\t\t\t\t\t\t'e215f04f-037a-479e-b5da-9bb3155b55d5',\r\n\t\t\t\t\t\t\t'9eabf24b-ae80-4488-a164-2a6f78a50cbd',\r\n\t\t\t\t\t\t\t'b6390770-0590-418c-b516-2080b243e9b7',\r\n\t\t\t\t\t\t\t'2056c221-97c8-4994-962c-f4bfc319a9e4'\r\n\t\t\t\t\t\t];\r\n\r\n\t\t\t\t\t\tif(customFieldIds.includes(field._fieldDefId) && field._fieldGroup !== null ) {\r\n\t\t\t\t\t\t\tfield['_fieldGroup'] = null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/* ************************************************************ */\r\n\r\n\t\t\t\t\t//\tupdate existing field objects with missing keys/values\r\n\t\t\t\t\t\tif (field._fieldDefId != null) {\r\n\t\t\t\t\t\t\tlet updatedAttrs = fieldsHlp.updateFieldAttributes(field);\r\n\t\t\t\t\t\t\tlet updatedOptions = fieldsHlp.updateFieldOptions(field);\r\n\t\t\t\t\t\t\tupdatedFields = [...updatedAttrs, ...updatedOptions];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t/*\tFC-3214 **************************************\r\n\t\t\t\t\t**\t(TEMP) Replace the field type of any fields within\r\n\t\t\t\t\t**\texisting templates that have a '_fieldType'\r\n\t\t\t\t\t**\tof 'super-input-datepicker'\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t\tif(field._fieldType === 'super-input-datepicker') {\r\n\t\t\t\t\t\t\tfield._fieldType = 'super-iso-org-date';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/* ********************************************* */\r\n\r\n\t\t\t\t\t//\tmake step fieldGroups\r\n\t\t\t\t\t\tif (step.fieldGroups.length === 0) {\r\n\t\t\t\t\t\t\tstep.fieldGroups.push([field]);\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlet group = step.fieldGroups[step.fieldGroups.length - 1];\r\n\t\t\t\t\t\tif (field._fieldGroup != null && group[0]._fieldGroup === field._fieldGroup) {\r\n\t\t\t\t\t\t\tgroup.push(field);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tstep.fieldGroups.push([field]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tdelete step.fields;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tinitLastStep();\r\n\t\t\t\tinitReviewStep();\r\n\r\n\t\t\t//\tif any field's \"_options\" have been updated, force a change so it will save\r\n\t\t\t\tif(updatedFields.length) {\r\n\t\t\t\t\tupdatedFields.forEach((field) => {\r\n\t\t\t\t\t\tif(field.$isDirty) {\r\n\t\t\t\t\t\t\tfield.$$forceChangedState('_options');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t//\tAdd another save here in case anything on the template was updated\r\n\t\t\t\tyield vm.form.$save();\r\n\r\n\t\t\t\tformsHlp.initSaveInterrupter(vm.form);\r\n\r\n\t\t\t})();\r\n\t\t};\r\n\r\n\t\tfunction initLastStep() {\r\n\t\t\t// look for an existing form complete step\r\n\t\t\tlet lastStep = vm.steps.find(s => { return s._stepAction === ssEnum.stepAction.formCompleted });\r\n\r\n\t\t\t//\tif it's not found, we designate the last step as the form complete step (new template) and remove it from the collection, otherwise just remove it\r\n\t\t\tif (lastStep == null) {\r\n\t\t\t\tlastStep = vm.steps.pop();\r\n\t\t\t\tlastStep.last = true;\r\n\t\t\t\tlastStep._stepAction = ssEnum.stepAction.formCompleted;\r\n\t\t\t\tlastStep._stepParticipant.participantType = vm.stepParticipant.employeeChosenWhenSent;\r\n\t\t\t\tlastStep._name = 'Form and Workflow is Complete';\r\n\t\t\t} else {\r\n\t\t\t\tlastStep.last = true;\r\n\t\t\t\tvm.steps.splice(vm.steps.indexOf(lastStep), 1);\r\n\t\t\t}\r\n\r\n\t\t\t// automatically set the step participant of the last step\r\n\t\t\tlastStep._stepParticipant.participantType = vm.stepParticipant.employeeChosenWhenSent;\r\n\t\t\tvm.lastStep = lastStep;\r\n\t\t}\r\n\r\n\t\tfunction initReviewStep() {\r\n\t\t\t// look for an existing review step\r\n\t\t\tvm.reviewStep = findReviewStep(vm.form._steps);\r\n\t\t\t// create the collection of committed field group names\r\n\t\t\tcommitToEmployeeRecord = getCommittedFieldGroups();\r\n\t\t\t/*\r\n\t\t\tIf there's an existing review step, splice it out;\r\n\t\t\telse if the collection of committed field groups contains a field group, yet no review step exists, add it;\r\n\t\t\telse return - nothing to do\r\n\t\t\t*/\r\n\t\t\tif(vm.reviewStep) {\r\n\t\t\t\tvm.steps.splice(vm.steps.indexOf(vm.reviewStep), 1);\r\n\t\t\t} else if (commitToEmployeeRecord.length) {\r\n\t\t\t\t\ttoggleReviewStep(true);\r\n\t\t\t} else {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t//\tchecks to see if there are any field groups set to update the employee record, and creates a unique collection from their field group names\r\n\t\tfunction getCommittedFieldGroups() {\r\n\t\t\tlet fieldsToCommit = [];\r\n\r\n\t\t\tvm.steps.forEach(s => {\r\n\t\t\t\tif (s.fieldGroups.length > 0) {\r\n\t\t\t\t\ts.fieldGroups.forEach(group => {\r\n\t\t\t\t\t\tlet fieldsWithUpdate = group.map(field => {\r\n\t\t\t\t\t\t\tif (field._updateEmployeeRecord === true) {\r\n\t\t\t\t\t\t\t\treturn field._fieldGroup;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tfieldsToCommit = fieldsToCommit.concat(fieldsWithUpdate);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn ssArrayHlp.unique(fieldsToCommit.filter(f => f != null));\r\n\t\t}\r\n\r\n\t\tfunction toggleReviewStep(willUpdateRecord) {\r\n\t\t\tif (willUpdateRecord) {\r\n\t\t\t\tif (findReviewStep(vm.form._steps) == null) {\r\n\t\t\t\t\taddReviewStep();\r\n\t\t\t\t}\r\n\t\t\t} else if (!willUpdateRecord && commitToEmployeeRecord.length < 1) {\r\n\t\t\t\tremoveReviewStep();\r\n\t\t\t} else {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tformVm.modelChanged();\r\n\t\t}\r\n\r\n\t\tfunction addReviewStep() {\r\n\t\t\tconst newStep = formsHlp.makeStep({\r\n\t\t\t\t_name: 'Review Profile Updates',\r\n\t\t\t\t_stepAction: ssEnum.stepAction.employeeProfileReview,\r\n\t\t\t\t_stepEvents: [{\r\n\t\t\t\t\teventType: vm.stepEventType.onEmployeeProfileReview,\r\n\t\t\t\t\teventActions: []\r\n\t\t\t\t}],\r\n\t\t\t\t_permissions: [{\r\n\t\t\t\t\tcanView: true,\r\n\t\t\t\t\tcanEdit: true,\r\n\t\t\t\t\tcanViewSensitive: true,\r\n\t\t\t\t\tcanEditSensitive: true,\r\n\t\t\t\t\temployeeId: ''\r\n\t\t\t\t}]\r\n\t\t\t});\r\n\t\t\tvm.form._steps.splice(vm.form._steps.length-1, 0, newStep);\r\n\t\t\tvm.reviewStep = newStep;\r\n\t\t}\r\n\r\n\t\tfunction removeReviewStep() {\r\n\t\t\tlet reviewStep = vm.form._steps.find(step => {\r\n\t\t\t\treturn step._stepAction === ssEnum.stepAction.employeeProfileReview;\r\n\t\t\t});\r\n\r\n\t\t\tif (reviewStep != null) {\r\n\t\t\t\tvm.form._steps.splice(vm.form._steps.indexOf(reviewStep), 1);\r\n\t\t\t\tvm.reviewStep = null;\r\n\t\t\t} else {\r\n\t\t\t\tconsole && console.warn && console.warn('You attempted to remove a review step that does not exist');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction updateStepsThatCommitToRecord(willUpdateRecord, fields) {\r\n\t\t\tif (willUpdateRecord) {\r\n\t\t\t\tif (!commitToEmployeeRecord.includes(fields[0]._fieldGroup)) {\r\n\t\t\t\t\tcommitToEmployeeRecord.push(fields[0]._fieldGroup);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (commitToEmployeeRecord.includes(fields[0]._fieldGroup)) {\r\n\t\t\t\t\tcommitToEmployeeRecord.splice(commitToEmployeeRecord.indexOf(fields[0]._fieldGroup), 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction findReviewStep(steps) {\r\n\t\t\treturn steps.find(s => s._stepAction === ssEnum.stepAction.employeeProfileReview);\r\n\t\t}\r\n\r\n\t//\tinitialization\r\n\t\tssAsync(function*() {\r\n\t\t\ttry {\r\n\r\n\t\t\t\t//\tif we have somehow gotten to this page with an active template, force the user to deactivate or return to form templates page\r\n\t\t\t\tif($stateParams.deactivate === 'true' || vm.form._statusId === ssEnum.formTemplateStatus.active) {\r\n\r\n\t\t\t\t\tvar modalConfig = {\r\n\t\t\t\t\t\ttitle: 'Edit Form Template',\r\n\t\t\t\t\t\tcontent: 'This is an active template and will need to be deactivated to continue',\r\n\t\t\t\t\t\tprimaryText: 'Deactivate and continue',\r\n\t\t\t\t\t\tsecondaryText: 'Cancel',\r\n\t\t\t\t\t\talwaysOnTop: true\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tssModalSvc.showStandard(modalConfig).then(() => {\r\n\t\t\t\t\t\tformVm.loading = true;\r\n\t\t\t\t\t\tformVm.loadingMsg = 'Deactivating \"'+vm.form._name+'\"';\r\n\t\t\t\t\t\tssFormTemplatesApi.editActive(vm.form).then((res)=> {\r\n\t\t\t\t\t\t\t$location.url(`/ec-forms/form-builder/${res.id}/builder`);\r\n\t\t\t\t\t\t}).catch((err) => {\r\n\t\t\t\t\t\t\tssToastHlp.error('there was an error deactivating the form template', '');\r\n\t\t\t\t\t\t\t$state.go('base.formTemplates');\r\n\t\t\t\t\t\t\tconsole && console.error && console.error(err);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}).catch(() => {\r\n\t\t\t\t\t\t$state.go('base.formTemplates');\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tformVm.loading = true;\r\n\t\t\t\tformVm.loadingMsg = 'loading form template...';\r\n\t\t\t\tformVm.modelChanged(false);\r\n\r\n\t\t\t\t// reset the routeVm.added props to false\r\n\t\t\t\tObject.keys(routeVm.added).forEach(k => routeVm.added[k] = false);\r\n\r\n\t\t\t\tyield formVm.processTemplate();\r\n\r\n\t\t\t\tformVm.loading = false;\r\n\t\t\t\tformVm.loadingMsg = '';\r\n\t\t\t\tgo.stepSettings(vm.steps[0], 0);\r\n\r\n\t\t\t} catch (e) {\r\n\t\t\t\tformVm.loading = false;\r\n\t\t\t\tformVm.loadingMsg = '';\r\n\t\t\t\tconsole.error(e);\r\n\t\t\t}\r\n\t\t})();\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/form-builder/builder/segment-builder) --# //\r\n// #---------------------------------------------------------# //\r\n\r\nangular.module('ec-forms-segments').directive('segmentFormBuilderBuilderBuilder', () => new Builder('builder') );\r\n","/*@ngInject*/\r\nfunction logic(ssEnum) {\r\n\t// logic api\r\n\treturn {\r\n\t};\r\n}\r\nangular.module('ec-forms-segment-logic').factory('segmentFormBuilderBuilderBuilderLogic', logic);\r\n","import {Segment} from 'base-segment';\r\n// #--------------------------------------------------------# //\r\n// #---- Segment (/form-builder/builder/segment-fields) ----# //\r\n\r\nclass Fields extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $scope, ssFlagSvc, ssStorage, ngIntroService) {\r\n\t\t// view model that is shared by all segments on this route,\r\n\t\t// used for segment coordination\r\n\t\tconst routeVm = $scope.routeVm; // eslint-disable-line\r\n\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentFormBuilderBuilderFieldsLogic'); // eslint-disable-line\r\n\r\n\t\t// intro.js based UI feature tour\r\n\t\t$scope.ngIntroService = ngIntroService;\r\n\t\t$scope.ssStorage = ssStorage;\r\n\t\t$scope.ssFlagSvc = ssFlagSvc;\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = { // eslint-disable-line\r\n\t\t\tfields: {\r\n\t\t\t\tcustom: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcomponent: 'cmp-properties-custom-input',\r\n\t\t\t\t\t\tfields: 'custom_input',\r\n\t\t\t\t\t\tlabel: 'Input'\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\tcomponent: 'cmp-properties-custom-dropdown',\r\n\t\t\t\t\t\tfields: 'custom_dropdown',\r\n\t\t\t\t\t\tlabel: 'Dropdown'\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\tcomponent: 'cmp-properties-custom-selectbox',\r\n\t\t\t\t\t\tfields: 'custom_selectGroup',\r\n\t\t\t\t\t\tlabel: 'Multiple Choice'\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\tcomponent: 'cmp-properties-custom-signature',\r\n\t\t\t\t\t\tfields: 'custom_signature',\r\n\t\t\t\t\t\tlabel: 'Signature',\r\n\t\t\t\t\t\tfeatureFlag: {\r\n\t\t\t\t\t\t\tname: 'fc-enable-signatures',\r\n\t\t\t\t\t\t\tshowIfActive: false\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\tcomponent: 'cmp-properties-custom-signature',\r\n\t\t\t\t\t\tfields: 'custom_signatures',\r\n\t\t\t\t\t\tlabel: 'Signatures',\r\n\t\t\t\t\t\tfeatureFlag: {\r\n\t\t\t\t\t\t\tname: 'fc-enable-signatures',\r\n\t\t\t\t\t\t\tshowIfActive: true\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\tcomponent: 'cmp-properties-custom-date',\r\n\t\t\t\t\t\tfields: 'custom_date',\r\n\t\t\t\t\t\tlabel: 'Date'\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\tcomponent: 'cmp-properties-custom-fileupload',\r\n\t\t\t\t\t\tfields: 'custom_fileUpload',\r\n\t\t\t\t\t\tlabel: 'File Upload'\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\tcomponent: 'cmp-properties-custom-filelink',\r\n\t\t\t\t\t\tfields: 'custom_fileLink',\r\n\t\t\t\t\t\tlabel: 'Link'\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\tcomponent: 'cmp-properties-custom-sectionhead',\r\n\t\t\t\t\t\tfields: 'custom_sectionHead',\r\n\t\t\t\t\t\tlabel: 'Section Head',\r\n\t\t\t\t\t\tfeatureFlag: {\r\n\t\t\t\t\t\t\tname: 'fc-enable-rich-text-editor',\r\n\t\t\t\t\t\t\tshowIfActive: false\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\tcomponent: 'cmp-properties-custom-text',\r\n\t\t\t\t\t\tfields: 'custom_text',\r\n\t\t\t\t\t\tlabel: 'Simple Text'\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\tcomponent: '',\r\n\t\t\t\t\t\tfields: 'custom_textEditor',\r\n\t\t\t\t\t\tlabel: 'Text Editor',\r\n\t\t\t\t\t\tfeatureFlag: {\r\n\t\t\t\t\t\t\tname: 'fc-enable-rich-text-editor',\r\n\t\t\t\t\t\t\tshowIfActive: true\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}],\r\n\t\t\t\temployee: [{\r\n\t\t\t\t\tcomponent: 'cmp-properties-smart',\r\n\t\t\t\t\tfields: 'legalName',\r\n\t\t\t\t\tlabel: 'Legal Name',\r\n\t\t\t\t\tallowMultiple: false\r\n\t\t\t\t}, {\r\n\t\t\t\t\tcomponent: 'cmp-properties-smart',\r\n\t\t\t\t\tfields: 'aliasName',\r\n\t\t\t\t\tlabel: 'Other Name',\r\n\t\t\t\t\tallowMultiple: false\r\n\t\t\t\t}, {\r\n\t\t\t\t\tcomponent: 'cmp-properties-smart',\r\n\t\t\t\t\tfields: 'address',\r\n\t\t\t\t\tlabel: 'Address',\r\n\t\t\t\t\tallowMultiple: false\r\n\t\t\t\t}, {\r\n\t\t\t\t\tcomponent: 'cmp-properties-smart',\r\n\t\t\t\t\tfields: 'contact',\r\n\t\t\t\t\tlabel: 'Contact',\r\n\t\t\t\t\tallowMultiple: false\r\n\t\t\t\t}, {\r\n\t\t\t\t\tcomponent: 'cmp-properties-smart',\r\n\t\t\t\t\tfields: 'personal',\r\n\t\t\t\t\tlabel: 'Personal',\r\n\t\t\t\t\tallowMultiple: false\r\n\t\t\t\t}, {\r\n\t\t\t\t\tcomponent: 'cmp-properties-credentials',\r\n\t\t\t\t\tfields: 'credentials',\r\n\t\t\t\t\tlabel: 'Credentials',\r\n\t\t\t\t\tallowMultiple: false,\r\n\t\t\t\t\tfeatureFlag: {\r\n\t\t\t\t\t\tname: 'fc-enable-credentials-group',\r\n\t\t\t\t\t\tshowIfActive: true\r\n\t\t\t\t\t}\r\n\t\t\t\t}, {\r\n\t\t\t\t\tcomponent: 'cmp-properties-smart',\r\n\t\t\t\t\tfields: 'employment',\r\n\t\t\t\t\tlabel: 'Employment',\r\n\t\t\t\t\tallowMultiple: false\r\n\t\t\t\t}, {\r\n\t\t\t\t\tcomponent: 'cmp-properties-smart',\r\n\t\t\t\t\tfields: 'primaryAssignment',\r\n\t\t\t\t\tlabel: 'Primary Assignment',\r\n\t\t\t\t\tallowMultiple: true,\r\n\t\t\t\t\tfeatureFlag: {\r\n\t\t\t\t\t\tname: 'fc-enable-multiple-employee-assignments',\r\n\t\t\t\t\t\tshowIfActive: false\r\n\t\t\t\t\t}\r\n\t\t\t\t}, {\r\n\t\t\t\t\tcomponent: 'cmp-properties-primary-assignment',\r\n\t\t\t\t\tfields: 'primaryAssignmentNew',\r\n\t\t\t\t\tlabel: 'Primary Assignment',\r\n\t\t\t\t\tallowMultiple: false,\r\n\t\t\t\t\tfeatureFlag: {\r\n\t\t\t\t\t\tname: 'fc-enable-multiple-employee-assignments',\r\n\t\t\t\t\t\tshowIfActive: true\r\n\t\t\t\t\t}\r\n\t\t\t\t}, {\r\n\t\t\t\t\tcomponent: 'cmp-properties-secondary-assignments',\r\n\t\t\t\t\tfields: 'assignments',\r\n\t\t\t\t\tlabel: 'Secondary Assignments',\r\n\t\t\t\t\tallowMultiple: false,\r\n\t\t\t\t\tfeatureFlag: {\r\n\t\t\t\t\t\tname: 'fc-enable-multiple-employee-assignments',\r\n\t\t\t\t\t\tshowIfActive: true\r\n\t\t\t\t\t}\r\n\t\t\t\t},  {\r\n\t\t\t\t\tcomponent: 'cmp-properties-salary',\r\n\t\t\t\t\tfields: 'assignmentsTotalSalary',\r\n\t\t\t\t\tlabel: 'Total Salary',\r\n\t\t\t\t\tallowMultiple: false,\r\n\t\t\t\t\tshowIfHRMS: false,\r\n\t\t\t\t\tfeatureFlag: {\r\n\t\t\t\t\t\tname: 'fc-enable-multiple-employee-assignments',\r\n\t\t\t\t\t\tshowIfActive: true\r\n\t\t\t\t\t}\r\n\t\t\t\t}, {\r\n\t\t\t\t\tcomponent: 'cmp-properties-smart',\r\n\t\t\t\t\tfields: 'assignmentCompensation',\r\n\t\t\t\t\tlabel: 'Assignment Compensation',\r\n\t\t\t\t\tallowMultiple: true,\r\n\t\t\t\t\tshowIfHRMS: false,\r\n\t\t\t\t\tfeatureFlag: {\r\n\t\t\t\t\t\tname: 'fc-enable-multiple-employee-assignments',\r\n\t\t\t\t\t\tshowIfActive: false\r\n\t\t\t\t\t}\r\n\t\t\t\t}, {\r\n\t\t\t\t\tcomponent: 'cmp-properties-smart',\r\n\t\t\t\t\tfields: 'assignmentBenefits',\r\n\t\t\t\t\tlabel: 'Assignment Benefit',\r\n\t\t\t\t\tallowMultiple: true,\r\n\t\t\t\t\tshowIfHRMS: false,\r\n\t\t\t\t\tfeatureFlag: {\r\n\t\t\t\t\t\tname: 'fc-enable-multiple-employee-assignments',\r\n\t\t\t\t\t\tshowIfActive: false\r\n\t\t\t\t\t}\r\n\t\t\t\t}, {\r\n\t\t\t\t\tcomponent: 'cmp-properties-smart',\r\n\t\t\t\t\tfields: 'secondaryAssignment',\r\n\t\t\t\t\tlabel: 'Secondary Assignment',\r\n\t\t\t\t\tfeatureFlag: {\r\n\t\t\t\t\t\tname: 'fc-enable-multiple-employee-assignments',\r\n\t\t\t\t\t\tshowIfActive: false\r\n\t\t\t\t\t},\r\n\t\t\t\t\tallowMultiple: false\r\n\t\t\t\t}, {\r\n\t\t\t\t\tcomponent: 'cmp-properties-smart',\r\n\t\t\t\t\tfields: 'secondaryCompensation',\r\n\t\t\t\t\tlabel: 'Secondary Compensation',\r\n\t\t\t\t\tfeatureFlag: {\r\n\t\t\t\t\t\tname: 'fc-enable-multiple-employee-assignments',\r\n\t\t\t\t\t\tshowIfActive: false\r\n\t\t\t\t\t},\r\n\t\t\t\t\tallowMultiple: false,\r\n\t\t\t\t\tshowIfHRMS: false,\r\n\t\t\t\t}, {\r\n\t\t\t\t\tcomponent: 'cmp-properties-smart',\r\n\t\t\t\t\tfields: 'secondaryBenefits',\r\n\t\t\t\t\tlabel: 'Secondary Benefit',\r\n\t\t\t\t\tfeatureFlag: {\r\n\t\t\t\t\t\tname: 'fc-enable-multiple-employee-assignments',\r\n\t\t\t\t\t\tshowIfActive: false\r\n\t\t\t\t\t},\r\n\t\t\t\t\tallowMultiple: false,\r\n\t\t\t\t\tshowIfHRMS: false,\r\n\t\t\t\t}, {\r\n\t\t\t\t\tcomponent: 'cmp-properties-smart',\r\n\t\t\t\t\tfields: 'financial',\r\n\t\t\t\t\tlabel: 'Financial',\r\n\t\t\t\t\tallowMultiple: false,\r\n\t\t\t\t\tshowIfHRMS: false,\r\n\t\t\t\t}, {\r\n\t\t\t\t\tcomponent: 'cmp-properties-smart',\r\n\t\t\t\t\tfields: 'emergency',\r\n\t\t\t\t\tlabel: 'Emergency',\r\n\t\t\t\t\tallowMultiple: false,\r\n\t\t\t\t\tshowIfHRMS: false,\r\n\t\t\t\t}]\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { // eslint-disable-line\r\n\t\t\tfilterEmployeeRecordTools(field) {\r\n\t\t\t\tif(routeVm.isHRMSEnabled && field.hasOwnProperty('showIfHRMS')) {\r\n\t\t\t\t\treturn field.showIfHRMS;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn checkFeatureFlag(field);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tfunction checkFeatureFlag(field){\r\n\t\t\tif (field.featureFlag) {\r\n\t\t\t\tif (ssFlagSvc.checkState(field.featureFlag.name)) {\r\n\t\t\t\t\treturn field.featureFlag.showIfActive;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn !field.featureFlag.showIfActive;\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t};\r\n\t}\r\n\r\n\tlink(scope, elem) {\r\n\r\n\t\tangular.element(document).ready(function() {\r\n\r\n\t\t\t(function rteTour() {\r\n\t\t\t\tconst steps = []\r\n\t\t\t\tif (scope.ssFlagSvc.checkState('fc-enable-signatures') && !scope.ssStorage.load('ec-forms.signatures.feature.intro')) {\r\n\t\t\t\t\tvar step = {\r\n\t\t\t\t\t\telement: angular.element(elem[0].querySelector('#custom-field-custom_signatures'))[0],\r\n\t\t\t\t\t\tintro: '<h4>New Signature Feature</h4><p>You can now apply saved administrative signatures to a form before sending it.</p>'\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsteps.push(step)\r\n\t\t\t\t}\r\n\t\t\t\tif (scope.ssFlagSvc.checkState('fc-enable-rich-text-editor') && !scope.ssStorage.load('ec-forms.text-editor.feature.intro')) {\r\n\t\t\t\t\tvar step = {\r\n\t\t\t\t\t\telement: angular.element(elem[0].querySelector('#custom-field-custom_textEditor'))[0],\r\n\t\t\t\t\t\tintro: '<h4>Introducing Rich Text Editor</h4><p>A light-weight tool that can help you build customized forms with rich text formatting.</p>'\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsteps.push(step)\r\n\t\t\t\t}\r\n\t\t\t\tif (steps.length > 0){\r\n\t\t\t\t\tscope.ngIntroService.setOptions({\r\n\t\t\t\t\t\tsteps: steps,\r\n\t\t\t\t\t\tdoneLabel: 'Got it!',\r\n\t\t\t\t\t\tshowBullets: false,\r\n\t\t\t\t\t\tshowStepNumbers: false,\r\n\t\t\t\t\t\tdisableInteraction: true\r\n\t\t\t\t\t});\r\n\t\t\t\t\tscope.ngIntroService.onExit(function() {\r\n\t\t\t\t\t\tscope.ssStorage.save('ec-forms.text-editor.feature.intro', true, { persistent: true, expires: false });\r\n\t\t\t\t\t\tscope.ssStorage.save('ec-forms.signatures.feature.intro', true, { persistent: true, expires: false });\r\n\t\t\t\t\t});\r\n\t\t\t\t\tscope.ngIntroService.start();\r\n\t\t\t\t}\r\n\t\t\t}());\r\n\r\n\t\t});\r\n\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/form-builder/builder/segment-fields) --# //\r\n// #--------------------------------------------------------# //\r\n\r\nangular.module('ec-forms-segments').directive('segmentFormBuilderBuilderFields', () => new Fields('fields') );\r\n","/*@ngInject*/\r\nfunction logic() {\r\n\t// logic api\r\n\treturn {\r\n\r\n\t};\r\n}\r\nangular.module('ec-forms-segment-logic').factory('segmentFormBuilderBuilderFieldsLogic', logic);\r\n","import {Segment} from 'base-segment';\r\n// #------------------------------------------------------------# //\r\n// #---- Segment (/form-builder/builder/segment-properties) ----# //\r\n\r\nclass Properties extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $scope, $element, $compile, $animate) {\r\n\t\t// view model that is shared by all segments on this route,\r\n\t\t// used for segment coordination\r\n\t\tconst routeVm = $scope.routeVm; //eslint-disble-line\r\n\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentFormBuilderBuilderPropertiesLogic'); //eslint-disble-line\r\n\r\n\t\tconst formVm = $scope.formVm; // eslint-disable-line\r\n\t\tconst duration = '0.3'; // in seconds\r\n\t\tconst hide = {\r\n\t\t\tleft: '-120%'\r\n\t\t};\r\n\t\tconst show = {\r\n\t\t\tleft: 0\r\n\t\t};\r\n\t\tlet childScope;\r\n\t\tlet propsAreVisible = false;\r\n\t\tlet viewProps = document.getElementsByClassName('view-props')[0];\r\n\t\tlet propsElem = angular.element(viewProps);\r\n\t\tlet componentElem;\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = { //eslint-disble-line\r\n\t\t\tform: formVm.formData\r\n\t\t};\r\n\r\n\t\t//\tsetting this property here to avoid a reset when adding steps/participants (used in 'cmp-properties-step-permissions')\r\n\t\t$scope.formVm.suppressEditAccessModal = false;\r\n\r\n\t\t$scope.$on('$destroy', $scope.$root.$on('component-properties', (event, type, data) => {\r\n\t\t\t// If we're clicking on the already selected field group...\r\n\t\t\tif ($scope.data === data && propsAreVisible) {return;}\r\n\t\t\t// If no component reference was passed...\r\n\t\t\tif (!type) {\r\n\t\t\t\tif(propsAreVisible) {\r\n\t\t\t\t\t// ...hide existing properties panel...\r\n\t\t\t\t\t$animate.animate($element, show, hide, '', {\r\n\t\t\t\t\t\tduration: duration\r\n\t\t\t\t\t}).then(() => {\r\n\t\t\t\t\t\t$animate.leave(componentElem);\r\n\t\t\t\t\t\tpropsElem.html('');\r\n\t\t\t\t\t\t// ...set this flag to 'false' so the animate runs from 'hide' to 'show' the next time a properties component reference is passed :) \r\n\t\t\t\t\t\tpropsAreVisible = false;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (childScope != null) {\r\n\t\t\t\tchildScope.$destroy();\r\n\t\t\t}\r\n\r\n\t\t\tchildScope = $scope.$new(false);\r\n\t\t\t$scope.data = data;\r\n\r\n\t\t\t// defaults are for smart and custom fields\r\n\t\t\tlet attr = 'fields';\r\n\t\t\tlet node = type;\r\n\r\n\t\t\tif(['cmp-properties-step', 'cmp-properties-form-complete', 'cmp-properties-profile-review'].includes(type)) {\r\n\t\t\t\tattr = 'step';\r\n\t\t\t}\r\n\r\n\t\t\tif (!propsAreVisible) {\r\n\t\t\t\tcomponentElem = $compile(`<${node} ${attr}=\"data\" form=\"vm.form\"></${node}>`)(childScope);\r\n\t\t\t\t// clear it then append; otherwise angular calls the toString on the element\r\n\t\t\t\t$animate.enter(componentElem, propsElem).then(() => {\r\n\t\t\t\t\t$animate.animate($element, hide, show, '', {\r\n\t\t\t\t\t\tduration: duration\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t\tpropsAreVisible = true;\r\n\t\t\t} else {\r\n\t\t\t\t$animate.animate($element, show, hide, '', {\r\n\t\t\t\t\tduration: duration\r\n\t\t\t\t}).then(() => {\r\n\t\t\t\t\t// clear it then append; otherwise angular calls the toString on the element\r\n\t\t\t\t\tpropsElem.html('');\r\n\t\t\t\t\t$animate.leave(componentElem).then(() => {\r\n\t\t\t\t\t\tcomponentElem = $compile(`<${node} ${attr}=\"data\" form=\"vm.form\"></${node}>`)(childScope);\r\n\t\t\t\t\t\t$animate.enter(componentElem, propsElem).then(() => {\r\n\t\t\t\t\t\t\t$animate.animate($element, hide, show, '', {\r\n\t\t\t\t\t\t\t\tduration: duration\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tevent.stopPropagation();\r\n\t\t}));\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/form-builder/builder/segment-properties) --# //\r\n// #------------------------------------------------------------# //\r\n\r\nangular.module('ec-forms-segments').directive('segmentFormBuilderBuilderProperties', () => new Properties('properties') );\r\n","/*@ngInject*/\r\nfunction logic() {\r\n\t// logic api\r\n\treturn {\r\n\r\n\t};\r\n}\r\nangular.module('ec-forms-segment-logic').factory('segmentFormBuilderBuilderPropertiesLogic', logic);\r\n","import { State } from 'base-state';\r\nimport { PLUGIN_DEF as placeholder_select } from '../../components/cmp-text-editor/plugins/placeholder_select.js';\r\n\r\n// #--------------------------------# //\r\n// #---- State (/form-builder) ----# //\r\n\r\n// view model that is shared by all segments on this route,\r\n// used for segment coordination. Define initial state here.\r\nconst routeVm = {};\r\n\r\nconst stateName = 'formBuilder';\r\n\r\n// config object for ui-router\r\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\r\nconst stateConfig = {\r\n\turl: '/form-builder/{formId:[0-9A-Za-z-]+}',\r\n\ttemplateUrl: 'routes/form-builder/form-builder.html',\r\n\tresolve: {\r\n\t\tform: /*@ngInject*/ function($stateParams, ssAsync, ssFormTemplatesApi, ssOrganizationSvc) {\r\n\t\t\treturn ssAsync(function*() {\r\n\t\t\t\ttry {\r\n\t\t\t\t\trouteVm.formData = yield ssFormTemplatesApi.get({\r\n\t\t\t\t\t\tid: $stateParams.formId,\r\n\t\t\t\t\t\tinclude: 'steps,formFields,statusHistory'\r\n\t\t\t\t\t});\r\n\t\t\t\t\trouteVm.org = yield ssOrganizationSvc.getActiveOrg();\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tconsole && console.log && console.log('Error getting form', e);\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t},\r\n\t\t$title: /*@ngInject*/ (form) => {\r\n\t\t\treturn `Frontline Central - ${routeVm.formData._name}`;\r\n\t\t}\r\n\t},\r\n\t$permissions: (permissionSvc) => permissionSvc.isPermittedAction('formTemplates', 'create') || permissionSvc.isPermittedAction('formTemplates', 'edit') || permissionSvc.isPermittedAction('formInstances', 'send')\r\n};\r\n\r\n// function loadCKeditor(d, script) {\r\n// \t// let basepath = d.createElement('script');\r\n// \t// basepath.append('var CKEDITOR_BASEPATH = \"src/components/cmp-text-editor/lib/ckeditor/\"');\r\n// \t// d.getElementsByTagName('head')[0].appendChild(basepath);\r\n// \tscript = d.createElement('script');\r\n// \tscript.type = 'text/javascript';\r\n// \tscript.async = true;\r\n// \tscript.onload = function(){\r\n// \t\t// remote script has loaded\r\n// \t};\r\n// \tscript.src = 'https://cdn.ckeditor.com/4.13.0/basic/ckeditor.js';\r\n// \t// script.src = CKEDITOR_BASEPATH + 'ckeditor.js';\r\n// \td.getElementsByTagName('head')[0].appendChild(script);\r\n// };\r\n\r\nfunction loadCKeditor(d) {\r\n\tlet ckeditor = d.createElement('script');\r\n\tckeditor.type = 'text/javascript';\r\n\tckeditor.async = true;\r\n\tckeditor.src = 'https://cdn.ckeditor.com/4.13.1/full-all/ckeditor.js';\r\n\td.getElementsByTagName('head')[0].appendChild(ckeditor);\r\n\tckeditor.onload = function(){\r\n\t\tCKEDITOR.plugins.add(placeholder_select.name, placeholder_select.definition);\r\n\t};\r\n};\r\n\r\n// #-- END State (/form-builder) --# //\r\n// #--------------------------------# //\r\nangular.module('ec-forms').run(loadCKeditor(window.document));\r\n\r\nangular.module('ec-forms').config( /*@ngInject*/ ($stateProvider) => {\r\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\r\n});\r\n// angular.module('super-suit').requires.push('ng.ckeditor');","import { State } from 'base-state';\r\n// #-----------------------------------------------# //\r\n// #---- State (/form-builder/overlay-builder) ----# //\r\n\r\n\r\n// view model that is shared by all segments on this route,\r\n// used for segment coordination. Define initial state here.\r\nconst routeVm = {};\r\n\r\nconst stateName = 'formBuilder.overlayBuilder';\r\n\r\n// config object for ui-router\r\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\r\nconst stateConfig = {\r\n\turl: '/overlay-builder',\r\n\ttemplateUrl: 'routes/form-builder/overlay-builder/overlay-builder.html',\r\n\tresolve: {\r\n\t\tgetTemplate: /*@ngInject*/ ($rootScope, $stateParams, ssPermissionsSvc, ssAsync, ssFormTemplatesApi) => {\r\n\t\t\treturn (ssAsync(function* () {\r\n\t\t\t\tif (!$stateParams.formId) { return; }\r\n\r\n\t\t\t\trouteVm.formTemplate = yield ssFormTemplatesApi.get({\r\n\t\t\t\t\tid: $stateParams.formId,\r\n\t\t\t\t\tinclude: 'steps,formFields,files'\r\n\t\t\t\t});\r\n\r\n\t\t\t\trouteVm.canViewOverlayBuilder = ssPermissionsSvc.isPermittedAction('formTemplates', 'buildOverlay') || !!$rootScope.isPermitted\r\n\t\t\t\t\t.activeUser.idmAdministrator;\r\n\t\t\t})());\r\n\t\t},\r\n\t\torg: /*@ngInject*/ function(ssAsync, ssOrganizationSvc, ssToastHlp) {\r\n\t\t\treturn ssAsync(function*() {\r\n\t\t\t\ttry {\r\n\t\t\t\t\trouteVm.org = yield ssOrganizationSvc.getActiveOrg();\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tssToastHlp.error('There was an error retrieving organization data. Due Dates may not display. Please see the console for more detail.', '', false);\r\n\t\t\t\t\tconsole && console.error && console.error('Error getting Org data', err);\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t},\r\n\t\t$title: /*@ngInject*/ () => {\r\n\t\t\treturn 'Frontline Central';\r\n\t\t}\r\n\t},\r\n\t$permissions: (permissionSvc) => {\r\n\t\treturn !!permissionSvc.permittedActions.activeUser.idmAdministrator || !!permissionSvc.permittedActions.formTemplates.buildOverlay;\r\n\t}\r\n};\r\n\r\n\r\n\r\n// #-- END State (/form-builder/overlay-builder) --# //\r\n// #-----------------------------------------------# //\r\n\r\nangular.module('ec-forms').config( /*@ngInject*/ ($stateProvider) => {\r\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\r\n});\r\n","import {Segment} from 'base-segment';\r\n// #--------------------------------------------------------------------# //\r\n// #---- Segment (/form-builder/overlay-builder/segment-data-panel) ----# //\r\n\r\nclass DataPanel extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $scope, ssEventSvc, ssArrayHlp, ssStringHlp, ssMultiInitiativeFeatureDetectorSvc, formsHlp, fieldsHlp) {\r\n\t\t// view model that is shared by all segments on this route,\r\n\t\t// used for segment coordination\r\n\t\tconst routeVm = $scope.routeVm; // jshint ignore:line\r\n\t\tlet uniqueFieldGroupNames = null;\r\n\t\tconst boxFieldTypes = {\r\n\t\t\ttext: [\r\n\t\t\t\t'super-select-list',\r\n\t\t\t\t'super-input-text',\r\n\t\t\t\t'super-input-redacted',\r\n\t\t\t\t'readOnlyText',\r\n\t\t\t\t'super-digital-signature',\r\n\t\t\t\t'text'\r\n\t\t\t],\r\n\t\t\tdate: [\r\n\t\t\t\t'super-input-datepicker',\r\n\t\t\t\t'super-iso-org-date',\r\n\t\t\t\t'readOnlyDate',\r\n\t\t\t],\r\n\t\t\tcheckbox: [\r\n\t\t\t\t'cmp-checkbox-group',\r\n\t\t\t\t'super-select-list',\r\n\t\t\t\t'readOnlyText',\r\n\t\t\t]\r\n\t\t};\r\n\r\n\t\tconst dateTimeRegex = /-(\\d{13})?$/;\r\n\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentFormBuilderOverlayBuilderDataPanelLogic'); // jshint ignore:line\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\tsteps: [],\r\n\t\t\tfields: [],\r\n\t\t\tfieldGroups: []\r\n\t\t};\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { // jshint ignore:line\r\n\t\t\tstartExpanded(group) {\r\n\t\t\t\tlet formIds = group.fields.map((field) => {\r\n\t\t\t\t\treturn field.id;\r\n\t\t\t\t});\r\n\t\t\t\treturn !!routeVm.selectedBox.formFieldGuids.filter(e => formIds.indexOf(e) !== -1).length;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// filter out any fields we don't need to process (custom 'text' field is not mappable)\r\n\t\tlet fields = routeVm.formTemplate._formFields.filter(field => field._active);\r\n\r\n\t\t// remove fields not viewable for HRMS orgs\r\n\t\tif (ssMultiInitiativeFeatureDetectorSvc.isHRMSEnabled()) {\r\n\t\t\tfields = fields.filter(f => {\r\n\t\t\t\tlet field = fieldsHlp.getFieldById(f);\r\n\t\t\t\tif (field == null) { return true; } // return true to allow this 'f' through\r\n\t\t\t\treturn !field._hideForHRMS; // remove HRMS fields\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tssEventSvc.on('pvb.select-field', selectField, $scope);\r\n\t\tssEventSvc.on('pvb.select-option', selectOption, $scope);\r\n\r\n\t\tfunction selectField(field) {\r\n\t\t\tconst fieldIdx = routeVm.selectedBox.formFieldGuids.indexOf(field.id);\r\n\t\t\tif (fieldIdx >= 0) {\r\n\t\t\t\trouteVm.selectedBox.formFieldGuids.splice(fieldIdx, 1);\r\n\t\t\t} else {\r\n\t\t\t\trouteVm.selectedBox.formFieldGuids.push(field.id);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction selectOption(field, opt) {\r\n\t\t\trouteVm.selectedBox.formFieldGuids = [field.id];\r\n\t\t\tif (opt != null) {\r\n\t\t\t\trouteVm.selectedBox.matchValue = opt;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t//\tsetup watchers\r\n\t\t$scope.$watch('routeVm.selectedBox', box => {\r\n\t\t\tif (box == null) {\r\n\t\t\t\tvm.steps = [];\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tbuildVmSteps(box);\r\n\t\t\tcalcFieldsPresent(box._template || '');\r\n\t\t});\r\n\t\t$scope.$watch('routeVm.selectedBox._template', t => {\r\n\t\t\tif (t == null) { return; }\r\n\t\t\tcalcFieldsPresent(t);\r\n\t\t});\r\n\r\n\t\tfunction calcFieldsPresent(template) {\r\n\t\t\tfields.forEach(f => {\r\n\t\t\t\tswitch (routeVm.selectedBox.type) {\r\n\t\t\t\t\tcase 'text':\r\n\t\t\t\t\t\tf.isAdded = template.includes(f.uniqueId);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'date':\r\n\t\t\t\t\t\tf.isAdded = template.includes(f.uniqueId);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// builds the list of fields that get displayed in the data mapping panel\r\n\t\tfunction buildVmSteps(box) {\r\n\r\n\t\t\t// sort the steps by the step order\r\n\t\t\tconst orderedSteps = formsHlp.sortByOrderField(routeVm.formTemplate._steps, routeVm.formTemplate._stepOrder);\r\n\r\n\t\t\torderedSteps.forEach(step => {\r\n\r\n\t\t\t\tuniqueFieldGroupNames = new Set();\r\n\t\t\t\tstep.fieldGroups = [];\r\n\t\t\t\tstep.hasUnmappableFields = false;\r\n\t\t\t\tvar stepFields = [];\r\n\t\t\t\tvar customFields = [];\r\n\t\t\t\tvar tokenFields = [];\r\n\r\n\t\t\t\t// grab all the fields that belong to this step\r\n\t\t\t\tstepFields = logic.filterAndSortByIdList(fields, step._fieldOrder, {'_tokenField': false});\r\n\r\n\t\t\t\t// set a property on the step that indicates if that step contains any unmappable fields\r\n\t\t\t\tstep.hasUnmappableFields = hasUnmappableFields(stepFields, box);\r\n\r\n\t\t\t\tstepFields.forEach(field => {\r\n\r\n\t\t\t\t\t// we don't need to process unsupported field types for the selected mapping type (rich text editor fields excluded from this rule since we need to grab their token fields)\r\n\t\t\t\t\tif(!isSupportedFieldType(field, box)) return;\r\n\r\n\t\t\t\t\tfield['uniqueId'] = `id${field.id.split('-').join('')}`;\r\n\t\t\t\t\tfield.config = JSON.parse(field._configJson);\r\n\t\t\t\t\tfield['resolvedLabel'] = resolveLabel(field);\r\n\r\n\t\t\t\t\t// trim off any millisecond time strings from existing 'fieldGroup' property values\r\n\t\t\t\t\tlet timeStringIdx = field._fieldGroup ? field._fieldGroup.search(dateTimeRegex) : -1;\r\n\t\t\t\t\tif(timeStringIdx !== -1) {\r\n\t\t\t\t\t\tfield._fieldGroup = field._fieldGroup.slice(0, timeStringIdx)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Grab all form field objects from a rich text editor field's 'tokenFields' collection, and put them into their own collection\r\n\t\t\t\t\tif(Array.isArray(field._tokenFields) && field._tokenFields.length){\r\n\t\t\t\t\t\tfield._tokenFields.forEach((tokenField) => {\r\n\t\t\t\t\t\t\tlet matchingField = fields.find((f) => f._tokenField === true && f._fieldDefId === tokenField.fieldDefId);\r\n\t\t\t\t\t\t\tif(matchingField) {\r\n\t\t\t\t\t\t\t\tmatchingField['uniqueId'] = `id${matchingField.id.split('-').join('')}`;\r\n\t\t\t\t\t\t\t\tmatchingField.config = JSON.parse(matchingField._configJson);\r\n\t\t\t\t\t\t\t\tmatchingField['resolvedLabel'] = resolveLabel(matchingField);\r\n\t\t\t\t\t\t\t\ttokenFields.push(matchingField);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// fields with no '_fieldGroup' property (custom fields) go in their own collection\r\n\t\t\t\t\tif (field._fieldGroup == null) {\r\n\t\t\t\t\t\tcustomFields.push(field);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// create non-custom/non-token field groups for each step\r\n\t\t\t\t\tif (step.fieldGroups.length === 0) {\r\n\t\t\t\t\t\tstep.fieldGroups.push({fieldGroupName: ssStringHlp.toTitleCase(field._fieldGroup) || 'Field Group', fields: [field]});\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet group = step.fieldGroups[step.fieldGroups.length - 1];\r\n\t\t\t\t\tif (field._fieldGroup != null && group.fields[0]._fieldGroup === field._fieldGroup && !group.fields.find(f => f._fieldDefId === field._fieldDefId)) {\r\n\t\t\t\t\t\tgroup.fields.push(field);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tstep.fieldGroups.push({fieldGroupName: ssStringHlp.toTitleCase(field._fieldGroup) || 'Field Group', fields: [field]});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Append the custom fields group to the field groups collection, as long as they exist and there is at least one mappable field\r\n\t\t\t\tif(customFields.length && customFields.some(isMappable)) {\r\n\t\t\t\t\tstep.fieldGroups.push({fieldGroupName: 'custom fields', fields: customFields});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Append the token fields group to the field groups collection, as long as they exist and there is at least one mappable field\r\n\t\t\t\tif(tokenFields.length && tokenFields.some(isMappable)) {\r\n\t\t\t\t\ttokenFields = ssArrayHlp.unique(tokenFields.filter(f => boxFieldTypes[box.type].includes(f._fieldType)));\r\n\t\t\t\t\tstep.fieldGroups.push({fieldGroupName: 'token fields', fields: tokenFields, config: {orderBy: 'resolvedLabel'}});\r\n\t\t\t\t}\r\n\r\n\t\t\t});\r\n\r\n\t\t\t// Determine which groups get displayed based on the existence of mappable fields\r\n\t\t\torderedSteps.forEach((step) => {\r\n\t\t\t\tstep.fieldGroups = step.fieldGroups.filter((group) => {\r\n\t\t\t\t\treturn group.fields.length && group.fields.some(isMappable);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\tvm.steps = orderedSteps.filter(s => s.fieldGroups.length);\r\n\t\t}\r\n\r\n\t\t// determines if a step has unmappable fields within the supported field types of the selected mapping type\r\n\t\tfunction hasUnmappableFields(fields, box) {\r\n\t\t\tconst allFields = fields.reduce((acc, cur) => {\r\n\t\t\t\treturn JSON.parse(cur._configJson).fields ? [...acc, ...JSON.parse(cur._configJson).fields] : [...acc, cur];\r\n\t\t\t}, []).filter(field => isSupportedFieldType(field, box));\r\n\r\n\t\t\treturn allFields.some(field => !isMappable(field));\r\n\t\t}\r\n\r\n\t\t// filters out unsupported field types for the selected mapping (excludes rich text editor fields with content)\r\n\t\tfunction isSupportedFieldType(field, box) { \r\n\t\t\treturn (boxFieldTypes[box.type].includes(field._fieldType) || (field._tokenFields && field._tokenFields.length));\r\n\t\t};\r\n\r\n\t\tfunction isMappable(field) {\r\n\t\t\tconst config = !field.config ? JSON.parse(field._configJson) : field.config || {};\r\n\t\t\treturn config.hasOwnProperty('mappable') ? config['mappable'] === true : true;\r\n\t\t}\r\n\r\n\t\tfunction getFirstUniqueFor(label, count) {\r\n\t\t\t// first pass, num is null\r\n\t\t\tif (count == null) {\r\n\t\t\t\t// already taken, recurse with a number\r\n\t\t\t\tif (uniqueFieldGroupNames.has(label)) { return getFirstUniqueFor(label, 2); }\r\n\t\t\t\t// not taken yet, hot dog!\r\n\t\t\t\tif (!uniqueFieldGroupNames.has(label)) {\r\n\t\t\t\t\tuniqueFieldGroupNames.add(label);\r\n\t\t\t\t\treturn label;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// this label + num combination is taken, increment and recurse\r\n\t\t\t\tif (uniqueFieldGroupNames.has(`${label} (${count})`)) { return getFirstUniqueFor(label, ++count); }\r\n\t\t\t\t// if we've come this far, it must be available\r\n\t\t\t\tuniqueFieldGroupNames.add(`${label} (${count})`);\r\n\t\t\t\treturn `${label} (${count})`;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction resolveLabel(field) {\r\n\t\t\ttry {\r\n\t\t\t\tlet defaultField = fieldsHlp.getFieldById(field);\r\n\t\t\t\tif(defaultField._label !== field._label || !field.config.uniqueLabel) {\r\n\t\t\t\t\treturn field._label;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn field.config.uniqueLabel;\r\n\t\t\t\t}\r\n\t\t\t} catch(e) {\r\n\t\t\t\treturn ''\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/form-builder/overlay-builder/segment-data-panel) --# //\r\n// #--------------------------------------------------------------------# //\r\n\r\nangular.module('ec-forms-segments').directive('segmentFormBuilderOverlayBuilderDataPanel', () => new DataPanel('data-panel') );\r\n","/*@ngInject*/\r\nfunction logic() {\r\n\t// logic api\r\n\treturn {\r\n\r\n\t\tfilterAndSortByIdList: (array, order, props = {}) => {\r\n\t\t\treturn order.split(',').map(\r\n\t\t\t\tid => array.find(item => item.id === id)\r\n\t\t\t).filter(item => {\r\n\t\t\t\tif(item != null) {\r\n\t\t\t\t\treturn Object.keys(props).every(key => (item[key] != null && props[key] === item[key]));\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t};\r\n}\r\nangular.module('ec-forms-segment-logic').factory('segmentFormBuilderOverlayBuilderDataPanelLogic', logic);\r\n","import {Segment} from 'base-segment';\r\n// #-----------------------------------------------------------------# //\r\n// #---- Segment (/form-builder/overlay-builder/segment-overlay) ----# //\r\n\r\nvar interpolate, vpOffsetHlp, logic;\r\n\r\nclass Overlay extends Segment {\r\n\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $scope, $state, $stateParams, $interpolate, $q, $location, rAF, ssAsync, FileUploader, ssAuthSvc, ssToastHlp, ssFormTemplatesApi, ssModalSvc, ssSaveInterrupterSvc, ssEventSvc, ssEnum, formsHlp, filenameHlp, viewportOffsetHlp) {\r\n\r\n\t\tinterpolate = $interpolate;\r\n\t\tvpOffsetHlp = viewportOffsetHlp;\r\n\r\n\t\t// view model that is shared by all segments on this route,\r\n\t\t// used for segment coordination\r\n\t\tconst routeVm = $scope.routeVm; // eslint-disable-line\r\n\t\tlet formVm = $scope.formVm;\r\n\r\n\t\tlet dataWatchDereg = null;\r\n\r\n\t\t// hookup segment logic\r\n\t\tlogic = $injector.get('segmentFormBuilderOverlayBuilderOverlayLogic'); // eslint-disable-line\r\n\r\n\t\tconst MAX_FILESIZE = 52428800;\r\n\t\tconst MAX_FILESIZE_MSG = 'The file upload size cannot exceed 50MB. Please upload a smaller file.';\r\n\t\tconst FILE_UPLOAD_ERROR_TITLE = 'File Upload Failed';\r\n\t\tconst UPLOAD_FAILED_MSG = 'The selected file did not upload correctly. Please try again.';\r\n\t\tconst OVERLAY_FILETYPE = 3; //Overlay pdf\r\n\t\tconst INVALID_EXT_ERROR_MSG = 'The selected file does not have a valid extension. Please choose a file with the \".pdf\" extension.';\r\n\r\n\t\tconst UPLOADER_CONFIG = {\r\n\t\t\twithCredentials: false,\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `Bearer ${ssAuthSvc.token.access}`\r\n\t\t\t},\r\n\t\t\tfilters: [{\r\n\t\t\t\tname: 'validExt',\r\n\t\t\t\tfn: function(fileItem) {\r\n\t\t\t\t\tif (!filenameHlp.getExtension(fileItem.name) || filenameHlp.getExtension(fileItem.name) !== 'pdf') {\r\n\t\t\t\t\t\tssToastHlp.error(INVALID_EXT_ERROR_MSG, FILE_UPLOAD_ERROR_TITLE);\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t};\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t},{\r\n\t\t\t\tname: 'fileSize',\r\n\t\t\t\tfn: function(fileItem) {\r\n\t\t\t\t\tif (fileItem.size != null && fileItem.size >= 0 && fileItem.size >= MAX_FILESIZE) {\r\n\t\t\t\t\t\tssToastHlp.error(MAX_FILESIZE_MSG, FILE_UPLOAD_ERROR_TITLE);\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t};\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}]\r\n\t\t};\r\n\r\n\t\tconst overwriteConfirmation = {\r\n\t\t\ttitle: 'You will lose all your overlay mappings',\r\n\t\t\tcontent: 'Uploading a new file will result in losing all the mappings done on the current form.',\r\n\t\t\tprimaryText: 'Continue',\r\n\t\t\tsecondaryText: 'Cancel'\r\n\t\t};\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\texplodedImageUrls: [],\r\n\t\t\tcurrentPage: -1,\r\n\t\t\tbgImageLoaded: false,\r\n\t\t\tnewBoxStartingPoint: null,\r\n\t\t\tlabelsById: makeLabelMap(),\r\n\t\t\tdata: [],\r\n\t\t\tprocessing: false,\r\n\t\t\tprocessingStatus: '',\r\n\t\t\tcanViewOverlayBuilder: false\r\n\t\t};\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { // eslint-disable-line\r\n\t\t\tnextPage() {\r\n\t\t\t\tif (vm.explodedImageUrls.length === vm.currentPage) { return; }\r\n\t\t\t\tvm.currentPage++;\r\n\t\t\t\tloadPage(vm.currentPage);\r\n\t\t\t},\r\n\t\t\tpreviousPage() {\r\n\t\t\t\tif (vm.currentPage === 1) { return; }\r\n\t\t\t\tvm.currentPage--;\r\n\t\t\t\tloadPage(vm.currentPage);\r\n\t\t\t},\r\n\t\t\tselectBox(box, evt) {\r\n\t\t\t\t$scope.$root.safeApply(() => routeVm.selectedBox = box);\r\n\t\t\t\tssEventSvc.emit('pvb.select-box', box);\r\n\t\t\t\tif (evt != null) { evt.stopPropagation(); }\r\n\t\t\t},\r\n\t\t\tcreatedBox(box) {\r\n\t\t\t\tbox.type = routeVm.selectedTool.type;\r\n\t\t\t\tbox.shape = routeVm.selectedTool.shape;\r\n\t\t\t\tbox.template = '';\r\n\t\t\t\tbox.formFieldGuids = [];\r\n\t\t\t\tvm.data = [...vm.data, box];\r\n\t\t\t\trAF(() => go.selectBox(box), $scope);\r\n\t\t\t},\r\n\t\t\tremoveBox(box) {\r\n\t\t\t\tvm.data = vm.data.filter(b => b !== box);\r\n\t\t\t},\r\n\t\t\tcalculateImageWidth() {\r\n\t\t\t\treturn { 'max-width': $scope.canvasWidth + 'px' };\r\n\t\t\t},\r\n\t\t\tremove() {\r\n\t\t\t\tlet resolver = $q.when();\r\n\t\t\t\tlet confirmation = {\r\n\t\t\t\t\ttitle: 'You will lose all your overlay mappings',\r\n\t\t\t\t\tcontent: 'Removing this file will result in losing all the mappings done on the current form.',\r\n\t\t\t\t\tprimaryText: 'Continue',\r\n\t\t\t\t\tsecondaryText: 'Cancel',\r\n\t\t\t\t\talwaysOnTop: true\r\n\t\t\t\t};\r\n\t\t\t\tif(vm.data.length) {\r\n\t\t\t\t\tresolver = ssModalSvc.showDestructive(confirmation);\r\n\t\t\t\t}\r\n\t\t\t\tresolver.then(() => {\r\n\t\t\t\t\tvm.processing = true;\r\n\t\t\t\t\tvm.processingStatus = 'Removing PDF Overlay...';\r\n\t\t\t\t\tlogic.removeFile(routeVm.formTemplate).then(res => {\r\n\t\t\t\t\t\tdataWatchDereg();\r\n\t\t\t\t\t\tdataWatchDereg = null;\r\n\t\t\t\t\t\tssSaveInterrupterSvc.clear();\r\n\t\t\t\t\t\tvm.explodedImageUrls = [];\r\n\t\t\t\t\t\tvm.processing = false;\r\n\t\t\t\t\t\tvm.processingStatus = '';\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tfunction makeLabelMap(opt){\r\n\t\t\treturn routeVm.formTemplate._formFields.reduce(function (o, f) {\r\n\t\t\t\tif(!f._fieldDefId) { return o };\r\n\t\t\t\tlet fieldVal = opt != null && f._options.length ? f._options[f._options.indexOf(opt)] : f._label;\r\n\t\t\t\to[`id${f.id.split('-').join('')}`] = `${fieldVal}`;\r\n\t\t\t\treturn o;\r\n\t\t\t}, {})\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t* Loads a specific page of mapped fields into the view model and renders them into the view\r\n\t\t* @param {int} pageNum The requested page number to load, limited to a page between 1 and the max number of exploded image urls\r\n\t\t*/\r\n\t\tfunction loadPage(pageNum) {\r\n\r\n\t\t\tvar allPages;\r\n\t\t\tvar definition = routeVm.formTemplate._printPreviewDefinition;\r\n\t\t\tvm.data = [];\r\n\r\n\t\t\tif (definition == null) { return; }\r\n\t\t\tif (definition.printPreviewPages == null) { return; }\r\n\t\t\tif (definition.printPreviewPages.length === 0) { return; }\r\n\r\n\t\t\t// Dont go past the end\r\n\t\t\tif (pageNum > vm.explodedImageUrls.length) { pageNum = vm.explodedImageUrls.length; }\r\n\t\t\t// or before the beginning\r\n\t\t\tif (pageNum < 1) { pageNum = 1; }\r\n\r\n\t\t\t// All of the pages that were stored on the Print Preview Definition\r\n\t\t\tallPages = definition.printPreviewPages;\r\n\t\t\t// Take the definition's data, convert it to the client dataset and set it so that the canvas can render any boxes\r\n\t\t\tvm.data = logic.definitiontoLocalData(allPages[pageNum - 1], vm.labelsById);\r\n\t\t\tvm.currentPage = pageNum;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t* Monitor the mapper's data of mapped fields for a page of the overlay builder\r\n\t\t* and convert to the Definition's model as things change to keep things in sync\r\n\t\t*/\r\n\r\n\t\tfunction initializeDataWatch() {\r\n\t\t\tif (dataWatchDereg) dataWatchDereg();\r\n\t\t\tdataWatchDereg = $scope.$watch('vm.data', function (nv, ov) {\r\n\t\t\t\tif (nv == null || nv === ov || routeVm.formTemplate._printPreviewDefinition == null) { return; }\r\n\t\t\t\tconst pageIdx = vm.currentPage - 1;\r\n\t\t\t\t// Get the current page's mappings\r\n\t\t\t\tconst { printPreviewPages } = routeVm.formTemplate._printPreviewDefinition;\r\n\t\t\t\t// Convert the mapper's definition to the Server's definition\r\n\t\t\t\tprintPreviewPages[pageIdx] = localDataToDefinition(nv);\r\n\t\t\t\t// Manually make the array dirty so it can be saved\r\n\t\t\t\trouteVm.formTemplate.$$forceChangedState('_printPreviewDefinition');\r\n\t\t\t\tformVm.modelChanged();\r\n\t\t\t}, true);\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t* Convert the local overlay mapping to a printViewDefinition's PrintPreviewPage data item\r\n\t\t* @param {object} localData The overlay mapper's definition of what a drawn mapping is\r\n\t\t*/\r\n\t\tfunction localDataToDefinition(localData) {\r\n\t\t\treturn {\r\n\t\t\t\tpageNumber: vm.currentPage - 1,\r\n\t\t\t\tpageObjects: localData.map(d => ({\r\n\t\t\t\t\tfieldType: d.type,\r\n\t\t\t\t\tlocationY: d.top,\r\n\t\t\t\t\tlocationX: d.left,\r\n\t\t\t\t\twidth: 100 - d.right - d.left,\r\n\t\t\t\t\theight: 100 - d.bottom - d.top,\r\n\t\t\t\t\tformFieldGuids: d.formFieldGuids,\r\n\t\t\t\t\tmatchValue: d.matchValue,\r\n\t\t\t\t\tstringFormat: d.stringFormat || null,\r\n\t\t\t\t}))\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// For the uploader, so that we can post data for the org\r\n\t\tvar uploader = $scope.uploader = new FileUploader(UPLOADER_CONFIG);\r\n\r\n\t\tuploader.onAfterAddingFile = function(fileItem) {\r\n\t\t\tlet resolver = $q.when();\r\n\t\t\t// if the form is an edit we need to show a change confirmation dialog\r\n\t\t\tif (vm.explodedImageUrls.length) {\r\n\t\t\t\tresolver = ssModalSvc.showDestructive(overwriteConfirmation);\r\n\t\t\t}\r\n\t\t\tresolver.then(() => {\r\n\t\t\t\taddFile(fileItem);\r\n\t\t\t}, () => {\r\n\t\t\t\tfileItem.cancel();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\tfunction addFile(fileItem) {\r\n\t\t\tvm.processing = true;\r\n\t\t\tvm.processingStatus = 'Adding PDF Overlay...';\r\n\r\n\t\t\tssFormTemplatesApi.attachFile({}, {\r\n\t\t\t\tfilename: fileItem.file.name,\r\n\t\t\t\tfileType: OVERLAY_FILETYPE\r\n\t\t\t}).then(file => {\r\n\t\t\t\t$scope.ctxDomEl.style.display = 'block';\r\n\t\t\t\tvm.file = file;\r\n\t\t\t\tvm.file.filename = file._filename;\r\n\t\t\t\tfileItem.updatedUrl = ssFormTemplatesApi.getUploadFileUrl({ id: vm.file.id });\r\n\t\t\t\tfileItem.upload();\r\n\t\t\t}).catch((err) => {\r\n\t\t\t\tssToastHlp.error('File upload cancelled.');\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tuploader.onBeforeUploadItem = function (item) {\r\n\t\t\titem.url = item.updatedUrl;\r\n\t\t};\r\n\r\n\t\tuploader.onErrorItem = function (fileItem, response, status, headers) {\r\n\t\t\tvm.processing = false;\r\n\t\t\tvm.processingStatus = '';\r\n\t\t\tssToastHlp.error(UPLOAD_FAILED_MSG, FILE_UPLOAD_ERROR_TITLE);\r\n\t\t\tfileItem.remove();\r\n\t\t\tconsole && console.error && console.error('Error uploading file', response);\r\n\t\t};\r\n\r\n\t\tuploader.onCancelItem = function (fileItem, response, status, headers) {\r\n\t\t\tssToastHlp.info('File upload cancelled.');\r\n\t\t\tfileItem.remove();\r\n\t\t\tdocument.getElementById('underlay-uploader').value = '';\r\n\t\t\tvm.bgImageLoaded = false;\r\n\t\t};\r\n\r\n\t\tuploader.onSuccessItem = function (fileItem, response, status, headers) {\r\n\t\t\tssAsync(function* () {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tyield ssFormTemplatesApi.associateFile({\r\n\t\t\t\t\t\tid: routeVm.formTemplate.id\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tfileId: vm.file.id\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\t// Patch form template with a printviewdefinition with the fileId\r\n\t\t\t\t\tif (routeVm.formTemplate._printPreviewDefinition == null) { routeVm.formTemplate._printPreviewDefinition = {}; }\r\n\t\t\t\t\trouteVm.formTemplate._printPreviewDefinition.templateFileId = vm.file.id;\r\n\r\n\t\t\t\t\t// Create the printView pages object for managing overlay pages\r\n\t\t\t\t\trouteVm.formTemplate._printPreviewDefinition.printPreviewPages = response.explodedImageUrls.map(v => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tpageNumber: 0,\r\n\t\t\t\t\t\t\tpageObjects: []\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tyield routeVm.formTemplate.$save();\r\n\t\t\t\t\tyield init();\r\n\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tvm.processing = false;\r\n\t\t\t\t\tvm.processingStatus = '';\r\n\t\t\t\t\tconsole && console.error && console.error('Error associating file with form template', err);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tuploader.clearQueue();\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t};\r\n\r\n\t\tfunction init() {\r\n\t\t\treturn ssAsync(function*() {\r\n\t\t\t\tformVm.modelChanged(false);\r\n\t\t\t\trouteVm.selectedBox = null;\r\n\t\t\t\ttry {\r\n\t\t\t\t//\tif we have somehow gotten to this page with an active template, force the user to deactivate or return to form templates page\r\n\t\t\t\tif($stateParams.deactivate === 'true' || routeVm.formTemplate._statusId === ssEnum.formTemplateStatus.active) {\r\n\r\n\t\t\t\t\tvar modalConfig = {\r\n\t\t\t\t\t\ttitle: 'Edit Form Template',\r\n\t\t\t\t\t\tcontent: 'This is an active template and will need to be deactivated to continue',\r\n\t\t\t\t\t\tprimaryText: 'Deactivate and continue',\r\n\t\t\t\t\t\tsecondaryText: 'Cancel',\r\n\t\t\t\t\t\talwaysOnTop: true\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tssModalSvc.showStandard(modalConfig).then(() => {\r\n\t\t\t\t\t\tformVm.loading = true;\r\n\t\t\t\t\t\tformVm.loadingMsg = 'Deactivating \"'+routeVm.formTemplate._name+'\"';\r\n\t\t\t\t\t\tssFormTemplatesApi.editActive(routeVm.formTemplate).then((res)=> {\r\n\t\t\t\t\t\t\t$location.url(`/ec-forms/form-builder/${res.id}/overlay-builder`);\r\n\t\t\t\t\t\t\tformVm.loading = false;\r\n\t\t\t\t\t\t\tformVm.loadingMsg = '';\r\n\t\t\t\t\t\t}).catch((err) => {\r\n\t\t\t\t\t\t\tssToastHlp.error('there was an error deactivating the form template', '');\r\n\t\t\t\t\t\t\t$state.go('base.formTemplates');\r\n\t\t\t\t\t\t\tconsole && console.error && console.error(err);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}).catch(() => {\r\n\t\t\t\t\t\t$state.go('base.formTemplates');\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t//\tCheck to see if we have a file associated to the printPreviewDefinition\r\n\t\t\t\t\tif (routeVm.formTemplate._printPreviewDefinition && routeVm.formTemplate._printPreviewDefinition.templateFileId) {\r\n\t\t\t\t\t\tvm.processing = true;\r\n\t\t\t\t\t\tvm.processingStatus = 'Loading PDF overlay';\r\n\t\t\t\t\t\t// Get the file that is linked as the overlay document\r\n\t\t\t\t\t\tvm.file = yield ssFormTemplatesApi.getFile({ id: routeVm.formTemplate._printPreviewDefinition.templateFileId });\r\n\t\t\t\t\t\t// grab each page of the pdf that was exploded into images\r\n\t\t\t\t\t\tvm.explodedImageUrls = vm.file._explodedImageUrls;\r\n\r\n\t\t\t\t\t\trAF.raw(function () {\r\n\t\t\t\t\t\t\tconst firstImage = document.querySelector('.pages img:first-child');\r\n\t\t\t\t\t\t\tfirstImage.onload = function () {\r\n\t\t\t\t\t\t\t\tvm.bgImageLoaded = true;\r\n\t\t\t\t\t\t\t\t$scope.$digest();\r\n\t\t\t\t\t\t\t\t$scope.$emit('canvas-resize');\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t//\tDirty form detection initialization\r\n\t\t\t\t\t\tformsHlp.initSaveInterrupter(routeVm.formTemplate);\r\n\t\t\t\t\t//\tthats it, lets open the first page and see what happens.\r\n\t\t\t\t\t\tloadPage(1);\r\n\t\t\t\t\t\tinitializeDataWatch();\r\n\t\t\t\t\t\tvm.processing = false;\r\n\t\t\t\t\t\tvm.processingStatus = '';\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch(err) {\r\n\t\t\t\t\tssToastHlp.error('There was an error initializing the overlay builder', 'Error');\r\n\t\t\t\t\tconsole && console.error && console.error(err);\r\n\t\t\t\t\tvm.processing = false;\r\n\t\t\t\t\tvm.processingStatus = '';\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t};\r\n\t\tinit();\r\n\t}\r\n\r\n\tlink(scope, elem, attrs) {\r\n\t\tconst MAX_CANVAS_WIDTH = 907;\r\n\r\n\t\tconst vm = scope.vm;\r\n\t\tconst routeVm = scope.routeVm;\r\n\t\tconst win = angular.element(window);\r\n\t\tconst el = elem[0];\r\n\t\tconst ctxElem = elem.find('canvas');\r\n\t\tconst wrapper = angular.element(el.getElementsByClassName('mapping-canvas')[0]);\r\n\t\tconst ctxDomEl = ctxElem[0];\r\n\t\tscope.ctxDomEl = ctxDomEl;\r\n\t\tconst ctx = ctxDomEl.getContext('2d');\r\n\t\t// var heightMultiplier = 1.2942; //Letter\r\n\t\tvar heightMultiplier = 1.6471; //legal\r\n\t\tvar elWidth = ctxDomEl.offsetWidth;\r\n\t\tvar elHeight = 0;\r\n\r\n\t//\tset the canvas dimensions and do the initial paint\r\n\t\tupdateHeight(wrapper.width);\r\n\r\n\t//\tlisten and bind for events\r\n\t\twin.on('resize', handleResize);\r\n\t\twin.on('scroll', handleResize);\r\n\t\tscope.$on('$destroy', () => win.off('resize', handleResize));\r\n\t\tscope.$on('$destroy', () => win.off('scroll', handleResize));\r\n\t\tscope.$on('canvas-resize', handleResize);\r\n\r\n\t\tsidekick.events.on('nav.expanded-footprint', () => { // eslint-disable-line\r\n\t\t\tsetTimeout(() => handleResize(),0);\r\n\t\t});\r\n\t//\tcapture the mouse events on the canvas\r\n\t\tctxElem.on('mousedown', startNewBox);\r\n\t\tctxElem.on('mouseup', finishNewBox);\r\n\r\n\t\tscope.$watch('vm.data', paint, true);\r\n\t\tscope.$watch('vm.bgImageLoaded', paint);\r\n\r\n\t\tfunction handleResize() {\r\n\t\t\tconst newElWidth = el.clientWidth;\r\n\t\t\tif (newElWidth === elWidth) { return; }\r\n\t\t\tupdateHeight(newElWidth);\r\n\t\t}\r\n\r\n\t\tfunction finishNewBox() {\r\n\t\t\tscope.$root.safeApply(() => vm.newBoxStartingPoint = null);\r\n\t\t}\r\n\r\n\t\tfunction startNewBox(evt) {\r\n\t\t\tpaint();\r\n\t\t\t/*\r\n\t\t\tif we have a box selected, prevent drawing a new one until we have deselected the one we are on\r\n\t\t\t*/\r\n\t\t\tif (routeVm.selectedBox != null) { return; }\r\n\r\n\t\t\t/*\r\n\t\t\tget the current size of our element and use it to calc the relative mouse position\r\n\t\t\t*/\r\n\t\t\tconst elRect = wrapper[0].getBoundingClientRect();\r\n\r\n\t\t\tscope.$root.safeApply(function () {\r\n\t\t\t\tvar offsets = vpOffsetHlp.getViewportOffsets(window);\r\n\r\n\t\t\t\tvm.newBoxStartingPoint = {\r\n\t\t\t\t\tx: evt.pageX - elRect.left - offsets.left,\r\n\t\t\t\t\ty: evt.pageY - elRect.top - offsets.top\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction updateHeight(width) {\r\n\t\t\tconst firstImage = document.querySelector('.pages .visible img');\r\n\t\t\tvar height = 0;\r\n\r\n\t\t\tif (firstImage) {\r\n\t\t\t\t/*\r\n\t\t\t\tattempt to calculate what the height should be based upon the actual size of the image, and not assume letter or legal because scaling legal placements to letter placements causes fields to render in the wrong place.\r\n\t\t\t\t*/\r\n\t\t\t\theightMultiplier = firstImage.height / firstImage.width;\r\n\r\n\t\t\t\t/*\r\n\t\t\t\tThe canvas needs to be the same width as the image or the server will generate the wrong placements If somehow the image is larger or smaller than the canvas originally calculated, match them up\r\n\t\t\t\t*/\r\n\t\t\t\twidth = firstImage.width;\r\n\t\t\t\theight = firstImage.height;\r\n\r\n\t\t\t}\r\n\t\t\tif (width > MAX_CANVAS_WIDTH) { width = MAX_CANVAS_WIDTH; }\r\n\t\t\tif (height === 0) { height = width * heightMultiplier; } // in case the height can't be calced at load time\r\n\r\n\t\t\telWidth = width;\r\n\t\t\telHeight = height;\r\n\t\t\tctxDomEl.width = scope.canvasWidth = ctxDomEl.style.width = elWidth;\r\n\t\t\tctxDomEl.height = scope.canvasHeight = ctxDomEl.style.height = elHeight;\r\n\r\n\t\t\tpaint();\r\n\t\t}\r\n\r\n\t\tfunction paint() {\r\n\t\t\tctx.clearRect(0, 0, elWidth, elHeight);\r\n\t\t\tif (!(scope.vm.data instanceof Array)) { return; }\r\n\r\n\t\t\tctx.fillStyle = '#000000';\r\n\t\t\tif (scope.vm.bgImageLoaded) {\r\n\t\t\t\tctx.strokeStyle = '#000000';\r\n\t\t\t\tctx.lineWidth = 2;\r\n\t\t\t\tscope.vm.data = scope.vm.data\r\n\t\t\t\t\t.filter(c => 100 - c.left - c.right > 1 || c === scope.vm.drawingBox);\r\n\t\t\t\tscope.vm.data.forEach(paintCell);\r\n\t\t\t} else {\r\n\t\t\t\tctx.fillRect(0, 0, elWidth, elHeight);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t//\tpainting an individual cell data\r\n\t\tfunction paintCell(cell) {\r\n\t\t\tconst box = getPixels(cell);\r\n\t\t\tvar cellType = cell.type;\r\n\r\n\t\t\tif (['text', 'date', 'checkbox'].includes(cellType)) {\r\n\t\t\t\tif (box.width < 10 || box.height < 10) { return; }\r\n\t\t\t\tvar value;\r\n\t\t\t\ttry {\r\n\t\t\t\t\tcell._template = `{{${cell.formFieldGuids.map(g => `id${g.split('-').join('')}`).join('}} {{')}}}`;\r\n\t\t\t\t\tvalue = interpolate(cell._template)(scope.vm.labelsById);\r\n\t\t\t\t\tcell.templateString = logic.convertBracketValueToCsv(value);\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tconsole && console.error && console.error('Error painting the cell', err);\r\n\t\t\t\t\tvalue = 'TEMPLATE ERROR';\r\n\t\t\t\t}\r\n\r\n\t\t\t\tctx.font = `12px monospace`;\r\n\t\t\t\tctx.textBaseline = \"ideographic\";\r\n\t\t\t\tlet bottom = box.top + box.height;\r\n\t\t\t\tlet fontWidth = ctx.measureText(value).width;\r\n\r\n\t\t\t//\treduce value until the text fits\r\n\t\t\t\twhile (fontWidth > box.width) {\r\n\t\t\t\t\tvalue = value.slice(0, -1);\r\n\t\t\t\t\tfontWidth = ctx.measureText(value).width;\r\n\t\t\t\t}\r\n\r\n\t\t\t//\tplacement is bottom left\r\n\t\t\t\tctx.fillText(value, box.left, bottom);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction getPixels(cell) {\r\n\t\t\tconst box = {};\r\n\t\t\tconst heightCalc = elHeight / 100;\r\n\t\t\tconst widthCalc = elWidth / 100;\r\n\r\n\t\t\tbox.top = heightCalc * cell.top;\r\n\t\t\tbox.right = widthCalc * (100 - cell.right);\r\n\t\t\tbox.bottom = heightCalc * (100 - cell.bottom);\r\n\t\t\tbox.left = widthCalc * cell.left;\r\n\t\t\tbox.width = box.right - box.left;\r\n\t\t\tbox.height = box.bottom - box.top;\r\n\r\n\t\t\tif (box.top < 0) { box.top = 0; }\r\n\t\t\tif (box.left < 0) { box.left = 0; }\r\n\r\n\t\t\treturn box;\r\n\t\t}\r\n\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/form-builder/overlay-builder/segment-overlay) --# //\r\n// #-----------------------------------------------------------------# //\r\n\r\nangular.module('ec-forms-segments').directive('segmentFormBuilderOverlayBuilderOverlay', () => new Overlay('overlay') );\r\n","/*@ngInject*/\r\nfunction logic(ssAsync, $interpolate) {\r\n\t// logic api\r\n\treturn {\r\n\t\tdefinitiontoLocalData,\r\n\t\tremoveFile,\r\n\t\tconvertBracketValueToCsv\r\n\t};\r\n\r\n\t/**\r\n\t * Convert a server mapping definition to a client's mapping definition\r\n\t *\r\n\t * @param {object} definition the PrintViewDefinition's printPreviewPage object that defines a page and it's related field mappings according to the server\r\n\t */\r\n\tfunction definitiontoLocalData(definition, labels) {\r\n\t\tif (definition == null) { return; }\r\n\t\treturn definition.pageObjects.map(d => {\r\n\t\t\tconst obj = {\r\n\t\t\t\ttype: d.fieldType || 'text',\r\n\t\t\t\ttop: d.locationY,\r\n\t\t\t\tleft: d.locationX,\r\n\t\t\t\tright: (100 - (d.width + d.locationX)),\r\n\t\t\t\tbottom: (100 - (d.height + d.locationY)),\r\n\t\t\t\tformFieldGuids: d.formFieldGuids,\r\n\t\t\t\tstringFormat: d.stringFormat || null,\r\n\t\t\t\tmatchValue: d.matchValue\r\n\t\t\t};\r\n\t\t\tif(['text', 'date'].includes(obj.type)) {\r\n\t\t\t\tobj._template = `{{${d.formFieldGuids.map(x => `id${x.split('-').join('')}`).join('}} {{')}}}`;\r\n\t\t\t\tlet value = $interpolate(obj._template)(labels);\r\n\t\t\t\tobj.templateString = convertBracketValueToCsv(value) || '';\r\n\t\t\t}\r\n\t\t\treturn obj;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Removed a file from the template\r\n\t *\r\n\t * @param {Object} template\r\n\t */\r\n\tfunction removeFile(template) {\r\n\t\treturn ssAsync(function*() {\r\n\t\t\tlet file = template._files.find(file => file._fileId === template._printPreviewDefinition.templateFileId);\r\n\t\t\tif(file) {\r\n\t\t\t\tyield file.$remove();\r\n\t\t\t}\r\n\t\t\ttemplate._printPreviewDefinition.printPreviewPages = [];\r\n\t\t\ttemplate._printPreviewDefinition.templateFileId = null;\r\n\t\t\tyield template.$save();\r\n\t\t\tyield template.$refresh();\r\n\t\t})();\r\n\t}\r\n\r\n\tfunction convertBracketValueToCsv(value){\r\n\t\tif(!value.length) { return ''; }\r\n\t\treturn value.split('] [').join(',').replace('[', '').replace(']','');\r\n\t}\r\n}\r\nangular.module('ec-forms-segment-logic').factory('segmentFormBuilderOverlayBuilderOverlayLogic', logic);\r\n","import { State } from 'base-state';\r\n// #---------------------------------------# //\r\n// #---- State (/form-builder/preview) ----# //\r\n\r\n\r\n// view model that is shared by all segments on this route,\r\n// used for segment coordination. Define initial state here.\r\nconst routeVm = {\r\n\tadded: [],\r\n\tprops: false,\r\n\taddingFields: false\r\n};\r\n\r\nconst stateName = 'formBuilder.preview';\r\n\r\n// config object for ui-router\r\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\r\nconst stateConfig = {\r\n\turl: '/preview?returnTo&showPDFoverlay',\r\n\ttemplateUrl: 'routes/form-builder/preview/preview.html',\r\n\tresolve: {\r\n\t\tform: /*@ngInject*/ function($stateParams, ssAsync, ssFormTemplatesApi, $sce) {\r\n\t\t\t\r\n\t\t\trouteVm.hasPDFOverlay = routeVm.showPDFOverlay = false;\r\n\r\n\t\t\treturn ssAsync(function*() {\r\n\t\t\t\ttry {\r\n\t\t\t\t\trouteVm.formData = yield ssFormTemplatesApi.get({\r\n\t\t\t\t\t\tid: $stateParams.formId,\r\n\t\t\t\t\t\tinclude: 'steps,formFields,statusHistory,files'\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t// Check to see if the form template has a PDF overlay, if you have a file you have an overlay\r\n\t\t\t\t\tif (routeVm.formData._printPreviewDefinition && routeVm.formData._printPreviewDefinition.templateFileId != null) {\r\n\t\t\t\t\t\t// retrieve the PDF form object\r\n\t\t\t\t\t\tlet formOverlay = yield ssFormTemplatesApi.generatePDFOverlay({\r\n\t\t\t\t\t\t\tformTemplateId: routeVm.formData.id\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif (formOverlay._string !== null) {\r\n\t\t\t\t\t\t\t// sanitize the '_string' property as a trusted URL for use in the iframe\r\n\t\t\t\t\t\t\trouteVm.PDFOverlayUrl = $sce.trustAsResourceUrl(formOverlay._string);\r\n\r\n\t\t\t\t\t\t\t// set a flag to toggle form versions\r\n\t\t\t\t\t\t\trouteVm.hasPDFOverlay = true;\r\n\r\n\t\t\t\t\t\t\t// show the PDF if we have arrived here from Overlay Builder\r\n\t\t\t\t\t\t\trouteVm.showPDFOverlay = JSON.parse($stateParams.showPDFoverlay);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tconsole && console.log && console.log('Error getting form', e);\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t},\r\n\t\t$title: ['$title', $title => {\r\n\t\t\treturn $title + ' (Preview)';\r\n\t\t}],\r\n\t},\r\n\t$permissions: (permissionSvc) => permissionSvc.isPermittedAction('formTemplates', 'view') ||\r\n\t\tpermissionSvc.isPermittedAction('formTemplates', 'edit' ||\r\n\t\t\tpermissionSvc.isPermittedAction('formTemplates', 'create'))\r\n};\r\n\r\n\r\n\r\n// #-- END State (/form-builder/preview) --# //\r\n// #---------------------------------------# //\r\n\r\nangular.module('ec-forms').config( /*@ngInject*/ ($stateProvider) => {\r\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\r\n});\r\n","import {Segment} from 'base-segment';\r\n// #-------------------------------------------------------------# //\r\n// #---- Segment (/form-builder/preview/segment-attachments) ----# //\r\n\r\nclass Attachments extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $scope, $window, ssAsync, filenameHlp, ssFormTemplatesApi) {\r\n\t\t// view model that is shared by all segments on this route,\r\n\t\t// used for segment coordination\r\n\t\tconst routeVm = $scope.routeVm; // jshint ignore:line\r\n\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentFormBuilderPreviewAttachmentsLogic'); // jshint ignore:line\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = { // jshint ignore:line\r\n\t\t\tisLoading: true\r\n\t\t};\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { // jshint ignore:line\r\n\t\t\tdownload(url) {\r\n\t\t\t\t$window.open(url, '_blank');\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tssAsync(function*() {\r\n\t\t\tlet ids = routeVm.formData._files.map(file => file._fileId);\r\n\t\t\ttry {\r\n\t\t\t\tvm.files = yield ssFormTemplatesApi.getFiles({}, {\r\n\t\t\t\t\tids: ids\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tvm.files = vm.files.filter((file) => {\r\n\t\t\t\t\treturn routeVm.formData._printPreviewDefinition ? file.id !== routeVm.formData._printPreviewDefinition.templateFileId : true;\r\n\t\t\t\t}).map(file => {\r\n\t\t\t\t\tlet ext = filenameHlp.getExtension(file._filename);\r\n\t\t\t\t\tfile.icon = filenameHlp.getIcon(ext);\r\n\t\t\t\t\treturn file;\r\n\t\t\t\t});\r\n\t\t\t} catch(e) {\r\n\t\t\t\tconsole && console.log && console.log('Error getting file records', e);\r\n\t\t\t} finally {\r\n\t\t\t\tvm.isLoading = false;\r\n\t\t\t}\r\n\t\t})();\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/form-builder/preview/segment-attachments) --# //\r\n// #-------------------------------------------------------------# //\r\n\r\nangular.module('ec-forms-segments').directive('segmentFormBuilderPreviewAttachments', () => new Attachments('attachments') );\r\n","/*@ngInject*/\r\nfunction logic() {\r\n\t// logic api\r\n\treturn {\r\n\r\n\t};\r\n}\r\nangular.module('ec-forms-segment-logic').factory('segmentFormBuilderPreviewAttachmentsLogic', logic);\r\n","import { Segment } from 'base-segment';\r\n// #---------------------------------------------------------------# //\r\n// #---- Segment (/form-builder/preview/segment-form-workflow) ----# //\r\n\r\nclass FormWorkflow extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $scope, $anchorScroll, ssEventSvc, ssEnum, ssMultiInitiativeFeatureDetectorSvc, formsHlp, fieldsHlp) {\r\n\t\t// view model that is shared by all segments on this route,\r\n\t\t// used for segment coordination\r\n\t\tconst routeVm = $scope.routeVm;\r\n\t\tconst logic = $injector.get('segmentFormBuilderPreviewFormWorkflowLogic'); // eslint-disable-line\r\n\t\tconst stepMap = new Map();\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\tsteps: [],\r\n\t\t\treviewStep: {\r\n\t\t\t\t'_name': 'Review Profile Updates',\r\n\t\t\t\t'review': true\r\n\t\t\t},\r\n\t\t\tstepAction: ssEnum.stepAction,\r\n\t\t\tselectedStep: null,\r\n\t\t\tloading: true\r\n\t\t};\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { // jshint ignore:line\r\n\t\t\tselectStep(index, step) {\r\n\t\t\t\tvm.selectedStepId = step.id;\r\n\t\t\t\tssEventSvc.emit('form-builder.builder.step-clicked', index, step);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tssEventSvc.on('form-builder.summary.step-clicked', function(index, step) {\r\n\t\t\tvm.selectedStepId = stepMap.get(step.id).id;\r\n\t\t\t$anchorScroll('fb-step-' + index);\r\n\t\t}, $scope);\r\n\r\n\t\t(function initVmFromBuilderData() {\r\n\r\n\t\t\tformsHlp.sortByOrderField(routeVm.formData._steps, routeVm.formData._stepOrder);\r\n\r\n\t\t\trouteVm.formData._steps.forEach(function(step) {\r\n\t\t\t\tstep.fields = [];\r\n\t\t\t\tif (typeof step.id === 'string') {\r\n\t\t\t\t\tstepMap.set(step.id, step);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// add fields to their steps\r\n\t\t\tfor (let i = routeVm.formData._formFields.length; i--;) {\r\n\t\t\t\tlet field = routeVm.formData._formFields[i];\r\n\t\t\t\tif (!field._tokenField && field._step && stepMap.has(field._step.id)) {\r\n\t\t\t\t\tstepMap.get(field._step.id).fields.push(field);\r\n\t\t\t\t} else {\r\n\t\t\t\t\trouteVm.formData._formFields.splice(i, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\trouteVm.formData._steps.forEach(function(step) {\r\n\r\n\t\t\t\tformsHlp.sortByOrderField(step.fields, step._fieldOrder);\r\n\r\n\t\t\t\tstep.participantLabel = step._stepParticipant.name || ssEnum.stepParticipantType.byValue(step._stepParticipant.participantType);\r\n\r\n\t\t\t\t// make step fieldGroups\r\n\t\t\t\tstep.fieldGroups = [];\r\n\t\t\t\tstep.fields.forEach(function(field) {\r\n\t\t\t\t\tif (ssMultiInitiativeFeatureDetectorSvc.isHRMSEnabled()) {\r\n\t\t\t\t\t\t// remove those not viewable for HRMS\r\n\t\t\t\t\t\tlet templateField = fieldsHlp.getFieldById(field);\r\n\r\n\t\t\t\t\t\tif (templateField != null && templateField._hideForHRMS) { return; }\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t/* TEMP - remove the '_fieldGroup' property from the custom field objects */\r\n\t\t\t\t\tlet customFieldIds = [\r\n\t\t\t\t\t\t'951626b1-a422-46b4-9fa1-3b5acf7ee8fc',\r\n\t\t\t\t\t\t'977a2273-62c1-4eef-8d63-91f9d8d1e0bf',\r\n\t\t\t\t\t\t'10a88a23-f8f3-48eb-aa48-c466db06378b',\r\n\t\t\t\t\t\t'17ff0b2c-4973-4181-92ce-b1c50c851165',\r\n\t\t\t\t\t\t'c2e31de2-09e8-4563-acb1-0e190a8e3b11',\r\n\t\t\t\t\t\t'5299a28c-56d5-4dc3-81ae-6f9f741eb324',\r\n\t\t\t\t\t\t'e215f04f-037a-479e-b5da-9bb3155b55d5',\r\n\t\t\t\t\t\t'9eabf24b-ae80-4488-a164-2a6f78a50cbd',\r\n\t\t\t\t\t\t'b6390770-0590-418c-b516-2080b243e9b7',\r\n\t\t\t\t\t\t'2056c221-97c8-4994-962c-f4bfc319a9e4'\r\n\t\t\t\t\t];\r\n\r\n\t\t\t\t\tif (customFieldIds.includes(field._fieldDefId) && field.fieldGroup) {\r\n\t\t\t\t\t\tfield['_fieldGroup'] = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/* ************************************************************ */\r\n\r\n\t\t\t\t\t// reset the fields to appear enabled\r\n\t\t\t\t\tfield.disabled = false;\r\n\r\n\t\t\t\t\t// put the fields into their correct groups\r\n\t\t\t\t\tif (step.fieldGroups.length === 0) {\r\n\t\t\t\t\t\tstep.fieldGroups.push([field]);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet group = step.fieldGroups[step.fieldGroups.length - 1];\r\n\t\t\t\t\tif (field._fieldGroup != null && group[0]._fieldGroup === field._fieldGroup) {\r\n\t\t\t\t\t\tgroup.push(field);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tstep.fieldGroups.push([field]);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tdelete step.fields;\r\n\t\t\t});\r\n\t\t\tvm.steps = routeVm.formData._steps;\r\n\t\t\tvm.selectedStepId = vm.steps[0].id;\r\n\t\t\tvm.loading = false;\r\n\t\t}());\r\n\r\n\t}\r\n\r\n\tlink(scope, elem, attrs) {\r\n\t\tangular.element(document).ready(function() {\r\n\t\t\telem.find('input').on('focus', function(e) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\te.target.blur();\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/form-builder/preview/segment-form-workflow) --# //\r\n// #---------------------------------------------------------------# //\r\n\r\nangular.module('ec-forms-segments').directive('segmentFormBuilderPreviewFormWorkflow', () => new FormWorkflow('form-workflow'));\r\n","/*@ngInject*/\r\nfunction logic() {\r\n\t// logic api\r\n\treturn {\r\n\t\tmakeStep: () => { return { _name: '', _fieldOrder: '', fieldGroups: [] }; }\r\n\t};\r\n}\r\nangular.module('ec-forms-segment-logic').factory('segmentFormBuilderPreviewFormWorkflowLogic', logic);\r\n","import {Segment} from 'base-segment';\r\n// #-------------------------------------------------------------# //\r\n// #---- Segment (/form-builder/preview/segment-page-header) ----# //\r\n\r\nclass PageHeader extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $scope, $stateParams, $location, ssAsync, ssEventSvc, ssOrganizationSvc, rAF, ssDateHlp, ssDateByOrgHlp, ssFormTemplatesApi, $sce) {\r\n\t\t// view model that is shared by all segments on this route,\r\n\t\t// used for segment coordination\r\n\t\tconst routeVm = $scope.routeVm; // eslint-disable-line\r\n\r\n\t\tconst formVm = $scope.formVm;\r\n\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentFormBuilderPreviewPageHeaderLogic'); // eslint-disable-line\r\n\r\n\t\tvar modifiedText = null;\r\n\r\n\t\trAF(() => {\r\n\t\t\tssEventSvc.emit('allow-fullscreen');\r\n\t\t}, $scope);\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = { // eslint-disable-line\r\n\t\t\tform: formVm.formData\r\n\t\t};\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { // eslint-disable-line\r\n\t\t\tclose() {\r\n\t\t\t\t$location.url($stateParams.returnTo);\r\n\t\t\t},\r\n\t\t\ttoggleFormView: (showPDF) => {\r\n\t\t\t\tif (showPDF) {\r\n\t\t\t\t\tssAsync(function*() {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tlet formOverlay = yield ssFormTemplatesApi.generatePDFOverlay({\r\n\t\t\t\t\t\t\t\tformTemplateId: routeVm.formData.id\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\tif (formOverlay._string !== null) {\r\n\t\t\t\t\t\t\t\t// sanitize the '_string' property as a trusted URL for use in the iframe\r\n\t\t\t\t\t\t\t\trouteVm.PDFOverlayUrl = $sce.trustAsResourceUrl(formOverlay._string);\r\n\t\t\t\t\t\t\t\trouteVm.showPDFOverlay = showPDF;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tssToastHlp.error('There was a problem generating the PDF Overlay preview. Please refresh the page and try again.');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\t\tconsole && console.log && console.log('Error getting form', e);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})();\r\n\t\t\t\t} else {\r\n\t\t\t\t\trouteVm.showPDFOverlay = showPDF;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tssAsync(function* () {\r\n\t\t\tconst org = yield ssOrganizationSvc.getActiveOrg();\r\n\t\t\tvm.formStatusLabel = logic.getStatusLabel(formVm.formData, org);\r\n\t\t\tvm.formStatus = logic.getStatus(formVm.formData, org);\r\n\r\n\t\t\tif (isValidModified(vm.form._modifiedDt)) {\r\n\t\t\t\tlet modifiedTimeMoment = ssDateByOrgHlp.utcIsoToRelativeMoment(vm.form._modifiedDt, org);\r\n\r\n\t\t\t\tlet modifiedText = modifiedTimeMoment.calendar(null, { // jshint ignore:line\r\n\t\t\t\t\tsameDay: '[Today at] LT',\r\n\t\t\t\t\tlastDay: '[Yesterday at] LT',\r\n\t\t\t\t\tlastWeek: 'ddd [at] LT',\r\n\t\t\t\t\tsameElse: 'L [at] LT'\r\n\t\t\t\t});\r\n\r\n\t\t\t\tvm.modifiedDate = `Modified ${modifiedText} by ${vm.form._modifier.name}`;\r\n\t\t\t}\r\n\t\t})();\r\n\r\n\t\tfunction isValidModified(date) {\r\n\t\t\treturn !ssDateHlp.isForeverFuture(date) && !ssDateHlp.isForeverPast(date);\r\n\t\t} \r\n\t}\r\n}\r\n\r\n// #-- END Segment (/form-builder/preview/segment-page-header) --# //\r\n// #-------------------------------------------------------------# //\r\n\r\nangular.module('ec-forms-segments').directive('segmentFormBuilderPreviewPageHeader', () => new PageHeader('page-header') );\r\n","/*@ngInject*/\r\nfunction logic(statusLabelHlp) {\r\n\t// logic api\r\n\treturn {\r\n\t\tgetStatusLabel,\r\n\t\tgetStatus\r\n\t};\r\n\r\n\tfunction getStatus(form, org) {\r\n\t\treturn statusLabelHlp.getLabel(form, org).status\r\n\t}\r\n\r\n\tfunction getStatusLabel(form, org) {\r\n\t\treturn statusLabelHlp.getLabel(form, org).statusLabel;\r\n\t}\r\n}\r\nangular.module('ec-forms-segment-logic').factory('segmentFormBuilderPreviewPageHeaderLogic', logic);\r\n","import {Segment} from 'base-segment';\r\n// #---------------------------------------------------------------# //\r\n// #---- Segment (/form-builder/preview/segment-steps-summary) ----# //\r\n\r\nclass StepsSummary extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $scope, ssEventSvc, ssEnum, formsHlp) {\r\n\t\t// view model that is shared by all segments on this route,\r\n\t\t// used for segment coordination\r\n\t\tconst routeVm = $scope.routeVm; // eslint-disable-line\r\n\t\tconst formVm = $scope.formVm;\r\n\t\tconst logic = $injector.get('segmentFormBuilderPreviewStepsSummaryLogic'); // eslint-disable-line\r\n\t\tconst personalCategoryEnums = ssEnum.personnelCategory.getEnums();\r\n\t\tconst medicalCategoryEnums = ssEnum.medicalCategory.getEnums();\r\n\t\tconst stepMap = new Map();\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = { // eslint-disable-line\r\n\t\t\tsteps: [],\r\n\t\t\tstepAction: ssEnum.stepAction,\r\n\t\t\tselectedStep: null,\r\n\t\t\tloading: true\r\n\t\t};\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { // eslint-disable-line\r\n\t\t\tselectStep(index, step) {\r\n\t\t\t\tvm.selectedStepId = step.id;\r\n\t\t\t\tssEventSvc.emit('form-builder.summary.step-clicked', index, step);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tssEventSvc.on('form-builder.builder.step-clicked', function(index, step) {\r\n\t\t\tvm.selectedStepId = stepMap.get(step.id).id;\r\n\t\t}, $scope);\r\n\r\n\t\t(function initVmFromBuilderData() {\r\n\r\n\t\t//\tlets make a copy of the form step data since we're not mutating it in any way, and to prevent any processing conflicts with the builder segment\r\n\t\t\tvm.steps = angular.copy(routeVm.formData._steps);\r\n\t\t\t\r\n\t\t//\tsort the steps by the step order \r\n\t\t\tformsHlp.sortByOrderField(vm.steps, routeVm.formData._stepOrder);\r\n\r\n\t\t//\tbuild an active participant list\t\r\n\t\t\tlet participants = logic.buildParticipantList(vm.steps);\r\n\r\n\t\t\tvm.steps.forEach(function(step) {\r\n\r\n\t\t\t\tif (typeof step.id === 'string') {\r\n\t\t\t\t\tstepMap.set(step.id, step);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(step._stepAction !== ssEnum.stepAction.formCompleted) {\r\n\t\t\t\t\tlet stepParticipant = participants.find(x => x.stepIds.includes(step.id));\r\n\t\t\t\t\tstep.participantLabel = stepParticipant ? stepParticipant.participantName : '';\r\n\t\t\t\t\tstep.participantPermission = logic.getPermissionLabel(step);\r\n\t\t\t\t\tstep.stepActionLabel = ssEnum.stepAction.byValue(step._stepAction);\r\n\t\t\t\t}\r\n\t\t\t\tstep.eventDetails = logic.getEventDetails(step);\r\n\t\t\t\tstep.otherParticipants = logic.getOtherParticipants(participants, step);\r\n\t\t\t});\r\n\r\n\t\t\t// find and separate the review & final step from the rest of the steps\r\n\t\t\tlet finalStep = vm.steps.find((step) => {\r\n\t\t\t\treturn step._stepAction === ssEnum.stepAction.formCompleted;\r\n\t\t\t});\r\n\r\n\t\t\tlet reviewStep = vm.steps.find((step) => {\r\n\t\t\t\treturn step._stepAction === ssEnum.stepAction.employeeProfileReview;\r\n\t\t\t});\r\n\r\n\t\t\tvm.finalStep = vm.steps.splice(vm.steps.indexOf(finalStep), 1)[0];\r\n\t\t\tif(reviewStep) {\r\n\t\t\t\tvm.reviewStep = vm.steps.splice(vm.steps.indexOf(reviewStep), 1)[0]\r\n\t\t\t};\r\n\r\n\t\t\tif (routeVm.formData._employeeRecord.addToEmployeeRecord) {\r\n\t\t\t\tlet personalAndMedicalDic = buildEnumDictionary(personalCategoryEnums, medicalCategoryEnums);\r\n\t\t\t\tlet category = routeVm.formData._employeeRecord.category;\r\n\t\t\t\tlet subCategory = routeVm.formData._employeeRecord.subCategory;\r\n\t\t\t\tvm.finalStep.employeeRecord = personalAndMedicalDic[category + '-' + subCategory];\r\n\t\t\t}\r\n\r\n\t\t\tvm.selectedStepId = vm.steps[0].id;\r\n\t\t\tvm.loading = false;\r\n\t\t}());\r\n\r\n\t\tfunction buildEnumDictionary() {\r\n\t\t\tlet enumList = Array.from(arguments);\r\n\t\t\tlet dictionary = {};\r\n\t\t\tenumList.forEach((enumItem, index) => {\r\n\t\t\t\tenumItem.forEach((item) => {\r\n\t\t\t\t\tdictionary[index + '-' + item.value] = item.name;\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\treturn dictionary;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/form-builder/preview/segment-steps-summary) --# //\r\n// #---------------------------------------------------------------# //\r\n\r\nangular.module('ec-forms-segments').directive('segmentFormBuilderPreviewStepsSummary', () => new StepsSummary('steps-summary') );\r\n","/*@ngInject*/\r\nfunction logic(ssEnum) {\r\n\t// logic api\r\n\treturn {\r\n\t\tbuildParticipantList,\r\n\t\tgetEventDetails,\r\n\t\tgetPermissionLabel,\r\n\t\tgetOtherParticipants,\r\n\t\tmakeStep,\r\n\t\tmatchByParticipants,\r\n\t};\r\n\r\n\tfunction buildParticipantList(steps) {\r\n\t\tlet parts = [];\r\n\t\tsteps.forEach(step => {\r\n\t\t\t//\tskip any steps without participants\r\n\t\t\tif (!step._stepParticipant || step._stepAction == ssEnum.stepAction.formCompleted ) { return; };\r\n\t\t\t//\tmake sure the employee id is a valid value\r\n\t\t\tlet spEmpId = angular.isArray(step._stepParticipant.employeeIds) && step._stepParticipant.employeeIds.length ? step._stepParticipant.employeeIds[0] : '';\r\n\r\n\t\t\tlet spLabel = step._stepParticipant.name ? step._stepParticipant.name : ssEnum.stepParticipantType.byValue(step._stepParticipant.participantType);\r\n\r\n\t\t\t//\tif we already added a participant of this type, add the step ID to it and return\r\n\t\t\tlet existingPart = parts.find((part) => matchByParticipants(part, step));\r\n\t\t\tif(existingPart) {\r\n\t\t\t\texistingPart.stepIds.push(step.id);\r\n\t\t\t\treturn;\r\n\t\t\t};\r\n\t\t\r\n\t\t\t//\tif not, add a new one\r\n\t\t\tparts.push({\r\n\t\t\t\tstepIds: [step.id],\r\n\t\t\t\tparticipantName: spLabel,\r\n\t\t\t\tparticipantType: step._stepParticipant.participantType,\r\n\t\t\t\temployeeId: spEmpId\r\n\t\t\t});\r\n\t\t});\r\n\t\treturn parts;\r\n\t}\r\n\r\n\tfunction getEventDetails(step) {\r\n\t\tif(!step._stepEvents) { return []; };\r\n\t\treturn step._stepEvents.reduce(function(prev, curr) {\r\n\t\t\tif (!curr.eventActions.length) { return prev; };\r\n\t\t\tprev.push({\r\n\t\t\t\ttitle: ssEnum.stepEventType.byValue(curr.eventType),\r\n\t\t\t\tactions: curr.eventActions.reduce((p, c) => {\r\n\t\t\t\t\tif (c.eventAction === ssEnum.stepEventAction.stopWorkFlow) { return p; };\r\n\t\t\t\t\tp.push(ssEnum.stepEventAction.byValue(c.eventAction));\r\n\t\t\t\t\treturn p;\r\n\t\t\t\t}, [])\r\n\t\t\t});\r\n\t\t\treturn prev;\r\n\t\t}, []);\r\n\t}\r\n\r\n\tfunction getOtherParticipants(participants, step) {\r\n\t\tif(!participants.length) { return []; };\r\n\t\treturn participants.reduce((prev, curr) => {\r\n\t\t\t//\tomit the main step participant\r\n\t\t\tif (curr.stepIds.includes(step.id)) { return prev; };\r\n\t\t\t//\tfind a matching permission object\r\n\t\t\tlet matchingPerm = step._permissions.find((perm) => {\r\n\t\t\t\treturn matchByParticipants(perm, curr);\r\n\t\t\t});\r\n\r\n\t\t\t/*\r\n\t\t\t **\tif there is no matching perm OR the matching permission object\r\n\t\t\t **\tdoes not allow 'view', return\r\n\t\t\t */\r\n\t\t\tif (!matchingPerm || !matchingPerm.canView) {\r\n\t\t\t\treturn prev;\r\n\t\t\t}\r\n\t\t\t/*\tcreate the returned object */\r\n\t\t\tprev.push({\r\n\t\t\t\tname: curr.participantName,\r\n\t\t\t\tpermissions: `view${matchingPerm.canEdit ? ' & edit' : ''}`\r\n\t\t\t});\r\n\t\t\treturn prev;\r\n\t\t}, []);\r\n\t}\r\n\r\n\tfunction getPermissionLabel(step) {\r\n\t\tif(!step._permissions) { return ''; };\r\n\t\tlet permission = step._permissions.find((perm) => {\r\n\t\t\treturn matchByParticipants(perm, step);\r\n\t\t});\r\n\t\treturn permission ? `view${permission.canEdit ? ' & edit' : ''}` : '';\r\n\t}\r\n\r\n\tfunction makeStep() {\r\n\t\treturn { _name: '', _fieldOrder: '', fieldGroups: [] };\r\n\t}\r\n\r\n\tfunction matchByParticipants(source, target) {\r\n\t\tlet targetId = target._stepParticipant ? target._stepParticipant.employeeIds[0] : target.employeeId;\r\n\t\tlet targetParticipantType = target._stepParticipant ? target._stepParticipant.participantType : target.participantType;\r\n\r\n\t\tif (source.participantType === ssEnum.stepParticipantType.specificPerson) {\r\n\t\t\treturn source.employeeId === targetId;\r\n\t\t}\r\n\t\treturn source.participantType === targetParticipantType;\r\n\t}\r\n}\r\nangular.module('ec-forms-segment-logic').factory('segmentFormBuilderPreviewStepsSummaryLogic', logic);\r\n","import {Segment} from 'base-segment';\r\n// #-------------------------------------------------# //\r\n// #---- Segment (/form-builder/segment-content) ----# //\r\n\r\nclass Content extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $scope, ssPermissionsSvc) {\r\n\t\t// view model that is shared by all segments on this route,\r\n\t\t// used for segment coordination\r\n\t\tconst routeVm = $scope.routeVm; // eslint-disable-line\r\n\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentFormBuilderContentLogic'); // eslint-disable-line\r\n\r\n\t\t$scope.formVm = routeVm;\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = { // eslint-disable-line\r\n\t\t};\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { // eslint-disable-line\r\n\t\t};\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/form-builder/segment-content) --# //\r\n// #-------------------------------------------------# //\r\n\r\nangular.module('ec-forms-segments').directive('segmentFormBuilderContent', () => new Content('content') );\r\n","/*@ngInject*/\r\nfunction logic() {\r\n\t// logic api\r\n\treturn {\r\n\r\n\t};\r\n}\r\nangular.module('ec-forms-segment-logic').factory('segmentFormBuilderContentLogic', logic);\r\n","import {Segment} from 'base-segment';\r\n// #------------------------------------------------# //\r\n// #---- Segment (/form-builder/segment-header) ----# //\r\n\r\nclass Header extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $scope, $state, $window, $q, $rootScope, $timeout, ssAsync, ssEventSvc, ssStatusApi, ssToastHlp, rAF, ssValidationHlp, ssPermissionsSvc, ssStorage, ssDateByOrgHlp, statusLabelHlp, ssModalSvc, ssSaveInterrupterSvc, ssSleepHlp, ssEnum, fieldsHlp) {\r\n\t\t// view model that is shared by all segments on this route,\r\n\t\t// used for segment coordination\r\n\t\tconst routeVm = $scope.routeVm;\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentFormBuilderHeaderLogic'); // eslint-disable-line\r\n\t\tconst formData = routeVm.formData;\r\n\t\tconst cacheKey = `${routeVm.org.id}_formbuilder_${formData.id}`;\r\n\t\tvar autoSaveTimer;\r\n\r\n\t\tconst validator = $scope.validator = {\r\n\t\t\trequired: ssValidationHlp.required()\r\n\t\t};\r\n\r\n\t\t$scope.activate = false;\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\tsavedFormTitle: JSON.parse(JSON.stringify(formData._name)),\r\n\t\t\tactivationDate: ssDateByOrgHlp.todaysStartRelativeTo(routeVm.org).format('MM/DD/YYYY'),\r\n\t\t\tformStatusLabel: statusLabelHlp.getLabel(formData, routeVm.org).statusLabel,\r\n\t\t\tactivate: null,\r\n\t\t\teditTitle: false,\r\n\t\t\tmodelHasChanged: false,\r\n\t\t\tautoSaved: false,\r\n\t\t\tprintViewBuilderEnabled: false,\r\n\t\t\tstatusConfig: {\r\n\t\t\t\tstatusId: 1\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst go = $scope.go = {\r\n\t\t\teditTitle() {\r\n\t\t\t\tvm.editTitle = true;\r\n\t\t\t\tvm.previousAutoSaved = vm.autoSaved;\r\n\t\t\t},\r\n\r\n\t\t\tpreview() {\r\n\t\t\t\tif(!routeVm.saving) {\r\n\t\t\t\t\tif(vm.modelHasChanged) {\r\n\t\t\t\t\t\tvar config = {\r\n\t\t\t\t\t\t\ttitle: 'Preview Form Template',\r\n\t\t\t\t\t\t\tcontent: 'You will need to save this form template in order to preview it.',\r\n\t\t\t\t\t\t\tprimaryText: 'save and continue',\r\n\t\t\t\t\t\t\tsecondaryText: 'cancel',\r\n\t\t\t\t\t\t\talwaysOnTop: true\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\treturn ssModalSvc.showStandard(config).then((scope) => {\r\n\t\t\t\t\t\t\t// run field validators since the 'preview' action does not trigger the submit event, which triggers validators\r\n\t\t\t\t\t\t\tlet errors = runAllValidators();\r\n\t\t\t\t\t\t\tif(!errors.length) {\r\n\t\t\t\t\t\t\t\tgo.saveFormTemplate().then(() => {\r\n\t\t\t\t\t\t\t\t\tssSaveInterrupterSvc.clear();\r\n\t\t\t\t\t\t\t\t\t$state.go('base.formBuilder.preview', {\r\n\t\t\t\t\t\t\t\t\t\treturnTo: $state.href($state.current.name),\r\n\t\t\t\t\t\t\t\t\t\tshowPDFoverlay: $state.is('base.formBuilder.overlayBuilder')\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\terrors.forEach((err) => {\r\n\t\t\t\t\t\t\t\t\tssToastHlp.error(`${err.field._label ? 'The field group labeled' +  ' \"' + err.field._label + '\" ' : err.field.config.fieldGroup + ' field groups'} ${err.error}`, 'Validation Error');\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tssSaveInterrupterSvc.clear();\r\n\t\t\t\t\t\t$state.go('base.formBuilder.preview', {\r\n\t\t\t\t\t\t\treturnTo: $state.href($state.current.name),\r\n\t\t\t\t\t\t\tshowPDFoverlay: $state.is('base.formBuilder.overlayBuilder')\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tsaveFormTemplate() {\r\n\t\t\t\tresetAutoSave();\r\n\t\t\t\tif (routeVm.saving || !vm.modelHasChanged) { return $q.when(); }\r\n\r\n\t\t\t\trouteVm.saving = true;\r\n\t\t\t\trouteVm.loadingMsg = 'saving form template...';\r\n\t\t\t\tvm.editTitle = false;\r\n\r\n\t\t\t\t// force a change to all step permissions\r\n\t\t\t\tformData._steps.forEach((step) => {\r\n\t\t\t\t\tstep._permissions = angular.copy(step._permissions, []);\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn ssAsync(function* () {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\t// force a change to all step permissions\r\n\t\t\t\t\t\tformData._steps.forEach((step) => {\r\n\t\t\t\t\t\t\tstep._permissions = angular.copy(step._permissions, []);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t// save top-level form data (shallow save)\r\n\t\t\t\t\t\tyield formData.$save(false);\r\n\t\t\t\t\t\t// save the steps\r\n\t\t\t\t\t\tyield formData._steps.$save();\r\n\r\n\t\t\t\t\t\t// update the step order (function def in builder segment)\r\n\t\t\t\t\t\tif(routeVm.updateStepOrder) { formData._stepOrder = routeVm.updateStepOrder()};\r\n\t\t\t\t\t\t// make sure the fields have a step reference (function def in builder segment)\r\n\t\t\t\t\t\tif(routeVm.addStepIdToField) routeVm.addStepIdToField();\r\n\r\n\t\t\t\t\t\t// update form fields collection with the current fields\r\n\t\t\t\t\t\tif(routeVm.updateFormFields) routeVm.updateFormFields();\r\n\r\n\t\t\t\t\t\t// save the form template (posts/deletes fields)\r\n\t\t\t\t\t\tyield formData.$save();\r\n\r\n\t\t\t\t\t\t// updates the field order on the steps (function def in builder segment)\r\n\t\t\t\t\t\tif(routeVm.updateFieldOrder) routeVm.updateFieldOrder();\r\n\t\t\t\t\t\t// re-save the steps after updating their field orders\r\n\t\t\t\t\t\tyield formData._steps.$save();\r\n\r\n\t\t\t\t\t\t// refresh the data & re-process the template\r\n\t\t\t\t\t\tif(routeVm.processTemplate) yield routeVm.processTemplate();\r\n\r\n\t\t\t\t\t\tvm.modelHasChanged = false;\r\n\r\n\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\tconsole && console.error && console.error('error while saving', err);\r\n\t\t\t\t\t} finally {\r\n\t\t\t\t\t\trouteVm.saving = false;\r\n\t\t\t\t\t\trouteVm.loadingMsg = '';\r\n\t\t\t\t\t\tresetAutoSave();\r\n\t\t\t\t\t}\r\n\t\t\t\t})();\r\n\t\t\t},\r\n\r\n\t\t\tcancelTitleEdit() {\r\n\t\t\t\tvm.editTitle = false;\r\n\t\t\t\tformData._name = vm.savedFormTitle;\r\n\t\t\t\tvm.autoSaved = vm.previousAutoSaved;\r\n\t\t\t},\r\n\r\n\t\t\tsetActivationConfig(activate = false, useDate) {\r\n\t\t\t\t$scope.activate = activate;\r\n\t\t\t\tif(useDate && useDate === false) {\r\n\t\t\t\t\tvm.activationDate = null;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tsubmitForm() {\r\n\t\t\t\t$scope.activate === false ? go.saveFormTemplate() : go.activateForm();\r\n\t\t\t},\r\n\r\n\t\t\tactivateForm() {\r\n\r\n\t\t\t\tif (routeVm.saving) { return; }\r\n\r\n\t\t\t//\tchecks to see if a form admin is selected and throws a toast error if not\r\n\t\t\t\tif(!formData._formAdministrator.formAdministratorType) {\r\n\t\t\t\t\tssToastHlp.error('Form Administrator is required', 'Select Form Administrator');\r\n\t\t\t\t\t$scope.$root.$emit('ss-menu-close');\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t// \tMake sure step one has fields before allowing activation. Assumes the steps have been ordered correctly by the step order\r\n\t\t\t\tif(formData._steps[0].fieldGroups && !formData._steps[0].fieldGroups.length) {\r\n\t\t\t\t\tssToastHlp.warn('Step 1 of this form template contains no fields. Please add fields in order to activate.', '');\r\n\t\t\t\t\t$scope.$root.$emit('ss-menu-close');\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// check for step participant & step action values\r\n\t\t\t\tfor (let i = 0; i < formData._steps.length; i++) {//leaving out last step\r\n\t\t\t\t\tlet step = formData._steps[i];\r\n\t\t\t\t\tif (step._stepAction !== ssEnum.stepAction.formCompleted) {\r\n\t\t\t\t\t\tif (step._stepParticipant.participantType == null) {\r\n\t\t\t\t\t\t\tssToastHlp.error('Step Participant is required for each step', 'Activation Failed');\r\n\t\t\t\t\t\t\t$scope.$root.$emit('ss-menu-close');\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (step._stepAction == null) {\r\n\t\t\t\t\t\t\tssToastHlp.error('Action Performed is required for each step', 'Activation Failed');\r\n\t\t\t\t\t\t\t$scope.$root.$emit('ss-menu-close');\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t//\tcheck for a valid form category value\r\n\t\t\t\tif (formData._category.id == null) {\r\n\t\t\t\t\tssToastHlp.error('Category is required to activate this form.', 'Activation Failed');\r\n\t\t\t\t\t$scope.$root.$emit('ss-menu-close');\r\n\t\t\t\t\t// go to settings\r\n\t\t\t\t\t$state.go('base.formBuilder.settings');\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (vm.activationDate !== null) {\r\n\t\t\t\t\tvm.statusConfig.from = ssDateByOrgHlp.startOfDayRelativeTo(moment(vm.activationDate), routeVm.org)\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$scope.$root.$emit('ss-menu-close');\r\n\r\n\t\t\t\tssAsync(function* () {\r\n\t\t\t\t\ttry {\r\n\r\n\t\t\t\t\t\tif(vm.modelHasChanged) { yield go.saveFormTemplate(); }\r\n\r\n\t\t\t\t\t\trouteVm.saving = true;\r\n\t\t\t\t\t\trouteVm.loadingMsg = 'Activating form template...';\r\n\r\n\t\t\t\t\t// update the status to active\r\n\t\t\t\t\t\tyield ssStatusApi.update({\r\n\t\t\t\t\t\t\tid: formData.id\r\n\t\t\t\t\t\t}, vm.statusConfig, false);\r\n\r\n\t\t\t\t\t\tyield ssSleepHlp.sleep();\r\n\r\n\t\t\t\t\t} catch(err) {\r\n\t\t\t\t\t\tif(err.data) {\r\n\t\t\t\t\t\t\tlet msgs = err.data.errors.Title.substr(err.data.errors.Title.indexOf(':')+1);\r\n\t\t\t\t\t\t\tmsgs = msgs.split(',');\r\n\t\t\t\t\t\t\tmsgs.forEach((msg) => {\r\n\t\t\t\t\t\t\t\tssToastHlp.error(msg, 'Activation Failed');\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tssToastHlp.error(err, '');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconsole && console.error && console.error(err);\r\n\t\t\t\t\t} finally {\r\n\t\t\t\t\t\trouteVm.saving = false;\r\n\t\t\t\t\t\trouteVm.loadingMsg = '';\r\n\t\t\t\t\t\t// go back to form templates page\r\n\t\t\t\t\t\t$state.go('base.formTemplates');\r\n\t\t\t\t\t}\r\n\t\t\t\t})();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\trouteVm.submitForm = go.submitForm;\r\n\r\n\t\tvm.printViewBuilderEnabled = ssPermissionsSvc.isPermittedAction('formTemplates', 'buildOverlay') || !!$scope.$root.isPermitted.activeUser.idmAdministrator;\r\n\r\n\t\tssEventSvc.on('ss-json-api.changedRecord.formFields', modelChangeEventHandler, $scope);\r\n\t\tssEventSvc.on('ss-json-api.changedRecord.formTemplates', modelChangeEventHandler, $scope);\r\n\t\tssEventSvc.on('ss-json-api.changedRecord.steps', modelChangeEventHandler, $scope);\r\n\r\n\t\t$rootScope.$on('$stateChangeStart',\r\n\t\t\tfunction(event, toState, toParams, fromState, fromParams, options){\r\n\t\t\t\tif(toState.name === 'base.formBuilder.preview'){\r\n\t\t\t\t\tssStorage.save(cacheKey, { y: window.scrollY })\r\n\t\t\t\t}\r\n\t\t});\r\n\r\n\t\t$rootScope.$on('$stateChangeSuccess',\r\n\t\t\tfunction(event, toState, toParams, fromState, fromParams){\r\n\t\t\t\tif(fromState.name === 'base.formBuilder.preview'){\r\n\t\t\t\t\tlet template = ssStorage.load(cacheKey);\r\n\t\t\t\t\tif(template) {\r\n\t\t\t\t\t\tssStorage.clear(cacheKey);\r\n\t\t\t\t\t\t$timeout(() => { $window.scrollTo(0, template.y); }, 1000);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t});\r\n\r\n\t\t$scope.$watch('routeVm.formData._name', (newVal, oldVal) => {\r\n\t\t\trAF.raw(function () {\r\n\t\t\t\tresizeTitle();\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\trouteVm.modelChanged = function(changed = true) {\r\n\t\t\tvm.modelHasChanged = changed;\r\n\t\t};\r\n\r\n\t\tfunction modelChangeEventHandler(model, attr, attrPath, oldVal, newVal) {\r\n\t\t\tconst ignoredAttrs = ['fieldOrder', 'fieldGroup', 'stepOrder'];\r\n\t\t\tif (ignoredAttrs.includes(attr)) { return; }\r\n\t\t\trouteVm.modelChanged();\r\n\t\t}\r\n\r\n\t\tfunction resetAutoSave() {\r\n\t\t\t// disable autosave for now\r\n\t\t\tif (true) { return; }\r\n\r\n\t\t\tif (autoSaveTimer != null) { $timeout.cancel(autoSaveTimer); }\r\n\t\t\tautoSaveTimer = $timeout(function () {\r\n\t\t\t\tgo.saveFormTemplate(true);\r\n\t\t\t}, 30000);\r\n\t\t}\r\n\r\n\t\tfunction resizeTitle() {\r\n\t\t\tvar titleLength;\r\n\t\t\tvar titleEl = document.querySelectorAll('.form-title-ctrl');\r\n\t\t\tvar titleInput = angular.element(titleEl[0]).find('input');\r\n\r\n\t\t\tif (titleInput.val() != null) {\r\n\t\t\t\ttitleLength = titleInput.val().length;\r\n\t\t\t\ttitleInput.attr('size', titleLength);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// function to manually run field validators for actions which do not trigger the 'submit' event\r\n\t\tfunction runAllValidators() {\r\n\t\t\tlet errors = [];\r\n\t\t\tformData._formFields.forEach((field) => {\r\n\t\t\t\tconst fieldValidator = fieldsHlp.getValidator(field._fieldType);\r\n\t\t\t\tif(typeof fieldValidator === 'function'){\r\n\t\t\t\t\tlet result = fieldValidator.call(null, field);\r\n\t\t\t\t\tif(result !== true) {\r\n\t\t\t\t\t\terrors.push({\r\n\t\t\t\t\t\t\tfield: field,\r\n\t\t\t\t\t\t\terror: result\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn errors;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/form-builder/segment-header) --# //\r\n// #------------------------------------------------# //\r\n\r\nangular.module('ec-forms-segments').directive('segmentFormBuilderHeader', () => new Header('header') );\r\n","/*@ngInject*/\r\nfunction logic() {\r\n\t// logic api\r\n\treturn {\r\n\r\n\t};\r\n}\r\nangular.module('ec-forms-segment-logic').factory('segmentFormBuilderHeaderLogic', logic);\r\n","import {Segment} from 'base-segment';\r\n// #-----------------------------------------------------------# //\r\n// #---- Segment (/form-builder/settings/segment-settings) ----# //\r\n\r\nclass Settings extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $scope, ssAsync, ssListSvc, ssEmployeeApi, ssEnum, ssToastHlp, ssModalSvc, formsHlp, rAF) {\r\n\t\t// view model that is shared by all segments on this route,\r\n\t\t// used for segment coordination\r\n\t\tconst routeVm = $scope.routeVm; // eslint-disable-line\r\n\t\tconst logic = $injector.get('segmentFormBuilderSettingsSettingsLogic'); // eslint-disable-line\r\n\t\tconst formVm = $scope.formVm;\r\n\t\tconst formAdminEnums = ssEnum.formAdministratorType.getEnums();\r\n\r\n\t\t$scope.validator = logic.validator;\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = { // eslint-disable-line\r\n\t\t\tloading: false,\r\n\t\t\tform: formVm.formData,\r\n\t\t\tshowSpecificPerson: false,\r\n\t\t\tformAdminList: formAdminEnums,\r\n\t\t\tspecificEmployeeHolder: [],\r\n\t\t\tlastStepText: '',\r\n\t\t};\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { // eslint-disable-line\r\n\t\t};\r\n\r\n\t\t$scope.$watch('vm.form._formAdministrator.formAdministratorType', (nv, ov) => {\r\n\t\t\tif (!nv || nv <= 0 || nv === ov) { return; }\r\n\t\t\tif (nv !== ssEnum.formAdministratorType.specificPerson) {\r\n\t\t\t\tvm.form._formAdministrator.employeeId = null;\r\n\t\t\t\tvm.specificEmployeeHolder = [];\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t$scope.$watch('vm.specificEmployeeHolder', (nv, ov) => {\r\n\t\t\tif (nv === ov) { return; }\r\n\t\t\tif (nv && nv.length) {\r\n\t\t\t\tvm.form._formAdministrator.employeeId = nv[0].id;\r\n\t\t\t} else {\r\n\t\t\t\tvm.form._formAdministrator.employeeId = null;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// This ensures that we can't select 'form sender' as the form administrator for an employee-initiated form template\r\n\t\t$scope.$watch('vm.form._isEmployeeInitiated', nv => {\r\n\t\t\tif (nv) {\r\n\t\t\t\tif (vm.form._formAdministrator.formAdministratorType === ssEnum.formAdministratorType.formPacketSender) {\r\n\t\t\t\t\tssModalSvc.showStandard({\r\n\t\t\t\t\t\ttitle: 'Invalid form administrator',\r\n\t\t\t\t\t\tcontent: 'An employee initiated form cannot have the form sender as its form administrator. Please choose another form administrator',\r\n\t\t\t\t\t\tprimaryText: 'Ok',\r\n\t\t\t\t\t\tshowSecondary: false,\r\n\t\t\t\t\t\talwaysOnTop: true\r\n\t\t\t\t\t}).then(() => {\r\n\t\t\t\t\t\tvm.form._formAdministrator.formAdministratorType = null;\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tvm.formAdminList = vm.formAdminList.filter(f => {\r\n\t\t\t\t\treturn f.value !== 1;\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tvm.formAdminList = formAdminEnums;\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\t// Initialization\r\n\t\tssAsync(function*() {\r\n\t\t\tvm.loading = true;\r\n\t\t\t// Get form categories\r\n\t\t\ttry {\r\n\t\t\t\tvm.categories = yield ssListSvc.getByExternalId('form.categories');\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole && console.error && console.error('There was an error retrieving form categories', e);\r\n\t\t\t\tssToastHlp.error('There was an error retrieving form categories', '');\r\n\t\t\t}\r\n\r\n\t\t\tyield vm.form.$refresh();\r\n\t\t\tformVm.modelChanged(false);\r\n\r\n\t\t\t// get the employee object of the specific form administrator, if it exists\r\n\t\t\tif (vm.form._formAdministrator.formAdministratorType != null && vm.form._formAdministrator.formAdministratorType === ssEnum.formAdministratorType.specificPerson) {\r\n\t\t\t\tif (vm.form._formAdministrator.employeeId) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tvar e = yield ssEmployeeApi.get({\r\n\t\t\t\t\t\t\tid: vm.form._formAdministrator.employeeId,\r\n\t\t\t\t\t\t\tfields: 'firstName,lastName'\r\n\t\t\t\t\t\t}, null, false);\r\n\t\t\t\t\t\tvm.specificEmployeeHolder.push(e);\r\n\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\t// employee was deleted\r\n\t\t\t\t\t\tif (err.data.errors.Id === '404') {\r\n\t\t\t\t\t\t\tssToastHlp.warn(\r\n\t\t\t\t\t\t\t\t'The assigned form administrator for this template cannot be found. Please choose a new form administrator, or change the form administrator type',\r\n\t\t\t\t\t\t\t\t'Form Administrator not found');\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tssToastHlp.error('There was a problem retrieving the assigned form administrator. Please see the console.','Error');\r\n\t\t\t\t\t\t\t//error('There was a problem retrieving the assigned form administrator', err)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tformsHlp.sortByOrderField(vm.steps, vm.form._stepOrder);\r\n\r\n\t\t//\tget a handle on the last step to get the step actions\r\n\t\t\tvar lastStep = vm.form._steps.find(s => s._stepAction === ssEnum.stepAction.formCompleted);\r\n\r\n\t\t\tlastStep._stepEvents[0].eventActions.forEach(action => {\r\n\t\t\t\tif (action.eventAction === ssEnum.stepEventAction.emailOthers) {\r\n\t\t\t\t\tssAsync(function*() {\r\n\t\t\t\t\t\tlet emps = yield ssEmployeeApi.queryByIds({\r\n\t\t\t\t\t\t\tfields: 'firstName,lastName'\r\n\t\t\t\t\t\t}, {ids:action.employeeIds}, null, false);\r\n\t\t\t\t\t\temps.forEach(e => {\r\n\t\t\t\t\t\t\tif (vm.lastStepText.length) { vm.lastStepText += ', '; }\r\n\t\t\t\t\t\t\tvm.lastStepText += `Email ${e._firstName} ${e._lastName}`;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t})();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (vm.lastStepText.length) { vm.lastStepText += ', '; }\r\n\t\t\t\t\tvm.lastStepText += ssEnum.stepEventAction.byValue(action.eventAction);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t//\tfilter out the form complete step from further processing\r\n\t\t\tvm.steps = vm.form._steps.filter(s => s._stepAction !== ssEnum.stepAction.formCompleted);\r\n\r\n\t\t\tvm.steps.forEach((step, i) => {\r\n\t\t\t\t// watch the custom notification to set the focus\r\n\t\t\t\t$scope.$watch(`vm.steps[${i}]._useCustomNotification`, (nv, ov) => {\r\n\t\t\t\t\tif (nv === ov) { return; }\r\n\t\t\t\t\tlet stepIndex = i;\r\n\t\t\t\t\tif (nv) {\r\n\t\t\t\t\t\trAF(() => document.getElementById(`step-ready-message-${step.id}`).focus(), $scope);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvm.steps[stepIndex]._notificationBody = '';\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t$scope.$watch(`vm.steps[${i}]._useCustomResendNotification`, (nv, ov) => {\r\n\t\t\t\t\tif (nv === ov) { return; }\r\n\t\t\t\t\tlet stepIndex = i;\r\n\t\t\t\t\tif (nv) {\r\n\t\t\t\t\t\trAF(() => document.getElementById(`step-resent-message-${step.id}`).focus(),$scope);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvm.steps[stepIndex]._resendNotificationBody = '';\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t\r\n\t\t\t//\tadd a custom property to each step which indicates if we should show the custom resend step message control\r\n\t\t\t\tstep.showResendMessage = i+1 !== vm.steps.length ? vm.steps[i+1]._stepAction === ssEnum.stepAction.reviewApproveOrDeny : false; \r\n\r\n\t\t\t\tlet participant = step._stepParticipant;\r\n\t\t\t\tif (participant.participantType === ssEnum.stepParticipantType.specificPerson) {\r\n\t\t\t\t\tif (participant.employeeIds && participant.employeeIds.length) {\r\n\t\t\t\t\t\tssAsync(function*() {\r\n\t\t\t\t\t\t\tlet emp = yield ssEmployeeApi.get({\r\n\t\t\t\t\t\t\t\tid: participant.employeeIds[0],\r\n\t\t\t\t\t\t\t\tfields: 'firstName,lastName'\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tstep.participantLabel = `${emp._firstName} ${emp._lastName}`;\r\n\t\t\t\t\t\t})();\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (participant.participantType || participant.participantType === ssEnum.stepParticipantType.employeeChosenWhenSent) {\r\n\t\t\t\t\tstep.participantLabel = ssEnum.stepParticipantType.byValue(participant.participantType);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tformsHlp.initSaveInterrupter(vm.form);\r\n\t\t\tvm.loading = false;\r\n\t\t})();\r\n\t}\r\n\r\n\tlink(scope, elem, attrs) {\r\n\t\t// This code is here in order to focus the super-employee-search element when selecting the 'specific person' option of the form administrator select menu\r\n\t\tscope.$watch('vm.form._formAdministrator.formAdministratorType', (nv, ov) => {\r\n\t\t\tangular.element(document).ready(function() {\r\n\t\t\t\tif (nv === ov) { return; }\r\n\t\t\t\tif (nv === 3) { // ssEnum.formAdministratorType.specificPerson\r\n\t\t\t\t\tlet searchField = document.getElementById('form-admin-employee-search');\r\n\t\t\t\t\tlet input = searchField.getElementsByTagName('input');\r\n\t\t\t\t\tinput[0].focus();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/form-builder/settings/segment-settings) --# //\r\n// #-----------------------------------------------------------# //\r\n\r\nangular.module('ec-forms-segments').directive('segmentFormBuilderSettingsSettings', () => new Settings('settings') );\r\n","/*@ngInject*/\r\nfunction logic(ssValidationHlp) {\r\n\t// logic api\r\n\tlet required = ssValidationHlp.required();\r\n\treturn {\r\n\t\tvalidator: {\r\n\t\t\trequired,\r\n\t\t\tconditionalRequired(val, fieldName, conditionalObj) {\r\n\t\t\t\treturn conditionalObj ? required(val, fieldName) : true;\r\n\t\t\t},\r\n\t\t}\r\n\t};\r\n}\r\nangular.module('ec-forms-segment-logic').factory('segmentFormBuilderSettingsSettingsLogic', logic);\r\n","import { State } from 'base-state';\r\n// #----------------------------------------# //\r\n// #---- State (/form-builder/settings) ----# //\r\n\r\n\r\n// view model that is shared by all segments on this route,\r\n// used for segment coordination. Define initial state here.\r\nconst routeVm = {};\r\n\r\nconst stateName = 'formBuilder.settings';\r\n\r\n// config object for ui-router\r\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\r\nconst stateConfig = {\r\n\turl: '/settings',\r\n\ttemplateUrl: 'routes/form-builder/settings/settings.html',\r\n\tresolve: {\r\n\t\t$title: ['$title', $title => {\r\n\t\t\treturn $title + ' (Settings)';\r\n\t\t}]\r\n\t},\r\n\t$permissions: (permissionSvc) => permissionSvc.isPermittedAction('formTemplates', 'create') ||\r\n\t\tpermissionSvc.isPermittedAction('formTemplates', 'edit')\r\n};\r\n\r\n\r\n\r\n// #-- END State (/form-builder/settings) --# //\r\n// #----------------------------------------# //\r\n\r\nangular.module('ec-forms').config( /*@ngInject*/ ($stateProvider) => {\r\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\r\n});\r\n","import { State } from 'base-state';\r\n// #---------------------------------# //\r\n// #---- State (//form-instance) ----# //\r\n\r\n\r\n// view model that is shared by all segments on this route,\r\n// used for segment coordination. Define initial state here.\r\nconst routeVm = {\r\n\tprops: false,\r\n\tformInstance: null,\r\n\tformTemplate: null,\r\n\thasPDFOverlay: null,\r\n\tshowPDFOverlay: null,\r\n\tloading: false,\r\n\tloadingStatus: ''\r\n};\r\n\r\nconst stateName = 'formInstance';\r\n\r\n// config object for ui-router\r\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\r\nconst stateConfig = {\r\n\turl: '/form-instance/{formInstanceId:[0-9A-Za-z-]+}?from&returnUrl&target',\r\n\ttemplateUrl: 'routes/form-instance/form-instance.html',\r\n\tresolve: {\r\n\t\tformInstanceCompletion: /*@ngInject*/ function ($stateParams, $state, ssAsync, ssFormInstancesApi, ssFormTemplatesApi, ssToastHlp, ssEnum) {\r\n\r\n\t\t\treturn ssAsync(function* () {\r\n\t\t\t\ttry {\r\n\r\n\t\t\t\t\trouteVm.hasPDFOverlay = false;\r\n\t\t\t\t\trouteVm.showPDFOverlay = false;\r\n\r\n\t\t\t\t\trouteVm.formInstance = yield ssFormInstancesApi.get({\r\n\t\t\t\t\t\tid: $stateParams.formInstanceId,\r\n\t\t\t\t\t\tinclude: 'steps',\r\n\t\t\t\t\t\tincludeSensitive: false\r\n\t\t\t\t\t}, null, false);\r\n\r\n\t\t\t\t\trouteVm.formTemplate = yield ssFormTemplatesApi.get({\r\n\t\t\t\t\t\tid: routeVm.formInstance._formTemplate.formTemplateId,\r\n\t\t\t\t\t\tinclude: 'steps,formFields,files'\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t//\tCheck to see if the form instance has a PDF overlay\r\n\t\t\t\t\trouteVm.hasPDFOverlay = routeVm.formTemplate._printPreviewDefinition && routeVm.formTemplate._printPreviewDefinition.templateFileId != null;\r\n\r\n\t\t\t\t\tif (routeVm.hasPDFOverlay && (routeVm.formInstance._statusId === ssEnum.formStatus.complete || routeVm.formInstance._statusId === ssEnum.formStatus.archived)) {\r\n\t\t\t\t\t\trouteVm.showPDFOverlay = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tif (e.status === 403) {\r\n\t\t\t\t\t\t$state.transitionTo('403');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tssToastHlp.error(e.data.errors.Title, 'There was a problem loading the form.');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconsole.error('Error getting form data', e);\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t},\r\n\t\torg: /*@ngInject*/ function(ssAsync, ssOrganizationSvc, ssToastHlp) {\r\n\t\t\treturn ssAsync(function*() {\r\n\t\t\t\ttry {\r\n\t\t\t\t\trouteVm.org = yield ssOrganizationSvc.getActiveOrg();\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tssToastHlp.error('There was an error retrieving organization data. Due Dates may not display. Please see the console for more detail.', '', false);\r\n\t\t\t\t\tconsole && console.error && console.error('Error getting Org data', err);\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t},\r\n\t\t$title: /*@ngInject*/ (formInstanceCompletion) => {\r\n\t\t\treturn `Frontline Central - ${routeVm.formInstance.name}`;\r\n\t\t}\r\n\t}\r\n};\r\n\r\n\r\n\r\n// #-- END State (//form-instance) --# //\r\n// #---------------------------------# //\r\n\r\nangular.module('ec-forms').config( /*@ngInject*/ ($stateProvider) => {\r\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\r\n});\r\n","import {Segment} from 'base-segment';\r\n// #------------------------------------------------------# //\r\n// #---- Segment (/form-instance/segment-attachments) ----# //\r\n\r\nclass Attachments extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $scope, $window, ssAsync, filenameHlp, ssFormTemplatesApi) {\r\n\t\t// view model that is shared by all segments on this route,\r\n\t\t// used for segment coordination\r\n\t\tconst routeVm = $scope.routeVm;\r\n\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentInboxFormInstanceAttachmentsLogic');// eslint-disable-line\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = { // eslint-disable-line\r\n\t\t\tloading: true\r\n\t\t};\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { // eslint-disable-line\r\n\t\t\tdownload: function(attachment) {\r\n\t\t\t\t\tgetFileData(attachment);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tfunction getFileData(fileToOpen = null){\r\n\t\t\tssAsync(function*() {\r\n\t\t\t\tlet ids = routeVm.formTemplate._files.map(file => file._fileId);\r\n\t\t\t\ttry {\r\n\t\t\t\t\tvar files = yield ssFormTemplatesApi.getFiles({}, {\r\n\t\t\t\t\t\tids: ids\r\n\t\t\t\t\t});\r\n\t\r\n\t\t\t\t\tvm.files = files.map(file => {\r\n\t\t\t\t\t\tlet ext = filenameHlp.getExtension(file._filename);\r\n\t\t\t\t\t\tfile.icon = filenameHlp.getIcon(ext);\r\n\t\r\n\t\t\t\t\t\treturn file;\r\n\t\t\t\t\t}).filter(removePDFOverlayFile);\r\n\t\t\t\t} catch(e) {\r\n\t\t\t\t\tconsole.error('Error getting file records', e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tvm.loading = false;\r\n\t\t\t\t\tif (fileToOpen) {\r\n\t\t\t\t\t\t$window.open(vm.files.find(x => x.id == fileToOpen.id)._url)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t}\r\n\t\t\r\n\t\tgetFileData();\r\n\r\n\t\t// checks to see if an attachment file is the file used in the PDF overlay (used to remove the PDF overlay file from the attachments list)\r\n\t\tfunction removePDFOverlayFile(file) {\r\n\t\t\treturn routeVm.formTemplate._printPreviewDefinition ? file.id !== routeVm.formTemplate._printPreviewDefinition.templateFileId : true;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/form-instance/segment-attachments) --# //\r\n// #------------------------------------------------------# //\r\n\r\nangular.module('ec-forms-segments').directive('segmentFormInstanceAttachments', () => new Attachments('attachments') );\r\n","/*@ngInject*/\r\nfunction logic() {\r\n\t// logic api\r\n\treturn {\r\n\r\n\t};\r\n}\r\nangular.module('ec-forms-segment-logic').factory('segmentFormInstanceAttachmentsLogic', logic);\r\n","import {Segment} from 'base-segment';\r\n// #-----------------------------------------------# //\r\n// #---- Segment (/form-instance/segment-form) ----# //\r\n\r\nclass Form extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $scope, $stateParams, $location, $anchorScroll, $timeout, $q, $filter, $sce, ssAsync, ssEventSvc, ssFormInstancesApi, ssEnum, ssActiveUserSvc, ssToastHlp, ssModalSvc, ssFlagSvc, fieldRendererHlp, formsHlp, rAF) {\r\n\r\n\t\tconst routeVm = $scope.routeVm;\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentFormInstanceFormLogic');\r\n\t\tconst stepValues = $scope.stepValues = {};\r\n\t\tconst sensitiveFieldDefIds = [\r\n\t\t\t\"aa736224-2a09-490a-b069-7cc945a040ea\",\r\n\t\t\t\"ba2d2021-59b6-45b9-9e4b-c501d064e012\"\r\n\t\t]\r\n\t\tvar customMessage = '';\r\n\r\n\t\t// view model that is shared by all segments on this route, used for segment coordination\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\tsteps: [],\r\n\t\t\tselectedStep: null,\r\n\t\t\tloading: false,\r\n\t\t\tsubmissionEvent: '',\r\n\t\t\temployeeProfileReview: ssEnum.stepAction.employeeProfileReview,\r\n\t\t\tformComplete: ssEnum.formStatus.complete,\r\n\t\t\tcachedSourceFields: {}\r\n\t\t};\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { // eslint-disable-line\r\n\t\t\tselectStep(step) {\r\n\t\t\t\tif(step._stepAction === ssEnum.stepAction.formCompleted) return;\r\n\t\t\t\tif(vm.selectedStep && vm.selectedStep.id === step.id) return;\r\n\t\t\t\tvm.selectedStep = step || vm.steps[0];\r\n\t\t\t\trouteVm.setFieldValidations();\r\n\t\t\t\tscrollToStep(step);\r\n\t\t\t\tssEventSvc.emit('select-summary-step', step, false);\r\n\t\t\t\t$scope.$emit('ss-validate-reset');\r\n\t\t\t},\r\n\r\n\t\t\tsubmitForm(step) {\r\n\t\t\t\tlet submittedStepIndex = vm.steps.findIndex(s => s.id === step.id);\r\n\t\t\t\t// we are submitting a step before/or equal to the current step\r\n\t\t\t\tif (submittedStepIndex <= routeVm.formInstance._currentStepIndex) {\r\n\t\t\t\t\tsubmitForm(step);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// we are trying to submit a step after the current step\r\n\t\t\t\tlet config = {\r\n\t\t\t\t\tsecondaryText: 'Cancel',\r\n\t\t\t\t\talwaysOnTop: true,\r\n\t\t\t\t\tsize: 'standard',\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// vm.steps does not include the form complete step so only need to add 1 to see if submittedStep is the last step\r\n\t\t\t\tif (submittedStepIndex + 1 === vm.steps.length) {\r\n\t\t\t\t\t// last step\r\n\t\t\t\t\tconfig.title = 'Are you sure you want to submit this form?';\r\n\t\t\t\t\tconfig.primaryText = 'Submit Form';\r\n\t\t\t\t\tconfig.content = 'You are about to submit a form with incomplete workflow steps.';\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// are you sure step\r\n\t\t\t\t\tconfig.title = 'Are you sure you want to submit this step?';\r\n\t\t\t\t\tconfig.primaryText = 'Submit Step';\r\n\t\t\t\t\tconfig.content = 'There are incomplete workflow steps prior to this step. Are you sure you want to submit this step?';\r\n\t\t\t\t}\r\n\t\t\t\tssModalSvc.showStandard(config).then(() => {\r\n\t\t\t\t\tsubmitForm(step);\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\tsubmitStep() {\r\n\t\t\t\tvm.submissionEvent = 'submitStep';\r\n\t\t\t\tcustomMessage = 'submitted';\r\n\t\t\t},\r\n\r\n\t\t\tacknowledgeStep() {\r\n\t\t\t\tvm.submissionEvent = 'reviewForm';\r\n\t\t\t\tcustomMessage = 'acknowledged';\r\n\t\t\t},\r\n\r\n\t\t\tapproveStep() {\r\n\t\t\t\tvm.submissionEvent = 'approveForm';\r\n\t\t\t\tcustomMessage = 'approved';\r\n\t\t\t},\r\n\r\n\t\t\tdenyStep($event, step) {\r\n\t\t\t\tvm.submissionEvent = 'declineForm';\r\n\t\t\t\tcustomMessage = 'denied';\r\n\t\t\t\tgo.submitForm(step);\r\n\t\t\t},\r\n\r\n\t\t\treviewProfile() {\r\n\t\t\t\tvm.submissionEvent = 'profileReviewed';\r\n\t\t\t\tcustomMessage = 'submitted';\r\n\t\t\t},\r\n\r\n\t\t\tprofileValueDisplay(reviewStepFieldValue, step) {\r\n\r\n\t\t\t\tif(reviewStepFieldValue.profileValue == null || !reviewStepFieldValue.profileValue.toString()) return;\r\n\t\t\t\tvar val;\r\n\t\t\t\t\r\n\t\t\t\tlet phonefieldIds = [\r\n\t\t\t\t\t'5e989212-29f0-43e4-8d02-1a6a047b7e48',\r\n\t\t\t\t\t'0977c048-185c-4eec-8800-74842a7fbb4f',\r\n\t\t\t\t\t'f658f159-910a-485f-89b7-f20559222f73',\r\n\t\t\t\t\t'14827dc2-9d54-400d-a556-47656bc72f83',\r\n\t\t\t\t\t'e0ec2374-be6a-4d6f-9f12-5cbf58f5a5cc',\r\n\t\t\t\t\t'4efae0cb-6d68-4eeb-8ce3-031b11678275',\r\n\t\t\t\t\t'3a4799b5-168e-4f19-91a6-27299c543f69'\r\n\t\t\t\t];\r\n\t\t\t\t\r\n\t\t\t\tlet field = step.fields.find(f => { return f.id === reviewStepFieldValue.formFieldId });\r\n\r\n\t\t\t\tif (field._options && field._options.length > 0) {\r\n\t\t\t\t\tif(field._fieldDefId === '07ebdcec-0ff6-46ad-92aa-121b8573b8a6') {\r\n\t\t\t\t\t\tlet matchingStateEnum = ssEnum.states.enums.find((e) => {\r\n\t\t\t\t\t\t\treturn e.value === reviewStepFieldValue.profileDisplayValue;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tif(matchingStateEnum != null) { val = matchingStateEnum.name };\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t//\tin the review step, read-only profile values come down as enums \r\n\t\t\t\t\t\t//\tusing field._options to resolve enum to friendly display value \r\n\t\t\t\t\t\tlet option = field._options.find(o => { return field._options.indexOf(o) === reviewStepFieldValue.profileDisplayValue});\r\n\t\t\t\t\t\tif (option != null) {\r\n\t\t\t\t\t\t\tval = option;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (field._fieldType === 'super-input-datepicker' || field._fieldType === 'super-iso-org-date'){\r\n\t\t\t\t\tval = $filter('date')(reviewStepFieldValue.profileDisplayValue, 'MM/dd/yyyy'); \r\n\t\t\t\t} else if (field._fieldType === 'super-input-checkbox') {\r\n\t\t\t\t\tval = (reviewStepFieldValue.profileDisplayValue === true) ? 'Yes' : 'No';\r\n\t\t\t\t} else if (phonefieldIds.includes(field._fieldDefId)) {\r\n\t\t\t\t\tval = reviewStepFieldValue.profileDisplayValue.replace(/(\\d{3})(\\d{3})(\\d{4})/,\"($1) $2-$3\")\r\n\t\t\t\t} else {\r\n\t\t\t\t\tval = reviewStepFieldValue.profileDisplayValue;\r\n\t\t\t\t}\r\n\t\t\t\treturn val;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tfunction setRedirectLocation() {\r\n\t\t\tlet returnUrl = !$stateParams.returnUrl || !$stateParams.returnUrl.length ? setLocationByParticipant() : $stateParams.returnUrl;\r\n\t\t\tfunction setLocationByParticipant() {\r\n\t\t\t\tlet userId = ssActiveUserSvc.getEmployeeSync().id;\r\n\t\t\t\tlet participantIds = routeVm.formInstance._steps.filter((step) =>  { return step._stepParticipant !== null}).map((step) => {\r\n\t\t\t\t\treturn step._stepParticipant.employeeIds[0];\r\n\t\t\t\t});\r\n\t\t\t\treturn participantIds.includes(userId) ? '/ec-forms/my-forms' : '/ec-dashboard';\r\n\t\t\t}\r\n\t\t\treturn returnUrl;\r\n\t\t}\r\n\r\n\t\tfunction submitForm(step) {\r\n\t\t\trouteVm.isLoading = true;\r\n\t\t\trouteVm.loadingStatus = 'Submitting step...';\r\n\t\t\t//\tforce JSON API to think the step has been changed in case no change is made\r\n\t\t\tif (step._stepAction === ssEnum.stepAction.employeeProfileReview) {\r\n\t\t\t\tstep.instance._employeeProfileReviewStepFieldValues.forEach(field => {\r\n\t\t\t\t\tdelete field.sourceField;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tstep.instance._employeeProfileReviewStepFieldValues = step.instance._employeeProfileReviewStepFieldValues.slice();\r\n\t\t\t} else {\r\n\t\t\t\tstep.instance.$$forceChangedState('formFieldValues');\r\n\t\t\t}\r\n\r\n\t\t\tstep.instance.$save(true, false, false)\r\n\t\t\t.then(() => {\r\n\t\t\t\t//\treset the status ID in case the form was rejected\r\n\t\t\t\tif (routeVm.formInstance._statusId === ssEnum.formStatus.rejected) {\r\n\t\t\t\t\treturn ssFormInstancesApi.updateStatus({\r\n\t\t\t\t\t\tid: routeVm.formInstance.id,\r\n\t\t\t\t\t\tnewStatus: 0\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn Promise.resolve();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.then(()=> {\r\n\t\t\t\treturn ssFormInstancesApi.post({\r\n\t\t\t\t\tid: routeVm.formInstance.id,\r\n\t\t\t\t\tevent: vm.submissionEvent,\r\n\t\t\t\t\tstepId: step.id\r\n\t\t\t\t}, null, false);\r\n\t\t\t})\r\n\t\t\t.then(checkWorkflow)\r\n\t\t\t.then(() => {\r\n\t\t\t\tssToastHlp.success(``,`form step ${customMessage}`, false);\r\n\t\t\t\t$location.url(setRedirectLocation());\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tssToastHlp.error(``, err.data.errors.Title, false);\r\n\t\t\t\trouteVm.isLoading = false;\r\n\t\t\t\trouteVm.loadingStatus = '';\r\n\t\t\t\tconsole && console.error && console.error('Error saving form', err);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\t// check the '_inWorkflow' property of a form instance to determine if its safe to return to inbox\r\n\t\tfunction checkWorkflow() {\r\n\r\n\t\t\tvar deferred = $q.defer();\r\n\t\t\tconst MAXATTEMPTS = 24;\r\n\t\t\tlet attempts = 0;\r\n\r\n\t\t\tfunction checking() {\r\n\r\n\t\t\t\tattempts++;\r\n\r\n\t\t\t\tif(attempts === MAXATTEMPTS) {\r\n\t\t\t\t\tdeferred.reject();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tssAsync(function* () {\r\n\r\n\t\t\t\t\tvar form = yield ssFormInstancesApi.get({\r\n\t\t\t\t\t\tid: routeVm.formInstance.id\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif (form && form._inWorkflow === false) {\r\n\t\t\t\t\t\tdeferred.resolve(form);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$timeout(checking, 500);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t})();\r\n\t\t\t}\r\n\t\t\tchecking();\r\n\t\t\treturn deferred.promise;\r\n\t\t}\r\n\r\n\t\t//\tThis will determine whether or not individual fields of a step should ignore validation based on the position of each step relative to the position of the currently selected step (validation should not fire on any step that appears AFTER the currently selected step). Any fields that appear in steps before or in the currently selected step will only ignore validation if they are not required, or the field is required, redacted & has a valid value behind the redaction.\r\n\t\trouteVm.setFieldValidations = function() {\r\n\t\t\tif(vm.selectedStep == null) return;\r\n\t\t\tconst selectedStepIndex = vm.steps.indexOf(vm.steps.find((vmstep) => vmstep.id === vm.selectedStep.id));\r\n\t\t\tvm.steps.forEach((step) => {\r\n\t\t\t\tconst index = vm.steps.indexOf(vm.steps.find(vmstep => vmstep.id === step.id));\r\n\t\t\t\tstep.fields.forEach((field) => {\r\n\t\t\t\t\tif(field._fieldDefId == null) { return; }\r\n\t\t\t\t\tif(index > selectedStepIndex) {\r\n\t\t\t\t\t\tfield.ignoreValidations = true\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlet fieldValue = step.instance.formFieldValues[field.id] ? step.instance.formFieldValues[field.id].toString() : '';\r\n\t\t\t\t\t\tfield.ignoreValidations = !field._required ? true : !!field.isRedacted && !!fieldValue;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction scrollToStep(step) {\r\n\t\t\tconst clickedStepIdx = vm.steps.indexOf(vm.steps.find(vmstep => vmstep.id === step.id));\r\n\t\t\t$anchorScroll('fb-step-' + clickedStepIdx);\r\n\t\t\t$anchorScroll.yOffset = 10;\r\n\t\t}\r\n\r\n\r\n\t\tfunction setToggleVisibility() {\r\n\t\t/* \r\n\t\t**\tWhen Rich Text Editor is ENABLED ('fc-enable-rich-text-editor' = true):\r\n\t\t\tSets the visibility of the 'display sensitive fields' toggle according to the existence of any 'sensitive' fields, including token fields ('_sensitve: true');\r\n\r\n\t\t**\tWhen Rich Text Editor is DISABLED ('fc-enable-rich-text-editor' = false):\r\n\t\t\tSets the visibility of the 'display sensitive fields' toggle according to the 'viewSensitive' meta permission of the form instance step that includes the sensitive fields. Since all current sensitive fields are part of the same field group (personal) and can only appear on one step, this logic is ok for now.\r\n\t\t*/\r\n\r\n\t\t\tif(ssFlagSvc.checkState('fc-enable-rich-text-editor')){\r\n\t\t\t\trouteVm.showToggle = !!routeVm.formTemplate._formFields.find(f => f._sensitive === true);\r\n\t\t\t} else {\r\n\t\t\t\tlet stepWithSensitiveFields = vm.steps.find((step) => {\r\n\t\t\t\t\treturn step.fields.find(field => field._sensitive === true || sensitiveFieldDefIds.includes(field._fieldDefId));\r\n\t\t\t\t});\r\n\t\t\t\trouteVm.showToggle = stepWithSensitiveFields ? stepWithSensitiveFields.instance._meta.permissions.permittedActions.viewSensitive : false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar processForm = routeVm.processForm = ssAsync(function*() {\r\n\t\t\ttry {\r\n\t\t\t\tvm.steps = [];\r\n\t\t\t\tformsHlp.sortByOrderField(routeVm.formTemplate._steps, routeVm.formTemplate._stepOrder);\r\n\t\t\t\t\r\n\t\t\t\trouteVm.formTemplate._steps.forEach((step, index, arr) => {\r\n\t\t\t\t//\tfind the matching form instance step\r\n\t\t\t\t\tstep.instance = routeVm.formInstance._steps.find(s => s._formTemplateStepId === step.id);\r\n\r\n\t\t\t\t//\tif we cant find a matching form instance step OR the step action of the step is 'complete form', return\r\n\t\t\t\t\tif (step.instance == null || step._stepAction === ssEnum.stepAction.formCompleted) { return; }\r\n\r\n\t\t\t\t//\tcreate a default 'formFieldValues' object if it doesnt already exist\r\n\t\t\t\t\tif (typeof step.instance._formFieldValues !== 'string' || step.instance._formFieldValues.length === 0) {\r\n\t\t\t\t\t\tstep.instance._formFieldValues = '{}'; // will become json\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t//\tcopy reference of the matching instance step to the stepValues map\r\n\t\t\t\t\tstepValues[step.instance.id] = step.instance;\r\n\r\n\t\t\t\t//\tbind non-json-api property to json-api property\r\n\t\t\t\t\tfieldRendererHlp.bindConfigObject($scope, `stepValues['${step.instance.id}']._formFieldValues`, `stepValues['${step.instance.id}'].formFieldValues`);\r\n\r\n\t\t\t\t\tif (step.instance._lastModifiedDtUtc == null) {\r\n\t\t\t\t\t\tstep.instance.$$forceChangedState('formFieldValues');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t//\tIf there are no fields then we can assume user doesn't have permissions to view the step and stop here.\r\n\t\t\t\t\tif(!routeVm.formTemplate._formFields.length) { return; }\r\n\r\n\t\t\t\t//\tcollect the fields that belong to the step\r\n\t\t\t\t\tstep.fields = routeVm.formTemplate._formFields.filter(f => !f._tokenField && f._step.id === step.id);\r\n\r\n\t\t\t\t//\tprocess the steps for visibility & editability\r\n\t\t\t\t\tstep = logic.processStep({ tStep: step, formInstance: routeVm.formInstance });\r\n\t\t\t\t\tlogic.processFields(step, routeVm.showSensitiveFields);\r\n\t\t\t\t\tstep.fieldGroups = logic.makeFieldGroups(step);\r\n\r\n\t\t\t\t//\tProcess employee profile review step (if it exists)\r\n\t\t\t\t\tif (step._stepAction === ssEnum.stepAction.employeeProfileReview) {\r\n\t\t\t\t\t\tstep.instance._employeeProfileReviewStepFieldValues.forEach((reviewStepFieldValue, fieldIndex) => {\r\n\t\t\t\t\t\t\t// create a property to hold a copy of the 'profileValue' property. this will be used the updated display text so we never patch 'profileValue'\r\n\t\t\t\t\t\t\treviewStepFieldValue.profileDisplayValue = JSON.parse(JSON.stringify(reviewStepFieldValue.profileValue));\r\n\t\t\t\t\t\t\t// find the source field and attach it to the profile field object\r\n\t\t\t\t\t\t\tlet sourceField = routeVm.formTemplate._steps\r\n\t\t\t\t\t\t\t\t.find(s => s.id === reviewStepFieldValue.sourceStepId).fields\r\n\t\t\t\t\t\t\t\t.find(f => f.id === reviewStepFieldValue.sourceFormFieldId);\r\n\t\t\t\t\t\t\treviewStepFieldValue.sourceField = sourceField;\r\n\t\t\t\t\t\t\t/*\r\n\t\t\t\t\t\t\tWatch any changes in the form field values of the source field's parent step and update the form field value of the corresponding employee profile review step field\r\n\t\t\t\t\t\t\t*/\r\n\t\t\t\t\t\t\t$scope.$watch(`routeVm.formInstance._steps[${index}]._employeeProfileReviewStepFieldValues[${fieldIndex}].sourceField.step.formFieldValues['${reviewStepFieldValue.sourceFormFieldId}']`, (nv, ov) => {\r\n\t\t\t\t\t\t\t\tif (nv != null && nv != ov) {\r\n\t\t\t\t\t\t\t\t\trouteVm.formInstance._steps[index]._employeeProfileReviewStepFieldValues[fieldIndex].formFieldValue = nv;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvm.steps.push(step);\r\n\t\t\t\t});\r\n\t\t\t} catch(err) {\r\n\t\t\t\tthrow err;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tssEventSvc.on('select-form-step', (step) => {\r\n\t\t\tgo.selectStep(step);\r\n\t\t}, $scope);\r\n\r\n\t\tssAsync(function*() {\r\n\t\t\ttry {\r\n\t\t\t//\tset-up the loading indicators\r\n\t\t\t\trouteVm.isLoading = true;\r\n\t\t\t//\tLoad PDF\r\n\t\t\t\tif (routeVm.showPDFOverlay) {\r\n\t\t\t\t\trouteVm.loadingStatus = 'Generating PDF...';\r\n\t\t\t\t\trouteVm.PDFdata = yield formsHlp.generatePDFOverlay(routeVm.formInstance, false);\r\n\t\t\t\t//\tsanitize the '_string' property as a trusted URL for use in the iFrame\r\n\t\t\t\t\tdocument.getElementById(\"form-overlay-frame\").src = $sce.trustAsResourceUrl(routeVm.PDFdata.data.data.attributes.string);\r\n\t\t\t\t} else {\r\n\t\t\t\t\trouteVm.loadingStatus = 'Loading form...';\r\n\t\t\t\t}\r\n\t\t\t//\tprocess the form\r\n\t\t\t\tyield processForm();\r\n\t\t\t//\tfind & highlight the current step\r\n\t\t\t\tlet currentStep = routeVm.formTemplate._steps.find(step => step.id === routeVm.formInstance._currentStepId);\r\n\t\t\t\tgo.selectStep(currentStep);\r\n\t\t\t// set sensitive field toggle visiibility\r\n\t\t\t\tsetToggleVisibility();\r\n\t\t\t//\tfinish\r\n\t\t\t\trouteVm.isLoading = false;\r\n\t\t\t\trouteVm.loadingStatus = '';\r\n\t\t\t} catch(err) {\r\n\t\t\t\trouteVm.isLoading = false;\r\n\t\t\t\trouteVm.loadingStatus = '';\r\n\t\t\t\tssToastHlp.error('There was a problem processing the form', 'Error');\r\n\t\t\t\tconsole && console.error && console.error(err);\r\n\t\t\t}\r\n\t\t})();\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/form-instance/segment-form) --# //\r\n// #-----------------------------------------------# //\r\n\r\nangular.module('ec-forms-segments').directive('segmentFormInstanceForm', () => new Form('form') );\r\n","/*@ngInject*/\r\nfunction logic(ssEnum, enumFormStatus, enumStepAction, ssMultiInitiativeFeatureDetectorSvc, formsHlp, fieldsHlp) {\r\n\tlet isFormCompleted = false;\r\n\tconst sensitiveFieldDefIds = [\r\n\t\t\"aa736224-2a09-490a-b069-7cc945a040ea\",\r\n\t\t\"ba2d2021-59b6-45b9-9e4b-c501d064e012\"\r\n\t]\r\n\r\n\t// logic api\r\n\treturn {\r\n\t\tprocessStep,\r\n\t\tprocessFields,\r\n\t\tmakeFieldGroups,\r\n\t\tmapName\r\n\t};\r\n\r\n\t/**\r\n\t * Calculates the disabled and editMode property of each step.\r\n\t *\r\n\t * @param {Object} formTemplate - the form template object which the form instance is based on\r\n\t * @param {Object} formInstance - the current Form instance\r\n\t * @param {Object} activeUser - current logged-in user\r\n\t */\r\n\tfunction processStep({tStep, formInstance}) {\r\n\r\n\t\tlet step = Object.assign({}, tStep);\r\n\r\n\t\t//\tIs the form instance complete?\r\n\t\tisFormCompleted = formInstance._statusId === enumFormStatus.complete;\r\n\r\n\t\t/*\r\n\t\tThe View/Edit permissions for each step of the form instance should be based on the following criteria:\r\n\t\t** 1. If the user has the IDM administrator role, they CAN VIEW and CAN EDIT all steps\r\n\t\t** 2. If the user has the Employee.FormInstances permission (Can edit another employee's form instances), they CAN VIEW and CAN EDIT all steps\r\n\t\t** 3. If the user is the FormAdministrator, they CAN VIEW and CAN EDIT all steps\r\n\t\t** 4. All other step visibility is governed by the step permissions object on the step, based on the participant type and whether the \"canView\" and/or \"canEdit\" permission is selected.\r\n\t\t** NOTE: if \"canView\" is false, the fields of a step are not returned by the server.\r\n\t\t*/\r\n\t\tlet canEditStep = step.instance._meta.permissions.permittedActions.edit;\r\n\r\n\t\t//\tDetermine what the edit and disabled state of a step should be based on the resolved permissions\r\n\t\tstep.editMode = true;\r\n\t\tstep.disabled = false;\r\n\r\n\t\tif (!canEditStep) {\r\n\t\t\tstep.editMode = false;\r\n\t\t\tstep.disabled = true;\r\n\t\t}\r\n\r\n\t//\tdisregard any permissions disable the step if the form is complete\r\n\t\tif(isFormCompleted) {\r\n\t\t\tstep.editMode = false;\r\n\t\t\tstep.disabled = false;\r\n\t\t}\r\n\r\n\t\t//\tmake step permissions available via routeVm\r\n\t\tstep.instance.editMode = step.editMode;\r\n\t\tstep.instance.disabled = step.disabled;\r\n\r\n\t\t//\tDetermine which action buttons to show\r\n\t\tstep = stepActions({ tStep: step });\r\n\r\n\t\treturn step;\r\n\t}\r\n\r\n\tfunction stepActions({ tStep }) {\r\n\t\tlet showFormEntry = false;\r\n\t\tlet showReviewForm = false;\r\n\t\tlet showReviewApproveOrDeny = false;\r\n\t\tlet showEmployeeProfileReview = false;\r\n\r\n\t\tif ((tStep.currentStep || !tStep.disabled) && !isFormCompleted) {\r\n\t\t\tshowFormEntry = tStep._stepAction === enumStepAction.formEntry;\r\n\t\t\tshowReviewForm = tStep._stepAction === enumStepAction.reviewForm;\r\n\t\t\tshowReviewApproveOrDeny = tStep._stepAction === enumStepAction.reviewApproveOrDeny,\r\n\t\t\tshowEmployeeProfileReview = tStep._stepAction === enumStepAction.employeeProfileReview;\r\n\t\t}\r\n\r\n\t\tlet step = Object.assign({}, tStep, { showFormEntry, showReviewForm, showReviewApproveOrDeny, showEmployeeProfileReview })\r\n\r\n\t\treturn step;\r\n\t}\r\n\r\n//\tprocess the fields to determine access permissions, config etc.\r\n\tfunction processFields(step, showSensitiveFields) {\r\n\r\n\t//\torder the fields that belong to the step\r\n\t\tformsHlp.sortByOrderField(step.fields, step._fieldOrder);\r\n\r\n\t\tstep.fields.forEach(field => {\r\n\t\t\tfield.step = step.instance;\r\n\t\t\tfield.editMode = step.editMode;\r\n\t\t\tfield.disabled = step.disabled;\r\n\r\n\t\t\tfieldsHlp.updateFieldAttributes(field);\r\n\r\n\t\t\t// create a collection of state values for PATCH (they need to be sent up as two character state codes)\r\n\t\t\tif(field._fieldDefId === '07ebdcec-0ff6-46ad-92aa-121b8573b8a6') {\r\n\t\t\t\tlet config = JSON.parse(field._configJson);\r\n\t\t\t\tfield.optionValues = ssEnum[config.externalSource].enums.map((e) => {\r\n\t\t\t\t\treturn e.value;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (field._fieldType === 'super-digital-signature') {\r\n\t\t\t\tfield.onBehalf = false;\r\n\t\t\t\ttry {\r\n\t\t\t\t\t// set onBehalf to true if the step participant is not the current logged in activeUser\r\n\t\t\t\t\tfield.onBehalf = !(field.step._stepParticipant && (field.step._stepParticipant.employeeIds[0] === activeUser.id || activeUser.idmAdministrator));\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\t// TODO - what to do?\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t//\tRedact & set edit permission for sensitive fields\r\n\t\t\tif(field._sensitive || sensitiveFieldDefIds.includes(field._fieldDefId)) {\r\n\t\t\t\tif(!isFormCompleted) {\r\n\t\t\t\t\tfield.editMode = step.instance._meta.permissions.permittedActions.editSensitive;\r\n\t\t\t\t}\r\n\t\t\t\tfield.isRedacted = !showSensitiveFields;\r\n\t\t\t}\r\n\r\n\t\t//\tturn off edit mode for any rich text editor component\t\r\n\t\t\tif (field._fieldType === 'cmp-text-editor') {\r\n\t\t\t\tfield.editMode = false;\r\n\t\t\t}\r\n\r\n\t\t// TEMP - removes '_fieldGroup' property from custom field groups\r\n\t\t\tlet customFieldIds = [\r\n\t\t\t\t'951626b1-a422-46b4-9fa1-3b5acf7ee8fc',\r\n\t\t\t\t'977a2273-62c1-4eef-8d63-91f9d8d1e0bf',\r\n\t\t\t\t'10a88a23-f8f3-48eb-aa48-c466db06378b',\r\n\t\t\t\t'17ff0b2c-4973-4181-92ce-b1c50c851165',\r\n\t\t\t\t'c2e31de2-09e8-4563-acb1-0e190a8e3b11',\r\n\t\t\t\t'5299a28c-56d5-4dc3-81ae-6f9f741eb324',\r\n\t\t\t\t'e215f04f-037a-479e-b5da-9bb3155b55d5',\r\n\t\t\t\t'9eabf24b-ae80-4488-a164-2a6f78a50cbd',\r\n\t\t\t\t'b6390770-0590-418c-b516-2080b243e9b7',\r\n\t\t\t\t'2056c221-97c8-4994-962c-f4bfc319a9e4'\r\n\t\t\t];\r\n\r\n\t\t\tif (customFieldIds.includes(field._fieldDefId) && field.fieldGroup) {\r\n\t\t\t\tfield['_fieldGroup'] = null;\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t}\r\n\r\n//\tseparate the fields into their respective field groups\r\n\tfunction makeFieldGroups(step){\r\n\t\tlet fieldGroups = [];\r\n\t\tstep.fields.forEach(field => {\r\n\t\t\tif (ssMultiInitiativeFeatureDetectorSvc.isHRMSEnabled()) {\r\n\t\t\t\t// don't include fields not viewable for HRMS\r\n\t\t\t\tlet templateField = fieldsHlp.getFieldById(field);\r\n\r\n\t\t\t\tif (templateField != null && templateField._hideForHRMS) { return; }\r\n\t\t\t}\r\n\r\n\t\t\tif (fieldGroups.length === 0) {\r\n\t\t\t\tfieldGroups.push([field]);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tlet group = fieldGroups[fieldGroups.length - 1];\r\n\t\t\tif (field._fieldGroup != null && group[0]._fieldGroup === field._fieldGroup) {\r\n\t\t\t\tgroup.push(field);\r\n\t\t\t} else {\r\n\t\t\t\tfieldGroups.push([field]);\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn fieldGroups;\r\n\t}\r\n\r\n\tfunction mapName(key, list) {\r\n\t\tif (key === null || key === '') { return ''; }\r\n\r\n\t\tlet obj = list.find(v => v.id === key);\r\n\t\tlet name = '';\r\n\r\n\t\tif (obj != null) { name = obj._name; }\r\n\r\n\t\treturn name;\r\n\t}\r\n\r\n}\r\nangular.module('ec-forms-segment-logic').factory('segmentFormInstanceFormLogic', logic);\r\n","import {Segment} from 'base-segment';\r\n// #-------------------------------------------------# //\r\n// #---- Segment (/form-instance/segment-header) ----# //\r\n\r\nclass Header extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $scope, $state, $stateParams, $http, $sce, $location, $window, ssActiveUserSvc, ssAsync, ssDateByOrgHlp, ssToastHlp, ssDateHlp, ssEnum, ssModalSvc, rAF, formsHlp) {\r\n\t\t// view model that is shared by all segments on this route,\r\n\t\t// used for segment coordination\r\n\t\tconst routeVm = $scope.routeVm;\r\n\t\trouteVm.showSensitiveFields = false;\r\n\t\tconst sensitiveFieldDefIds = [\r\n\t\t\t'aa736224-2a09-490a-b069-7cc945a040ea',\r\n\t\t\t'ba2d2021-59b6-45b9-9e4b-c501d064e012'\r\n\t\t];\r\n\t\tlet instanceWithSensitive;\r\n\t\tlet sensitiveFields;\r\n\t\tconst sensitiveFieldValues = [];\r\n\t\tconst redactedRegex = /[*]{6,}/g;\r\n\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentFormInstanceHeaderLogic'); // eslint-disable-line\r\n\r\n\t\tconst vm = $scope.vm = { // eslint-disable-line\r\n\t\t\tfromView: $state.params.from || '',\r\n\t\t\tfirstSave: routeVm.formTemplate._isEmployeeInitiated && ssDateHlp.isForeverPast(routeVm.formInstance._changedUtc),\r\n\t\t\tformIsComplete: routeVm.formInstance._statusId === ssEnum.formStatus.complete || routeVm.formInstance._statusId === ssEnum.formStatus.archived,\r\n\t\t\tdeleting: false,\r\n\t\t};\r\n\r\n\t\tconst go = $scope.go = { // eslint-disable-line\r\n\r\n\t\t\ttoggleFormView: ssAsync(function*(showPDF) {\r\n\t\t\t\tif(showPDF){\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\trouteVm.isLoading = true;\r\n\t\t\t\t\t\trouteVm.loadingStatus = 'Generating PDF...';\r\n\t\t\t\t\t\tif(!routeVm.PDFdata) {\r\n\t\t\t\t\t\t\trouteVm.PDFdata = yield formsHlp.generatePDFOverlay(routeVm.formInstance, routeVm.showSensitiveFields);\r\n\t\t\t\t\t\t\t//\tsanitize the '_string' property as a trusted URL for use in the iFrame\r\n\t\t\t\t\t\t\tdocument.getElementById(\"form-overlay-frame\").src = $sce.trustAsResourceUrl(routeVm.PDFdata.data.data.attributes.string);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\trouteVm.showPDFOverlay = true\r\n\t\t\t\t\t\trouteVm.isLoading = false;\r\n\t\t\t\t\t\trouteVm.loadingStatus = '';\r\n\t\t\t\t\t} catch(err) {\r\n\t\t\t\t\t\trouteVm.isLoading = false;\r\n\t\t\t\t\t\trouteVm.loadingStatus = '';\r\n\t\t\t\t\t\tconsole && console.error && console.error(err);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\trouteVm.showPDFOverlay = false;\r\n\t\t\t\t}\r\n\t\t\t}),\r\n\r\n\t\t\ttoggleSensitiveFields: function(checked) {\r\n\t\t\t\trouteVm.showSensitiveFields = checked;\r\n\r\n\t\t\t\tssAsync(function*() {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tif(routeVm.showPDFOverlay) {\r\n\t\t\t\t\t\t\trouteVm.isLoading = true;\r\n\t\t\t\t\t\t\trouteVm.loadingStatus = 'Generating PDF...';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(instanceWithSensitive == null) {\r\n\t\t\t\t\t\t\trouteVm.isLoading = true;\r\n\t\t\t\t\t\t\trouteVm.loadingStatus = 'Retrieving sensitive values...';\r\n\t\t\t\t\t\t\tinstanceWithSensitive = yield getFormInstance(routeVm.showSensitiveFields);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tprocessSensitiveFields(instanceWithSensitive);\r\n\r\n\t\t\t\t\t\trouteVm.PDFdata = yield formsHlp.generatePDFOverlay(routeVm.formInstance, routeVm.showSensitiveFields);\r\n\t\t\t\t\t//\tsanitize the '_string' property as a trusted URL for use in the iFrame\r\n\t\t\t\t\t\tdocument.getElementById(\"form-overlay-frame\").src = $sce.trustAsResourceUrl(routeVm.PDFdata.data.data.attributes.string);\r\n\r\n\t\t\t\t\t\trouteVm.setFieldValidations();\r\n\t\t\t\t\t\trouteVm.isLoading = false;\r\n\t\t\t\t\t\trouteVm.loadingStatus = '';\r\n\r\n\t\t\t\t\t} catch(err) {\r\n\t\t\t\t\t\trouteVm.isLoading = false;\r\n\t\t\t\t\t\trouteVm.loadingStatus = '';\r\n\t\t\t\t\t\tconsole && console.error && console.error(err);\r\n\t\t\t\t\t}\r\n\t\t\t\t})();\r\n\t\t\t},\r\n\r\n\t\t\tsave() {\r\n\t\t\t\tssAsync(function*() {\r\n\t\t\t\t\trouteVm.isLoading = true;\r\n\t\t\t\t\trouteVm.loadingStatus = 'saving progress...';\r\n\r\n\t\t\t\t\ttry {\r\n\r\n\t\t\t\t\t\tlet reviewStep = routeVm.formInstance._steps.find(step => {\r\n\t\t\t\t\t\t\treturn step._stepAction === ssEnum.stepAction.employeeProfileReview;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t//\tforce change to _employeeProfileReviewStepFieldValues\r\n\t\t\t\t\t\tif (reviewStep) {\r\n\t\t\t\t\t\t\treviewStep._employeeProfileReviewStepFieldValues = reviewStep._employeeProfileReviewStepFieldValues.slice();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfor (let iStep of routeVm.formInstance._steps) {\r\n\t\t\t\t\t\t\t// Do not attempt to save disabled steps\r\n\t\t\t\t\t\t\tif (iStep.disabled || iStep._stepAction === ssEnum.stepAction.formCompleted) {\r\n\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tyield iStep.$save(true, false, false);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\trouteVm.PDFdata = null;\r\n\r\n\t\t\t\t\t\trouteVm.isLoading = false;\r\n\t\t\t\t\t\trouteVm.loadingStatus = '';\r\n\t\t\t\t\t\tssToastHlp.success(``, 'Progress Saved', false);\r\n\r\n\t\t\t\t\t\tif (vm.firstSave) {\r\n\t\t\t\t\t\t\tvm.firstSave = false;\r\n\t\t\t\t\t\t\tlet modalConfig = {\r\n\t\t\t\t\t\t\t\ttitle: 'Progress has been saved. The form will appear in the \"current\" tab of My Forms until submitted.',\r\n\t\t\t\t\t\t\t\tprimaryText: 'Continue',\r\n\t\t\t\t\t\t\t\talwaysOnTop: true,\r\n\t\t\t\t\t\t\t\tshowSecondary: false\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tssModalSvc.showStandard(modalConfig);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\trouteVm.isLoading = false;\r\n\t\t\t\t\t\trouteVm.loadingStatus = '';\r\n\t\t\t\t\t\tssToastHlp.error('There was an error saving the form', 'Error', false);\r\n\t\t\t\t\t\tconsole && console.error && console.error(err);\r\n\t\t\t\t\t}\r\n\t\t\t\t})();\r\n\t\t\t},\r\n\r\n\t\t\tclose() {\r\n\t\t\t\t$location.search('activeTab', null);\r\n\t\t\t\tif($stateParams.target && $stateParams.target === '_blank'){\r\n\t\t\t\t\twindow.close();\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$location.url(setRedirectLocation());\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tprint() {\r\n\t\t\t\trAF(() => $window.print(), $scope);\r\n\t\t\t},\r\n\r\n\t\t\tshowDelete() {\r\n\t\t\t\tlet isFirstStep = routeVm.formInstance._currentStepId === routeVm.formTemplate._stepOrder.split(',')[0];\r\n\t\t\t\treturn routeVm.formInstance._isEmployeeInitiated && isFirstStep;\r\n\t\t\t},\r\n\r\n\t\t\tdeleteForm() {\r\n\t\t\t\tvm.deleting = true;\r\n\t\t\t\tvar config = {\r\n\t\t\t\t\ttitle: 'Delete Form',\r\n\t\t\t\t\tcontent: 'Are you sure you want to delete this form? This form will be deleted and cannot be retrieved.',\r\n\t\t\t\t\tprimaryText: 'Delete',\r\n\t\t\t\t\tsecondaryText: 'Cancel'\r\n\t\t\t\t};\r\n\r\n\t\t\t\tssModalSvc.showDestructive(config).then(() => {\r\n\t\t\t\t\tssAsync(function*() {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tyield routeVm.formInstance.$remove();\r\n\t\t\t\t\t\t\tssToastHlp.success('', `\"${routeVm.formTemplate._name}\" has been deleted`);\r\n\t\t\t\t\t\t\tlet returnUrl = !$stateParams.from || !$stateParams.from.length ? setRedirectLocation() : $stateParams.from;\r\n\t\t\t\t\t\t\t$location.url(returnUrl);\r\n\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t\tssToastHlp.error('', `Error deleting form \"${routeVm.formTemplate._name}\"`);\r\n\t\t\t\t\t\t\tconsole && console.error && console.error(`Error deleting form \"${routeVm.formTemplate._name}\"`, e);\r\n\t\t\t\t\t\t} finally {\r\n\t\t\t\t\t\t\tvm.deleting = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})();\r\n\t\t\t\t}).catch(() => {\r\n\t\t\t\t\t// user hit cancel\r\n\t\t\t\t\tvm.deleting = false;\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tssAsync(function*() {\r\n\r\n\t\t\t// collect all 'sensitive fields, including RTE fields with sensitive field tokens\r\n\t\t\tsensitiveFields = routeVm.formTemplate._formFields.filter((field) => { \r\n\t\t\t\treturn field._sensitive === true || sensitiveFieldDefIds.includes(field._fieldDefId) || isRTEFieldWithSensitiveValues(field);\r\n\t\t\t});\r\n\r\n\t\t\tlet sentDateMoment = ssDateByOrgHlp.utcIsoToRelativeMoment(routeVm.formInstance._createdUtc, routeVm.org);\r\n\t\t\trouteVm.formInstance.sentDate = sentDateMoment.calendar(null, {\r\n\t\t\t\tsameDay: '[Today at] LT',\r\n\t\t\t\tlastDay: '[Yesterday at] LT',\r\n\t\t\t\tlastWeek: 'ddd [at] LT',\r\n\t\t\t\tsameElse: 'L [at] LT'\r\n\t\t\t});\r\n\t\t})();\r\n\r\n\t\tfunction isRTEFieldWithSensitiveValues(field) {\r\n\t\t\t// we look for the 'sensitive' (no underscore) property of token fields because token fields collecttion does not pass through JSON api\r\n\t\t\treturn Array.isArray(field._tokenFields) && !!field._tokenFields.find(field => field.sensitive);\r\n\t\t}\r\n\r\n\t\t//\tUsing $http to get the form instance here to avoid the data going through JSON API, which overwrites what's currently in memory (wipes out any user changes)\r\n\t\tfunction getFormInstance(includeSensitive){\r\n\t\t\tconst baseUrl = buildConfig.endpoint.formTemplates;\r\n\t\t\tlet url = `${baseUrl}/forminstances/${$stateParams.formInstanceId}?include=steps&includeSensitive=${includeSensitive}`;\r\n\t\t\treturn $http({\r\n\t\t\t\turl,\r\n\t\t\t\tmethod: 'GET'\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\tfunction setRedirectLocation() {\r\n\t\t\tlet returnUrl = !$stateParams.returnUrl || !$stateParams.returnUrl.length ? setLocationByParticipant() : $stateParams.returnUrl;\r\n\t\t\tfunction setLocationByParticipant() {\r\n\t\t\t\tlet userId = ssActiveUserSvc.getEmployeeSync().id;\r\n\t\t\t\tlet participantIds = routeVm.formInstance._steps\r\n\t\t\t\t\t.filter(step => step._stepParticipant !== null)\r\n\t\t\t\t\t.map(step => step._stepParticipant.employeeIds[0]);\r\n\t\t\t\treturn participantIds.includes(userId) ? '/ec-forms/my-forms?activeTab=current' : '/ec-dashboard';\r\n\t\t\t}\r\n\t\t\treturn returnUrl;\r\n\t\t}\r\n\r\n\t\t// this logic handles retrieving the form instance with sensitive values (without running it through JSON API) and replacing the matching form field values inline with the sensitive values\r\n\t\tfunction processSensitiveFields(instanceWithSensitive) {\r\n\t\t\tsensitiveFields.forEach((field) => {\r\n\r\n\t\t\t\t// match up the steps for the data we want to replace\r\n\t\t\t\tlet refStep = instanceWithSensitive.data.included.find(obj => obj.attributes.formFieldValues.includes(field.id));\r\n\r\n\t\t\t\tlet step = routeVm.formInstance._steps.find(step => step._formFieldValues.includes(field.id));\r\n\r\n\t\t\t\t// an example of where a matching ref step would not be present is in the case of a form that contains an employee profile review step - only the participant of that step (or admin), has permissions to view/edit it.\r\n\t\t\t\tif(refStep && step && step._meta.permissions.permittedActions.viewSensitive) {\r\n\t\t\t\t\t// update profile review step values\r\n\t\t\t\t\tif(step._stepAction === ssEnum.stepAction.employeeProfileReview) {\r\n\t\t\t\t\t\tif(!routeVm.showSensitiveFields) {\r\n\t\t\t\t\t\t\tstep._employeeProfileReviewStepFieldValues.find(pfield => pfield.formFieldId === field.id).profileDisplayValue = '******';\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// capture the value for employee profile review step sensitive field\r\n\t\t\t\t\t\tif(!sensitiveFieldValues[field.id]) {\r\n\t\t\t\t\t\t\tsensitiveFieldValues[field.id] = refStep.attributes.employeeProfileReviewStepFieldValues.find(pfield =>  pfield.formFieldId === field.id).profileValue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tstep._employeeProfileReviewStepFieldValues.find(pfield => pfield.formFieldId === field.id).profileDisplayValue = sensitiveFieldValues[field.id];\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// cache sensitive field values\r\n\t\t\t\t\tif(!sensitiveFieldValues[field.id]) {\r\n\t\t\t\t\t\tsensitiveFieldValues[field.id] = {\r\n\t\t\t\t\t\t\tvisibleValue: JSON.parse(refStep.attributes.formFieldValues)[field.id],\r\n\t\t\t\t\t\t\tredactedValue: step.formFieldValues[field.id]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// update sensitive field values via cache\r\n\t\t\t\t\tif(step.formFieldValues[field.id]) {\r\n\t\t\t\t\t\tstep.formFieldValues[field.id] = step.formFieldValues[field.id].search(redactedRegex) > -1 ? sensitiveFieldValues[field.id].visibleValue : sensitiveFieldValues[field.id].redactedValue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// finally, redact/show the field\r\n\t\t\t\tfield.isRedacted = !routeVm.showSensitiveFields;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/form-instance/segment-header) --# //\r\n// #-------------------------------------------------# //\r\n\r\nangular.module('ec-forms-segments').directive('segmentFormInstanceHeader', () => new Header('header') );\r\n","/*@ngInject*/\r\nfunction logic() {\r\n\t// logic api\r\n\treturn {\r\n\r\n\t};\r\n}\r\nangular.module('ec-forms-segment-logic').factory('segmentFormInstanceHeaderLogic', logic);\r\n","import {Segment} from 'base-segment';\r\n// #--------------------------------------------------------# //\r\n// #---- Segment (/form-instance/segment-steps-summary) ----# //\r\n\r\nclass StepsSummary extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $scope, ssEventSvc, ssEnum, enumStepAction, formsHlp) {\r\n\t\t// view model that is shared by all segments on this route,\r\n\t\t// used for segment coordination\r\n\t\tconst routeVm = $scope.routeVm;\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentInboxFormInstanceStepsLogic');// jshint ignore:line\r\n\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\tsteps: [],\r\n\t\t\tselectedStep: null,\r\n\t\t\tloading: true,\r\n\t\t\temployeeProfileReview: ssEnum.stepAction.employeeProfileReview\r\n\t\t};\r\n\r\n\t\tconst go = $scope.go = { //jshint ignore:line\r\n\t\t\tselectStep(step) {\r\n\t\t\t\tvm.selectedStep = step;\r\n\t\t\t\tssEventSvc.emit('select-form-step', step);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tssEventSvc.on('select-summary-step', function(step) {\r\n\t\t\tconst clickedStep = vm.steps.find(s => s.id === step.id);\r\n\t\t\tvm.selectedStep = clickedStep;\r\n\t\t}, $scope);\r\n\r\n\t//\tSince we are just displaying the step data here, we can make a copy and filter out the 'form complete' step\r\n\t\tvm.steps = angular.copy(routeVm.formTemplate._steps).filter(step => step._stepAction !== enumStepAction.formCompleted);\r\n\r\n\t\ttry {\r\n\r\n\t//\tsort the steps by the step order\r\n\t\tformsHlp.sortByOrderField(vm.steps, routeVm.formTemplate._stepOrder);\r\n\r\n\t//\tusing form instance steps to build the participant list since it has resolved employee names\r\n\t\tlet participants = logic.buildParticipantList(routeVm.formInstance._steps);\r\n\r\n\t\tvm.steps.forEach((step) => {\r\n\r\n\t\t//\tfind the matching form instance step\r\n\t\t\tstep.instance = routeVm.formInstance._steps.find(s => s._formTemplateStepId === step.id);\r\n\r\n\t\t\tstep.participantPermission = logic.getPermissionLabel(step);\r\n\t\t\tstep.stepActionName = enumStepAction.byValue(step._stepAction);\r\n\r\n\t\t//\tif we cant find a matching form instance step\r\n\t\t//\tOR the step action of the step is 'complete form', return\r\n\t\t\tif (step.instance == null) { return; }\r\n\r\n\t\t\tstep.otherParticipants = participants.reduce((prev, curr) => {\r\n\t\t\t//\twe don't need to include the current step participant\r\n\t\t\t\tif(curr.templateStepId === step.id) {\r\n\t\t\t\t\treturn prev;\r\n\t\t\t\t}\r\n\t\t\t//\tfind the matching permission object for this participant\r\n\t\t\t\tlet matchingPerm = step._permissions.find((perm) => {\r\n\t\t\t\t\treturn logic.matchByParticipants(perm, curr);\r\n\t\t\t\t});\r\n\t\t\t//\twe are not displaying any participants without 'view' permission\r\n\t\t\t\tif(!matchingPerm || !matchingPerm.canView) { \r\n\t\t\t\t\treturn prev;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tprev.push({\r\n\t\t\t\t\tname: curr.participantName,\r\n\t\t\t\t\tpermissions: `view${matchingPerm.canEdit ? ' & edit' : ''}`\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn prev;\r\n\r\n\t\t\t}, []);\r\n\r\n\t\t});\r\n\r\n\t\t} catch(err) {\r\n\r\n\t\t} finally {\r\n\t\t\tvm.loading = false;\r\n\t\t}\r\n\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/form-instance/segment-steps-summary) --# //\r\n// #--------------------------------------------------------# //\r\n\r\nangular.module('ec-forms-segments').directive('segmentFormInstanceStepsSummary', () => new StepsSummary('steps-summary') );\r\n","/*@ngInject*/\r\nfunction logic() {\r\n\t// logic api\r\n\tfunction buildParticipantList(steps) {\r\n\t\tlet parts = [];\r\n\t\tsteps.forEach(step => {\r\n\t\t//\tskip any steps without participants\r\n\t\t\tif(!step._stepParticipant) { return; };\r\n\t\t//\tmake sure the employee id is a valid value\r\n\t\t\tlet spEmpId = angular.isArray(step._stepParticipant.employeeIds) && step._stepParticipant.employeeIds.length ? step._stepParticipant.employeeIds[0] : '';\r\n\t\t//\tif we already added this step participant, return\r\n\t\t\tif(parts.find((part) => part.templateStepId === step._formTemplateStepId)) { \r\n\t\t\t\treturn; \r\n\t\t\t};\r\n\t\t//\tif not, add a new one\r\n\t\t\tparts.push({\r\n\t\t\t\ttemplateStepId: step._formTemplateStepId,\r\n\t\t\t\tparticipantName: step._stepParticipant.name,\r\n\t\t\t\tparticipantType: step._stepParticipant.participantType,\r\n\t\t\t\temployeeId: spEmpId\r\n\t\t\t});\r\n\t\t});\r\n\t\treturn parts;\r\n\t}\r\n\r\n\tfunction getPermissionLabel(step){\r\n\t\tlet permission = step._permissions.find((perm) => {\r\n\t\t\treturn matchByParticipants(perm, step);\r\n\t\t});\r\n\t\treturn permission ? `${permission.canView ? 'view' : ''}${permission.canEdit ? ' & edit' : ''}` : ''\r\n\t}\r\n\r\n\tfunction matchByParticipants(source, target){\r\n\t\tlet targetId = target._stepParticipant ? target._stepParticipant.employeeIds[0] : target.employeeId;\r\n\t\tlet targetParticipantType = target._stepParticipant ? target._stepParticipant.participantType : target.participantType;\r\n\r\n\t\tif(source.participantType === ssEnum.stepParticipantType.specificPerson) {\r\n\t\t\treturn source.employeeId === targetId;\r\n\t\t}\r\n\t\treturn source.participantType === targetParticipantType;\r\n\t}\r\n\r\n\treturn {\r\n\t\tbuildParticipantList,\r\n\t\tgetPermissionLabel,\r\n\t\tmatchByParticipants,\r\n\t};\r\n}\r\nangular.module('ec-forms-segment-logic').factory('segmentFormInstanceStepsSummaryLogic', logic);\r\n","import { State } from 'base-state';\r\n// #----------------------------------# //\r\n// #---- State (//form-templates) ----# //\r\n\r\n\r\n// view model that is shared by all segments on this route,\r\n// used for segment coordination. Define initial state here.\r\nconst routeVm = {};\r\n\r\nconst stateName = 'formTemplates';\r\n\r\n// config object for ui-router\r\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\r\nconst stateConfig = {\r\n\turl: '/form-templates',\r\n\ttemplateUrl: 'routes/form-templates/form-templates.html',\r\n\tresolve: {\r\n\t\torg: /*@ngInject*/ function(ssAsync, ssOrganizationSvc, ssToastHlp) {\r\n\t\t\treturn ssAsync(function*() {\r\n\t\t\t\ttry {\r\n\t\t\t\t\trouteVm.org = yield ssOrganizationSvc.getActiveOrg();\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tssToastHlp.error(\r\n\t\t\t\t\t\t'There was an error retrieving organization data. Due Dates may not display. Please see the console for more detail.',\r\n\t\t\t\t\t\t'', false);\r\n\t\t\t\t\tconsole && console.error && console.error('Error getting Org data', err);\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t},\r\n\t\tisHRMSEnabled: /*@ngInject*/ function(ssMultiInitiativeFeatureDetectorSvc) {\r\n\t\t\trouteVm.isHRMSEnabled = ssMultiInitiativeFeatureDetectorSvc.isHRMSEnabled();\r\n\t\t},\r\n\t\t$title: /*@ngInject*/ () => {\r\n\t\t\treturn 'Frontline Central - Form Templates';\r\n\t\t}\r\n\t},\r\n\t$permissions(permissionSvc) {\r\n\t\treturn (\r\n\t\t\tpermissionSvc.isPermittedAction('formTemplates', 'create') ||\r\n\t\t\tpermissionSvc.isPermittedAction('formTemplates', 'edit') ||\r\n\t\t\tpermissionSvc.isPermittedAction('formTemplates', 'send') ||\r\n\t\t\tpermissionSvc.isPermittedAction('formTemplates', 'archive') ||\r\n\t\t\tpermissionSvc.isPermittedAction('packets', 'create') ||\r\n\t\t\tpermissionSvc.isPermittedAction('packets', 'edit') ||\r\n\t\t\tpermissionSvc.isPermittedAction('packets', 'send') ||\r\n\t\t\tpermissionSvc.isPermittedAction('packets', 'archive')\r\n\t\t);\r\n\t}\r\n};\r\n\r\n\r\n\r\n// #-- END State (//form-templates) --# //\r\n// #----------------------------------# //\r\n\r\nangular.module('ec-forms').config( /*@ngInject*/ ($stateProvider) => {\r\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\r\n});\r\n","import {Segment} from 'base-segment';\r\n// #---------------------------------------------------# //\r\n// #---- Segment (/form-templates/segment-content) ----# //\r\n\r\nclass Content extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $scope, rAF, ssAsync, ssDateByOrgHlp, ssFormLibraryApi, ssPacketsApi, ssListSvc, ssEnum, enumFormTemplateStatus, formsHlp) {\r\n\t\t//Paging\r\n\t\tvar currentPage = 0;\r\n\t\tconst pageSize = 50;\r\n\t\tvar totalRetrieved = 0;\r\n\r\n\t\tvar getFormsPromise = null;\r\n\t\tconst routeVm = $scope.routeVm;\r\n\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentFormTemplatesContentLogic');// eslint-disable-line\r\n\r\n\t\t// added to routeVm as well for accessing in children components\r\n\t\tconst vm = routeVm.vm = $scope.vm = {\r\n\t\t\tshowInfScroll: true,\r\n\t\t\tsorting: false,\r\n\t\t\tsortCriteria: [\r\n\t\t\t\t{ label: 'Recently Modified', value: { field: 'changedutc', dir: 'desc' }},\r\n\t\t\t\t{ label: 'Template Name A-Z', value: { field: 'name', dir: 'asc' } }\r\n\t\t\t],\r\n\t\t\tstatuses: enumFormTemplateStatus.getEnums()\r\n\t\t\t\t.filter(enm => enm.value !== 2).reverse(),\r\n\t\t\tselectedStatus: 'All',\r\n\t\t\tselectedCategory: 'All',\r\n\t\t\tsearch: ''\r\n\t\t};\r\n\t\tvm.sortBy = vm.sortCriteria[0].value;\r\n\r\n\t\t// Some variables are on routeVm because it's passed down to the template/packet display components\r\n\t\trouteVm.loading = false;\r\n\t\trouteVm.displayTemplates = [];\r\n\t\trouteVm.loadFormTemplates = fetchTemplateObjects; // Keeping the same function name exposed on the routeVm for the child components\r\n\t\trouteVm.refreshData = refreshData; \r\n\r\n\t\t//Reset page settings and fetch the data\r\n\t\tfunction refreshData() {\r\n\t\t\tcurrentPage = 0;\r\n\t\t\ttotalRetrieved = 0;\r\n\t\t\trouteVm.displayTemplates = [];\r\n\t\t\treturn fetchTemplateObjects();\r\n\t\t}\r\n\r\n\t\t// When sorting, we want to keep our location on the page\r\n\t\t$scope.$watch('vm.sortBy', (newval, oldval) => {\r\n\t\t\tif (newval === oldval || routeVm.displayTemplates == null || routeVm.displayTemplates.length === 0) { return; }\r\n\t\t\tvm.sortBy = newval;\r\n\t\t\tvm.sorting = true;\r\n\t\t\tfetchTemplateObjects();\r\n\t\t});\r\n\r\n\t\t// When filtering, we want to reset our location to the top of the page (the first page)\r\n\t\t$scope.$watchGroup(['vm.search','vm.selectedCategory','vm.selectedStatus'], (newval, oldval) => {\r\n\t\t\tif (newval === oldval) { return; }\r\n\t\t\trefreshData();\r\n\t\t});\r\n\r\n\t\t// method to handle scrolling\r\n\t\t$scope.scrollData = function scrollData() {\r\n\t\t\tif (!vm.showInfScroll || routeVm.loading) { return; }\r\n\t\t\tvm.scrolling = true;\r\n\t\t\tfetchTemplateObjects();\r\n\t\t};\r\n\r\n\t\tfunction fetchTemplateObjects() {\r\n\r\n\t\t\trouteVm.loading = true;\r\n\t\t\trouteVm.loadingMessage = 'Loading Form Templates';\r\n\r\n\t\t\t// Cancel any previous fetch that is still in progress\r\n\t\t\tif (getFormsPromise != null) {\r\n\t\t\t\tgetFormsPromise.$abort();\r\n\t\t\t}\r\n\r\n\t\t\tgetFormsPromise = ssAsync(function* () {\r\n\t\t\t\ttry {\r\n\r\n\t\t\t\t\tvar requestConfig = {};\r\n\r\n\t\t\t\t\t// get the form template categories if they don't already exist\r\n\t\t\t\t\tif(!routeVm.categories) {\r\n\t\t\t\t\t\trouteVm.categories = yield ssListSvc.getByExternalId('form.categories');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Update infinite scroll (paging)\r\n\t\t\t\t\tcurrentPage = vm.sorting ? currentPage : currentPage + 1;\r\n\t\t\t\t\tvar offset = (currentPage - 1) * pageSize;\r\n\t\t\t\t\ttotalRetrieved = vm.sorting ? totalRetrieved : totalRetrieved + pageSize;\r\n\r\n\t\t\t\t\t// Add the limit and offset queries to the requestConfig object\r\n\t\t\t\t\trequestConfig.offset = vm.sorting ? 0 : offset;\r\n\t\t\t\t\trequestConfig.limit = vm.sorting ? totalRetrieved : pageSize;\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Add the sorting\r\n\t\t\t\t\trequestConfig = Object.assign(requestConfig, logic.addSort(vm.sortBy));\r\n\r\n\t\t\t\t\t// Add the filtering\r\n\t\t\t\t\tif (vm.selectedStatus != null && vm.selectedStatus != \"All\"){\r\n\t\t\t\t\t\trequestConfig = Object.assign(requestConfig, logic.addFilter(\"status\", vm.selectedStatus));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (vm.selectedCategory != null && vm.selectedCategory != \"All\"){\r\n\t\t\t\t\t\trequestConfig = Object.assign(requestConfig, logic.addFilter(\"category\", vm.selectedCategory));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (vm.search != null && vm.search.length > 0){\r\n\t\t\t\t\t\trequestConfig = Object.assign(requestConfig, logic.addFilter(\"name\", vm.search));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Run the endpoint\r\n\t\t\t\t\tvar templateObjectsResult = yield ssFormLibraryApi.queryTemplateObjects(requestConfig);\r\n\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t\t// Get a total count\r\n\t\t\t\t\t$scope.count = parseInt(templateObjectsResult.$headers['total-results'], 10);\r\n\r\n\t\t\t\t\t// Fill out data on each template object like packet info, category name, date strings, and step properties\r\n\t\t\t\t\tvar templateObjects = extendFormTemplates(templateObjectsResult);\r\n\r\n\t\t\t\t\t// Reset the displayTemplates if sorting, otherwise append the next page\r\n\t\t\t\t\trouteVm.displayTemplates = vm.sorting ? [...templateObjects] : [...routeVm.displayTemplates, ...templateObjects];\r\n\r\n\t\t\t\t\t// Figure out when we've reached the end of the list\r\n\t\t\t\t\tvm.showInfScroll = totalRetrieved < $scope.count;\r\n\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tvm.showInfScroll = false;\r\n\t\t\t\t\t//TODO comment this out after debugging\r\n\t\t\t\t\tconsole && console.error && console.error('Error getting data', e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\trouteVm.loading = false;\r\n\t\t\t\t\tvm.sorting = false;\r\n\t\t\t\t\tvm.scrolling = false;\r\n\t\t\t\t\tgetFormsPromise = null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\trAF(function () {\r\n\t\t\t\t\trouteVm.loading = false;\r\n\t\t\t\t\t$scope.$emit('template-objects.data-loaded');\r\n\t\t\t\t}, $scope);\r\n\r\n\t\t\t})();\r\n\r\n\t\t\treturn getFormsPromise;\r\n\t\t}\r\n\r\n\t\t// create the necessary properties on each form template\r\n\t\tfunction extendFormTemplates(templates) {\r\n\r\n\t\t\ttemplates.forEach(template => {\r\n\r\n\t\t\t//\tthese properties are common to both form templates and packets\r\n\t\t\t\ttemplate.isForm = template._templateId != null;\r\n\t\t\t\ttemplate.isPacket = template._templateId == null;\r\n\t\t\t\ttemplate.searchText = `${template._name}`; //TODO: can remove this most likely\r\n\r\n\t\t\t// \tget the packet count\r\n\t\t\t\tif(template.isPacket) {\r\n\t\t\t\t\ttemplate.detailsOpen = false;\r\n\t\t\t\t\tssAsync(function* () {\r\n\t\t\t\t\t\tlet packet = yield ssPacketsApi.get({ id: template.id });\r\n\t\t\t\t\t\ttemplate.packetCount = packet._formTemplateIds.length;\r\n\t\t\t\t\t})();\r\n\t\t\t\t}\r\n\r\n\t\t\t\trouteVm.extendCommonProps(template);\r\n\t\t\t});\r\n\r\n\t\t\treturn templates;\r\n\t\t}\r\n\r\n\t\t// method to add properties common to form templates and packet form templates (templates within a packet)\r\n\t\trouteVm.extendCommonProps = function(template) {\r\n\t\t\tlet modified = ssDateByOrgHlp.utcIsoToRelativeMoment(template._modifiedDt, routeVm.org);\r\n\r\n\t\t\ttemplate.modifiedText = modified.calendar(null, { // eslint-disable-line\r\n\t\t\t\t\tsameDay: '[Today @] LT',\r\n\t\t\t\t\tlastDay: '[Yesterday @] LT',\r\n\t\t\t\t\tlastWeek: 'ddd [@] LT',\r\n\t\t\t\t\tsameElse: 'L [@] LT'\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// TODO: we should pull this off the form template itself\r\n\t\t\t// '_category.name' is not yet resolved on this endpoint, so we need to determine it here\r\n\t\t\tif (template._category) {\r\n\t\t\t\ttemplate._category.name = logic.mapCategory(routeVm.categories, template._category.id);\r\n\t\t\t}\r\n\r\n\t\t\tif(template._steps.length) {\r\n\t\t\t\t// put the steps in the correct order\r\n\t\t\t\tformsHlp.sortByOrderField(template._steps, template._stepOrder);\r\n\t\t\t\t// remove the form complete step\r\n\t\t\t\ttemplate._steps = template._steps.filter(step => step._stepAction !== ssEnum.stepAction.formCompleted);\r\n\t\t\t\t// process the steps\r\n\t\t\t\ttemplate._steps.forEach(step => {\r\n\t\t\t\t\tstep.participantLabel = step._stepParticipant.participantType == null ? 'undefined' : ssEnum.stepParticipantType.byValue(step._stepParticipant.participantType);\r\n\t\t\t\t\tstep.stepActionLabel = step._stepAction == null ? 'undefined' : ssEnum.stepAction.byValue(step._stepAction);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Do the initial call to load the template objects\r\n\t\tfetchTemplateObjects();\r\n\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/form-templates/segment-content) --# //\r\n// #---------------------------------------------------# //\r\n\r\nangular.module('ec-forms-segments').directive('segmentFormTemplatesContent', () => new Content('content') );\r\n","/*@ngInject*/\r\nfunction logic() {\r\n\t// logic api\r\n\treturn {\r\n\t\t// Map a category id to a name\r\n\t\tmapCategory(categories, id) {\r\n\t\t\tvar ret = '';\r\n\t\t\tvar tmp;\r\n\r\n\t\t\tif (id == null) { return ''; }\r\n\t\t\ttmp = categories.filter(v => { return v.value === id; });\r\n\t\t\tif (tmp.length > 0) {\r\n\t\t\t\tret = tmp[0].description;\r\n\t\t\t}\r\n\t\t\treturn ret;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t* return an object containing the 'sort' query value that is passed to the enpoint\r\n\t\t* @param {obj} sort - The 'value' property of the selected sort option\r\n\t\t*/\r\n\t\taddSort(sort) {\r\n\t\t\tvar o = {};\r\n\t\t\to['sort[' + sort.field + ']'] = sort.dir;\r\n\t\t\treturn o;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t* return an object containing the 'filter' query value that is passed to the enpoint\r\n\t\t* @param {string} filter - The 'name' property of the selected filter option\r\n\t\t* @param {object} value - The 'value' property of the selected filter option\r\n\t\t*/\r\n\t\taddFilter(filter, value) {\r\n\t\t\tvar o = {};\r\n\t\t\to['filter['+ filter +']'] = value;\r\n\t\t\treturn o;\r\n\t\t}\r\n\r\n\t};\r\n}\r\nangular.module('ec-forms-segment-logic').factory('segmentFormTemplatesContentLogic', logic);\r\n","import {Segment} from 'base-segment';\r\n// #--------------------------------------------------# //\r\n// #---- Segment (/form-templates/segment-header) ----# //\r\n\r\nclass Header extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $scope, $location, ssAsync, ssEnum, ssValidationHlp, ssFormTemplatesApi, ssPacketsApi, ssToastHlp, formsHlp, enumFormAdministratorType) {\r\n\t\tconst routeVm = $scope.routeVm; // eslint-disable-line\r\n\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentFormTemplatesHeaderLogic'); // eslint-disable-line\r\n\r\n\t\tconst validator = $scope.validator = {\r\n\t\t\trequired: ssValidationHlp.required()\r\n\t\t};\r\n\r\n\t\t$scope.formAdminEnums = enumFormAdministratorType;\r\n\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\topenMenu: false,\r\n\t\t\tinvalidConfig: true,\r\n\t\t\tspecificAdminNotRequired: true,\r\n\t\t\tform: {\r\n\t\t\t\tinstanceType: null,\r\n\t\t\t\tinstanceTitle: null,\r\n\t\t\t\tisEmployeeInitiated: false,\r\n\t\t\t\tcategory: {\r\n\t\t\t\t\tid: null\r\n\t\t\t\t},\r\n\t\t\t\tformAdministrator: {\r\n\t\t\t\t\temployeeId: null,\r\n\t\t\t\t\tformAdministratorType: null\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tspecificAdmin: [],\r\n\t\t\tisCreating: false,\r\n\t\t\tformAdminTypes: $scope.formAdminEnums.getEnums()\r\n\t\t};\r\n\r\n\t\tconst go = $scope.go = { // eslint-disable-line\r\n\r\n\t\t\tcreate() {\r\n\t\t\t\tif (vm.isCreating) {return;}\r\n\t\t\t\tvm.isCreating = true;\r\n\r\n\t\t\t\tvar api = vm.form.instanceType === 'form' ? ssFormTemplatesApi : ssPacketsApi;\r\n\r\n\t\t\t\tssAsync(function*() {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tlet template = yield api.add({}, {\r\n\t\t\t\t\t\t\t'_name': vm.form.instanceTitle,\r\n\t\t\t\t\t\t\t'_isEmployeeInitiated': vm.form.isEmployeeInitiated,\r\n\t\t\t\t\t\t\t'_category': vm.form.category,\r\n\t\t\t\t\t\t\t'_formAdministrator': vm.form.formAdministrator\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif(vm.form.instanceType === 'form') {\r\n\r\n\t\t\t\t\t\t\ttemplate = yield ssFormTemplatesApi.get({\r\n\t\t\t\t\t\t\t\tid: template.id,\r\n\t\t\t\t\t\t\t\tinclude: 'steps,formFields,statusHistory,files'\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\tfor (let i = 1; i <= 2; i++) {\r\n\t\t\t\t\t\t\t\ttemplate._steps.push(formsHlp.makeStep());\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\ttemplate._steps[1]._name = 'Form and Workflow is Complete';\r\n\t\t\t\t\t\t\ttemplate._steps[1]._stepAction = ssEnum.stepAction.formCompleted;\r\n\t\t\t\t\t\t\ttemplate._steps[1]._stepParticipant.participantType = ssEnum.stepParticipantType.employeeChosenWhenSent;\r\n\r\n\t\t\t\t\t\t\tyield template._steps.$save();\r\n\t\t\t\t\t\t\tyield template.$refresh();\r\n\r\n\t\t\t\t\t\t\ttemplate._stepOrder = formsHlp.updateStepOrder(template);\r\n\r\n\t\t\t\t\t\t\tyield template.$save();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t$location.url(`/ec-forms/${vm.form.instanceType}-builder/${template.id}/builder`);\r\n\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\tssToastHlp.error('', `Error creating ${vm.form.instanceType}`);\r\n\t\t\t\t\t\tconsole.error(`Error creating ${vm.form.instanceType}`, e);\r\n\t\t\t\t\t} finally {\r\n\t\t\t\t\t\tvm.isCreating = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t})();\r\n\t\t\t},\r\n\r\n\t\t\ttoggleMenu() {\r\n\t\t\t\tif(vm.openMenu === true){return;}\r\n\t\t\t\tvm.openMenu = !vm.openMenu;\r\n\t\t\t\tgo.reset();\r\n\t\t\t},\r\n\r\n\t\t\treset() {\r\n\t\t\t\tvm.form.instanceType = null;\r\n\t\t\t\tvm.form.instanceTitle = null;\r\n\t\t\t\tvm.form.isEmployeeInitiated = false;\r\n\t\t\t\tvm.form.formAdministrator.employeeId = null;\r\n\t\t\t\tvm.form.formAdministrator.formAdministratorType = null;\r\n\t\t\t\tvm.form.category.id = null;\r\n\t\t\t\tvm.specificAdmin = [];\r\n\t\t\t},\r\n\r\n\t\t\tcancel() {\r\n\t\t\t\tvm.openMenu = false;\r\n\t\t\t\tgo.reset();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t\r\n\t/* \r\n\t**\tHere we create a collection of properties to watch whose values will determine the state of the 'create' button (enabled/disabled). The collection of watched propereties needs to changed based on what fields are rendered on screen, which is based on the type of form template we are creating.\r\n\t*/\r\n\t\tvar propsToWatch = [\r\n\t\t\t'vm.form.category.id',\r\n\t\t\t'vm.form.instanceTitle',\r\n\t\t\t'vm.specificAdminNotRequired',\r\n\t\t\t'vm.form.formAdministrator.formAdministratorType'\r\n\t\t]\r\n\r\n\t\tvar deregPropsWatch;\r\n\r\n\t\t$scope.$on('destroy', $scope.$watch('vm.form.instanceType', (nv, ov) => {\r\n\r\n\t\t\tif(!nv || nv===ov) {return;}\r\n\r\n\t\t\tlet watchedProps;\r\n\r\n\t\t\tvm.altLabel = nv === 'form' ? 'template' : '';\r\n\r\n\t\t//\tcall the deregistration of the currently watched props if a watch already exists;\r\n\t\t\tif (deregPropsWatch) { deregPropsWatch() };\r\n\r\n\t\t//\tif the user is creating a packet, then strip off the 'form admin' property from the collection of watch properties, otherwise, use the original collection\r\n\t\t\tif(nv !== 'form') {\r\n\t\t\t\twatchedProps = propsToWatch.slice().filter((p) => p !== 'vm.form.formAdministrator.formAdministratorType')\r\n\t\t\t} else {\r\n\t\t\t\twatchedProps = propsToWatch;\r\n\t\t\t}\r\n\r\n\t\t//\tenables/disables the 'create' button based on these expressions having a value\r\n\t\t\tderegPropsWatch = $scope.$watchGroup(watchedProps, (nv, ov) => {\r\n\t\t\t\tvm.invalidConfig = nv.some(elem => (typeof elem !== 'number' && !elem) || (typeof elem === 'number' && elem < 0));\r\n\t\t\t});\r\n\r\n\t\t}));\r\n\r\n\t//\tcall the deregistration of the currently watched props when we leave;\r\n\t\t$scope.$on('destroy', deregPropsWatch);\r\n\r\n\t//\tThis ensures that we can't select 'form sender' as the form administrator for an employeed-initiated form template\t\r\n\t\t$scope.$on('$destroy', $scope.$watch('vm.form.isEmployeeInitiated', (nv, ov) => {\r\n\t\t\tif(nv) {\r\n\t\t\t\tif(vm.form.formAdministrator.formAdministratorType === 1) {\r\n\t\t\t\t\tvm.form.formAdministrator.formAdministratorType = null;\r\n\t\t\t\t}\r\n\t\t\t\tvm.formAdminTypes = vm.formAdminTypes.filter((f) => {\r\n\t\t\t\t\treturn f.value !== 1;\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tvm.formAdminTypes = $scope.formAdminEnums.getEnums();\r\n\t\t\t}\r\n\t\t}));\r\n\r\n\t}\r\n\r\n\tlink(scope, elem, attrs) {\r\n\r\n\t\tvar deregWatch;\r\n\r\n\t\tscope.$on('$destroy', scope.$watch('vm.form.formAdministrator.formAdministratorType', (nv, ov) => {\r\n\r\n\t\t\tscope.vm.specificAdmin = [];\r\n\r\n\t\t\tif(nv === scope.formAdminEnums.specificPerson) {\r\n\t\t\t\tscope.vm.specificAdminNotRequired = false;\r\n\t\t\t\tderegWatch = scope.$watch('vm.specificAdmin', (nv, ov) => {\r\n\t\t\t\t\tif(!nv.length) {\r\n\t\t\t\t\t\tscope.vm.specificAdminNotRequired = false;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tscope.vm.specificAdminNotRequired = true;\r\n\t\t\t\t\t\tscope.vm.form.formAdministrator.employeeId = nv[0].id;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tscope.vm.specificAdminNotRequired = true;\r\n\t\t\t\tif(typeof deregWatch === 'function'){\r\n\t\t\t\t\tderegWatch();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}));\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/form-templates/segment-header) --# //\r\n// #--------------------------------------------------# //\r\n\r\nangular.module('ec-forms-segments').directive('segmentFormTemplatesHeader', () => new Header('header') );\r\n","/*@ngInject*/\r\nfunction logic() {\r\n\t// logic api\r\n\treturn {\r\n\r\n\t};\r\n}\r\nangular.module('ec-forms-segment-logic').factory('segmentFormTemplatesHeaderLogic', logic);\r\n","import { State } from 'base-state';\r\n// #---------------------------------# //\r\n// #---- State (//form-tracking) ----# //\r\n\r\n\r\n// view model that is shared by all segments on this route,\r\n// used for segment coordination. Define initial state here.\r\nconst routeVm = {};\r\n\r\nconst stateName = 'formTracking';\r\n\r\n// config object for ui-router\r\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\r\nconst stateConfig = {\r\n\turl: '/form-tracking',\r\n\ttemplateUrl: 'routes/form-tracking/form-tracking.html',\r\n\tresolve: {\r\n\t\tform: /*@ngInject*/ function() {},\r\n\t\torg: /*@ngInject*/ function(ssAsync, ssOrganizationSvc, ssToastHlp) {\r\n\t\t\treturn ssAsync(function*() {\r\n\t\t\t\ttry {\r\n\t\t\t\t\trouteVm.org = yield ssOrganizationSvc.getActiveOrg();\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tssToastHlp.error('There was an error retrieving organization data. Due Dates may not display. Please see the console for more detail.', '', false);\r\n\t\t\t\t\tconsole && console.error && console.error('Error getting Org data', err);\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t},\r\n\t\t$title: /*@ngInject*/ () => {\r\n\t\t\treturn 'Frontline Central - Track Forms';\r\n\t\t},\r\n\t\tisDIPEnabled: /*@ngInject*/ function(ssMultiInitiativeFeatureDetectorSvc) {\r\n\t\t\treturn routeVm.isDIPEnabled = ssMultiInitiativeFeatureDetectorSvc.isDataIntegrationsEnabled();\r\n\t\t}\r\n\t},\r\n\t$permissions: (permissionSvc) => permissionSvc.isPermittedAction('formInstances', 'track')\r\n};\r\n\r\n\r\n\r\n// #-- END State (//form-tracking) --# //\r\n// #---------------------------------# //\r\n\r\nangular.module('ec-forms').config( /*@ngInject*/ ($stateProvider) => {\r\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\r\n});\r\n","import {Segment} from 'base-segment';\r\n// #--------------------------------------------------# //\r\n// #---- Segment (/form-tracking/segment-content) ----# //\r\n\r\nclass Content extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $scope, $filter, $location, ssAsync, ssEnum, moment, ssFormInstancesApi, ssActiveUserSvc, ssDateByOrgHlp) {\r\n\t\t// view model that is shared by all segments on this route,\r\n\t\t// used for segment coordination\r\n\t\tconst routeVm = $scope.routeVm; // eslint-disable-line\r\n\r\n\t\trouteVm.getFormsPromise = null;\r\n\t\trouteVm.getFormCountsPromise = null;\r\n\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentFormTrackingContentLogic'); // jshint ignore:line\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = { // jshint ignore:line\r\n\t\t};\r\n\r\n\t\tconst resolveMethod = $location.search().resolvemethod;\r\n\r\n\t\tif (resolveMethod === 'ReadModel' || resolveMethod === 'Mongo') {\r\n\t\t\tvm.resolveMethod = resolveMethod;\r\n\t\t}\r\n\r\n\t\tconst go = $scope.go = { // eslint-disable-line\r\n\t\t\turgent() {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tapi: ssFormInstancesApi.queryByOrg,\r\n\t\t\t\t\tconfig: {\r\n\t\t\t\t\t\tinclude: 'steps',\r\n\t\t\t\t\t\t'filter[dueDateUtc]': ssDateByOrgHlp.safeNowRelativeTo(routeVm.org).add(4, 'days').toISOString(),\r\n\t\t\t\t\t\t'filter[status]': `${ssEnum.formStatus.incomplete},${ssEnum.formStatus.rejected}`,\r\n\t\t\t\t\t\t'from': routeVm.dateSent.from.toISOString(),\r\n\t\t\t\t\t\t'to': routeVm.dateSent.to.toISOString(),\r\n\t\t\t\t\t\tlimit: 50,\r\n\t\t\t\t\t\tresolvemethod: vm.resolveMethod\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t\tdenied() {\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tapi: ssFormInstancesApi.queryByOrg,\r\n\t\t\t\t\tconfig: {\r\n\t\t\t\t\t\tinclude: 'steps',\r\n\t\t\t\t\t\t'filter[status]': ssEnum.formStatus.rejected,\r\n\t\t\t\t\t\t'from': routeVm.dateSent.from.toISOString(),\r\n\t\t\t\t\t\t'to': routeVm.dateSent.to.toISOString(),\r\n\t\t\t\t\t\tlimit: 50,\r\n\t\t\t\t\t\tresolvemethod: vm.resolveMethod\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t\tnotStarted() {\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tapi: ssFormInstancesApi.queryNotStarted,\r\n\t\t\t\t\tconfig: {\r\n\t\t\t\t\t\tinclude: 'steps',\r\n\t\t\t\t\t\t'from': routeVm.dateSent.from.toISOString(),\r\n\t\t\t\t\t\t'to': routeVm.dateSent.to.toISOString(),\r\n\t\t\t\t\t\tlimit: 50,\r\n\t\t\t\t\t\tresolvemethod: vm.resolveMethod\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t\tinProgress() {\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tapi: ssFormInstancesApi.queryInProgress,\r\n\t\t\t\t\tconfig: {\r\n\t\t\t\t\t\tinclude: 'steps',\r\n\t\t\t\t\t\t'from': routeVm.dateSent.from.toISOString(),\r\n\t\t\t\t\t\t'to': routeVm.dateSent.to.toISOString(),\r\n\t\t\t\t\t\tlimit: 50,\r\n\t\t\t\t\t\tresolvemethod: vm.resolveMethod\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t\tcomplete() {\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tapi: ssFormInstancesApi.queryByOrg,\r\n\t\t\t\t\tconfig: {\r\n\t\t\t\t\t\tinclude: 'steps',\r\n\t\t\t\t\t\t'filter[status]': ssEnum.formStatus.complete,\r\n\t\t\t\t\t\t'from': routeVm.dateSent.from.toISOString(),\r\n\t\t\t\t\t\t'to': routeVm.dateSent.to.toISOString(),\r\n\t\t\t\t\t\tlimit: 50,\r\n\t\t\t\t\t\tresolvemethod: vm.resolveMethod\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tssAsync(function* () {\r\n\t\t\ttry {\r\n\t\t\t\tvm.emplId = yield ssActiveUserSvc.getIdentityByTypeSync('employee');\r\n\t\t\t} catch(e) {\r\n\t\t\t\tconsole && console.log && console.log('Error getting employee ID', e);\r\n\t\t\t}\r\n\t\t})();\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/form-tracking/segment-content) --# //\r\n// #--------------------------------------------------# //\r\n\r\nangular.module('ec-forms-segments').directive('segmentFormTrackingContent', () => new Content('content') );\r\n","/*@ngInject*/\r\nfunction logic() {\r\n\t// logic api\r\n\treturn {\r\n\r\n\t};\r\n}\r\nangular.module('ec-forms-segment-logic').factory('segmentFormTrackingContentLogic', logic);\r\n","import {Segment} from 'base-segment';\r\n// #-------------------------------------------------# //\r\n// #---- Segment (/form-tracking/segment-header) ----# //\r\n\r\nclass Header extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $scope, ssLocationSvc, ssStorage) {\r\n\t\t// view model that is shared by all segments on this route,\r\n\t\t// used for segment coordination\r\n\t\tconst routeVm = $scope.routeVm; // jshint ignore:line\r\n\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentFormTrackingHeaderLogic'); // jshint ignore:line\r\n\r\n\t\t//\tinitialize some props to be shared between segments/components\r\n\t\trouteVm.selectedCategory = 'urgent';\r\n\t\trouteVm.sentByParticipant = '0';\r\n\t\trouteVm.sentToLocation = '-1';\r\n\t\trouteVm.sortBy = 'duedate';\r\n\t\trouteVm.counts = [];\r\n\t\trouteVm.dateSent = getDateSentOptions()[1];\r\n\r\n\r\n\t\tconst vm = $scope.vm = { // eslint-disable-line\r\n\t\t\tsentByCriteria: [\r\n\t\t\t\t{ value: '0', name: 'All' },\r\n\t\t\t\t{ value: 'creatorId', name: 'Form Sender - Myself' },\r\n\t\t\t\t{ value: 'formadministrator', name: 'Form Admin - Myself' }\r\n\t\t\t],\r\n\t\t\tsortOptions: [{ \r\n\t\t\t\tid: 0, value: 'duedate', name: 'Due Date', categories: ['urgent', 'denied', 'not-started', 'in-progress', 'complete']\r\n\t\t\t},{\r\n\t\t\t\tid: 1, value: 'primaryrecipient', name: 'Employee Name (A-Z)', categories: ['urgent', 'denied', 'not-started', 'in-progress', 'complete']\r\n\t\t\t},{ \r\n\t\t\t\tid: 2, value: 'formname', name: 'Form/Packet Name (A-Z)', categories: ['urgent', 'denied', 'not-started', 'in-progress', 'complete']\r\n\t\t\t},{ \r\n\t\t\t\tid: 3, value: 'recentlysent', name: 'Recently Sent', categories: ['urgent', 'denied', 'not-started', 'in-progress']\r\n\t\t\t},{ \r\n\t\t\t\tid: 4, value: 'completionpercent', name: 'Workflow Progress', categories: ['urgent', 'denied', 'in-progress']\r\n\t\t\t}],\r\n\t\t\tlocations: [],\r\n\t\t\tdateSentOptions: getDateSentOptions(),\r\n\t\t\tdateSentIdx: 1\r\n\t\t};\r\n\r\n\t\tconst go = $scope.go = { // eslint-disable-line\r\n\t\t\tfilter(type) {\r\n\t\t\t\trouteVm.selectedCategory = type;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tfunction getDateSentOptions() {\r\n\t\t\tlet now = moment();\r\n\t\t\tlet fcCreation = logic.getFCAddedDate(routeVm.org._applications);\r\n\t\t\tlet yearsToGoBack = logic.getYearsSinceCreation(now, fcCreation); // decide how far back to go\r\n\t\t\tlet lowerLimitYears = 2; // set limit to 2 years of historical data\r\n\t\t\r\n\t\t\tlet options =  [\r\n\t\t\t\tlogic.lastXDays(now, 7),\r\n\t\t\t\tlogic.lastXDays(now, 14), // dateSentIdx: defaults to second one on list\r\n\t\t\t\tlogic.lastXDays(now, 60),\r\n\t\t\t\tlogic.yearToDate(now),\r\n\t\t\t\tlogic.currentSchoolYear(now),\r\n\t\t\t];\r\n\t\t\t\r\n\t\t\tfor (let i = 1; i <= yearsToGoBack && i <= lowerLimitYears; i++ ){ // add school year data up to 3 years in past\r\n\t\t\t\toptions.push(logic.getPreviousSchoolyear(now, i));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn options;\r\n\t\t};\r\n\r\n\t//\tget the locations to be used for filtering\r\n\t\tvm.locations = ssLocationSvc.getAll();\r\n\t//\tAdd 'Anywhere'(all) item to locations list\r\n\t\tvm.locations.splice(0, 0, { _name: 'Anywhere', id: '-1' });\r\n\r\n\t//\tdefault sortBy options to duedate if current sortBy filter is not a valid selection\r\n\t\t$scope.$watch('routeVm.selectedCategory', function(nv, ov) {\r\n\t\t\tif(nv === ov) {return;}\r\n\r\n\t\t\tlet idx = vm.sortOptions.findIndex(option => {\r\n\t\t\t\treturn option.value === routeVm.sortBy;\r\n\t\t\t});\r\n\r\n\t\t\tif (!vm.sortOptions[idx].categories.includes(routeVm.selectedCategory)) {\r\n\t\t\t\trouteVm.sortBy = 'duedate';\r\n\t\t\t}\r\n\r\n\t\t\tssStorage.save('trackFormsFilters', [{\r\n\t\t\t\t'category': routeVm.selectedCategory,\r\n\t\t\t\t'sort': routeVm.sortBy,\r\n\t\t\t\t'search': routeVm.search,\r\n\t\t\t\t'sentby': routeVm.sentByParticipant,\r\n\t\t\t\t'location': routeVm.sentToLocation\r\n\t\t\t}], { persistent: true, expires: false });\r\n\t\t});\r\n\r\n\t\t$scope.$watchGroup(['routeVm.getFormsPromise', 'routeVm.getFormCountsPromise'], function(nv, ov) {\r\n\t\t\tlet promises = nv;\r\n\t\t\tvm.disableFilters = promises.some(promise => {\r\n\t\t\t\treturn (promise != null);\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\t$scope.$watch('vm.dateSentIdx', function(nv, ov) {\r\n\t\t\tif (nv === ov) {return;}\r\n\t\t\trouteVm.dateSent = vm.dateSentOptions[nv];\r\n\t\t});\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/form-tracking/segment-header) --# //\r\n// #-------------------------------------------------# //\r\n\r\nangular.module('ec-forms-segments').directive('segmentFormTrackingHeader', () => new Header('header') );\r\n","/*@ngInject*/\r\nfunction logic() {\r\n\t// logic api\r\n\treturn {\r\n\t\tlastXDays(now, numberOfDays) {\r\n\t\t\treturn {\r\n\t\t\t\tfrom: now.clone().subtract(numberOfDays, 'days'),\r\n\t\t\t\tto: now.clone(),\r\n\t\t\t\ttitle: `Last ${numberOfDays} Days`\r\n\t\t\t};\r\n\t\t},\r\n\t\r\n\t\tcurrentSchoolYear(now) {\r\n\t\t\tvar start, end;\r\n\t\r\n\t\t\tif (now.clone().month() > 6) {\r\n\t\t\t\tlet nextYr = now.clone().utc().add(1, 'years');\r\n\t\t\t\tstart = `${now.clone().year()}-08-01T00:00:00.000Z`;\r\n\t\t\t\tend = `${nextYr.format('YYYY')}-07-31T23:59:59.999Z`;\r\n\t\t\t} else {\r\n\t\t\t\tlet lastYr = now.clone().utc().subtract(1, 'years');\r\n\t\t\t\tstart = `${lastYr.format('YYYY')}-08-01T00:00:00.000Z`;\r\n\t\t\t\tend = `${now.clone().year()}-07-31T23:59:59.999Z`;\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tfrom: moment(start, moment.ISO_8601).utc(),\r\n\t\t\t\tto: moment(end, moment.ISO_8601).utc(),\r\n\t\t\t\ttitle: `${moment(start, moment.ISO_8601).utc().format('MMM YYYY')} – ${moment(end, moment.ISO_8601).utc().format('MMM YYYY')}`\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\tgetFCAddedDate(applicationList){\r\n\t\t\tvar fCDetails = applicationList.filter((app) =>{\r\n\t\t\t\treturn app._applicationId === \"EC\";\r\n\t\t\t});\r\n\r\n\t\t\tif (fCDetails !== undefined && fCDetails.length !== 0){\r\n\t\t\t\treturn fCDetails[0]._createdUtc;\r\n\t\t\t}else {\r\n\t\t\t\treturn moment().toISOString();\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\tgetPreviousSchoolyear(now, numberOfYearsBack = 1) {\r\n\t\t\tlet currentSchoolYear = this.currentSchoolYear(now);\r\n\r\n\t\t\tlet start = moment(currentSchoolYear.from).subtract(numberOfYearsBack, 'years');\r\n\t\t\tlet end = moment(currentSchoolYear.to).subtract(numberOfYearsBack, 'years');\t\r\n\r\n\t\t\treturn {\r\n\t\t\t\tfrom: start,\r\n\t\t\t\tto: end,\r\n\t\t\t\ttitle:`${start.format('MMM YYYY')} – ${end.format('MMM YYYY')}`\r\n\t\t\t};\r\n\r\n\t\t},\r\n\r\n\t\tgetYearsSinceCreation(now, orgCreationDate){\r\n\t\t\treturn Math.ceil(now.diff(moment(orgCreationDate), 'years', true));\r\n\t\t},\r\n\r\n\t\tyearToDate(now) {\r\n\t\t\treturn {\r\n\t\t\t\tfrom: now.clone().startOf('year'),\r\n\t\t\t\tto: now.clone(),\r\n\t\t\t\ttitle: `Jan 1 - Today`\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t};\r\n}\r\nangular.module('ec-forms-segment-logic').factory('segmentFormTrackingHeaderLogic', logic);\r\n","import { State } from 'base-state';\r\n// #--------------------------------------# //\r\n// #---- State (/inbox/form-instance) ----# //\r\n\r\n// view model that is shared by all segments on this route,\r\n// used for segment coordination. Define initial state here.\r\nconst routeVm = {\r\n\tprops: false,\r\n\tformInstance: null,\r\n\tformTemplate: null,\r\n\thasPDFOverlay: null,\r\n\tshowPDFOverlay: null\r\n};\r\n\r\nconst stateName = 'myFormsFormInstance';\r\n\r\n// config object for ui-router\r\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\r\nconst stateConfig = {\r\n\turl: '/form-instance/{formInstanceId:[0-9A-Za-z-]+}?from&returnUrl',\r\n\ttemplateUrl: 'routes/inbox/form-instance/form-instance.html',\r\n\tresolve: {\r\n\t\tformInstanceCompletion: /*@ngInject*/ function ($stateParams, $state, $sce, ssAsync, ssFormInstancesApi, ssFormTemplatesApi, ssToastHlp, enumStepAction, enumFormStatus) {\r\n\r\n\t\t\treturn ssAsync(function* () {\r\n\t\t\t\ttry {\r\n\r\n\t\t\t\t\trouteVm.hasPDFOverlay = false;\r\n\t\t\t\t\trouteVm.showPDFOverlay = false;\r\n\r\n\t\t\t\t\t//\tNeed to get the form Instance and Form Template here\r\n\t\t\t\t\trouteVm.formInstance = yield ssFormInstancesApi.get({\r\n\t\t\t\t\t\tid: $stateParams.formInstanceId,\r\n\t\t\t\t\t\tinclude: 'steps'\r\n\t\t\t\t\t}, null, false);\r\n\r\n\t\t\t\t\trouteVm.formTemplate = yield ssFormTemplatesApi.get({\r\n\t\t\t\t\t\tid: routeVm.formInstance._formTemplate.formTemplateId,\r\n\t\t\t\t\t\tinclude: 'steps,formFields,files'\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t//\tCheck to see if the form instance has a PDF overlay\r\n\t\t\t\t\trouteVm.hasPDFOverlay = routeVm.formTemplate._printPreviewDefinition && routeVm.formTemplate._printPreviewDefinition.templateFileId != null;\r\n\r\n\t\t\t\t//\tGenerate & display the PDF overlay for completed or archived form instances upon page load\t\r\n\t\t\t\t\tif (routeVm.hasPDFOverlay && (routeVm.formInstance._statusId === enumFormStatus.complete || routeVm.formInstance._statusId === enumFormStatus.archived)) {\r\n\r\n\t\t\t\t\t//\tset a flag to toggle form versions\r\n\t\t\t\t\t\trouteVm.showPDFOverlay = true\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tlet formFieldValues = routeVm.formInstance._steps.filter((step) => {\r\n\t\t\t\t\t\t\treturn step._stepAction !== enumStepAction.formCompleted\r\n\t\t\t\t\t\t}).map((step) => {\r\n\t\t\t\t\t\t\treturn step._formFieldValues;\r\n\t\t\t\t\t\t}).reduce((a, c) => {\r\n\t\t\t\t\t\t\ta = typeof a === 'string' ? JSON.parse(a) : a;\r\n\t\t\t\t\t\t\treturn Object.assign(a, JSON.parse(c));\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tssFormInstancesApi.generatePDFOverlay({\r\n\t\t\t\t\t\t\tformInstanceid: routeVm.formInstance.id,\r\n\t\t\t\t\t\t\tformFieldValues: formFieldValues,\r\n\t\t\t\t\t\t\tshowSensitive: false\r\n\t\t\t\t\t\t}).then((res) => {\r\n\r\n\t\t\t\t\t\t//\tsanitize the '_string' property as a trusted URL for use in the iFrame\r\n\t\t\t\t\t\t\tdocument.getElementById(\"form-overlay-frame\").src = $sce.trustAsResourceUrl(res.data.data.attributes.string);\r\n\r\n\t\t\t\t\t\t}).catch((err) => {\r\n\t\t\t\t\t\t\tssToastHlp.error('There was an error generating the PDF', '');\r\n\t\t\t\t\t\t\tconsole && console.error && console.error(err);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tif (e.status === 403) {\r\n\t\t\t\t\t\t$state.transitionTo('403');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tssToastHlp.error(e.data.errors.Title, 'There was a problem loading the form.');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconsole.error('Error getting form data', e);\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t},\r\n\t\torg: /*@ngInject*/ function(ssAsync, ssOrganizationSvc, ssToastHlp) {\r\n\t\t\treturn ssAsync(function*() {\r\n\t\t\t\ttry {\r\n\t\t\t\t\trouteVm.org = yield ssOrganizationSvc.getActiveOrg();\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tssToastHlp.error('There was an error retrieving organization data. Due Dates may not display. Please see the console for more detail.', '', false);\r\n\t\t\t\t\tconsole && console.error && console.error('Error getting Org data', err);\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t},\r\n\t\t$title: /*@ngInject*/ (formInstanceCompletion) => {\r\n\t\t\treturn `Frontline Central - ${routeVm.formInstance.name}`;\r\n\t\t}\r\n\t}\r\n};\r\n\r\n// #-- END State (/inbox/form-instance) --# //\r\n// #--------------------------------------# //\r\n\r\nangular.module('ec-forms').config( /*@ngInject*/($stateProvider) => {\r\n\tsidekick.events.on('feature-flags-ready', (sff) => {\r\n\t\tif(sff.checkState('fc-enable-merged-forms-modules')) {\r\n\t\t\tstateConfig.redirectToState = 'base.formInstance';\r\n\t\t}\r\n\t\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\r\n\t}, {greedy: true});\r\n});\r\n","import {Segment} from 'base-segment';\r\n// #------------------------------------------------------------# //\r\n// #---- Segment (/inbox/form-instance/segment-attachments) ----# //\r\n\r\nclass Attachments extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $scope, $window, ssAsync, filenameHlp, ssFormTemplatesApi) {\r\n\t\t// view model that is shared by all segments on this route,\r\n\t\t// used for segment coordination\r\n\t\tconst routeVm = $scope.routeVm;\r\n\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentInboxFormInstanceAttachmentsLogic');// eslint-disable-line\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = { // eslint-disable-line\r\n\t\t\tloading: true\r\n\t\t};\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { // eslint-disable-line\r\n\t\t\tdownload: function(attachment) {\r\n\t\t\t\t\tgetFileData(attachment);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tfunction getFileData(fileToOpen = null){\r\n\t\t\tssAsync(function*() {\r\n\t\t\t\tlet ids = routeVm.formTemplate._files.map(file => file._fileId);\r\n\t\t\t\ttry {\r\n\t\t\t\t\tvar files = yield ssFormTemplatesApi.getFiles({}, {\r\n\t\t\t\t\t\tids: ids\r\n\t\t\t\t\t});\r\n\t\r\n\t\t\t\t\tvm.files = files.map(file => {\r\n\t\t\t\t\t\tlet ext = filenameHlp.getExtension(file._filename);\r\n\t\t\t\t\t\tfile.icon = filenameHlp.getIcon(ext);\r\n\t\r\n\t\t\t\t\t\treturn file;\r\n\t\t\t\t\t});\r\n\t\t\t\t} catch(e) {\r\n\t\t\t\t\tconsole.error('Error getting file records', e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tvm.loading = false;\r\n\t\t\t\t\tif (fileToOpen) {\r\n\t\t\t\t\t\t$window.open(vm.files.find(x => x.id == fileToOpen.id)._url)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t}\r\n\r\n\t\tgetFileData();\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/inbox/form-instance/segment-attachments) --# //\r\n// #------------------------------------------------------------# //\r\n\r\nangular.module('ec-forms-segments').directive('segmentInboxFormInstanceAttachments', () => new Attachments('attachments') );\r\n","/*@ngInject*/\r\nfunction logic() {\r\n\t// logic api\r\n\treturn {\r\n\t\t\r\n\t};\r\n}\r\nangular.module('ec-forms-segment-logic').factory('segmentInboxFormInstanceAttachmentsLogic', logic);\r\n","import { Segment } from 'base-segment';\r\n// #------------------------------------------------------# //\r\n// #---- Segment (/inbox/form-instance/segment-close) ----# //\r\n\r\nclass Close extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $scope, $state, $stateParams, $window, $location, rAF, ssAsync, ssToastHlp, ssModalSvc, ssDateHlp, enumFormStatus, ssEnum, ssActiveUserSvc, $q) {\r\n\t\t\r\n\t\tconst routeVm = $scope.routeVm;\r\n\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentInboxFormInstanceCloseLogic'); // eslint-disable-line\r\n\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\tfromView: $state.params.from || '',\r\n\t\t\tfirstSave: routeVm.formTemplate._isEmployeeInitiated && ssDateHlp.isForeverPast(routeVm.formInstance._changedUtc),\r\n\t\t\tformIsComplete: routeVm.formInstance._statusId === enumFormStatus.complete || routeVm.formInstance._statusId ===\r\n\t\t\t\tenumFormStatus.archived,\r\n\t\t\tdeleting: false\r\n\t\t};\r\n\r\n\t\tconst go = $scope.go = { // eslint-disable-line no-unused-vars\r\n\t\t\tsave() {\r\n\t\t\t\tssAsync(function*() {\r\n\t\t\t\t\tvm.loading = true;\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tlet reviewStepSourceFields = [];\r\n\r\n\t\t\t\t\t\tlet reviewStep = routeVm.formInstance._steps.find(step => {\r\n\t\t\t\t\t\t\treturn step._stepAction === ssEnum.stepAction.employeeProfileReview;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tif (reviewStep) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t//cache the sourceField in order to re-add after step save; server does not provide a full form field object\r\n\t\t\t\t\t\t\treviewStepSourceFields = reviewStep._employeeProfileReviewStepFieldValues.map(reviewStepFieldValue => {\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\tsourceFormFieldId: reviewStepFieldValue.sourceFormFieldId,\r\n\t\t\t\t\t\t\t\t\tsourceField: reviewStepFieldValue.sourceField,\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t//force change to _employeeProfileReviewStepFieldValues\r\n\t\t\t\t\t\t\treviewStep._employeeProfileReviewStepFieldValues = reviewStep._employeeProfileReviewStepFieldValues.slice();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t//Do not deep save formInstance, need to check step.disabled first\r\n\t\t\t\t\t\tyield routeVm.formInstance.$save(false, true, false);\r\n\t\r\n\t\t\t\t\t\tfor (let iStep of routeVm.formInstance._steps) {\r\n\t\t\t\t\t\t\t//Do not attempt to save disabled steps\r\n\t\t\t\t\t\t\tif (iStep.disabled) {\r\n\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\tlet step = yield iStep.$save(true, true, false);\r\n\r\n\t\t\t\t\t\t\t//once step is saved, need to grab the cached sourceField (reviewStepSourceFields) and add them back to _employeeProfileReviewStepFieldValues \r\n\t\t\t\t\t\t\tif (step._stepAction === ssEnum.stepAction.employeeProfileReview) {\r\n\t\t\t\t\t\t\t\tstep._employeeProfileReviewStepFieldValues = step._employeeProfileReviewStepFieldValues.map(val => {\r\n\t\t\t\t\t\t\t\t\tlet reviewStepSourceField = reviewStepSourceFields.find(field => field.sourceFormFieldId === val.sourceFormFieldId);\r\n\t\t\t\t\t\t\t\t\tval.sourceField = reviewStepSourceField.sourceField;\r\n\t\t\t\t\t\t\t\t\treturn val;\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvm.loading = false;\r\n\t\t\t\t\t\tssToastHlp.success(``, 'Progress Saved', false);\r\n\r\n\t\t\t\t\t\tif (vm.firstSave) {\r\n\t\t\t\t\t\t\tvm.firstSave = false;\r\n\r\n\t\t\t\t\t\t\tlet modalConfig = {\r\n\t\t\t\t\t\t\t\ttitle: 'Progress has been saved. The form will appear in My Forms until submitted.',\r\n\t\t\t\t\t\t\t\tprimaryText: 'Continue',\r\n\t\t\t\t\t\t\t\talwaysOnTop: true,\r\n\t\t\t\t\t\t\t\tshowSecondary: false\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tssModalSvc.showStandard(modalConfig);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\tvm.loading = false;\r\n\t\t\t\t\t\tssToastHlp.error(`There was an error saving the form`, 'Error', false);\r\n\t\t\t\t\t\tconsole && console.error && console.error('ERROR saving formInstance', err);\r\n\t\t\t\t\t}\r\n\t\t\t\t})();\r\n\t\t\t},\r\n\r\n\t\t\tclose() {\r\n\t\t\t\t$location.search('activeTab', null);\r\n\t\t\t\t$location.url(setRedirectLocation());\r\n\t\t\t},\r\n\r\n\t\t\tprint() {\r\n\t\t\t\trAF(() => $window.print(), $scope);\r\n\t\t\t},\r\n\r\n\t\t\tshowDelete() {\r\n\t\t\t\tlet isFirstStep = routeVm.formInstance._currentStepId === routeVm.formTemplate._stepOrder.split(',')[0];\r\n\t\t\t\treturn routeVm.formInstance._isEmployeeInitiated && isFirstStep;\r\n\t\t\t},\r\n\r\n\t\t\tdeleteForm() {\r\n\t\t\t\tvm.deleting = true;\r\n\t\t\t\tvar config = {\r\n\t\t\t\t\ttitle: 'Delete Form',\r\n\t\t\t\t\tcontent: 'Are you sure you want to delete this form? This form will be deleted and cannot be retrieved.',\r\n\t\t\t\t\tprimaryText: 'Delete',\r\n\t\t\t\t\tsecondaryText: 'Cancel'\r\n\t\t\t\t};\r\n\r\n\t\t\t\tssModalSvc.showDestructive(config).then(() => {\r\n\t\t\t\t\tssAsync(function*() {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tyield routeVm.formInstance.$remove();\r\n\t\t\t\t\t\t\tssToastHlp.success('', `\"${routeVm.formTemplate._name}\" has been deleted`);\r\n\t\t\t\t\t\t\t// $state.go('base.index', {}, { reload: true });\r\n\t\t\t\t\t\t\tlet returnUrl = !$stateParams.from || !$stateParams.from.length ? setRedirectLocation() : $stateParams.from;\r\n\t\t\t\t\t\t\t$location.url(returnUrl);\r\n\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t\tssToastHlp.error('', `Error deleting form \"${routeVm.formTemplate._name}\"`);\r\n\t\t\t\t\t\t\tconsole && console.error && console.error(`Error deleting form \"${routeVm.formTemplate._name}\"`, e);\r\n\t\t\t\t\t\t} finally {\r\n\t\t\t\t\t\t\tvm.deleting = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})();\r\n\t\t\t\t}).catch(() => {\r\n\t\t\t\t\t// user hit cancel\r\n\t\t\t\t\tvm.deleting = false;\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tfunction setRedirectLocation() {\r\n\t\t\tlet returnUrl = !$stateParams.returnUrl || !$stateParams.returnUrl.length ? setLocationByParticipant() : $stateParams.returnUrl;\r\n\t\t\tfunction setLocationByParticipant() {\r\n\t\t\t\tlet userId = ssActiveUserSvc.getEmployeeSync().id;\r\n\t\t\t\tlet participantIds = routeVm.formInstance._steps.filter((step) =>  { return step._stepParticipant !== null}).map((step) => {\r\n\t\t\t\t\treturn step._stepParticipant.employeeIds[0];\r\n\t\t\t\t});\r\n\t\t\t\treturn participantIds.includes(userId) ? '/ec-forms/my-forms' : '/ec-dashboard';\r\n\t\t\t}\r\n\t\t\treturn returnUrl;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/inbox/form-instance/segment-close) --# //\r\n// #------------------------------------------------------# //\r\n\r\nangular.module('ec-forms-segments').directive('segmentInboxFormInstanceClose', () => new Close('close'));\r\n","/*@ngInject*/\r\nfunction logic() {\r\n\t// logic api\r\n\treturn {\r\n\t\t\r\n\t};\r\n}\r\nangular.module('ec-forms-segment-logic').factory('segmentInboxFormInstanceCloseLogic', logic);\r\n","import {Segment} from 'base-segment';\r\n// #-----------------------------------------------------# //\r\n// #---- Segment (/inbox/form-instance/segment-form) ----# //\r\n\r\nclass Form extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $scope, $stateParams, $location, rAF, $anchorScroll, $timeout, $q,\r\n\t\t\t\t$filter, ssAsync, ssEventSvc, ssFormInstancesApi, ssEnum, ssActiveUserSvc, fieldRendererHlp,\r\n\t\t\t\tssToastHlp, ssSaveInterrupterSvc, ssModalSvc, formsHlp) {\r\n\t\t// view model that is shared by all segments on this route,\r\n\t\t// used for segment coordination\r\n\t\tconst routeVm = $scope.routeVm;\r\n\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentInboxFormInstanceFormLogic');\r\n\t\tconst stepValues = $scope.stepValues = {};\r\n\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\tsteps: [],\r\n\t\t\tselectedStep: null,\r\n\t\t\tloading: false,\r\n\t\t\tsubmissionEvent: '',\r\n\t\t\temployeeProfileReview: ssEnum.stepAction.employeeProfileReview,\r\n\t\t\tformComplete: ssEnum.formStatus.complete,\r\n\t\t\tcachedSourceFields: {}\r\n\t\t};\r\n\r\n\t\tvar customMessage = '';\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { // eslint-disable-line\r\n\t\t\tselectFormObject(index, step) {\r\n\t\t\t\tvm.selectedStep = step;\r\n\t\t\t\tssEventSvc.emit('form-instance.entry.step-clicked', step.id, false);\r\n\t\t\t\t$scope.$emit('ss-validate-reset');\r\n\t\t\t},\r\n\t\t\tignoreValidations(step, selectedStep){\r\n\t\t\t\tconst index = vm.steps.indexOf(step);\r\n\t\t\t\tconst selectedStepIndex = vm.steps.indexOf(selectedStep);\r\n\t\t\t\treturn index > selectedStepIndex;\r\n\t\t\t},\r\n\t\t\tsubmitForm(step) {\r\n\t\t\t\tlet currentStepIndex = vm.steps.findIndex(s => s.currentStep);\r\n\t\t\t\tlet submittedStepIndex = vm.steps.findIndex(s => s.id === step.id);\r\n\r\n\t\t\t\t// we are submitting a step before/or equal to the current step\r\n\t\t\t\tif (submittedStepIndex <= currentStepIndex) {\r\n\t\t\t\t\tsubmitForm(step);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// we are trying to submit a step after the current step\r\n\t\t\t\tlet config = {\r\n\t\t\t\t\tsecondaryText: 'Cancel',\r\n\t\t\t\t\talwaysOnTop: true,\r\n\t\t\t\t\tsize: 'standard',\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// vm.steps does not include the form complete step so only need to add 1 to see if submittedStep is the last step\r\n\t\t\t\tif (submittedStepIndex + 1 === vm.steps.length) {\r\n\t\t\t\t\t// last step\r\n\t\t\t\t\tconfig.title = 'Are you sure you want to submit this form?';\r\n\t\t\t\t\tconfig.primaryText = 'Submit Form';\r\n\t\t\t\t\tconfig.content = 'You are about to submit a form with incomplete workflow steps.';\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// are you sure step\r\n\t\t\t\t\tconfig.title = 'Are you sure you want to submit this step?';\r\n\t\t\t\t\tconfig.primaryText = 'Submit Step';\r\n\t\t\t\t\tconfig.content = 'There are incomplete workflow steps prior to this step. Are you sure you want to submit this step?';\r\n\t\t\t\t}\r\n\t\t\t\tssModalSvc.showStandard(config).then(() => {\r\n\t\t\t\t\t// primary\r\n\t\t\t\t\tsubmitForm(step);\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\tsubmitStep(step) {\r\n\t\t\t\tvm.submissionEvent = 'submitStep';\r\n\t\t\t\tcustomMessage = 'submitted';\r\n\t\t\t\tvm.selectedStep = step;\r\n\t\t\t},\r\n\r\n\t\t\tacknowledgeStep(step) {\r\n\t\t\t\tvm.submissionEvent = 'reviewForm';\r\n\t\t\t\tcustomMessage = 'acknowledged';\r\n\t\t\t\tvm.selectedStep = step;\r\n\t\t\t},\r\n\r\n\t\t\tapproveStep(step) {\r\n\t\t\t\tvm.submissionEvent = 'approveForm';\r\n\t\t\t\tcustomMessage = 'approved';\r\n\t\t\t\tvm.selectedStep = step;\r\n\t\t\t},\r\n\r\n\t\t\tdenyStep(step) {\r\n\t\t\t\tvm.submissionEvent = 'declineForm';\r\n\t\t\t\tcustomMessage = 'denied';\r\n\t\t\t\tvm.selectedStep = step;\r\n\t\t\t},\r\n\r\n\t\t\treviewProfile(step) {\r\n\t\t\t\tvm.submissionEvent = 'profileReviewed';\r\n\t\t\t\tcustomMessage = 'submitted';\r\n\t\t\t\tvm.selectedStep = step;\r\n\t\t\t},\r\n\r\n\t\t\tprofileValueDisplay(reviewStepFieldValue, step) {\r\n\t\t\t\tvar val;\r\n\t\t\t\tlet field = step.fields.find(f => { return f.id === reviewStepFieldValue.formFieldId });\r\n\r\n\t\t\t\tif (field.externalSourceOptions && field.externalSourceOptions.length > 0) {\r\n\t\t\t\t\t//\tin the review step, read-only profile values come down as enums \r\n\t\t\t\t\t//\tusing field.externalSourceOptions to resolve enum to friendly display value \r\n\t\t\t\t\tlet option = field.externalSourceOptions.find(o => { return o.value === reviewStepFieldValue.profileValue});\r\n\t\t\t\t\tif (option != null) {\r\n\t\t\t\t\t\tval = option.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (field._fieldType === 'super-input-datepicker'){\r\n\t\t\t\t\tval = $filter('date')(reviewStepFieldValue.profileValue, 'MM/dd/yyyy'); \r\n\t\t\t\t} else if (field._fieldType === 'super-input-checkbox') {\r\n\t\t\t\t\tval = (reviewStepFieldValue.profileValue === true) ? 'Yes' : 'No';\r\n\t\t\t\t} else {\r\n\t\t\t\t\tval = reviewStepFieldValue.profileValue;\r\n\t\t\t\t}\r\n\t\t\r\n\t\t\t\treturn val;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tfunction setRedirectLocation() {\r\n\t\t\tlet returnUrl = !$stateParams.returnUrl || !$stateParams.returnUrl.length ? setLocationByParticipant() : $stateParams.returnUrl;\r\n\t\t\tfunction setLocationByParticipant() {\r\n\t\t\t\tlet userId = ssActiveUserSvc.getEmployeeSync().id;\r\n\t\t\t\tlet participantIds = routeVm.formInstance._steps.filter((step) =>  { return step._stepParticipant !== null}).map((step) => {\r\n\t\t\t\t\treturn step._stepParticipant.employeeIds[0];\r\n\t\t\t\t});\r\n\t\t\t\treturn participantIds.includes(userId) ? '/ec-forms/my-forms' : '/ec-dashboard';\r\n\t\t\t}\r\n\t\t\treturn returnUrl;\r\n\t\t}\r\n\r\n\t\tfunction submitForm(step) {\r\n\t\t\tssAsync(function*() {\r\n\t\t\t\tvm.loading = true;\r\n\t\t\t\t//\tsave the current instance step data\r\n\t\t\t\t//\tforce JSON API to think the step has been changed in case no change is made\r\n\t\t\t\tif (step._stepAction === ssEnum.stepAction.employeeProfileReview) {\r\n\t\t\t\t\tstep.instance._employeeProfileReviewStepFieldValues.forEach(field => {\r\n\t\t\t\t\t\tdelete field.sourceField;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tstep.instance._employeeProfileReviewStepFieldValues = step.instance._employeeProfileReviewStepFieldValues.slice();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstep.instance.$$forceChangedState('formFieldValues');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstep.instance.$save().then(success => {\r\n\t\t\t\t\t//\treset the status ID in case the form was rejected\r\n\t\t\t\t\tif (routeVm.formInstance._statusId === ssEnum.formStatus.rejected) {\r\n\t\t\t\t\t\tssFormInstancesApi.updateStatus({\r\n\t\t\t\t\t\t\tid: routeVm.formInstance.id,\r\n\t\t\t\t\t\t\tnewStatus: 0\r\n\t\t\t\t\t\t}).then(() => {\r\n\t\t\t\t\t\t\tpostAndCheck(step);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpostAndCheck(step);\r\n\t\t\t\t\t}\r\n\t\t\t\t}).catch(error => {\r\n\t\t\t\t\tconsole && console.error && console.error('Error saving form', error);\r\n\t\t\t\t\tvm.loading = false;\r\n\t\t\t\t});\r\n\t\t\t})(); // eslint-disable-line\r\n\t\t}\r\n\r\n\t\tfunction postAndCheck(step) {\r\n\t\t\tssFormInstancesApi.post({\r\n\t\t\t\tid: routeVm.formInstance.id,\r\n\t\t\t\tevent: vm.submissionEvent,\r\n\t\t\t\tstepId: step.id\r\n\t\t\t}).then(() => {\r\n\t\t\t\tcheckWorkflow().then((res) => {\r\n\t\t\t\t\tssToastHlp.success(``,`form step ${customMessage}`, false);\r\n\t\t\t\t}).catch(() => {\r\n\t\t\t\t\tssToastHlp.error(``,`form workflow timed out. Please refresh the page and try again`, false);\r\n\t\t\t\t}).finally(() => {\r\n\t\t\t\t\t$location.url(setRedirectLocation());\r\n\t\t\t\t});\r\n\t\t\t}).catch((error) => {\r\n\t\t\t\tconsole && console.error && console.error('Error submitting form', error);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// check the '_inWorkflow' property of a form instance to determine if its safe to return to inbox\r\n\t\tfunction checkWorkflow() {\r\n\r\n \t\t\tvar deferred = $q.defer();\r\n \t\t\tconst MAXATTEMPTS = 24;\r\n \t\t\tlet attempts = 0;\r\n\r\n \t\t\tfunction checking() {\r\n\r\n \t\t\t\tattempts++;\r\n\r\n \t\t\t\tif(attempts === MAXATTEMPTS) {\r\n \t\t\t\t\tdeferred.reject();\r\n \t\t\t\t\treturn;\r\n \t\t\t\t}\r\n\r\n \t\t\t\tssAsync(function* () {\r\n\r\n\t\t\t\t\tvar form = yield ssFormInstancesApi.get({\r\n\t\t\t\t\t\tid: routeVm.formInstance.id\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif (form && form._inWorkflow === false) {\r\n\t\t\t\t\t\tdeferred.resolve(form);\r\n\t\t\t\t\t\tvm.loading = false;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$timeout(checking, 500);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t})();\r\n \t\t\t}\r\n \t\t\tchecking();\r\n\t\t\treturn deferred.promise;\r\n\t\t}\r\n\r\n\t\t(function() {\r\n\t\t\tvm.loading = true;\r\n\r\n\t\t\tformsHlp.sortByOrderField(routeVm.formTemplate._steps, routeVm.formTemplate._stepOrder);\r\n\r\n\t\t\trouteVm.formTemplate._steps.forEach((step, index, arr) => {\r\n\t\t\t//\tfind the matching form instance step\r\n\t\t\t\tstep.instance = routeVm.formInstance._steps.find(s => s._formTemplateStepId === step.id);\r\n\r\n\t\t\t//\tif we cant find a matching form instance step\r\n\t\t\t//\tOR the step action of the step is 'complete form', return\r\n\t\t\t\tif (step.instance == null || step._stepAction === ssEnum.stepAction.formCompleted) { return; }\r\n\r\n\t\t\t//\tcopy reference of the matching instance step to the stepValues map\r\n\t\t\t\tstepValues[step.instance.id] = step.instance;\r\n\r\n\t\t\t//\tbind non-json-api property to json-api property\r\n\t\t\t\tfieldRendererHlp.bindConfigObject($scope, `stepValues['${step.instance.id}']._formFieldValues`,\r\n\t\t\t\t\t`stepValues['${step.instance.id}'].formFieldValues`);\r\n\r\n\t\t\t//\tcreate a default formFieldValues object if it doesnt already exist\r\n\t\t\t\tif (typeof step.instance._formFieldValues !== 'string' || step.instance._formFieldValues.length === 0) {\r\n\t\t\t\t\tstep.instance._formFieldValues = '{}'; // will become json\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (step.instance._lastModifiedDtUtc == null) {\r\n\t\t\t\t\tstep.instance.$$forceChangedState('formFieldValues');\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// highlight the current step\r\n\t\t\t\tif (routeVm.formInstance._currentStepId === step.id) {\r\n\t\t\t\t\tvm.selectedStep = step;\r\n\t\t\t\t\tvm.selectedStep.currentStep = true;\r\n\r\n\t\t\t\t\t//emit the selected step so that the corresponding step can be selected in steps summary\r\n\t\t\t\t\trAF(() => {\r\n\t\t\t\t\t\tssEventSvc.emit('form-instance.entry.step-clicked', step.id);\r\n\t\t\t\t\t}, false);\r\n\t\t\t\t}\r\n\r\n\t\t\t//\tIf there are no fields then we can assume user doesn't have permissions to view the step and stop here.\r\n\t\t\t\tif(!routeVm.formTemplate._formFields.length) { return; }\r\n\r\n\t\t\t//\tcollect the fields that belong to the step\r\n\t\t\t\tstep.fields = routeVm.formTemplate._formFields.filter(f => f._step.id === step.id);\r\n\r\n\t\t\t//\torder the fields that belong to the step\r\n\t\t\t\tformsHlp.sortByOrderField(step.fields, step._fieldOrder);\r\n\r\n\t\t\t//\tprocess the steps for visibility & editability\r\n\t\t\t\tstep = logic.processStep({ tStep: step, formInstance: routeVm.formInstance });\r\n\r\n\t\t\t\tif (step._stepAction === ssEnum.stepAction.employeeProfileReview) {\r\n\t\t\t\t\tstep.instance._employeeProfileReviewStepFieldValues.forEach((reviewStepFieldValue, fieldIndex) => {\r\n\t\t\t\t\t\tlet sourceField = routeVm.formTemplate._steps\r\n\t\t\t\t\t\t\t.find(s => s.id === reviewStepFieldValue.sourceStepId).fields\r\n\t\t\t\t\t\t\t.find(f => f.id === reviewStepFieldValue.sourceFormFieldId);\r\n\r\n\t\t\t\t\t\t// the reference to the sourceField will be broken, which is needed to\r\n\t\t\t\t\t\t// separately PATCH review step fields as well as customize the layout with reviewWidth\r\n\t\t\t\t\t\treviewStepFieldValue.sourceField = Object.assign({}, sourceField);\r\n\r\n\t\t\t\t\t\t// because the reference is broken, we need to cache the reference in order to set a watch\r\n\t\t\t\t\t\tvm.cachedSourceFields[fieldIndex] = sourceField;\r\n\t\t\t\t\t\t$scope.$watch(`vm.cachedSourceFields[${fieldIndex}].overrideVisibility`, (nv, ov) => {\r\n\t\t\t\t\t\t\tif (nv != null && nv != ov) {\r\n\t\t\t\t\t\t\t\treviewStepFieldValue.sourceField.overrideVisibility = nv;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}); \r\n\r\n\t\t\t\t\t\t// <cmp-field-renderer> is bound to an _employeeProfileReviewStepFieldValues object (reviewStepFieldValue).\r\n\t\t\t\t\t\t// nested within that object, we are interested in the value of the source/originating form field.\r\n\t\t\t\t\t\t// once we have that, we can directly update reviewStepFieldValue.formFieldValue, which is what will $save/patch \r\n\t\t\t\t\t\t$scope.$watch(`routeVm.formTemplate._steps[${index}]\r\n\t\t\t\t\t\t\t\t\t.instance._employeeProfileReviewStepFieldValues[${fieldIndex}]\r\n\t\t\t\t\t\t\t\t\t.sourceField.step.formFieldValues['${reviewStepFieldValue.sourceFormFieldId}']`, (nv, ov) => {\r\n\t\t\t\t\t\t\tif (nv != null && nv != ov) {\r\n\t\t\t\t\t\t\t\treviewStepFieldValue.formFieldValue = nv;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tvm.steps.push(step);\r\n\t\t\t});\r\n\t\t\tvm.loading = false;\r\n\t\t}());\r\n\r\n\t\tssEventSvc.on('form-instance.entry.step-clicked', (stepId, scroll = true) => {\r\n\t\t\tconst clickedStep = vm.steps.find(s => s.id === stepId);\r\n\t\t\tconst clickedStepIdx = vm.steps.findIndex(s => s.id === stepId);\r\n\t\t\tif (clickedStep == null) { vm.selectedStep = 0; return; }\r\n\t\t\tvm.selectedStep = clickedStep;\r\n\r\n\t\t\tif (scroll) {\r\n\t\t\t\t$anchorScroll('fb-step-' + clickedStepIdx);\r\n\t\t\t}\r\n\t\t}, $scope);\r\n\r\n\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/inbox/form-instance/segment-form) --# //\r\n// #-----------------------------------------------------# //\r\n\r\nangular.module('ec-forms-segments').directive('segmentInboxFormInstanceForm', () => new Form('form'));\r\n","/*@ngInject*/\r\nfunction logic(ssEnum, enumFormStatus, enumStepAction, fieldsHlp) {\r\n\tlet isFormCompleted = false;\r\n\r\n\t// logic api\r\n\treturn {\r\n\t\tprocessStep,\r\n\t\tmapName\r\n\t};\r\n\r\n\t/**\r\n\t * Calculates the disabled and editMode property of each step.\r\n\t *\r\n\t * @param {Object} formTemplate - the form template object which the form instance is based on\r\n\t * @param {Object} formInstance - the current Form instance\r\n\t * @param {Object} activeUser - current logged-in user\r\n\t */\r\n\tfunction processStep({tStep, formInstance}) {\r\n\r\n\t\tlet step = Object.assign({}, tStep);\r\n\r\n\t\t//\tIs the form instance complete?\r\n\t\tisFormCompleted = formInstance._statusId === enumFormStatus.complete;\r\n\r\n\t\t/*\r\n\t\tThe View/Edit permissions for each step of the form instance should be based on the following criteria:\r\n\t\t** 1. If the user has the IDM administrator role, they CAN VIEW and CAN EDIT all steps\r\n\t\t** 2. If the user has the Employee.FormInstances permission (Can edit another employee's form instances), they CAN VIEW and CAN EDIT all steps\r\n\t\t** 3. If the user is the FormAdministrator, they CAN VIEW and CAN EDIT all steps\r\n\t\t** 4. All other step visibility is governed by the step permissions object on the step, based on the participant type and whether the \"canView\" and/or \"canEdit\" permission is selected.\r\n\t\t** NOTE: if \"canView\" is false, the fields of a step are not returned by the server.\r\n\t\t*/\r\n\t\tlet canEditStep = step.instance._meta.permissions.permittedActions.edit;\r\n\r\n\t\t//\tDetermine what the edit and disabled state of a step should be based on the resolved permissions\r\n\t\tstep.editMode = true;\r\n\t\tstep.disabled = false;\r\n\r\n\t\tif (!canEditStep) {\r\n\t\t\tstep.editMode = false;\r\n\t\t\tstep.disabled = true;\r\n\t\t}\r\n\r\n\t//\tdisregard any permissions disable the step if the form is complete\r\n\t\tif(isFormCompleted) {\r\n\t\t\tstep.editMode = false;\r\n\t\t\tstep.disabled = false;\r\n\t\t}\r\n\r\n\t\t//\tmake step permissions available via routeVm\r\n\t\tstep.instance.editMode = step.editMode;\r\n\t\tstep.instance.disabled = step.disabled;\r\n\r\n\t\t//\tDetermine which action buttons to show\r\n\t\tstep = stepActions({ tStep: step });\r\n\r\n\t\tprocessFields(step);\r\n\r\n\t\tstep.fieldGroups = makeFieldGroups(step);\r\n\r\n\t\treturn step;\r\n\t}\r\n\r\n\tfunction stepActions({ tStep }) {\r\n\t\tlet showFormEntry = false;\r\n\t\tlet showReviewForm = false;\r\n\t\tlet showReviewApproveOrDeny = false;\r\n\t\tlet showEmployeeProfileReview = false;\r\n\r\n\t\tif ((tStep.currentStep || !tStep.disabled) && !isFormCompleted) {\r\n\t\t\tshowFormEntry = tStep._stepAction === enumStepAction.formEntry;\r\n\t\t\tshowReviewForm = tStep._stepAction === enumStepAction.reviewForm;\r\n\t\t\tshowReviewApproveOrDeny = tStep._stepAction === enumStepAction.reviewApproveOrDeny,\r\n\t\t\tshowEmployeeProfileReview = tStep._stepAction === enumStepAction.employeeProfileReview;\r\n\t\t}\r\n\r\n\t\tlet step = Object.assign({}, tStep, { showFormEntry, showReviewForm, showReviewApproveOrDeny, showEmployeeProfileReview })\r\n\r\n\t\treturn step;\r\n\t}\r\n\r\n//\tprocess the fields to determine access permissions, config etc.\r\n\tfunction processFields(step) {\r\n\r\n\t//\tmake sure we are only acting on fields that have a 'fieldDefId' property\r\n\t\tlet actionableFields = step.fields.filter(f => { return f._fieldDefId != null });\r\n\r\n\t\tactionableFields.forEach(field => {\r\n\r\n\t\t//\tfind the matching default field and update it with any missing properties\r\n\t\t\tlet defaultField = fieldsHlp.getFieldById(field);\r\n\t\t\tif (defaultField != null) {\r\n\t\t\t\tupdateFieldAttributes(field, defaultField);\r\n\t\t\t}\r\n\r\n\t\t\tfield.editMode = step.editMode;\r\n\t\t\tfield.disabled = step.disabled;\r\n\r\n\t\t\tif (field._fieldType === 'super-select-list' ||\r\n\t\t\t\tfield._fieldTypeOptions &&\r\n\t\t\t\tfield._fieldTypeOptions.view === 'readOnlyText') {\r\n\r\n\t\t\t\t\tlet json = JSON.parse(field._configJson);\r\n\t\t\t\t\tif (json.externalSource != null && ssEnum[json.externalSource] != null) {\r\n\t\t\t\t\t\tfield.externalSourceOptions = ssEnum[json.externalSource].enums;\r\n\t\t\t\t\t}\r\n\t\t\t} else if (field._fieldType === 'super-digital-signature') {\r\n\t\t\t\tfield.onBehalf = false;\r\n\t\t\t\ttry {\r\n\t\t\t\t\t// set onBehalf to true if the step participant is not the current logged in activeUser\r\n\t\t\t\t\tfield.onBehalf = !(field.step._stepParticipant && (field.step._stepParticipant.employeeIds[0] === activeUser.id || activeUser.idmAdministrator));\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\t// TODO - what to do?\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t//\toverride step edit permission for sensitive fields\r\n\t\t\tif(field._sensitive) {\r\n\t\t\t\tif(!isFormCompleted) {\r\n\t\t\t\t\tfield.editMode = step.instance._meta.permissions.permittedActions.editSensitive;\r\n\t\t\t\t}\r\n\t\t\t\tfield.sensitiveRedacted = !step.instance._meta.permissions.permittedActions.viewSensitive;\r\n\t\t\t}\r\n\r\n\t\t// TEMP - removes '_fieldGroup' property from custom field groups\r\n\t\t\tlet customFieldIds = [\r\n\t\t\t\t'951626b1-a422-46b4-9fa1-3b5acf7ee8fc',\r\n\t\t\t\t'977a2273-62c1-4eef-8d63-91f9d8d1e0bf',\r\n\t\t\t\t'10a88a23-f8f3-48eb-aa48-c466db06378b',\r\n\t\t\t\t'17ff0b2c-4973-4181-92ce-b1c50c851165',\r\n\t\t\t\t'c2e31de2-09e8-4563-acb1-0e190a8e3b11',\r\n\t\t\t\t'5299a28c-56d5-4dc3-81ae-6f9f741eb324',\r\n\t\t\t\t'e215f04f-037a-479e-b5da-9bb3155b55d5',\r\n\t\t\t\t'9eabf24b-ae80-4488-a164-2a6f78a50cbd',\r\n\t\t\t\t'b6390770-0590-418c-b516-2080b243e9b7',\r\n\t\t\t\t'2056c221-97c8-4994-962c-f4bfc319a9e4'\r\n\t\t\t];\r\n\r\n\t\t\tif(customFieldIds.includes(field._fieldDefId)) {\r\n\t\t\t\tfield._fieldGroup = undefined;\r\n\t\t\t}\r\n\r\n\t\t});\r\n\t\r\n\t}\r\n\r\n//\tthis function will add any missing keys to existing field objects\r\n\tfunction updateFieldAttributes(field, matchingField) {\r\n\t\tObject.keys(matchingField).forEach(matchingFieldKey => {\r\n\t\t\tvar fieldKeys = Object.keys(field);\r\n\r\n\t\t\tif (!fieldKeys.includes(matchingFieldKey)) {\r\n\t\t\t\tfield[matchingFieldKey] = matchingField[matchingFieldKey];\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n//\tseparate the fields into their respective field groups\r\n\tfunction makeFieldGroups(step){\r\n\t\tlet fieldGroups = [];\r\n\t\tstep.fields.forEach(field => {\r\n\t\t\tfield.step = step.instance;\r\n\r\n\t\t\tif (fieldGroups.length === 0) {\r\n\t\t\t\tfieldGroups.push([field]);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tlet group = fieldGroups[fieldGroups.length - 1];\r\n\t\t\tif (field._fieldGroup != null && group[0]._fieldGroup === field._fieldGroup) {\r\n\t\t\t\tgroup.push(field);\r\n\t\t\t} else {\r\n\t\t\t\tfieldGroups.push([field]);\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn fieldGroups;\r\n\t}\r\n\r\n\tfunction mapName(key, list) {\r\n\t\tif (key === null || key === '') { return ''; }\r\n\r\n\t\tlet obj = list.find(v => v.id === key);\r\n\t\tlet name = '';\r\n\r\n\t\tif (obj != null) { name = obj._name; }\r\n\r\n\t\treturn name;\r\n\t}\r\n\r\n}\r\nangular.module('ec-forms-segment-logic').factory('segmentInboxFormInstanceFormLogic', logic);\r\n","import {Segment} from 'base-segment';\r\n// #-------------------------------------------------------# //\r\n// #---- Segment (/inbox/form-instance/segment-header) ----# //\r\n\r\nclass Header extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $scope, ssAsync, ssDateByOrgHlp, ssFormInstancesApi, $sce, enumStepAction) {\r\n\t\t// view model that is shared by all segments on this route,\r\n\t\t// used for segment coordination\r\n\t\tconst routeVm = $scope.routeVm;\r\n\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentInboxFormInstanceHeaderLogic'); // eslint-disable-line\r\n\r\n\t\tlet sensitiveFields = null;\r\n\t\tlet showSensitiveFields = false;\r\n\r\n\t\tconst vm = $scope.vm = { // eslint-disable-line\r\n\t\t\thasSensitiveFields: false,\r\n\t\t};\r\n\r\n\t\tconst go = $scope.go = { // eslint-disable-line\r\n\t\t\ttoggleFormView: (showPDF) => {\r\n\t\t\t\tif(showPDF){\r\n\t\t\t\t\trouteVm.isLoading = true;\r\n\t\t\t\t\trouteVm.loadingStatus = 'generating PDF...';\r\n\t\t\t\t\tgeneratePDFOverlay({ showSensitive: showSensitiveFields }).then((res) => {\r\n\t\t\t\t\t//\tsanitize the '_string' property as a trusted URL for use in the iFrame\r\n\t\t\t\t\t\tdocument.getElementById(\"form-overlay-frame\").src = $sce.trustAsResourceUrl(res.data.data.attributes.string);\r\n\t\t\t\t\t\trouteVm.showPDFOverlay = true;\r\n\t\t\t\t\t\trouteVm.isLoading = false;\r\n\t\t\t\t\t\trouteVm.loadingStatus = '';\r\n\t\t\t\t\t}).catch((err) => {\r\n\t\t\t\t\t\trouteVm.isLoading = false;\r\n\t\t\t\t\t\trouteVm.loadingStatus = '';\r\n\t\t\t\t\t\tssToastHlp('There was an error generating the PDF', '');\r\n\t\t\t\t\t\tconsole && console.error && console.error(err);\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\trouteVm.showPDFOverlay = false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\ttoggleSensitiveFields: (checked) => {\r\n\t\t\t\tsensitiveFields.forEach((field) => {\r\n\t\t\t\t\tfield.overrideVisibility = !checked;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tshowSensitiveFields = checked;\r\n\r\n\t\t\t\tif(routeVm.hasPDFOverlay && routeVm.showPDFOverlay) {\r\n\t\t\t\t\trouteVm.isLoading = true;\r\n\t\t\t\t\trouteVm.loadingStatus = 'generating PDF...';\r\n\t\t\t\t\tgeneratePDFOverlay({showSensitive: checked}).then((res) => {\r\n\t\t\t\t\t\tdocument.getElementById(\"form-overlay-frame\").src = $sce.trustAsResourceUrl(res.data.data.attributes.string);\r\n\t\t\t\t\t\trouteVm.isLoading = false;\r\n\t\t\t\t\t\trouteVm.loadingStatus = '';\r\n\t\t\t\t\t}).catch((err) => {\r\n\t\t\t\t\t\trouteVm.isLoading = false;\r\n\t\t\t\t\t\trouteVm.loadingStatus = '';\r\n\t\t\t\t\t\tssToastHlp('There was an error generating the PDF', '');\r\n\t\t\t\t\t\tconsole && console.error && console.error(err);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tfunction generatePDFOverlay({ showSensitive = false } = {}) {\r\n\r\n\t\t\trouteVm.isLoading = true;\r\n\t\t\trouteVm.loadingStatus = 'generating PDF...';\r\n\r\n\t\t\tlet formFieldValues = routeVm.formInstance._steps.filter((step) => {\r\n\t\t\t\treturn step._stepAction !== enumStepAction.formCompleted\r\n\t\t\t}).map((step) => {\r\n\t\t\t\treturn step._formFieldValues;\r\n\t\t\t}).reduce((a, c) => {\r\n\t\t\t\ta = typeof a === 'string' ? JSON.parse(a) : a;\r\n\t\t\t\treturn Object.assign(a, JSON.parse(c));\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\treturn ssFormInstancesApi.generatePDFOverlay({\r\n\t\t\t\tformInstanceid: routeVm.formInstance.id,\r\n\t\t\t\tformFieldValues: formFieldValues,\r\n\t\t\t\tshowSensitive: showSensitive\r\n\t\t\t});\r\n\t\t}\r\n\t\t\t\r\n\t\tssAsync(function*() {\r\n\r\n\t\t\tlet sentDateMoment = ssDateByOrgHlp.utcIsoToRelativeMoment(routeVm.formInstance._createdUtc, routeVm.org);\r\n\r\n\t\t\trouteVm.formInstance.sentDate = sentDateMoment.calendar(null, {\r\n\t\t\t\tsameDay: '[Today at] LT',\r\n\t\t\t\tlastDay: '[Yesterday at] LT',\r\n\t\t\t\tlastWeek: 'ddd [at] LT',\r\n\t\t\t\tsameElse: 'L [at] LT'\r\n\t\t\t});\r\n\t\t\t\r\n\t\t//\tgrab all sensitive fields\r\n\t\t\tsensitiveFields = routeVm.formTemplate._formFields.filter((field) => {\r\n\t\t\t\treturn field._sensitive === true;\r\n\t\t\t});\r\n\t\t//\tredact sensitive fields by default\r\n\t\t\tif(sensitiveFields.length) {\r\n\t\t\t\tsensitiveFields.forEach((field) => {\r\n\t\t\t\t\tfield.overrideVisibility = true;\r\n\t\t\t\t});\r\n\t\t\t\tshowSensitiveFields = false;\r\n\t\t\t}\r\n\r\n\t\t//\tdetermine if the user has view access to at least one sensitive field\r\n\t\t\tlet canViewSensitive = routeVm.formInstance._steps.some((step) => {\r\n\t\t\t\treturn step._meta.permissions.permittedActions.viewSensitive === true;\r\n\t\t\t});\r\n\r\n\t\t//\tcreate a property for the view to determine if the sensitive fields toggle should display\r\n\t\t\tvm.hasSensitiveFields = !!sensitiveFields.length && canViewSensitive;\r\n\r\n\t\t})();\r\n\t\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/inbox/form-instance/segment-header) --# //\r\n// #-------------------------------------------------------# //\r\n\r\nangular.module('ec-forms-segments').directive('segmentInboxFormInstanceHeader', () => new Header('header'));\r\n","/*@ngInject*/\r\nfunction logic() {\r\n\t// logic api\r\n\treturn {\r\n\t\t\r\n\t};\r\n}\r\nangular.module('ec-forms-segment-logic').factory('segmentInboxFormInstanceHeaderLogic', logic);\r\n","import {Segment} from 'base-segment';\r\n// #------------------------------------------------------# //\r\n// #---- Segment (/inbox/form-instance/segment-steps) ----# //\r\n\r\nclass Steps extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $scope, ssEventSvc, ssEnum, enumStepAction, formsHlp) {\r\n\t\t// view model that is shared by all segments on this route,\r\n\t\t// used for segment coordination\r\n\t\tconst routeVm = $scope.routeVm;\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentInboxFormInstanceStepsLogic');// jshint ignore:line\r\n\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\tsteps: [],\r\n\t\t\tselectedStep: null,\r\n\t\t\tloading: true,\r\n\t\t\temployeeProfileReview: ssEnum.stepAction.employeeProfileReview\r\n\t\t};\r\n\r\n\t\tconst go = $scope.go = { //jshint ignore:line\r\n\t\t\tselectStep(index, step) {\r\n\t\t\t\tvm.selectedStep = step;\r\n\t\t\t\tssEventSvc.emit('form-instance.entry.step-clicked', step.id);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tssEventSvc.on('form-instance.entry.step-clicked', function(stepId) {\r\n\t\t\tconst clickedStep = vm.steps.find(s => s.id === stepId);\r\n\t\t\tvm.selectedStep = clickedStep;\r\n\t\t}, $scope);\r\n\r\n\t//\tSince we are just displaying the step data here, we can make a copy and filter out the 'form complete' step\r\n\t\tvm.steps = angular.copy(routeVm.formTemplate._steps).filter(step => step._stepAction !== enumStepAction.formCompleted);\r\n\r\n\t\ttry {\r\n\r\n\t//\tsort the steps by the step order\r\n\t\tformsHlp.sortByOrderField(vm.steps, routeVm.formTemplate._stepOrder);\r\n\r\n\t//\tusing form instance steps to build the participant list since it has resolved employee names\r\n\t\tlet participants = logic.buildParticipantList(routeVm.formInstance._steps);\r\n\r\n\t\tvm.steps.forEach((step) => {\r\n\r\n\t\t//\tfind the matching form instance step\r\n\t\t\tstep.instance = routeVm.formInstance._steps.find(s => s._formTemplateStepId === step.id);\r\n\r\n\t\t\tstep.participantPermission = logic.getPermissionLabel(step);\r\n\t\t\tstep.stepActionName = enumStepAction.byValue(step._stepAction);\r\n\r\n\t\t//\tif we cant find a matching form instance step\r\n\t\t//\tOR the step action of the step is 'complete form', return\r\n\t\t\tif (step.instance == null) { return; }\r\n\r\n\t\t\tstep.otherParticipants = participants.reduce((prev, curr) => {\r\n\t\t\t//\twe don't need to include the current step participant\r\n\t\t\t\tif(curr.templateStepId === step.id) {\r\n\t\t\t\t\treturn prev;\r\n\t\t\t\t}\r\n\t\t\t//\tfind the matching permission object for this participant\r\n\t\t\t\tlet matchingPerm = step._permissions.find((perm) => {\r\n\t\t\t\t\treturn logic.matchByParticipants(perm, curr);\r\n\t\t\t\t});\r\n\t\t\t//\twe are not displaying any participants without 'view' permission\r\n\t\t\t\tif(!matchingPerm || !matchingPerm.canView) { \r\n\t\t\t\t\treturn prev;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tprev.push({\r\n\t\t\t\t\tname: curr.participantName,\r\n\t\t\t\t\tpermissions: `view${matchingPerm.canEdit ? ' & edit' : ''}`\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn prev;\r\n\r\n\t\t\t}, []);\r\n\r\n\t\t});\r\n\r\n\t\t} catch(err) {\r\n\r\n\t\t} finally {\r\n\t\t\tvm.loading = false;\r\n\t\t}\r\n\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/inbox/form-instance/segment-steps) --# //\r\n// #------------------------------------------------------# //\r\n\r\nangular.module('ec-forms-segments').directive('segmentInboxFormInstanceSteps', () => new Steps('steps'));\r\n","/*@ngInject*/\r\nfunction logic(ssEnum, enumStepParticipantType) {\r\n\t// logic api\r\n\r\n\tfunction buildParticipantList(steps) {\r\n\t\tlet parts = [];\r\n\t\tsteps.forEach(step => {\r\n\t\t//\tskip any steps without participants\r\n\t\t\tif(!step._stepParticipant) { return; };\r\n\t\t//\tmake sure the employee id is a valid value\r\n\t\t\tlet spEmpId = angular.isArray(step._stepParticipant.employeeIds) && step._stepParticipant.employeeIds.length ? step._stepParticipant.employeeIds[0] : '';\r\n\t\t//\tif we already added this step participant, return\r\n\t\t\tif(parts.find((part) => part.templateStepId === step._formTemplateStepId)) { \r\n\t\t\t\treturn; \r\n\t\t\t};\r\n\t\t//\tif not, add a new one\r\n\t\t\tparts.push({\r\n\t\t\t\ttemplateStepId: step._formTemplateStepId,\r\n\t\t\t\tparticipantName: step._stepParticipant.name,\r\n\t\t\t\tparticipantType: step._stepParticipant.participantType,\r\n\t\t\t\temployeeId: spEmpId\r\n\t\t\t});\r\n\t\t});\r\n\t\treturn parts;\r\n\t}\r\n\r\n\tfunction getPermissionLabel(step){\r\n\t\tlet permission = step._permissions.find((perm) => {\r\n\t\t\treturn matchByParticipants(perm, step);\r\n\t\t});\r\n\t\treturn permission ? `${permission.canView ? 'view' : ''}${permission.canEdit ? ' & edit' : ''}` : ''\r\n\t}\r\n\r\n\tfunction matchByParticipants(source, target){\r\n\t\tlet targetId = target._stepParticipant ? target._stepParticipant.employeeIds[0] : target.employeeId;\r\n\t\tlet targetParticipantType = target._stepParticipant ? target._stepParticipant.participantType : target.participantType;\r\n\r\n\t\tif(source.participantType === ssEnum.stepParticipantType.specificPerson) {\r\n\t\t\treturn source.employeeId === targetId;\r\n\t\t}\r\n\t\treturn source.participantType === targetParticipantType;\r\n\t}\r\n\r\n\treturn {\r\n\t\tbuildParticipantList,\r\n\t\tgetPermissionLabel,\r\n\t\tmatchByParticipants,\r\n\t};\r\n}\r\nangular.module('ec-forms-segment-logic').factory('segmentInboxFormInstanceStepsLogic', logic);\r\n","import {State} from 'base-state';\r\n// #------------------------# //\r\n// #---- State (/inbox) ----# //\r\n\r\n// view model that is shared by all segments on this route,\r\n// used for segment coordination. Define initial state here.\r\nconst routeVm = {};\r\n\r\nconst stateName = 'inbox';\r\n\r\n// config object for ui-router\r\n// http://angular-ui.github.io/ ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\r\nconst stateConfig = {\r\n\turl: '/inbox?activeTab',\r\n\ttemplateUrl: 'routes/inbox/inbox.html',\r\n\tresolve: {\r\n\t\torg: /*@ngInject*/ function(ssAsync, ssOrganizationSvc, ssToastHlp) {\r\n\t\t\treturn ssAsync(function*() {\r\n\t\t\t\ttry {\r\n\t\t\t\t\trouteVm.org = yield ssOrganizationSvc.getActiveOrg();\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tssToastHlp.error('There was an error retrieving organization data. Due Dates may not display. Please see the console for more detail.', '', false);\r\n\t\t\t\t\tconsole && console.error && console.error('Error getting Org data', err);\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t},\r\n\t\t$title: /*@ngInject*/ () => 'Frontline Central - My Forms'\r\n\t},\r\n\t// example of route $permissions function\r\n\t$permissions: (permissionSvc) => permissionSvc.isPermittedAction('activeUser', 'userKey')\r\n};\r\n\r\n// #-- END State (/inbox) --# //\r\n// #------------------------# /\r\n\r\nangular.module('ec-forms').config( /*@ngInject*/ ($stateProvider) => {\r\n\tsidekick.events.on('feature-flags-ready', (sff) => {\r\n\t\tif(sff.checkState('fc-enable-merged-forms-modules')) {\r\n\t\t\tstateConfig.redirectToState = 'base.my-forms';\r\n\t\t}\r\n\t\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\r\n\t}, {greedy: true});\r\n});\r\n","import {Segment} from 'base-segment';\r\n\r\n// #------------------------------------------# //\r\n// #---- Segment (/inbox/segment-content) ----# //\r\n\r\nclass Content extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $scope, $stateParams, $location, ssEnum, ssAsync, ssActiveUserSvc, ssFormInstancesApi, ssFormTemplatesApi, ssStorage, ssOrganizationSvc, ssToastHlp) {\r\n\t\t// view model that is shared by all segments on this route,\r\n\t\t// used for segment coordination\r\n\t\tconst routeVm = $scope.routeVm;\r\n\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentInboxContentLogic');// jshint ignore:line\r\n\r\n\t\tvar emplId = null;\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = { // jshint ignore:line\r\n\t\t\tselectedFilter: 'current'\r\n\t\t};\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { // jshint ignore:line\r\n\r\n\t\t\tfilter(type) {\r\n\t\t\t\tvm.selectedFilter = type;\r\n\t\t\t},\r\n\r\n\t\t\tgetCurrentForms() {\r\n\r\n\t\t\t\tlet params = {\r\n\t\t\t\t\tid: emplId,\r\n\t\t\t\t\tinclude: 'steps',\r\n\t\t\t\t\t'filter[search]': routeVm.search\r\n\t\t\t\t};\r\n\r\n\t\t\t\tif (resolveMethod() !== null) {\r\n\t\t\t\t\tparams['resolvemethod'] = resolveMethod();\r\n\t\t\t\t};\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tapi: ssFormInstancesApi.queryCurrent,\r\n\t\t\t\t\tconfig: params\r\n\t\t\t\t};\r\n\t\t\t},\r\n\r\n\t\t\tgetSentForms() {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tapi: ssFormInstancesApi.querySubmitted,\r\n\t\t\t\t\tconfig: {\r\n\t\t\t\t\t\tid: emplId,\r\n\t\t\t\t\t\tinclude: 'steps',\r\n\t\t\t\t\t\t'filter[search]': routeVm.search\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t},\r\n\r\n\t\t\tgetCompletedForms() {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tapi: ssFormInstancesApi.query,\r\n\t\t\t\t\tconfig: {\r\n\t\t\t\t\t\tid: emplId,\r\n\t\t\t\t\t\tinclude: 'steps',\r\n\t\t\t\t\t\t'filter[status]':  ssEnum.formStatus.complete,\r\n\t\t\t\t\t\t'filter[search]': routeVm.search\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t},\r\n\r\n\t\t\tgetInitiatedForms() {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tapi: ssFormTemplatesApi.query,\r\n\t\t\t\t\tconfig: {\r\n\t\t\t\t\t\tinclude: 'steps,statusHistory',\r\n\t\t\t\t\t\tlatestVersion: true,\r\n\t\t\t\t\t\t'filter[isemployeeinitiated]': 'true',\r\n\t\t\t\t\t\t'filter[name]': routeVm.search\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t},\r\n\r\n\t\t};\r\n\r\n\t\tfunction resolveMethod() {\r\n\t\t\tconst resolveMethod = $location.search().resolvemethod;\r\n\t\t\tif (resolveMethod === 'ReadModel' || resolveMethod === 'Mongo') {\r\n\t\t\t\treturn resolveMethod;\r\n\t\t\t} else {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tssAsync(function* () {\r\n\t\t\ttry{\t\r\n\t\t\t\ttry {\r\n\t\t\t\t\templId = yield ssActiveUserSvc.getIdentityByType('employee');\r\n\t\t\t\t} catch(err) {\r\n\t\t\t\t\tthrow {error: err, msg: 'There was an error retrieving employee data. Forms will not display. Please see the console for more detail.'};\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ($stateParams.activeTab && $stateParams.activeTab.length) {\r\n\t\t\t\t\tgo.filter($stateParams.activeTab);\r\n\t\t\t\t} else if(ssStorage.load('inboxDefaultTab') === 'EmployeeInitiated') {\r\n\t\t\t\t\tgo.filter('initiate');\r\n\t\t\t\t\tssStorage.clear('inboxDefaultTab');\r\n\t\t\t\t}\r\n\r\n\t\t\t} catch (errObj) {\r\n\t\t\t\tssToastHlp.error(errObj.msg, '', false);\r\n\t\t\t\tconsole && console.error && console.error(errObj.error);\r\n\t\t\t}\r\n\t\t})();\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/inbox/segment-content) --# //\r\n// #------------------------------------------# //\r\n\r\nangular.module('ec-forms-segments').directive('segmentInboxContent', () => new Content('content'));\r\n","/*@ngInject*/\r\nfunction logic() {\r\n\t// logic api\r\n\treturn {\r\n\t\t\r\n\t};\r\n}\r\nangular.module('ec-forms-segment-logic').factory('segmentInboxContentLogic', logic);\r\n","import {Segment} from 'base-segment';\r\n// #-----------------------------------------# //\r\n// #---- Segment (/inbox/segment-header) ----# //\r\n\r\nclass Header extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $scope) {\r\n\t\t// view model that is shared by all segments on this route,\r\n\t\t// used for segment coordination\r\n\t\tconst routeVm = $scope.routeVm; // jshint ignore:line\r\n\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentInboxHeaderLogic');// jshint ignore:line\r\n\r\n\t\tconst vm = $scope.vm = { // jshint ignore:line\r\n\t\t};\r\n\r\n\t\trouteVm.search = '';\r\n\t}\r\n}\r\n// #-- END Segment (/inbox/segment-header) --# //\r\n// #-----------------------------------------# //\r\n\r\nangular.module('ec-forms-segments').directive('segmentInboxHeader', () => new Header('header'));\r\n","/*@ngInject*/\r\nfunction logic() {\r\n\t// logic api\r\n\treturn {\r\n\t\t\r\n\t};\r\n}\r\nangular.module('ec-forms-segment-logic').factory('segmentInboxHeaderLogic', logic);\r\n","import { State } from 'base-state';\r\n// #------------------------# //\r\n// #---- State (/index) ----# //\r\n\r\n// view model that is shared by all segments on this route,\r\n// used for segment coordination. Define initial state here.\r\nconst routeVm = {};\r\n\r\nconst stateName = 'index';\r\n\r\n// config object for ui-router\r\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\r\nconst stateConfig = {\r\n\turl: '/',\r\n\ttemplateUrl: 'routes/index/index.html',\r\n\tresolve: {\r\n\t\torg: /*@ngInject*/ function(ssAsync, ssOrganizationSvc, ssToastHlp) {\r\n\t\t\treturn ssAsync(function*() {\r\n\t\t\t\ttry {\r\n\t\t\t\t\trouteVm.org = yield ssOrganizationSvc.getActiveOrg();\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tssToastHlp.error(\r\n\t\t\t\t\t\t'There was an error retrieving organization data. Due Dates may not display. Please see the console for more detail.',\r\n\t\t\t\t\t\t'', false);\r\n\t\t\t\t\tconsole && console.error && console.error('Error getting Org data', err);\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t},\r\n\t\t$title: /*@ngInject*/ () => {\r\n\t\t\treturn 'Frontline Central - Form Templates';\r\n\t\t}\r\n\t},\r\n\t$permissions(permissionSvc) {\r\n\t\treturn (\r\n\t\t\tpermissionSvc.isPermittedAction('formTemplates', 'create') ||\r\n\t\t\tpermissionSvc.isPermittedAction('formTemplates', 'edit') ||\r\n\t\t\tpermissionSvc.isPermittedAction('formTemplates', 'send') ||\r\n\t\t\tpermissionSvc.isPermittedAction('formTemplates', 'archive') ||\r\n\t\t\tpermissionSvc.isPermittedAction('packets', 'create') ||\r\n\t\t\tpermissionSvc.isPermittedAction('packets', 'edit') ||\r\n\t\t\tpermissionSvc.isPermittedAction('packets', 'send') ||\r\n\t\t\tpermissionSvc.isPermittedAction('packets', 'archive')\r\n\t\t);\r\n\t}\r\n};\r\n\r\n// #-- END State (/index) --# //\r\n// #------------------------# //\r\n\r\nangular.module('ec-forms').config( /*@ngInject*/ ($stateProvider) => {\r\n\tsidekick.events.on('feature-flags-ready', (sff) => {\r\n\t\tif(sff.checkState('fc-enable-merged-forms-modules')) {\r\n\t\t\tstateConfig.redirectToState = 'base.formTemplates';\r\n\t\t}\r\n\t\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\r\n\t}, {greedy: true});\r\n});\r\n","import { Segment } from 'base-segment';\r\n// #------------------------------------------# //\r\n// #---- Segment (/index/segment-content) ----# //\r\n\r\nclass Content extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $scope, $filter, $location, $state, rAF, ssAsync, ssDateByOrgHlp, ssFormLibraryApi, ssPacketsApi, ssFormTemplatesApi, ssStatusApi, ssListSvc, ssModalSvc, ssEnum, enumFormTemplateStatus) {\r\n\t\t//Paging\r\n\t\tvar currentPage = 0;\r\n\t\tconst pageSize = 50;\r\n\t\tvar totalRetrieved = 0;\r\n\r\n\t\tvar getFormsPromise = null;\r\n\t\tconst routeVm = $scope.routeVm;\r\n\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentIndexContentLogic');// eslint-disable-line\r\n\r\n\t\t// added to routeVm as well for accessing in children components\r\n\t\tconst vm = routeVm.vm = $scope.vm = {\r\n\t\t\tshowInfScroll: true,\r\n\t\t\tsorting: false,\r\n\t\t\tsortCriteria: [\r\n\t\t\t\t{ label: 'Recently Modified', value: { field: 'changedutc', dir: 'desc' }},\r\n\t\t\t\t{ label: 'Template Name A-Z', value: { field: 'name', dir: 'asc' } }\r\n\t\t\t],\r\n\t\t\tstatuses: enumFormTemplateStatus.getEnums()\r\n\t\t\t\t.filter(enm => enm.value !== 2).reverse(),\r\n\t\t\tselectedStatus: 'All',\r\n\t\t\tselectedCategory: 'All',\r\n\t\t\tsearch: ''\r\n\t\t};\r\n\t\tvm.sortBy = vm.sortCriteria[0].value;\r\n\r\n\t\t// Some variables are on routeVm because it's passed down to the template/packet display components\r\n\t\trouteVm.loading = false;\r\n\t\trouteVm.displayTemplates = [];\r\n\t\trouteVm.loadFormTemplates = fetchTemplateObjects; // Keeping the same function name exposed on the routeVm for the child components\r\n\t\trouteVm.refreshData = refreshData; \r\n\t\r\n\t\t//Reset page settings and fetch the data\r\n\t\tfunction refreshData() {\r\n\t\t\tcurrentPage = 0;\r\n\t\t\ttotalRetrieved = 0;\r\n\t\t\trouteVm.displayTemplates = [];\r\n\t\t\tfetchTemplateObjects();\r\n\t\t}\r\n\r\n\t\t// When sorting, we want to keep our location on the page\r\n\t\t$scope.$watch('vm.sortBy', (newval, oldval) => {\r\n\t\t\tif (newval === oldval || routeVm.displayTemplates == null || routeVm.displayTemplates.length === 0) { return; }\r\n\t\t\tvm.sortBy = newval;\r\n\t\t\tvm.sorting = true;\r\n\t\t\tfetchTemplateObjects();\r\n\t\t});\r\n\r\n\t\t// When filtering, we want to reset our location to the top of the page (the first page)\r\n\t\t$scope.$watchGroup(['vm.search','vm.selectedCategory','vm.selectedStatus'], (newval, oldval) => {\r\n\t\t\tif (newval === oldval) { return; }\r\n\t\t\trefreshData();\r\n\t\t});\r\n\r\n\t\t// method to handle scrolling\r\n\t\t$scope.scrollData = function scrollData() {\r\n\t\t\tif (!vm.showInfScroll || routeVm.loading) { return; }\r\n\t\t\tvm.scrolling = true;\r\n\t\t\tfetchTemplateObjects();\r\n\t\t};\r\n\t\t\r\n\t\tfunction fetchTemplateObjects() {\r\n\r\n\t\t\trouteVm.loading = true;\r\n\t\t\trouteVm.loadingMessage = 'Loading Form Templates';\r\n\r\n\t\t\t// Cancel any previous fetch that is still in progress\r\n\t\t\tif (getFormsPromise != null) {\r\n\t\t\t\tgetFormsPromise.$abort();\r\n\t\t\t}\t\r\n\r\n\t\t\tgetFormsPromise = ssAsync(function* () {\r\n\t\t\t\ttry {\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar requestConfig = {};\r\n\r\n\t\t\t\t\t// get the form template categories if they don't already exist\r\n\t\t\t\t\tif(!routeVm.categories) {\r\n\t\t\t\t\t\trouteVm.categories = yield ssListSvc.getByExternalId('form.categories');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Update infinite scroll (paging)\r\n\t\t\t\t\tcurrentPage = vm.sorting ? currentPage : currentPage + 1;\r\n\t\t\t\t\tvar offset = (currentPage - 1) * pageSize;\r\n\t\t\t\t\ttotalRetrieved = vm.sorting ? totalRetrieved : totalRetrieved + pageSize;\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Add the limit and offset queries to the requestConfig object\r\n\t\t\t\t\trequestConfig.offset = vm.sorting ? 0 : offset;\r\n\t\t\t\t\trequestConfig.limit = vm.sorting ? totalRetrieved : pageSize;\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Add the sorting\r\n\t\t\t\t\trequestConfig = Object.assign(requestConfig, addSort(vm.sortBy));\r\n\r\n\t\t\t\t\t// Add the filtering\r\n\t\t\t\t\tif (vm.selectedStatus != null && vm.selectedStatus != \"All\"){\r\n\t\t\t\t\t\trequestConfig = Object.assign(requestConfig, addFilter(\"status\", vm.selectedStatus));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (vm.selectedCategory != null && vm.selectedCategory != \"All\"){\r\n\t\t\t\t\t\trequestConfig = Object.assign(requestConfig, addFilter(\"category\", vm.selectedCategory));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (vm.search != null && vm.search.length > 0){\r\n\t\t\t\t\t\trequestConfig = Object.assign(requestConfig, addFilter(\"name\", vm.search));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Run the endpoint\r\n\t\t\t\t\tvar templateObjectsResult = yield ssFormLibraryApi.queryTemplateObjects(requestConfig);\r\n\r\n\t\t\t\t\t// Get a total count\r\n\t\t\t\t\t$scope.count = parseInt(templateObjectsResult.$headers['total-results'], 10);\r\n\r\n\t\t\t\t\t// Fill out data on each template object like packet info, category name, date strings, and step properties\r\n\t\t\t\t\tvar templateObjects = extendFormTemplates(templateObjectsResult);\r\n\r\n\t\t\t\t\t// Reset the displayTemplates if sorting, otherwise append the next page\r\n\t\t\t\t\trouteVm.displayTemplates = vm.sorting ? [...templateObjects] : [...routeVm.displayTemplates, ...templateObjects];\r\n\r\n\t\t\t\t\t// Figure out when we've reached the end of the list\r\n\t\t\t\t\tvm.showInfScroll = totalRetrieved < $scope.count;\r\n\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tvm.showInfScroll = false;\r\n\t\t\t\t\t//TODO comment this out after debugging\r\n\t\t\t\t\terror('Error getting data', e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\trouteVm.loading = false;\r\n\t\t\t\t\tvm.sorting = false;\r\n\t\t\t\t\tvm.scrolling = false;\r\n\t\t\t\t\tgetFormsPromise = null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\trAF(function () {\r\n\t\t\t\t\trouteVm.loading = false;\r\n\t\t\t\t\t$scope.$emit('template-objects.data-loaded');\r\n\t\t\t\t}, $scope);\r\n\r\n\t\t\t})();\r\n\t\t\t\r\n\t\t\treturn getFormsPromise;\r\n\t\t}\r\n\r\n\t\t// create the necessary properties on each form template\r\n\t\tfunction extendFormTemplates(templates) {\r\n\r\n\t\t\ttemplates.forEach(template => {\r\n\r\n\t\t\t//\tthese properties are common to both form templates and packets\r\n\t\t\t\ttemplate.isForm = template._templateId != null;\r\n\t\t\t\ttemplate.isPacket = template._templateId == null;\r\n\t\t\t\ttemplate.searchText = `${template._name}`; //TODO: can remove this most likely\r\n\r\n\t\t\t// \tget the packet count\r\n\t\t\t\tif(template.isPacket) {\r\n\t\t\t\t\ttemplate.detailsOpen = false;\r\n\t\t\t\t\tssAsync(function* () {\r\n\t\t\t\t\t\tlet packet = yield ssPacketsApi.get({ id: template.id });\r\n\t\t\t\t\t\ttemplate.packetCount = packet._formTemplateIds.length;\r\n\t\t\t\t\t})();\r\n\t\t\t\t}\r\n\r\n\t\t\t\trouteVm.extendCommonProps(template);\r\n\t\t\t});\r\n\r\n\t\t\treturn templates;\r\n\t\t}\r\n\r\n\t\t// method to add properties common to form templates and packet form templates (templates within a packet)\r\n\t\trouteVm.extendCommonProps = function(template) {\r\n\t\t\tlet modified = ssDateByOrgHlp.utcIsoToRelativeMoment(template._modifiedDt, routeVm.org);\r\n\r\n\t\t\ttemplate.modifiedText = modified.calendar(null, { // eslint-disable-line\r\n\t\t\t\t\tsameDay: '[Today @] LT',\r\n\t\t\t\t\tlastDay: '[Yesterday @] LT',\r\n\t\t\t\t\tlastWeek: 'ddd [@] LT',\r\n\t\t\t\t\tsameElse: 'L [@] LT'\r\n\t\t\t\t});\r\n\t\t\t\r\n\t\t\t// TODO: we should pull this off the form template itself\r\n\t\t\t// '_category.name' is not yet resolved on this endpoint, so we need to determine it here\r\n\t\t\tif (template._category) {\r\n\t\t\t\ttemplate._category.name = mapCategory(template._category.id);\r\n\t\t\t}\r\n\r\n\t\t\t// Get the names and associated actions for the workflow steps\r\n\t\t\tif(template._steps.length) {\r\n\t\t\t\ttemplate._steps = template._steps.filter(step => step._stepAction !== 3);\r\n\t\t\t\ttemplate._steps.forEach(step => {\r\n\t\t\t\t\tstep.participantLabel = step._stepParticipant.participantType == null ? 'undefined' : ssEnum.stepParticipantType.byValue(step._stepParticipant.participantType);\r\n\t\t\t\t\tstep.stepActionLabel = step._stepAction == null ? 'undefined' : ssEnum.stepAction.byValue(step._stepAction);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Map a category id to a name\r\n\t\tfunction mapCategory(id) {\r\n\t\t\tvar ret = '';\r\n\t\t\tvar tmp;\r\n\r\n\t\t\tif (id == null) { return ''; }\r\n\t\t\ttmp = routeVm.categories.filter(v => { return v.value === id; });\r\n\t\t\tif (tmp.length > 0) {\r\n\t\t\t\tret = tmp[0].description;\r\n\t\t\t}\r\n\t\t\treturn ret;\r\n\t\t}\r\n\t\t\r\n\t\t/**\r\n\t\t * return an object containing the 'sort' query value that is passed to the enpoint\r\n\t\t * @param {obj} sort - The 'value' property of the selected sort option\r\n\t\t */\r\n\t\tfunction addSort(sort) {\r\n\t\t\tvar o = {};\r\n\t\t\to['sort[' + sort.field + ']'] = sort.dir;\r\n\t\t\treturn o;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * return an object containing the 'filter' query value that is passed to the enpoint\r\n\t\t * @param {string} filter - The 'name' property of the selected filter option\r\n\t\t * @param {object} value - The 'value' property of the selected filter option\r\n\t\t */\r\n\t\tfunction addFilter(filter, value) {\r\n\t\t\tvar o = {};\r\n\t\t\to['filter['+ filter +']'] = value;\r\n\t\t\treturn o;\r\n\t\t}\r\n\r\n\t\t// Do the initial call to load the template objects\r\n\t\tfetchTemplateObjects();\r\n\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/index/segment-content) --# //\r\n// #------------------------------------------# //\r\n\r\nangular.module('ec-forms-segments').directive('segmentIndexContent', () => new Content('content'));\r\n","/*@ngInject*/\r\nfunction logic() {\r\n\t// logic api\r\n\treturn {\r\n\t\t\r\n\t};\r\n}\r\nangular.module('ec-forms-segment-logic').factory('segmentIndexContentLogic', logic);\r\n","import {Segment} from 'base-segment';\r\n// #-----------------------------------------# //\r\n// #---- Segment (/index/segment-header) ----# //\r\n\r\nclass Header extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $scope, $location, ssAsync, ssValidationHlp, ssFormTemplatesApi, ssPacketsApi, ssToastHlp, enumFormAdministratorType) {\r\n\t\tconst routeVm = $scope.routeVm; // eslint-disable-line\r\n\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentIndexHeaderLogic'); // eslint-disable-line\r\n\r\n\t\tconst validator = $scope.validator = {\r\n\t\t\trequired: ssValidationHlp.required()\r\n\t\t};\r\n\r\n\t\t$scope.formAdminEnums = enumFormAdministratorType;\r\n\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\topenMenu: false,\r\n\t\t\tinvalidConfig: true,\r\n\t\t\tspecificAdminNotRequired: true,\r\n\t\t\tform: {\r\n\t\t\t\tinstanceType: null,\r\n\t\t\t\tinstanceTitle: null,\r\n\t\t\t\tisEmployeeInitiated: false,\r\n\t\t\t\tcategory: {\r\n\t\t\t\t\tid: null\r\n\t\t\t\t},\r\n\t\t\t\tformAdministrator: {\r\n\t\t\t\t\temployeeId: null,\r\n\t\t\t\t\tformAdministratorType: null\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tspecificAdmin: [],\r\n\t\t\tisCreating: false,\r\n\t\t\tformAdminTypes: $scope.formAdminEnums.getEnums()\r\n\t\t};\r\n\r\n\t\tconst go = $scope.go = { // eslint-disable-line\r\n\r\n\t\t\tcreate() {\r\n\t\t\t\tif (vm.isCreating) {return;}\r\n\t\t\t\tvm.isCreating = true;\r\n\r\n\t\t\t\tvar api = vm.form.instanceType === 'form' ? ssFormTemplatesApi : ssPacketsApi;\r\n\r\n\t\t\t\tssAsync(function*() {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tvm.template = yield api.add({}, {\r\n\t\t\t\t\t\t\t'_name': vm.form.instanceTitle,\r\n\t\t\t\t\t\t\t'_isEmployeeInitiated': vm.form.isEmployeeInitiated,\r\n\t\t\t\t\t\t\t'_category': vm.form.category,\r\n\t\t\t\t\t\t\t'_formAdministrator': vm.form.formAdministrator\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t$location.path(`/ec-forms/${vm.form.instanceType}-builder/${vm.template.id}/builder`);\r\n\r\n\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\tssToastHlp.error('', `Error creating ${vm.form.instanceType}`);\r\n\t\t\t\t\t\tconsole.error(`Error creating ${vm.form.instanceType}`, e);\r\n\t\t\t\t\t} finally {\r\n\t\t\t\t\t\tvm.isCreating = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t})();\r\n\t\t\t},\r\n\r\n\t\t\ttoggleMenu() {\r\n\t\t\t\tif(vm.openMenu === true){return;}\r\n\t\t\t\tvm.openMenu = !vm.openMenu;\r\n\t\t\t\tgo.reset();\r\n\t\t\t},\r\n\r\n\t\t\treset() {\r\n\t\t\t\tvm.form.instanceType = null;\r\n\t\t\t\tvm.form.instanceTitle = null;\r\n\t\t\t\tvm.form.isEmployeeInitiated = false;\r\n\t\t\t\tvm.form.formAdministrator.employeeId = null;\r\n\t\t\t\tvm.form.formAdministrator.formAdministratorType = null;\r\n\t\t\t\tvm.form.category.id = null;\r\n\t\t\t\tvm.specificAdmin = [];\r\n\t\t\t},\r\n\r\n\t\t\tcancel() {\r\n\t\t\t\tvm.openMenu = false;\r\n\t\t\t\tgo.reset();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t\r\n\t/* \r\n\t**\tHere we create a collection of properties to watch whose values will determine the state of the 'create' button (enabled/disabled). The collection of watched propereties needs to changed based on what fields are rendered on screen, which is based on the type of form template we are creating.\r\n\t*/\r\n\t\tvar propsToWatch = [\r\n\t\t\t'vm.form.category.id',\r\n\t\t\t'vm.form.instanceTitle',\r\n\t\t\t'vm.specificAdminNotRequired',\r\n\t\t\t'vm.form.formAdministrator.formAdministratorType'\r\n\t\t]\r\n\r\n\t\tvar deregPropsWatch;\r\n\r\n\t\t$scope.$on('destroy', $scope.$watch('vm.form.instanceType', (nv, ov) => {\r\n\r\n\t\t\tif(!nv || nv===ov) {return;}\r\n\r\n\t\t\tlet watchedProps;\r\n\r\n\t\t\tvm.altLabel = nv === 'form' ? 'template' : '';\r\n\r\n\t\t//\tcall the deregistration of the currently watched props if a watch already exists;\r\n\t\t\tif (deregPropsWatch) { deregPropsWatch() };\r\n\r\n\t\t//\tif the user is creating a packet, then strip off the 'form admin' property from the collection of watch properties, otherwise, use the original collection\r\n\t\t\tif(nv !== 'form') {\r\n\t\t\t\twatchedProps = propsToWatch.slice().filter((p) => p !== 'vm.form.formAdministrator.formAdministratorType')\r\n\t\t\t} else {\r\n\t\t\t\twatchedProps = propsToWatch;\r\n\t\t\t}\r\n\r\n\t\t//\tenables/disables the 'create' button based on these expressions having a value\r\n\t\t\tderegPropsWatch = $scope.$watchGroup(watchedProps, (nv, ov) => {\r\n\t\t\t\tvm.invalidConfig = nv.some(elem => (typeof elem !== 'number' && !elem) || (typeof elem === 'number' && elem < 0));\r\n\t\t\t});\r\n\r\n\t\t}));\r\n\r\n\t//\tcall the deregistration of the currently watched props when we leave;\r\n\t\t$scope.$on('destroy', deregPropsWatch);\r\n\r\n\t//\tThis ensures that we can't select 'form sender' as the form administrator for an employeed-initiated form template\t\r\n\t\t$scope.$on('$destroy', $scope.$watch('vm.form.isEmployeeInitiated', (nv, ov) => {\r\n\t\t\tif(nv) {\r\n\t\t\t\tif(vm.form.formAdministrator.formAdministratorType === 1) {\r\n\t\t\t\t\tvm.form.formAdministrator.formAdministratorType = null;\r\n\t\t\t\t}\r\n\t\t\t\tvm.formAdminTypes = vm.formAdminTypes.filter((f) => {\r\n\t\t\t\t\treturn f.value !== 1;\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tvm.formAdminTypes = $scope.formAdminEnums.getEnums();\r\n\t\t\t}\r\n\t\t}));\r\n\r\n\t}\r\n\r\n\tlink(scope, elem, attrs) {\r\n\r\n\t\tvar deregWatch;\r\n\r\n\t\tscope.$on('$destroy', scope.$watch('vm.form.formAdministrator.formAdministratorType', (nv, ov) => {\r\n\r\n\t\t\tscope.vm.specificAdmin = [];\r\n\r\n\t\t\tif(nv === scope.formAdminEnums.specificPerson) {\r\n\t\t\t\tscope.vm.specificAdminNotRequired = false;\r\n\t\t\t\tderegWatch = scope.$watch('vm.specificAdmin', (nv, ov) => {\r\n\t\t\t\t\tif(!nv.length) {\r\n\t\t\t\t\t\tscope.vm.specificAdminNotRequired = false;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tscope.vm.specificAdminNotRequired = true;\r\n\t\t\t\t\t\tscope.vm.form.formAdministrator.employeeId = nv[0].id;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tscope.vm.specificAdminNotRequired = true;\r\n\t\t\t\tif(typeof deregWatch === 'function'){\r\n\t\t\t\t\tderegWatch();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}));\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/index/segment-header) --# //\r\n// #-----------------------------------------# //\r\n\r\nangular.module('ec-forms-segments').directive('segmentIndexHeader', () => new Header('header'));\r\n","/*@ngInject*/\r\nfunction logic() {\r\n\t// logic api\r\n\treturn {\r\n\t\t\r\n\t};\r\n}\r\nangular.module('ec-forms-segment-logic').factory('segmentIndexHeaderLogic', logic);\r\n","import {State} from 'base-state';\r\n// #------------------------# //\r\n// #---- State (/my-forms) ----# //\r\n\r\n// view model that is shared by all segments on this route,\r\n// used for segment coordination. Define initial state here.\r\nconst routeVm = {};\r\n\r\nconst stateName = 'my-forms';\r\n\r\n// config object for ui-router\r\n// http://angular-ui.github.io/ ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\r\nconst stateConfig = {\r\n\turl: '/my-forms?activeTab',\r\n\ttemplateUrl: 'routes/my-forms/my-forms.html',\r\n\tresolve: {\r\n\t\torg: /*@ngInject*/ function(ssAsync, ssOrganizationSvc, ssToastHlp) {\r\n\t\t\treturn ssAsync(function*() {\r\n\t\t\t\ttry {\r\n\t\t\t\t\trouteVm.org = yield ssOrganizationSvc.getActiveOrg();\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tssToastHlp.error('There was an error retrieving organization data. Due Dates may not display. Please see the console for more detail.', '', false);\r\n\t\t\t\t\tconsole && console.error && console.error('Error getting Org data', err);\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t},\r\n\t\t$title: /*@ngInject*/ () => 'Frontline Central - My Forms'\r\n\t},\r\n\t// example of route $permissions function\r\n\t$permissions: (permissionSvc) => permissionSvc.isPermittedAction('activeUser', 'userKey')\r\n};\r\n\r\n// #-- END State (/my-forms) --# //\r\n// #------------------------# //\r\n\r\nangular.module('ec-forms').config( /*@ngInject*/ ($stateProvider) => {\r\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\r\n});\r\n","import {Segment} from 'base-segment';\r\n\r\n// #------------------------------------------# //\r\n// #---- Segment (/my-forms/segment-content) ----# //\r\n\r\nclass Content extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $scope, $stateParams, $location, ssEnum, ssAsync, ssActiveUserSvc, ssFormInstancesApi, ssFormTemplatesApi, ssStorage, ssOrganizationSvc, ssToastHlp) {\r\n\t\t// view model that is shared by all segments on this route,\r\n\t\t// used for segment coordination\r\n\t\tconst routeVm = $scope.routeVm;\r\n\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentMyFormsContentLogic');// jshint ignore:line\r\n\r\n\t\tvar emplId = null;\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = { // jshint ignore:line\r\n\t\t\tselectedFilter: 'current'\r\n\t\t};\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { // jshint ignore:line\r\n\r\n\t\t\tfilter(type) {\r\n\t\t\t\tvm.selectedFilter = type;\r\n\t\t\t\t$stateParams.activeTab = type;\r\n\t\t\t\t$location.search('activeTab', type);\r\n\t\t\t},\r\n\r\n\t\t\tgetCurrentForms() {\r\n\r\n\t\t\t\tlet params = {\r\n\t\t\t\t\tid: emplId,\r\n\t\t\t\t\tinclude: 'steps',\r\n\t\t\t\t\t'filter[search]': routeVm.search\r\n\t\t\t\t};\r\n\r\n\t\t\t\tif (resolveMethod() !== null) {\r\n\t\t\t\t\tparams['resolvemethod'] = resolveMethod();\r\n\t\t\t\t};\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tapi: ssFormInstancesApi.queryCurrent,\r\n\t\t\t\t\tconfig: params\r\n\t\t\t\t};\r\n\t\t\t},\r\n\r\n\t\t\tgetSentForms() {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tapi: ssFormInstancesApi.querySubmitted,\r\n\t\t\t\t\tconfig: {\r\n\t\t\t\t\t\tid: emplId,\r\n\t\t\t\t\t\tinclude: 'steps',\r\n\t\t\t\t\t\t'filter[search]': routeVm.search\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t},\r\n\r\n\t\t\tgetCompletedForms() {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tapi: ssFormInstancesApi.query,\r\n\t\t\t\t\tconfig: {\r\n\t\t\t\t\t\tid: emplId,\r\n\t\t\t\t\t\tinclude: 'steps',\r\n\t\t\t\t\t\t'filter[status]':  ssEnum.formStatus.complete,\r\n\t\t\t\t\t\t'filter[search]': routeVm.search\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t},\r\n\r\n\t\t\tgetInitiatedForms() {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tapi: ssFormTemplatesApi.query,\r\n\t\t\t\t\tconfig: {\r\n\t\t\t\t\t\tinclude: 'steps,statusHistory',\r\n\t\t\t\t\t\tlatestVersion: true,\r\n\t\t\t\t\t\t'filter[isemployeeinitiated]': 'true',\r\n\t\t\t\t\t\t'filter[name]': routeVm.search\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t},\r\n\r\n\t\t};\r\n\r\n\t\tfunction resolveMethod() {\r\n\t\t\tconst resolveMethod = $location.search().resolvemethod;\r\n\t\t\tif (resolveMethod === 'ReadModel' || resolveMethod === 'Mongo') {\r\n\t\t\t\treturn resolveMethod;\r\n\t\t\t} else {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tssAsync(function* () {\r\n\t\t\ttry{\t\r\n\t\t\t\ttry {\r\n\t\t\t\t\templId = yield ssActiveUserSvc.getIdentityByType('employee');\r\n\t\t\t\t} catch(err) {\r\n\t\t\t\t\tthrow {error: err, msg: 'There was an error retrieving employee data. Forms will not display. Please see the console for more detail.'};\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ($stateParams.activeTab && $stateParams.activeTab !== 'undefined' && $stateParams.activeTab.length) {\r\n\t\t\t\t\tgo.filter($stateParams.activeTab);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tgo.filter('current');\r\n\t\t\t\t}\r\n\t\t\t} catch (errObj) {\r\n\t\t\t\tssToastHlp.error(errObj.msg, '', false);\r\n\t\t\t\tconsole && console.error && console.error(errObj.error);\r\n\t\t\t}\r\n\t\t})();\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/my-forms/segment-content) --# //\r\n// #------------------------------------------# //\r\n\r\nangular.module('ec-forms-segments').directive('segmentMyFormsContent', () => new Content('content'));\r\n","/*@ngInject*/\r\nfunction logic() {\r\n\t// logic api\r\n\treturn {\r\n\t\t\r\n\t};\r\n}\r\nangular.module('ec-forms-segment-logic').factory('segmentMyFormsContentLogic', logic);\r\n","import {Segment} from 'base-segment';\r\n// #-----------------------------------------# //\r\n// #---- Segment (/my-forms/segment-header) ----# //\r\n\r\nclass Header extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $scope) {\r\n\t\t// view model that is shared by all segments on this route,\r\n\t\t// used for segment coordination\r\n\t\tconst routeVm = $scope.routeVm; // jshint ignore:line\r\n\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentMyFormsHeaderLogic');// jshint ignore:line\r\n\r\n\t\tconst vm = $scope.vm = { // jshint ignore:line\r\n\t\t};\r\n\r\n\t\trouteVm.search = '';\r\n\t}\r\n}\r\n// #-- END Segment (/my-forms/segment-header) --# //\r\n// #-----------------------------------------# //\r\n\r\nangular.module('ec-forms-segments').directive('segmentMyFormsHeader', () => new Header('header'));\r\n","/*@ngInject*/\r\nfunction logic() {\r\n\t// logic api\r\n\treturn {\r\n\t\t\r\n\t};\r\n}\r\nangular.module('ec-forms-segment-logic').factory('segmentMyFormsHeaderLogic', logic);\r\n","import { State } from 'base-state';\r\n// #-----------------------------------------# //\r\n// #---- State (/packet-builder/builder) ----# //\r\n\r\n\r\n// view model that is shared by all segments on this route,\r\n// used for segment coordination. Define initial state here.\r\nconst routeVm = {};\r\n\r\nconst stateName = 'packetBuilder.Builder';\r\n\r\n// config object for ui-router\r\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\r\nconst stateConfig = {\r\n\turl: '/builder',\r\n\ttemplateUrl: 'routes/packet-builder/builder/builder.html',\r\n\tresolve: {\r\n\t\t$title: ['$title', $title => {\r\n\t\t\treturn $title + ' (Packet Builder)';\r\n\t\t}]\r\n\t},\r\n\t$permissions: (permissionSvc) => permissionSvc.isPermittedAction('packets', 'create') ||\r\n\t\tpermissionSvc.isPermittedAction('packets', 'edit')\r\n};\r\n\r\n\r\n\r\n// #-- END State (/packet-builder/builder) --# //\r\n// #-----------------------------------------# //\r\n\r\nangular.module('ec-forms').config( /*@ngInject*/ ($stateProvider) => {\r\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\r\n});\r\n","import {Segment} from 'base-segment';\r\n// #-----------------------------------------------------------# //\r\n// #---- Segment (/packet-builder/builder/segment-builder) ----# //\r\n\r\nclass Builder extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $scope, $state, ssEnum, enumStepAction, ssAsync, ssFormTemplatesApi, ssListSvc, ssDebounce, formsHlp, ssToastHlp) {\r\n\t\t// view model that is shared by all segments on this route,\r\n\t\t// used for segment coordination\r\n\t\tconst routeVm = $scope.routeVm; // eslint-disable-line\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentPacketBuilderBuilderBuilderLogic'); // eslint-disable-line\r\n\t\tconst packetVm = $scope.packetVm;\r\n\t\tconst BATCH_SIZE = 30;\r\n\t\tlet currentPage = 1;\r\n\t\tlet dataLoadCall = null;\r\n\t\tlet totalForms = 0;\r\n\r\n\t\t$scope.added = [];\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\tshowInfScroll: false,\r\n\t\t\tloading: false,\r\n\t\t\tscrolling: false,\r\n\t\t\tloadingPacket: false,\r\n\t\t\t// loadingMore: false,\r\n\t\t\tpacket: packetVm.packetData,\r\n\t\t\tselectedCategory: 'All',\r\n\t\t\tsortBy: '-changedutc',\r\n\t\t\tsearch: '',\r\n\t\t\tsortCriteria: [{\r\n\t\t\t\tname: 'Recently Modified',\r\n\t\t\t\tfield: '-changedutc'\r\n\t\t\t}, {\r\n\t\t\t\tname: 'Name ASC',\r\n\t\t\t\tfield: 'name'\r\n\t\t\t}, {\r\n\t\t\t\tname: 'Name DESC',\r\n\t\t\t\tfield: '-name'\r\n\t\t\t}],\r\n\t\t\tstepAction: enumStepAction,\r\n\t\t\tforms:[]\r\n\t\t};\r\n\r\n\t\tssAsync(function*() {\r\n\t\t\ttry {\r\n\t\t\t\tvm.categories = yield ssListSvc.getByExternalId('form.categories');\r\n\t\t\t\tif(vm.packet._formTemplateIds.length){\r\n\t\t\t\t\tvm.loadingPacket = true;\r\n\t\t\t\t\tlet templateOrder = vm.packet._formTemplateIds.toString();\r\n\t\t\t\t\tssFormTemplatesApi.formTemplatesByIds(vm.packet._formTemplateIds,\r\n\t\t\t\t\t\t{include: 'steps,statusHistory'}\r\n\t\t\t\t\t).then((templates) => {\r\n\t\t\t\t\t\tformsHlp.sortByOrderField(templates, templateOrder);\r\n\t\t\t\t\t\tprocessForms(templates);\r\n\t\t\t\t\t\t$scope.added = templates;\r\n\t\t\t\t\t\tvm.loadingPacket = false;\r\n\t\t\t\t\t}).catch((e) => {\r\n\t\t\t\t\t\tssToastHlp.error('There was an error retrieving form templates in the packet', `Error`);\r\n\t\t\t\t\t\tvm.loadingPacket = false;\r\n\t\t\t\t\t\tconsole && console.log && console.log('Error retrieving form templates in the packet', e);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole && console.log && console.log('Error retrieving form template categories', e);\r\n\t\t\t}\r\n\t\t})();\r\n\r\n\t\t$scope.$watchGroup(['vm.search', 'vm.selectedCategory', 'vm.sortBy'], (nv, ov) => {\r\n\t\t\tif(nv === ov) { return; }\r\n\t\t\tvm.scrolling = false;\r\n\t\t\tvm.forms = [];\r\n\t\t\ttotalForms = 0;\r\n\t\t\tcurrentPage = 1;\r\n\t\t\tssDebounce(() => {\r\n\t\t\t\tloadForms();\r\n\t\t\t}, 350)();\r\n\t\t});\r\n\r\n\t\t$scope.$watchCollection('added', (nv, ov) => {\r\n\t\t\tif(nv === ov) { return; }\r\n\t\t\tconst newIds = nv\r\n\t\t\t\t.map(item => item.id);\r\n\r\n\t\t\tif (JSON.stringify(newIds) !== JSON.stringify(vm.packet._formTemplateIds)) {\r\n\t\t\t\tvm.packet._formTemplateIds = newIds;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { // eslint-disable-line\r\n\r\n\t\t\tscrollData() {\r\n\t\t\t\tif(vm.scrolling) { return; }\r\n\t\t\t\tvm.scrolling = true;\r\n\t\t\t\tcurrentPage++;\r\n\t\t\t\tvar offset = (currentPage - 1) * BATCH_SIZE;\r\n\r\n\t\t\t\tdataLoadCall = ssAsync(function*() {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tyield getForms({offset: offset});\r\n\t\t\t\t\t\tvm.scrolling = false;\r\n\t\t\t\t\t\tvm.showInfScroll = vm.forms.length < totalForms && totalForms > BATCH_SIZE;\r\n\t\t\t\t\t} catch(err) {\r\n\t\t\t\t\t\tssToastHlp.error('There was an error getting form templates', `Error`);\r\n\t\t\t\t\t\tvm.scrolling = false;\r\n\t\t\t\t\t\tconsole && console.error && console.error(err);\r\n\t\t\t\t\t}\r\n\t\t\t\t})();\r\n\t\t\t},\r\n\t\t\tadd(index, form) {\r\n\t\t\t\t$scope.added.push(form);\r\n\t\t\t\tform.inPacket = true;\r\n\t\t\t},\r\n\t\t\tremove(index, form) {\r\n\t\t\t\t$scope.added.splice(index, 1);\r\n\t\t\t\tlet formInst = vm.forms.find(x => x.id === form.id);\r\n\t\t\t\tif(formInst){\r\n\t\t\t\t\tformInst.inPacket = false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tdropForm(event, index, type, item) {\r\n\t\t\t\tlet formInPacket = $scope.added.find(x => x.id === item.id);\r\n\t\t\t\tif(formInPacket){\r\n\t\t\t\t\tlet currIndex = $scope.added.indexOf(formInPacket);\r\n\t\t\t\t\tmove(currIndex, index);\r\n\t\t\t\t}else{\r\n\t\t\t\t\t$scope.added.splice(index, 0, item);\r\n\t\t\t\t\tlet formInst = vm.forms.find(x => x.id === item.id);\r\n\t\t\t\t\tif(formInst){\r\n\t\t\t\t\t\tformInst.inPacket = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tpreview(form) {\r\n\t\t\t\t$state.go('base.formBuilder.preview', {\r\n\t\t\t\t\tformId: form.id,\r\n\t\t\t\t\treturnTo: $state.href($state.current.name),\r\n\t\t\t\t\tshowPDFoverlay: $state.is('base.formBuilder.overlayBuilder')\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tloadForms();\r\n\r\n\t\tfunction loadForms(){\r\n\t\t\tif(dataLoadCall) { dataLoadCall.$abort(); }\r\n\t\t\tvm.loading = true;\r\n\r\n\t\t\tdataLoadCall = ssAsync(function*() {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tyield getForms();\r\n\t\t\t\t\tvm.showInfScroll = vm.forms.length < totalForms && totalForms > BATCH_SIZE;\r\n\t\t\t\t\tvm.loading = false;\r\n\t\t\t\t} catch(err) {\r\n\t\t\t\t\tssToastHlp.error('There was an error getting form templates', `Error`);\r\n\t\t\t\t\tconsole && console.error && console.error(err);\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t};\r\n\r\n\t\tfunction getForms ({offset = 0} = {}) {\r\n\t\t\treturn ssAsync(function*() {\r\n\t\t\t\tlet forms = yield ssFormTemplatesApi.query({\r\n\t\t\t\t\tinclude: 'steps,statusHistory',\r\n\t\t\t\t\tlimit: BATCH_SIZE,\r\n\t\t\t\t\toffset,\r\n\t\t\t\t\tfilter: filterString(),\r\n\t\t\t\t\tsort: sortString(),\r\n\t\t\t\t\tlatestVersion: true\r\n\t\t\t\t});\r\n\t\t\t\tprocessForms(forms);\r\n\t\t\t\tvm.forms = [...vm.forms, ...forms];\r\n\t\t\t\ttotalForms = parseInt(forms.$headers['total-results'], 10);\r\n\t\t\t})();\r\n\t\t};\r\n\r\n\t\tfunction filterString(){\r\n\t\t\tlet nameFilter = `filter[name]=${vm.search}`;\r\n\t\t\tlet categoryFilter = '';\r\n\t\t\tif(vm.selectedCategory !== 'All'){\r\n\t\t\t\tlet category = vm.categories.find(x => x.value === vm.selectedCategory);\r\n\t\t\t\tcategoryFilter = `filter[categoryname]=${category.name}`\r\n\t\t\t}\r\n\t\t\tif(categoryFilter.length) { return `${nameFilter}&${categoryFilter}`; }\r\n\t\t\telse{ return nameFilter; }\r\n\t\t}\r\n\r\n\t\tfunction sortString(){\r\n\t\t\tlet dir = vm.sortBy.startsWith('-') ? 'DESC' : 'ASC';\r\n\t\t\tlet sortBy = vm.sortBy.replace('-','');\r\n\t\t\treturn `sort[${sortBy}]=${dir}`;\r\n\t\t}\r\n\r\n\t\tfunction processForms(forms){\r\n\t\t\tforms.forEach((form) => {\r\n\t\t\t\tform.inPacket = vm.packet._formTemplateIds.some(y => y === form.id);\r\n\r\n\t\t\t\tformsHlp.sortByOrderField(form._steps, form._stepOrder);\r\n\r\n\t\t\t\tform._steps.forEach(step => {\r\n\t\t\t\t\tstep.participantLabel = step._stepParticipant.participantType == null ? 'no participant' : ssEnum.stepParticipantType.byValue(step._stepParticipant.participantType);\r\n\t\t\t\t\tstep.stepActionLabel = step._stepAction == null ? 'no step action' : ssEnum.stepAction.byValue(step._stepAction);\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tfunction move(from, to){\r\n\t\t\t$scope.added.splice(to,0,$scope.added.splice(from,1)[0]);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/packet-builder/builder/segment-builder) --# //\r\n// #-----------------------------------------------------------# //\r\n\r\nangular.module('ec-forms-segments').directive('segmentPacketBuilderBuilderBuilder', () => new Builder('builder') );\r\n","/*@ngInject*/\r\nfunction logic() {\r\n\t// logic api\r\n\treturn {\r\n\t\tgetStatusLabel,\r\n\t\tgetStatus\r\n\t};\r\n\r\n\tfunction getStatus(form, org) {\r\n\t\treturn statusLabelHlp.getLabel(form, org).status\r\n\t}\r\n\r\n\tfunction getStatusLabel(form, org) {\r\n\t\treturn statusLabelHlp.getLabel(form, org).statusLabel;\r\n\t}\r\n}\r\nangular.module('ec-forms-segment-logic').factory('segmentPacketBuilderBuilderBuilderLogic', logic);\r\n","import { State } from 'base-state';\r\n// #----------------------------------# //\r\n// #---- State (//packet-builder) ----# //\r\n\r\n\r\n// view model that is shared by all segments on this route,\r\n// used for segment coordination. Define initial state here.\r\nconst routeVm = {};\r\n\r\nconst stateName = 'packetBuilder';\r\n\r\n// config object for ui-router\r\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\r\nconst stateConfig = {\r\n\turl: '/packet-builder/{packetId:[0-9A-Za-z-]+}',\r\n\ttemplateUrl: 'routes/packet-builder/packet-builder.html',\r\n\tresolve: {\r\n\t\tpacket: /*@ngInject*/ function($stateParams, ssAsync, ssPacketsApi) {\r\n\t\t\treturn ssAsync(function*() {\r\n\t\t\t\ttry {\r\n\t\t\t\t\trouteVm.packetData = yield ssPacketsApi.get({\r\n\t\t\t\t\t\tid: $stateParams.packetId\r\n\t\t\t\t\t});\r\n\t\t\t\t} catch(e) {\r\n\t\t\t\t\tssToastHlp.error('There was an error retrieving packet data.', '', false);\r\n\t\t\t\t\tconsole && console.error && console.error('Error getting packet', e);\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t},\r\n\t\torg: /*@ngInject*/ function(ssAsync, ssOrganizationSvc, ssToastHlp) {\r\n\t\t\treturn ssAsync(function*() {\r\n\t\t\t\ttry {\r\n\t\t\t\t\trouteVm.org = yield ssOrganizationSvc.getActiveOrg();\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tssToastHlp.error('There was an error retrieving organization data. Due Dates may not display. Please see the console for more detail.', '', false);\r\n\t\t\t\t\tconsole && console.error && console.error('Error getting Org data', err);\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t},\r\n\t\t$title: /*@ngInject*/ (packet) => {\r\n\t\t\treturn `Frontline Central - ${routeVm.packetData._name}`;\r\n\t\t}\r\n\t},\r\n\t$permissions: (permissionSvc) => permissionSvc.isPermittedAction('packets', 'create') ||\r\n\t\tpermissionSvc.isPermittedAction('packets', 'edit') ||\r\n\t\tpermissionSvc.isPermittedAction('packetInstances', 'send')\r\n};\r\n\r\n\r\n\r\n// #-- END State (//packet-builder) --# //\r\n// #----------------------------------# //\r\n\r\nangular.module('ec-forms').config( /*@ngInject*/ ($stateProvider) => {\r\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\r\n});\r\n","import {Segment} from 'base-segment';\r\n// #---------------------------------------------------# //\r\n// #---- Segment (/packet-builder/segment-content) ----# //\r\n\r\nclass Content extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $scope) {\r\n\t\t// view model that is shared by all segments on this route,\r\n\t\t// used for segment coordination\r\n\t\tconst routeVm = $scope.routeVm; // jshint ignore:line\r\n\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentPacketBuilderContentLogic'); // jshint ignore:line\r\n\r\n\t\t$scope.packetVm = routeVm;\r\n\r\n\t\t// view model for tracking state\r\n\t\tconst vm = $scope.vm = { // jshint ignore:line\r\n\t\t};\r\n\r\n\t\t// behavior that needs to be bound to the view\r\n\t\tconst go = $scope.go = { // jshint ignore:line\r\n\t\t};\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/packet-builder/segment-content) --# //\r\n// #---------------------------------------------------# //\r\n\r\nangular.module('ec-forms-segments').directive('segmentPacketBuilderContent', () => new Content('content') );\r\n","/*@ngInject*/\r\nfunction logic() {\r\n\t// logic api\r\n\treturn {\r\n\r\n\t};\r\n}\r\nangular.module('ec-forms-segment-logic').factory('segmentPacketBuilderContentLogic', logic);\r\n","import {Segment} from 'base-segment';\r\n// #--------------------------------------------------# //\r\n// #---- Segment (/packet-builder/segment-header) ----# //\r\n\r\nclass Header extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $q, $scope, $timeout, ssAsync, ssEventSvc, rAF, statusLabelHlp) {\r\n\t\t// view model that is shared by all segments on this route,\r\n\t\t// used for segment coordination\r\n\t\tconst routeVm = $scope.routeVm; // jshint ignore:line\r\n\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentPacketBuilderHeaderLogic'); // jshint ignore:line\r\n\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\tformTitle: routeVm.packetData._name,\r\n\t\t\teditTitle: false,\r\n\t\t\tnothingToSave: true,\r\n\t\t\tautoSaved: false,\r\n\t\t\tpacketStatusLabel: statusLabelHlp.getLabel(routeVm.packetData, routeVm.org).statusLabel\r\n\t\t};\r\n\r\n\t\t$scope.validator = logic.validator;\r\n\r\n\t\tlet lastChangeTimeDate, autoSaveTimer;\r\n\r\n\t\tconst go = $scope.go = {\r\n\t\t\teditTitle() {\r\n\t\t\t\tvm.editTitle = true;\r\n\t\t\t\tvm.previousAutoSaved = vm.autoSaved;\r\n\t\t\t\trAF.raw(function() {\r\n\t\t\t\t\tresizeTitle();\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\tsavePacket(triggeredByAuto = false) {\r\n\t\t\t\tresetAutoSave();\r\n\t\t\t\tif (routeVm.saving || vm.nothingToSave) { return $q.when(); }\r\n\r\n\t\t\t\tconst lastChangeWhenSaveStart = lastChangeTimeDate;\r\n\t\t\t\trouteVm.saving = true;\r\n\r\n\t\t\t\treturn ssAsync(function*() {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tvm.editTitle = false;\r\n\t\t\t\t\t\trouteVm.packetData._name = vm.formTitle;\r\n\t\t\t\t\t\tyield routeVm.packetData.$save(true, !triggeredByAuto);\r\n\r\n\t\t\t\t\t\tif (lastChangeWhenSaveStart === lastChangeTimeDate) {\r\n\t\t\t\t\t\t\tvm.nothingToSave = true;\r\n\t\t\t\t\t\t\tvm.autoSaved = triggeredByAuto;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\tconsole && console.warn && console.warn('error while saving', err);\r\n\t\t\t\t\t\tvm.nothingToSave = false;\r\n\t\t\t\t\t} finally {\r\n\t\t\t\t\t\trouteVm.saving = false;\r\n\t\t\t\t\t\tresetAutoSave();\r\n\t\t\t\t\t}\r\n\t\t\t\t})();\r\n\t\t\t},\r\n\r\n\t\t\tconfirmTitleEdit() {\r\n\t\t\t\tif (vm.formTitle !== '') {\r\n\t\t\t\t\tvm.editTitle = false;\r\n\t\t\t\t\tvm.currentValue = vm.formTitle;\r\n\t\t\t\t\tvm.nothingToSave = false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tcancelTitleEdit() {\r\n\t\t\t\tvm.editTitle = false;\r\n\t\t\t\tvm.formTitle = vm.currentValue;\r\n\t\t\t\tvm.autoSaved = vm.previousAutoSaved;\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tresetAutoSave();\r\n\r\n\t\trouteVm.modelChanged = () => {\r\n\t\t\tvm.nothingToSave = vm.autoSaved = false;\r\n\t\t\tlastChangeTimeDate = Date.now();\r\n\t\t};\r\n\r\n\t\tssEventSvc.on('ss-json-api.changedRecord.packets', routeVm.modelChanged, $scope);\r\n\r\n\t\trouteVm.saveFormTemplate = go.savePacket;\r\n\r\n\t\tfunction resetAutoSave() {\r\n\t\t\t// disable autosave for now\r\n\t\t\tif (true) { return; }\r\n\r\n\t\t\tif (autoSaveTimer != null) { $timeout.cancel(autoSaveTimer); }\r\n\t\t\tautoSaveTimer = $timeout(() => {\r\n\t\t\t\tgo.savePacket(true);\r\n\t\t\t}, 30000);\r\n\t\t}\r\n\r\n\t\t$scope.$watch('vm.formTitle', (newVal, oldVal) => {\r\n\t\t\tif (newVal === oldVal) {\r\n\t\t\t\tvm.currentValue = oldVal;\r\n\t\t\t}\r\n\t\t\trAF.raw(function() {\r\n\t\t\t\tresizeTitle();\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tfunction resizeTitle() {\r\n\t\t\tvar titleLength;\r\n\t\t\tvar titleEl = document.querySelectorAll('.form-title-ctrl');\r\n\t\t\tvar titleInput = angular.element(titleEl[0]).find('input');\r\n\r\n\t\t\tif (titleInput.val() != null) {\r\n\t\t\t\ttitleLength = titleInput.val().length > 45 ? 45 : titleInput.val().length;\r\n\t\t\t\ttitleInput.attr('size', titleLength);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/packet-builder/segment-header) --# //\r\n// #--------------------------------------------------# //\r\n\r\nangular.module('ec-forms-segments').directive('segmentPacketBuilderHeader', () => new Header('header') );\r\n","/*@ngInject*/\r\nfunction logic(ssValidationHlp) {\r\n\t// logic api\r\n\treturn {\r\n\t\tvalidator: {\r\n\t\t\trequired: ssValidationHlp.required(),\r\n\t\t}\r\n\t};\r\n}\r\nangular.module('ec-forms-segment-logic').factory('segmentPacketBuilderHeaderLogic', logic);\r\n","import {Segment} from 'base-segment';\r\n// #-------------------------------------------------------------# //\r\n// #---- Segment (/packet-builder/settings/segment-settings) ----# //\r\n\r\nclass Settings extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $scope, ssAsync, ssListSvc, ssFormTemplatesApi, ssValidationHlp, ssToastHlp, enumStepAction, formsHlp, rAF) {\r\n\t\t// view model that is shared by all segments on this route,\r\n\t\t// used for segment coordination\r\n\t\tconst routeVm = $scope.routeVm; // jshint ignore:line\r\n\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentPacketBuilderSettingsSettingsLogic'); // jshint ignore:line\r\n\r\n\t\t$scope.validate = { // eslint-disable-line no-unused-vars\r\n\t\t\tconditionalRequired(val, fieldName) {\r\n\t\t\t\treturn vm.packet._startupEmail.useStartupEmail ? ssValidationHlp.required()(val, fieldName) : true;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\tloading: null,\r\n\t\t\tpacket: $scope.packetVm.packetData,\r\n\t\t\tforms: [],\r\n\t\t\tstepAction: enumStepAction\r\n\t\t};\r\n\r\n\t\tif (vm.packet._startupEmail == null) {\r\n\t\t\tvm.packet._startupEmail = {};\r\n\t\t}\r\n\r\n\t\tssAsync(function*() {\r\n\t\t\ttry {\r\n\t\t\t\t// get form categories\r\n\t\t\t\tvm.categories = yield ssListSvc.getByExternalId('form.categories');\r\n\t\t\t\t// get packet forms\r\n\t\t\t\tif (vm.packet._formTemplateIds.length) {\r\n\t\t\t\t\tvm.loading = true;\r\n\t\t\t\t\tlet templateOrder = vm.packet._formTemplateIds.toString();\r\n\t\t\t\t\tssFormTemplatesApi.formTemplatesByIds(vm.packet._formTemplateIds, { include: 'steps' }).then((templates)=> {\r\n\t\t\t\t\t\tformsHlp.sortByOrderField(templates, templateOrder);\r\n\t\t\t\t\t\tvm.forms = templates;\r\n\t\t\t\t\t\tvm.forms.forEach(f => {\r\n\t\t\t\t\t\t\tf.steps = f._steps.filter(s => s._stepAction !== enumStepAction.formCompleted);\r\n\t\t\t\t\t\t\tformsHlp.sortByOrderField(f.steps, f._stepOrder);\r\n\t\t\t\t\t\t\tvm.loading = false;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}).catch((err) => {\r\n\t\t\t\t\t\tvm.loading = false;\r\n\t\t\t\t\t\tssToastHlp.error('There was an error retrieving the packet forms', '');\r\n\t\t\t\t\t\tconsole && console.error && console.error('Error getting packet data', err);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} catch(err) {\r\n\t\t\t\tssToastHlp.error('There was an error processing form data', '');\r\n\t\t\t\tconsole && console.error && console.error('Error processing form data', err);\r\n\t\t\t}\r\n\t\t})();\r\n\r\n\t\t$scope.$watch('vm.packet._startupEmail.useStartupEmail', (nv, ov) => {\r\n\t\t\tif (nv === ov) { return; }\r\n\t\t\tif (nv) {\r\n\t\t\t\trAF(() => document.getElementById(`message-textarea`).focus(), $scope);\r\n\t\t\t} else {\r\n\t\t\t\tvm.packet._startupEmail.message = '';\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/packet-builder/settings/segment-settings) --# //\r\n// #-------------------------------------------------------------# //\r\n\r\nangular.module('ec-forms-segments').directive('segmentPacketBuilderSettingsSettings', () => new Settings('settings') );\r\n","/*@ngInject*/\r\nfunction logic() {\r\n\t// logic api\r\n\treturn {\r\n\r\n\t};\r\n}\r\nangular.module('ec-forms-segment-logic').factory('segmentPacketBuilderSettingsSettingsLogic', logic);\r\n","import { State } from 'base-state';\r\n// #------------------------------------------# //\r\n// #---- State (/packet-builder/settings) ----# //\r\n\r\n\r\n// view model that is shared by all segments on this route,\r\n// used for segment coordination. Define initial state here.\r\nconst routeVm = {};\r\n\r\nconst stateName = 'packetBuilder.Settings';\r\n\r\n// config object for ui-router\r\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\r\nconst stateConfig = {\r\n\turl: '/packet-builder/settings',\r\n\ttemplateUrl: 'routes/packet-builder/settings/settings.html',\r\n\tresolve: {\r\n\t\t$title: ['$title', $title => {\r\n\t\t\treturn $title + ' (Settings)';\r\n\t\t}]\r\n\t},\r\n\t$permissions: (permissionSvc) => permissionSvc.isPermittedAction('packets', 'create') ||\r\n\t\tpermissionSvc.isPermittedAction('packets', 'edit')\r\n};\r\n\r\n\r\n\r\n// #-- END State (/packet-builder/settings) --# //\r\n// #------------------------------------------# //\r\n\r\nangular.module('ec-forms').config( /*@ngInject*/ ($stateProvider) => {\r\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\r\n});\r\n","import { Segment } from 'base-segment';\r\n// #-----------------------------------------# //\r\n// #---- Segment (/send/segment-content) ----# //\r\n\r\nclass Content extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $scope, $rootScope, $window, ssAsync, ssActiveUserSvc, ssEmployeeApi, ssFormTemplatesApi, enumStepParticipantType, enumFormAdministratorType, enumStepAction, ssStorage, moment, ssDateByOrgHlp, formsHlp) {\r\n\t\t// view model that is shared by all segments on this route,\r\n\t\t// used for segment coordination\r\n\t\tconst routeVm = $scope.routeVm;\r\n\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentSendContentLogic');// jshint ignore:line\r\n\r\n\t\tconst recipientBucketType = {\r\n\t\t\tindividual: 0,\r\n\t\t\tgroup: 1\r\n\t\t}\r\n\r\n\t\trouteVm.postData = {\r\n\t\t\tisPacket: routeVm.templateType.toLowerCase() === 'packet',\r\n\t\t\tisForm: routeVm.templateType.toLowerCase() === 'formtemplate',\r\n\t\t\trecipients: [],\r\n\t\t\tbulkRecipients: [],\r\n\t\t\texclusions: [],\r\n\t\t\tsubmissionDueDate: null,\r\n\t\t\tasOf: null\r\n\t\t};\r\n\r\n\t\tvar cacheKey, template;\r\n\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\tloadingFormSender: true,\r\n\t\t\tresolvedFormSender: \"loading form sender\",\r\n\t\t\tuseEffectiveDating: false,\r\n\t\t\tasOf: null,\r\n\t\t\trecipient: enumStepParticipantType.recipientChosenWhenSent,\r\n\t\t\thasSubmissionDueDate: 'false',\r\n\t\t\tisPacket: routeVm.templateType === 'Packet',\r\n\t\t\tisForm: routeVm.templateType === 'FormTemplate',\r\n\t\t\titem: routeVm.data,\r\n\t\t\tdatePickerOptions: {\r\n\t\t\t\tminDate: new Date()\r\n\t\t\t},\r\n\t\t\tselectedFilter: 'sendDetails',\r\n\t\t\texporting: false\r\n\t\t};\r\n\r\n\t\tconst go = $scope.go = { // jshint ignore:line\r\n\r\n\t\t\texport() {\r\n\t\t\t\tssAsync(function* () {\r\n\t\t\t\t\tvm.exporting = true;\r\n\t\t\t\t\tvar ids = routeVm.postData.recipients.map(x => x.id)\r\n\t\t\t\t\t\t.concat(routeVm.postData.bulkRecipients.map(x => x.id))\r\n\t\t\t\t\t\t.filter((value, index, self) => self.indexOf(value) === index);\r\n\r\n\t\t\t\t\tvar params = {\r\n\t\t\t\t\t\torganizationId: routeVm.org.id,\r\n\t\t\t\t\t\tinclude: 'statusHistory,employmentHistory,addresses,phoneNumbers,emails,emergencyContacts,positions,assignments,locations,jobtypes,payschedules,supervisors'\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (vm.useEffectiveDating && vm.asOf != null) {\r\n\t\t\t\t\t\tparams.asOfTimeUtc = ssDateByOrgHlp.safeAsOfDateRelativeTo(moment(vm.asOf).startOf('day'), routeVm.org);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// if we don't have a date just use today, relative to the org\r\n\t\t\t\t\t\tparams.asOfTimeUtc = ssDateByOrgHlp.safeAsOfDateRelativeTo(moment().startOf('day'), routeVm.org);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar downloaded = yield ssEmployeeApi.exportEmployeesById(params, { ids: ids });\r\n\t\t\t\t\t$window.open(downloaded._string, '_blank', '');\r\n\r\n\t\t\t\t\tvm.exporting = false;\r\n\r\n\t\t\t\t})()\r\n\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t(function() {\r\n\t\t\ttry {\r\n\t\t\t//\tload cached participants\r\n\t\t\t\tcacheKey = `${routeVm.org.id}_template_${routeVm.data.id}`;\r\n\t\t\t\ttemplate = ssStorage.load(cacheKey);\r\n\t\t\t\tif (template == null) {\r\n\t\t\t\t\ttemplate = {};\r\n\t\t\t\t} else {\r\n\t\t\t\t\trouteVm.postData.recipients = template[recipientBucketType.individual] || [];\r\n\t\t\t\t\trouteVm.postData.bulkRecipients = template[recipientBucketType.group] || [];\r\n\t\t\t\t}\r\n\r\n\t\t\t//\tget form sender\r\n\t\t\t\tif ($scope.$root.isPermitted.activeUser.idmAdministrator) {\r\n\t\t\t\t\tvm.resolvedFormSender = `You (IDM Administrator)`;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tssAsync(function* () {\r\n\t\t\t\t\t\tlet userKey = yield ssActiveUserSvc.getIdentityByType('employee');\r\n\t\t\t\t\t\tlet user = yield ssEmployeeApi.get({\r\n\t\t\t\t\t\t\tid: userKey,\r\n\t\t\t\t\t\t\tfields: 'id,firstname,lastname'\r\n\t\t\t\t\t\t}, null, false);\r\n\t\t\t\t\t\tvm.resolvedFormSender = `You (${user.fullName})`;\r\n\t\t\t\t\t\tvm.loadingFormSender = false;\r\n\t\t\t\t\t})();\r\n\t\t\t\t}\r\n\t\t\t//\tDo form stuff\r\n\t\t\t\tif (vm.isForm) {\r\n\t\t\t\t\tformsHlp.sortByOrderField(vm.item._steps, vm.item._stepOrder);\r\n\t\t\t\t\tstepParticipantDisplay(vm.item._steps);\r\n\t\t\t\t\tif (vm.item._formAdministrator.formAdministratorType === 3) {\r\n\t\t\t\t\t\tssAsync(function* () {\r\n\t\t\t\t\t\t\tlet admin = yield ssEmployeeApi.get({\r\n\t\t\t\t\t\t\t\tid: vm.item._formAdministrator.employeeId,\r\n\t\t\t\t\t\t\t\tfields: 'id,firstname,lastname'\r\n\t\t\t\t\t\t\t}, null, false);\r\n\t\t\t\t\t\t\tvm.formAdministrator = admin.fullName;\r\n\t\t\t\t\t\t})();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvm.formAdministrator = enumFormAdministratorType.byValue(vm.item._formAdministrator.formAdministratorType) || 'None';\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (vm.isPacket) {\r\n\t\t\t\t//\tget packet forms\r\n\t\t\t\t\tssAsync(function* () {\r\n\t\t\t\t\t\tif(vm.item._formTemplateIds) {\r\n\t\t\t\t\t\t\tvm.loadingPacket = true;\r\n\t\t\t\t\t\t\tlet templateOrder = vm.item._formTemplateIds.toString();\r\n\t\t\t\t\t\t\tssFormTemplatesApi.formTemplatesByIds(vm.item._formTemplateIds, { include: 'steps' }).then((templates) => {\r\n\t\t\t\t\t\t\t\tformsHlp.sortByOrderField(templates, templateOrder);\r\n\t\t\t\t\t\t\t\tvm.item.forms = templates;\r\n\t\t\t\t\t\t\t\tvm.item.forms.forEach(f => {\r\n\t\t\t\t\t\t\t\t\tf.steps = f._steps.filter(s => s._stepAction !== enumStepAction.formCompleted);\r\n\t\t\t\t\t\t\t\t\tformsHlp.sortByOrderField(f.steps, f._stepOrder);\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tvm.loadingPacket = false;\r\n\t\t\t\t\t\t\t}).catch((e) => {\r\n\t\t\t\t\t\t\t\tvm.loadingPacket = false;\r\n\t\t\t\t\t\t\t\tconsole && console.log && console.log('Error processing form templates in packets', e);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})();\r\n\t\t\t\t}\r\n\t\t\t} catch(e) {\r\n\t\t\t\tconsole && console.error && console.error(e);\r\n\t\t\t}\r\n\t\t})();\r\n\r\n\t\t$scope.$watch('vm.hasSubmissionDueDate', (nv, ov) => {\r\n\t\t\tif (nv === ov || nv == null) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (nv === 'false') {\r\n\t\t\t\trouteVm.postData.submissionDueDate = '';\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t/*\r\n\t\t**\tsave the currently selected recipients to localStorage\r\n\t\t**\twhen the user navigates away from this route or refreshes the page\r\n\t\t*/\r\n\t\t$rootScope.$on('$stateChangeStart', function (event) {\r\n\t\t\tsaveRecipients({ type: recipientBucketType.individual, recipients: routeVm.postData.recipients });\r\n\t\t\tsaveRecipients({ type: recipientBucketType.group, recipients: routeVm.postData.bulkRecipients });\r\n\t\t});\r\n\r\n\t\t$window.addEventListener('beforeunload', function () {\r\n\t\t\tsaveRecipients({ type: recipientBucketType.individual, recipients: routeVm.postData.recipients });\r\n\t\t\tsaveRecipients({ type: recipientBucketType.group, recipients: routeVm.postData.bulkRecipients });\r\n\t\t}, { capture: true });\r\n\r\n\t\t/*\r\n\t\t**\tThe following two watchers are here because UX requested that we keep the displayed date\r\n\t\t**\twhen the user unchecks the 'select an effective date...\" option.\r\n\t\t*/\r\n\t\t$scope.$on('destroy', $scope.$watch('vm.useEffectiveDating', (nv, ov) => {\r\n\t\t\tif (nv === ov) { return; }\r\n\t\t\tif (nv && vm.asOf) {\r\n\t\t\t\trouteVm.postData.asOf = vm.asOf;\r\n\t\t\t\t$rootScope.$broadcast('parentAsOfDate-Change', { asOf: vm.asOf });\r\n\t\t\t} else {\r\n\t\t\t\trouteVm.postData.asOf = null;\r\n\t\t\t\tvm.asOf = ''\r\n\t\t\t\t$rootScope.$broadcast('parentAsOfDate-Change', { asOf: vm.asOf });\r\n\t\t\t}\r\n\t\t}));\r\n\r\n\t\t$scope.$on('destroy', $scope.$watch('vm.asOf', (nv, ov) => {\r\n\t\t\tif (nv === ov) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t// propagates the \"Effective Date\" to the multiple employee search widget\r\n\t\t\t$rootScope.$broadcast('parentAsOfDate-Change', { asOf: nv });\r\n\t\t\trouteVm.postData.asOf = nv;\r\n\t\t}));\r\n\r\n\t\tfunction stepParticipantDisplay(steps) {\r\n\t\t\tsteps.forEach((step, i) => {\r\n\r\n\t\t\t\t//\tadd a custom property to each step which indicates if we should show the custom resend step message control\r\n\t\t\t\tstep.showResendMessage = i+1 !== vm.item._steps.length ? vm.item._steps[i+1]._stepAction === enumStepAction.reviewApproveOrDeny : false; \r\n\r\n\t\t\t\tif(step._stepParticipant.participantType === enumStepParticipantType.specificPerson &&step._stepParticipant.employeeIds.length) {\r\n\t\t\t\t\tstep.resolvedParticipant = step._stepParticipant.name;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstep.resolvedParticipant = enumStepParticipantType.byValue(step._stepParticipant.participantType);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction saveRecipients({ type, recipients }) {\r\n\t\t\ttemplate[type] = recipients;\r\n\t\t\tssStorage.save(cacheKey, template);\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tlink(scope, elem, attrs) {\r\n\t\tscope.$watch('routeVm.postData.recipients.length', (nv, ov) => {\r\n\t\t\tscope.$emit('ss-validate-field-event', elem.find('input').eq(0), 'ss-validate-array-field');\r\n\t\t});\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/send/segment-content) --# //\r\n// #-----------------------------------------# //\r\n\r\nangular.module('ec-forms-segments').directive('segmentSendContent', () => new Content('content'));\r\n","/*@ngInject*/\r\nfunction logic() {\r\n\t// logic api\r\n\treturn {\r\n\t\t\r\n\t};\r\n}\r\nangular.module('ec-forms-segment-logic').factory('segmentSendContentLogic', logic);\r\n","import {Segment} from 'base-segment';\r\n// #----------------------------------------# //\r\n// #---- Segment (/send/segment-header) ----# //\r\n\r\nclass Header extends Segment {\r\n\t/*@ngInject*/\r\n\tcontroller($injector, $scope, ssAsync, ssFormInstancesApi, ssStatusApi, ssActiveUserSvc, ssToastHlp, ssStorage, ssArrayHlp, ssModalSvc, $location, $q, enumFormTemplateStatus, ssDateByOrgHlp, ssOrganizationSvc) {\r\n\t\t// view model that is shared by all segments on this route,\r\n\t\t// used for segment coordination\r\n\t\tconst routeVm = $scope.routeVm;\r\n\r\n\t\t// hookup segment logic\r\n\t\tconst logic = $injector.get('segmentSendHeaderLogic');\r\n\t\tvar recipientCacheKey;\r\n\t\tvar senderFunction;\r\n\r\n\t\tconst vm = $scope.vm = {\r\n\t\t\tisPacket: routeVm.templateType.toLowerCase() === 'packet',\r\n\t\t\tisForm: routeVm.templateType.toLowerCase() === 'formtemplate',\r\n\t\t\tisSending: false,\r\n\t\t\titem: routeVm.data,\r\n\t\t\tbatches: [],\r\n\t\t\tbatchStyles: {}\r\n\t\t};\r\n\r\n\t\tconst type = vm.isPacket ? 'Packet' : 'Form';\r\n\r\n\t\tconst go = $scope.go = {\r\n\r\n\t\t\tpreview(template) {\r\n\t\t\t\t$location.url(`/ec-forms/form-builder/${template.id}/preview?returnTo=/ec-forms/send/formTemplate/${template.id}`);\r\n\t\t\t},\r\n\r\n\t\t\tsend(recipients = [], bulkRecipients = [], exclusions = []) {\r\n\t\t\t\t//\tthrow an error if the form template is employee-initiated and the formAdministratorType is sender\r\n\t\t\t\tif(vm.item._isEmployeeInitiated && vm.item._formAdministrator.formAdministratorType === 1) {\r\n\t\t\t\t\tssToastHlp.error('An Employee-Initiated form cannot be started when the sender of the form is also the Form Administrator.', '', false);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//\tif template does not have a form administrator value, deactivate the template and redirect to form template settings page\r\n\t\t\t\tif(vm.item._formAdministrator && (!vm.item._formAdministrator.formAdministratorType || vm.item._formAdministrator.formAdministratorType <= 0)) {\r\n\t\t\t\t\tssModalSvc.showDestructive({\r\n\t\t\t\t\t\ttitle: 'Form Administrator Required',\r\n\t\t\t\t\t\tcontent: 'You must select a form administrator before sending this form.',\r\n\t\t\t\t\t\tprimaryText: 'Edit',\r\n\t\t\t\t\t\tsecondaryText: 'Cancel'\r\n\t\t\t\t\t}).then(() => {\r\n\t\t\t\t\t\tssAsync(function* () {\r\n\t\t\t\t\t\t\tyield ssStatusApi.update({ id: vm.item.id }, {\r\n\t\t\t\t\t\t\t\tstatusId: enumFormTemplateStatus.inactive\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t$location.url(`/ec-forms/form-builder/${vm.item.id}/settings`);\r\n\t\t\t\t\t\t})();\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar baseAttrObj = {};\r\n\t\t\t\t\tvm.isSending = true;\r\n\t\t\t\t\t//\tGather all the recipient & excluded recipient IDs and filter out any duplicates\r\n\t\t\t\t\tlet allRecipients = [...recipients, ...bulkRecipients];\r\n\t\t\t\t\tlet allexclusions = [...exclusions];\r\n\r\n\t\t\t\t\t//\tget the default attributes\r\n\t\t\t\t\tObject.assign(baseAttrObj, logic.getDefaultBatchObj());\r\n\r\n\t\t\t\t\t//\tAdd \"as of\" date (if it exists)\r\n\t\t\t\t\tif (routeVm.postData.asOf) {\r\n\t\t\t\t\t\t// Using date helper here only as this is where we are posting to the server.\r\n\t\t\t\t\t\t// safeAsOfDateRelativeTo requires a date with no time, so we set it to the start of the day, then that gets set to noon org converted to UTC\r\n\t\t\t\t\t\tObject.assign(baseAttrObj, { asOf: ssDateByOrgHlp.safeAsOfDateRelativeTo(moment(routeVm.postData.asOf).startOf('day'), routeVm.org) });\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//\tAssign the rest of the necessary props\r\n\t\t\t\t\tbaseAttrObj._dueDateUtc = routeVm.postData.submissionDueDate ? ssDateByOrgHlp.endOfDayRelativeTo(moment(routeVm.postData.submissionDueDate), routeVm.org) : null;\r\n\t\t\t\t\tbaseAttrObj._requestType = vm.isPacket ? 1 : 0;\r\n\t\t\t\t\tbaseAttrObj._templateId = vm.item.id;\r\n\t\t\t\t\t// make sure all the included employees are unique;\r\n\t\t\t\t\tbaseAttrObj._includedEmployeeIds = ssArrayHlp.unique(allRecipients.map((r) => r.id));\r\n\t\t\t\t\t// make sure all the excluded employees are unique;\r\n\t\t\t\t\tbaseAttrObj._excludedEmployeeIds = ssArrayHlp.unique(allexclusions.map((r) => r.id));\r\n\t\t\t\t\t\r\n\t\t\t\t\t//\tdetermine which endpoint to call\r\n\t\t\t\t\tsenderFunction = vm.isPacket ? ssFormInstancesApi.postPacketInstanceBatch : ssFormInstancesApi.postFormInstanceBatch;\r\n\r\n\t\t\t\t\t//\tmake the call\r\n\t\t\t\t\tssAsync(function*() {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tlet batchRequest = yield senderFunction({\r\n\t\t\t\t\t\t\t\torganizationId: routeVm.org.id\r\n\t\t\t\t\t\t\t}, baseAttrObj);\r\n\r\n\t\t\t\t\t\t\t//\tPush the batch to the top of the batch list\r\n\t\t\t\t\t\t\tvm.batches.unshift(batchRequest);\r\n\r\n\t\t\t\t\t\t\t//\tClear all recipients & reset filter/exclusions values\r\n\t\t\t\t\t\t\trouteVm.removeGroup();\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tssStorage.clear(recipientCacheKey);\r\n\r\n\t\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\t\tconsole.error(e)\r\n\t\t\t\t\t\t\tssToastHlp.error('', `There was an error sending \"${$scope.form._name}\"`, false);\r\n\t\t\t\t\t\t} finally {\r\n\t\t\t\t\t\t\tvm.isSending = false;\r\n\t\t\t\t\t\t\trouteVm.postData.recipients = [];\r\n\t\t\t\t\t\t\trouteVm.postData.bulkRecipients = [];\r\n\t\t\t\t\t\t\trouteVm.postData.exclusions = [];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})();\r\n\t\t\t\t}\r\n\r\n\t\t\t},\r\n\r\n\t\t\tremoveBatch(batch) {\r\n\t\t\t\tlet ind = vm.batches.indexOf(batch);\r\n\t\t\t\tvm.batches.splice(ind, 1);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tssAsync(function*() {\r\n\t\t\ttry {\r\n\r\n\t\t\t\trecipientCacheKey = `${routeVm.org.id}_template_${routeVm.data.id}`;\r\n\r\n\t\t\t\t//\tGet all the batch requests for this form\r\n\t\t\t\tlet allBatches = yield ssFormInstancesApi.getAllBatches({\r\n\t\t\t\t\torganizationId: routeVm.org.id,\r\n\t\t\t\t\t'filter[templateid]': vm.item.id\r\n\t\t\t\t});\r\n\r\n\t\t\t\t//\tIf there are no batches for this form, leave\r\n\t\t\t\tif(!allBatches.length) { return;}\r\n\r\n\t\t\t\t//\tcreate an array of promises for retrieving batch statuses\r\n\t\t\t\tlet batchStatusPromises = allBatches.map(batch => ssFormInstancesApi.getBatchStatus({ id: batch.id }));\r\n\r\n\t\t\t\t//\texecute all the promises to get each batch status\r\n\t\t\t\tlet batchStatuses = yield $q.all(batchStatusPromises);\r\n\r\n\t\t\t\t//\tfilter out any statuses that are successfully completed\r\n\t\t\t\tbatchStatuses = batchStatuses.filter((batch) => {\r\n\t\t\t\t\treturn batch._status !== 3 && !batch._isArchived || (batch._status === 3 && batch._numFailed);\r\n\t\t\t\t})\r\n\r\n\t\t\t\t//\tUse the batch statuses array to determine which batch requests to show\r\n\t\t\t\tlet currentBatches = allBatches.filter((batch)=> {\r\n\t\t\t\t\treturn batchStatuses.find((status) => {\r\n\t\t\t\t\t\treturn status.id === batch.id;\r\n\t\t\t\t\t})\r\n\t\t\t\t});\r\n\r\n\t\t\t\tvm.batches = [...currentBatches];\r\n\r\n\t\t\t\t//\twatch the length of the batch list and adjust its height accordingly\r\n\t\t\t\t$scope.$on('$destroy', $scope.$watch('vm.batches.length', function(nv, ov) {\r\n\t\t\t\t\tvm.batchStyles = logic.getBatchListStyles(vm.batches);\r\n\t\t\t\t})\r\n\t\t\t\t);\r\n\r\n\t\t\t} catch(e) {\r\n\t\t\t\tssToastHlp.error('', `There was an error retrieving current batches for \"${vm.item._name}\"`);\r\n\t\t\t\tconsole && console.error && console.error(e);\r\n\t\t\t}\r\n\t\t})();\r\n\r\n\t\trouteVm.go = {\r\n\t\t\tsend() {\r\n\t\t\t\tconst recipients = routeVm.postData.recipients;\r\n\t\t\t\tconst bulkRecipients = routeVm.postData.bulkRecipients;\r\n\t\t\t\tconst exclusions = routeVm.postData.exclusions;\r\n\t\t\t\tgo.send(recipients, bulkRecipients, exclusions);\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n}\r\n\r\n// #-- END Segment (/send/segment-header) --# //\r\n// #----------------------------------------# //\r\n\r\nangular.module('ec-forms-segments').directive('segmentSendHeader', () => new Header('header'));\r\n","/*@ngInject*/\r\nfunction logic($location) {\r\n\t// logic api\r\n\treturn {\r\n\t\tbuildInstance(recipient, baseObj, data, exclusions = []) {\r\n\t\t\tconst instance = Object.assign({}, baseObj);\r\n\t\t\tconst employeeId = recipient.id;\r\n\r\n\t\t\tif (exclusions != null && exclusions.length) {\r\n\t\t\t\tlet excludedEmployeeIds = exclusions.map(e => e.id);\r\n\t\t\t\tif (excludedEmployeeIds.includes(employeeId)) { return; }\r\n\t\t\t}\r\n\r\n\t\t\tinstance.employee = { employeeId };\r\n\t\t\tdata.attributes.push(instance);\r\n\t\t},\r\n\t\tgetDefaultBatchObj() {\r\n\t\t\treturn { \r\n\t\t\t\t_requestType: 0,\r\n\t\t\t\t_templateId: '',\r\n\t\t\t\t_filters: {},\r\n\t\t\t\t_includedEmployeeIds: [],\r\n\t\t\t\t_excludedEmployeeIds: []\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t//\thelper function to create a style object for each batch list\r\n\t\tgetBatchListStyles(items) {\r\n\t\t\tlet batchListHeight = (items.length * 100) + 'px';\r\n\t\t\treturn {\r\n\t\t\t\t'height': batchListHeight,\r\n\t\t\t\t'transition': 'height 0.5s',\r\n\t\t\t\t'transition-delay': '1s'\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\r\n\r\n}\r\nangular.module('ec-forms-segment-logic').factory('segmentSendHeaderLogic', logic);\r\n","import {State} from 'base-state';\r\n// #-----------------------# //\r\n// #---- State (/send) ----# //\r\n\r\n// view model that is shared by all segments on this route,\r\n// used for segment coordination. Define initial state here.\r\nconst routeVm = {\r\n\tretryLoading: false\r\n};\r\n\r\nconst stateName = 'send';\r\n\r\n// config object for ui-router\r\n// http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_state\r\nconst stateConfig = {\r\n\turl: '/send/{type:[A-Za-z]+}/{id:[0-9A-Za-z-]+}',\r\n\ttemplateUrl: 'routes/send/send.html',\r\n\tresolve: {\r\n\t\tpacketFormName: /*@ngInject*/ function($stateParams, ssAsync, ssFormTemplatesApi, ssPacketsApi) {\r\n\t\t\treturn ssAsync(function*() {\r\n\t\t\t\ttry {\r\n\t\t\t\t\trouteVm.templateType = $stateParams.type;\r\n\r\n\t\t\t\t\tif (routeVm.templateType === 'Packet') {\r\n\t\t\t\t\t\trouteVm.data = yield ssPacketsApi.get({\r\n\t\t\t\t\t\t\tid: $stateParams.id\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\trouteVm.data = yield ssFormTemplatesApi.get({\r\n\t\t\t\t\t\t\tid: $stateParams.id,\r\n\t\t\t\t\t\t\tinclude: 'steps,formFields,statusHistory'\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn routeVm.data._name;\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tconsole && console.log && console.log('Error getting form', e);\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t},\r\n\t\torg: /*@ngInject*/ function(ssAsync, ssOrganizationSvc, ssToastHlp) {\r\n\t\t\treturn ssAsync(function*() {\r\n\t\t\t\ttry {\r\n\t\t\t\t\trouteVm.org = yield ssOrganizationSvc.getActiveOrg();\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tssToastHlp.error('There was an error retrieving organization data. Due Dates may not display. Please see the console for more detail.', '', false);\r\n\t\t\t\t\tconsole && console.error && console.error('Error getting Org data', err);\r\n\t\t\t\t}\r\n\t\t\t})();\r\n\t\t},\r\n\t\tisHRMSEnabled: /*@ngInject*/ function(ssMultiInitiativeFeatureDetectorSvc) {\r\n\t\t\trouteVm.isHRMSEnabled = ssMultiInitiativeFeatureDetectorSvc.isHRMSEnabled();\r\n\t\t},\r\n\t\t$title: /*@ngInject*/ ($stateParams, packetFormName) => {\r\n\t\t\treturn `Frontline Central - Send ${$stateParams.type} ${packetFormName}`;\r\n\t\t}\r\n\t},\r\n\t$permissions: (permissionSvc) => permissionSvc.isPermittedAction('formTemplates', 'send') ||\r\n\t\tpermissionSvc.isPermittedAction('packets', 'send')\r\n};\r\n\r\n// #-- END State (/send) --# //\r\n// #-----------------------# //\r\n\r\nangular.module('ec-forms').config( /*@ngInject*/ ($stateProvider) => {\r\n\t$stateProvider.state(`base.${stateName}`, new State(stateConfig, routeVm));\r\n});\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}